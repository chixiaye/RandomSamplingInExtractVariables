{
  "id" : 292,
  "expression" : "null",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-optimizer/src/test/java/org/apache/flink/optimizer/dataproperties/GlobalPropertiesMatchingTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 85,
      "startColumnNumber" : 40,
      "endLineNumber" : 85,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 85,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(2,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 85,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(2,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 86,
      "startColumnNumber" : 51,
      "endLineNumber" : 86,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 91,
      "startColumnNumber" : 40,
      "endLineNumber" : 91,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 92,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 92,
      "startColumnNumber" : 51,
      "endLineNumber" : 92,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 92,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 92,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 97,
      "startColumnNumber" : 40,
      "endLineNumber" : 97,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 97,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 97,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 98,
      "startColumnNumber" : 51,
      "endLineNumber" : 98,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 74
      },
      "nodeContext" : "gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 75
      },
      "nodeContext" : "gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 102,
      "startColumnNumber" : 56,
      "endLineNumber" : 102,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 102,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new Ordering(6,null,Order.DESCENDING)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 80
      },
      "nodeContext" : "gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 81
      },
      "nodeContext" : "gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  GlobalProperties gp1=new GlobalProperties();\n  gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp1));\n  GlobalProperties gp2=new GlobalProperties();\n  gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n  assertTrue(req.isMetBy(gp2));\n  GlobalProperties gp3=new GlobalProperties();\n  gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n  assertFalse(req.isMetBy(gp3));\n  GlobalProperties gp4=new GlobalProperties();\n  gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n  assertTrue(req.isMetBy(gp4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 424,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestedGlobalProperties req=new RequestedGlobalProperties();\n  req.setAnyPartitioning(new FieldSet(6,2));\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setAnyPartitioning(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setAnyPartitioning(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setAnyPartitioning(new FieldList(6,2,4));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setAnyPartitioning(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp4));\n    GlobalProperties gp5=new GlobalProperties();\n    gp5.setAnyPartitioning(new FieldList(2));\n    assertTrue(req.isMetBy(gp5));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setHashPartitioned(new FieldList(2,6));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setHashPartitioned(new FieldList(6,2));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setHashPartitioned(new FieldList(6,1));\n    assertFalse(req.isMetBy(gp3));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n    assertFalse(req.isMetBy(gp3));\n    GlobalProperties gp4=new GlobalProperties();\n    gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n    assertTrue(req.isMetBy(gp4));\n  }\n{\n    GlobalProperties gp1=new GlobalProperties();\n    gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n    assertTrue(req.isMetBy(gp1));\n    GlobalProperties gp2=new GlobalProperties();\n    gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n    assertTrue(req.isMetBy(gp2));\n    GlobalProperties gp3=new GlobalProperties();\n    gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n    assertFalse(req.isMetBy(gp3));\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 441,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3612,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatchingAnyPartitioning(){\n  try {\n    RequestedGlobalProperties req=new RequestedGlobalProperties();\n    req.setAnyPartitioning(new FieldSet(6,2));\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setAnyPartitioning(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setAnyPartitioning(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setAnyPartitioning(new FieldList(6,2,4));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setAnyPartitioning(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp4));\n      GlobalProperties gp5=new GlobalProperties();\n      gp5.setAnyPartitioning(new FieldList(2));\n      assertTrue(req.isMetBy(gp5));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setHashPartitioned(new FieldList(2,6));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setHashPartitioned(new FieldList(6,2));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setHashPartitioned(new FieldList(6,1));\n      assertFalse(req.isMetBy(gp3));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setRangePartitioned(new Ordering(2,null,Order.DESCENDING).appendOrdering(6,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(2,null,Order.ASCENDING));\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setRangePartitioned(new Ordering(6,null,Order.DESCENDING).appendOrdering(1,null,Order.ASCENDING));\n      assertFalse(req.isMetBy(gp3));\n      GlobalProperties gp4=new GlobalProperties();\n      gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n      assertTrue(req.isMetBy(gp4));\n    }\n{\n      GlobalProperties gp1=new GlobalProperties();\n      gp1.setCustomPartitioned(new FieldList(2,6),new MockPartitioner());\n      assertTrue(req.isMetBy(gp1));\n      GlobalProperties gp2=new GlobalProperties();\n      gp2.setCustomPartitioned(new FieldList(6,2),new MockPartitioner());\n      assertTrue(req.isMetBy(gp2));\n      GlobalProperties gp3=new GlobalProperties();\n      gp3.setCustomPartitioned(new FieldList(6,1),new MockPartitioner());\n      assertFalse(req.isMetBy(gp3));\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 448,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 81
      },
      "nodeContext" : "gp4.setRangePartitioned(new Ordering(6,null,Order.DESCENDING));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 85,
    "startColumnNumber" : 40,
    "endLineNumber" : 85,
    "endColumnNumber" : 44
  }, {
    "charLength" : 4,
    "startLineNumber" : 86,
    "startColumnNumber" : 51,
    "endLineNumber" : 86,
    "endColumnNumber" : 55
  }, {
    "charLength" : 4,
    "startLineNumber" : 91,
    "startColumnNumber" : 40,
    "endLineNumber" : 91,
    "endColumnNumber" : 44
  }, {
    "charLength" : 4,
    "startLineNumber" : 92,
    "startColumnNumber" : 51,
    "endLineNumber" : 92,
    "endColumnNumber" : 55
  }, {
    "charLength" : 4,
    "startLineNumber" : 97,
    "startColumnNumber" : 40,
    "endLineNumber" : 97,
    "endColumnNumber" : 44
  }, {
    "charLength" : 4,
    "startLineNumber" : 98,
    "startColumnNumber" : 51,
    "endLineNumber" : 98,
    "endColumnNumber" : 55
  }, {
    "charLength" : 4,
    "startLineNumber" : 102,
    "startColumnNumber" : 56,
    "endLineNumber" : 102,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}