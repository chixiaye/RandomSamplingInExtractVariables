{
  "id" : 519,
  "expression" : "JSON",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2b6ae07c59282f56f9e085dd79d35dbd771d9c3e",
  "filePath" : "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/handlers/PublisherResponseHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSON",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 267,
      "startColumnNumber" : 61,
      "endLineNumber" : 267,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 267,
        "startColumnNumber" : 31,
        "endLineNumber" : 267,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mediaType.toString().contains(JSON)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 267,
        "startColumnNumber" : 24,
        "endLineNumber" : 267,
        "endColumnNumber" : 66
      },
      "nodeContext" : "json=mediaType.toString().contains(JSON)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 267,
        "startColumnNumber" : 16,
        "endLineNumber" : 267,
        "endColumnNumber" : 67
      },
      "nodeContext" : "boolean json=mediaType.toString().contains(JSON);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 265,
        "startColumnNumber" : 19,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 263,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n  handleSse(requestContext,result);\n}\n else {\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 267,
        "startColumnNumber" : 16,
        "endLineNumber" : 267,
        "endColumnNumber" : 67
      },
      "nodeContext" : "boolean json=mediaType.toString().contains(JSON);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 267,
    "startColumnNumber" : 61,
    "endLineNumber" : 267,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}