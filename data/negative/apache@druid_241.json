{
  "id" : 241,
  "expression" : "\"2011-03-01/2011-03-02\"",
  "projectName" : "apache@druid",
  "commitID" : "0e4750bac208d99f4a07545cc2f401f9bcdc1381",
  "filePath" : "core/src/test/java/org/apache/druid/common/utils/JodaUtilsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"2011-03-01/2011-03-02\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 77,
      "startColumnNumber" : 21,
      "endLineNumber" : 77,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Intervals.of(\"2011-03-01/2011-03-02\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 71,
        "startColumnNumber" : 31,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 71,
        "startColumnNumber" : 19,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 37,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 6
      },
      "nodeContext" : "List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 43,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> actual=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCondenseIntervalsSimple(){\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> actual=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,actual);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Intervals.of(\"2011-03-01/2011-03-02\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"2011-03-01/2011-03-02\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 85,
      "startColumnNumber" : 21,
      "endLineNumber" : 85,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Intervals.of(\"2011-03-01/2011-03-02\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 82,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 82,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 6
      },
      "nodeContext" : "List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> actual=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCondenseIntervalsSimple(){\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> actual=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,actual);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Intervals.of(\"2011-03-01/2011-03-02\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 77,
    "startColumnNumber" : 21,
    "endLineNumber" : 77,
    "endColumnNumber" : 44
  }, {
    "charLength" : 23,
    "startLineNumber" : 85,
    "startColumnNumber" : 21,
    "endLineNumber" : 85,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}