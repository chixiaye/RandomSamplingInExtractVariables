{
  "id" : 28,
  "expression" : "evt instanceof IdleStateEvent",
  "projectName" : "seata@seata",
  "commitID" : "07eac3feebe899acabeea1603af0daf8e1dea723",
  "filePath" : "core/src/main/java/io/seata/core/rpc/netty/RmRpcClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "evt instanceof IdleStateEvent",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 217,
      "startColumnNumber" : 12,
      "endLineNumber" : 217,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (evt instanceof IdleStateEvent) {\n  IdleStateEvent idleStateEvent=(IdleStateEvent)evt;\n  if (idleStateEvent == IdleStateEvent.READER_IDLE_STATE_EVENT) {\n    if (LOGGER.isInfoEnabled()) {\n      LOGGER.info(\"RmRpcClient channel\" + ctx.channel() + \" idle.\");\n    }\n    try {\n      String serverAddress=NetUtil.toStringAddress(ctx.channel().remoteAddress());\n      nettyClientKeyPool.invalidateObject(poolKeyMap.get(serverAddress),ctx.channel());\n    }\n catch (    Exception exx) {\n      LOGGER.error(exx.getMessage());\n    }\n finally {\n      releaseChannel(ctx.channel(),getAddressFromContext(ctx));\n    }\n  }\n  if (idleStateEvent == IdleStateEvent.WRITER_IDLE_STATE_EVENT) {\n    try {\n      sendRequest(ctx.channel(),HeartbeatMessage.PING);\n    }\n catch (    Throwable throwable) {\n      LOGGER.error(\"\",\"send request error\",throwable);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 216,
        "startColumnNumber" : 74,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (evt instanceof IdleStateEvent) {\n    IdleStateEvent idleStateEvent=(IdleStateEvent)evt;\n    if (idleStateEvent == IdleStateEvent.READER_IDLE_STATE_EVENT) {\n      if (LOGGER.isInfoEnabled()) {\n        LOGGER.info(\"RmRpcClient channel\" + ctx.channel() + \" idle.\");\n      }\n      try {\n        String serverAddress=NetUtil.toStringAddress(ctx.channel().remoteAddress());\n        nettyClientKeyPool.invalidateObject(poolKeyMap.get(serverAddress),ctx.channel());\n      }\n catch (      Exception exx) {\n        LOGGER.error(exx.getMessage());\n      }\n finally {\n        releaseChannel(ctx.channel(),getAddressFromContext(ctx));\n      }\n    }\n    if (idleStateEvent == IdleStateEvent.WRITER_IDLE_STATE_EVENT) {\n      try {\n        sendRequest(ctx.channel(),HeartbeatMessage.PING);\n      }\n catch (      Throwable throwable) {\n        LOGGER.error(\"\",\"send request error\",throwable);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void userEventTriggered(ChannelHandlerContext ctx,Object evt){\n  if (evt instanceof IdleStateEvent) {\n    IdleStateEvent idleStateEvent=(IdleStateEvent)evt;\n    if (idleStateEvent == IdleStateEvent.READER_IDLE_STATE_EVENT) {\n      if (LOGGER.isInfoEnabled()) {\n        LOGGER.info(\"RmRpcClient channel\" + ctx.channel() + \" idle.\");\n      }\n      try {\n        String serverAddress=NetUtil.toStringAddress(ctx.channel().remoteAddress());\n        nettyClientKeyPool.invalidateObject(poolKeyMap.get(serverAddress),ctx.channel());\n      }\n catch (      Exception exx) {\n        LOGGER.error(exx.getMessage());\n      }\n finally {\n        releaseChannel(ctx.channel(),getAddressFromContext(ctx));\n      }\n    }\n    if (idleStateEvent == IdleStateEvent.WRITER_IDLE_STATE_EVENT) {\n      try {\n        sendRequest(ctx.channel(),HeartbeatMessage.PING);\n      }\n catch (      Throwable throwable) {\n        LOGGER.error(\"\",\"send request error\",throwable);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (evt instanceof IdleStateEvent) {\n  IdleStateEvent idleStateEvent=(IdleStateEvent)evt;\n  if (idleStateEvent == IdleStateEvent.READER_IDLE_STATE_EVENT) {\n    if (LOGGER.isInfoEnabled()) {\n      LOGGER.info(\"RmRpcClient channel\" + ctx.channel() + \" idle.\");\n    }\n    try {\n      String serverAddress=NetUtil.toStringAddress(ctx.channel().remoteAddress());\n      nettyClientKeyPool.invalidateObject(poolKeyMap.get(serverAddress),ctx.channel());\n    }\n catch (    Exception exx) {\n      LOGGER.error(exx.getMessage());\n    }\n finally {\n      releaseChannel(ctx.channel(),getAddressFromContext(ctx));\n    }\n  }\n  if (idleStateEvent == IdleStateEvent.WRITER_IDLE_STATE_EVENT) {\n    try {\n      sendRequest(ctx.channel(),HeartbeatMessage.PING);\n    }\n catch (    Throwable throwable) {\n      LOGGER.error(\"\",\"send request error\",throwable);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 217,
    "startColumnNumber" : 12,
    "endLineNumber" : 217,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}