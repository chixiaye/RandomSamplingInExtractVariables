{
  "id" : 217,
  "expression" : "(TypeToken<T>)TypeToken.get(typeOfT)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/Gson.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(TypeToken<T>)TypeToken.get(typeOfT)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 801,
      "startColumnNumber" : 31,
      "endLineNumber" : 801,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 801,
        "startColumnNumber" : 19,
        "endLineNumber" : 801,
        "endColumnNumber" : 68
      },
      "nodeContext" : "typeToken=(TypeToken<T>)TypeToken.get(typeOfT)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 801,
        "startColumnNumber" : 6,
        "endLineNumber" : 801,
        "endColumnNumber" : 69
      },
      "nodeContext" : "TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 798,
        "startColumnNumber" : 8,
        "endLineNumber" : 805,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  reader.peek();\n  isEmpty=false;\n  TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n  TypeAdapter<T> typeAdapter=getAdapter(typeToken);\n  T object=typeAdapter.read(reader);\n  return object;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 798,
        "startColumnNumber" : 4,
        "endLineNumber" : 821,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  reader.peek();\n  isEmpty=false;\n  TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n  TypeAdapter<T> typeAdapter=getAdapter(typeToken);\n  T object=typeAdapter.read(reader);\n  return object;\n}\n catch (EOFException e) {\n  if (isEmpty) {\n    return null;\n  }\n  throw new JsonSyntaxException(e);\n}\ncatch (IllegalStateException e) {\n  throw new JsonSyntaxException(e);\n}\ncatch (IOException e) {\n  throw new JsonSyntaxException(e);\n}\n finally {\n  reader.setLenient(oldLenient);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 794,
        "startColumnNumber" : 101,
        "endLineNumber" : 822,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isEmpty=true;\n  boolean oldLenient=reader.isLenient();\n  reader.setLenient(true);\n  try {\n    reader.peek();\n    isEmpty=false;\n    TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n    TypeAdapter<T> typeAdapter=getAdapter(typeToken);\n    T object=typeAdapter.read(reader);\n    return object;\n  }\n catch (  EOFException e) {\n    if (isEmpty) {\n      return null;\n    }\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IllegalStateException e) {\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IOException e) {\n    throw new JsonSyntaxException(e);\n  }\n finally {\n    reader.setLenient(oldLenient);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 785,
        "startColumnNumber" : 2,
        "endLineNumber" : 822,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads the next JSON value from  {@code reader} and convert it to an objectof type  {@code typeOfT}. Since Type is not parameterized by T, this method is type unsafe and should be used carefully\n * @throws JsonIOException if there was a problem writing to the Reader\n * @throws JsonSyntaxException if json is not a valid representation for an object of type\n */\n@SuppressWarnings(\"unchecked\") public <T>T fromJson(JsonReader reader,Type typeOfT) throws JsonIOException, JsonSyntaxException {\n  boolean isEmpty=true;\n  boolean oldLenient=reader.isLenient();\n  reader.setLenient(true);\n  try {\n    reader.peek();\n    isEmpty=false;\n    TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n    TypeAdapter<T> typeAdapter=getAdapter(typeToken);\n    T object=typeAdapter.read(reader);\n    return object;\n  }\n catch (  EOFException e) {\n    if (isEmpty) {\n      return null;\n    }\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IllegalStateException e) {\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IOException e) {\n    throw new JsonSyntaxException(e);\n  }\n finally {\n    reader.setLenient(oldLenient);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 801,
        "startColumnNumber" : 6,
        "endLineNumber" : 801,
        "endColumnNumber" : 69
      },
      "nodeContext" : "TypeToken<T> typeToken=(TypeToken<T>)TypeToken.get(typeOfT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "com.google.gson.reflect.TypeToken<T>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 801,
    "startColumnNumber" : 31,
    "endLineNumber" : 801,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}