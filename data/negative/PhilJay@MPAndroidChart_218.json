{
  "id" : 218,
  "expression" : "valsAtIndex.size()",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "266fb4d5d6497ea28ab71012d0f6657921f42583",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/utils/Utils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valsAtIndex.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 370,
      "startColumnNumber" : 28,
      "endLineNumber" : 370,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 370,
        "startColumnNumber" : 24,
        "endLineNumber" : 370,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < valsAtIndex.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 370,
        "startColumnNumber" : 8,
        "endLineNumber" : 382,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < valsAtIndex.size(); i++) {\n  SelInfo sel=valsAtIndex.get(i);\n  if (axis == null || sel.dataSet.getAxisDependency() == axis) {\n    float cdistance=Math.abs((float)sel.val - val);\n    if (cdistance < distance) {\n      index=valsAtIndex.get(i).dataSetIndex;\n      distance=cdistance;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 365,
        "startColumnNumber" : 33,
        "endLineNumber" : 387,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int index=-1;\n  float distance=Float.MAX_VALUE;\n  for (int i=0; i < valsAtIndex.size(); i++) {\n    SelInfo sel=valsAtIndex.get(i);\n    if (axis == null || sel.dataSet.getAxisDependency() == axis) {\n      float cdistance=Math.abs((float)sel.val - val);\n      if (cdistance < distance) {\n        index=valsAtIndex.get(i).dataSetIndex;\n        distance=cdistance;\n      }\n    }\n  }\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 357,
        "startColumnNumber" : 4,
        "endLineNumber" : 387,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the index of the DataSet that contains the closest value on the y-axis. This is needed for highlighting.\n * @param valsAtIndex all the values at a specific index\n * @return\n */\npublic static int getClosestDataSetIndex(ArrayList<SelInfo> valsAtIndex,float val,AxisDependency axis){\n  int index=-1;\n  float distance=Float.MAX_VALUE;\n  for (int i=0; i < valsAtIndex.size(); i++) {\n    SelInfo sel=valsAtIndex.get(i);\n    if (axis == null || sel.dataSet.getAxisDependency() == axis) {\n      float cdistance=Math.abs((float)sel.val - val);\n      if (cdistance < distance) {\n        index=valsAtIndex.get(i).dataSetIndex;\n        distance=cdistance;\n      }\n    }\n  }\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 370,
        "startColumnNumber" : 24,
        "endLineNumber" : 370,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < valsAtIndex.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 370,
    "startColumnNumber" : 28,
    "endLineNumber" : 370,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}