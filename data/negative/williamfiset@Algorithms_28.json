{
  "id" : 28,
  "expression" : "-1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/quadtree/QuadTreeTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 23,
      "startColumnNumber" : 49,
      "endLineNumber" : 23,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 23,
        "startColumnNumber" : 31,
        "endLineNumber" : 23,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new QuadTree.Rect(-1,5,0,6)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 23,
        "startColumnNumber" : 18,
        "endLineNumber" : 23,
        "endColumnNumber" : 61
      },
      "nodeContext" : "r1NWCorner=new QuadTree.Rect(-1,5,0,6)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 62
      },
      "nodeContext" : "QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 62
      },
      "nodeContext" : "QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 24,
      "startColumnNumber" : 49,
      "endLineNumber" : 24,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 31,
        "endLineNumber" : 24,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new QuadTree.Rect(-1,-1,0,0)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 24,
        "startColumnNumber" : 18,
        "endLineNumber" : 24,
        "endColumnNumber" : 62
      },
      "nodeContext" : "r1SWCorner=new QuadTree.Rect(-1,-1,0,0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 63
      },
      "nodeContext" : "QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 63
      },
      "nodeContext" : "QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 24,
      "startColumnNumber" : 53,
      "endLineNumber" : 24,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 31,
        "endLineNumber" : 24,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new QuadTree.Rect(-1,-1,0,0)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 24,
        "startColumnNumber" : 18,
        "endLineNumber" : 24,
        "endColumnNumber" : 62
      },
      "nodeContext" : "r1SWCorner=new QuadTree.Rect(-1,-1,0,0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 63
      },
      "nodeContext" : "QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 63
      },
      "nodeContext" : "QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 25,
      "startColumnNumber" : 52,
      "endLineNumber" : 25,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 25,
        "startColumnNumber" : 31,
        "endLineNumber" : 25,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new QuadTree.Rect(5,-1,6,0)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 25,
        "startColumnNumber" : 18,
        "endLineNumber" : 25,
        "endColumnNumber" : 61
      },
      "nodeContext" : "r1SECorner=new QuadTree.Rect(5,-1,6,0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 62
      },
      "nodeContext" : "QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 62
      },
      "nodeContext" : "QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 28,
      "startColumnNumber" : 56,
      "endLineNumber" : 28,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 28,
        "startColumnNumber" : 28,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new QuadTree.Rect(2,-5,5,-1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 28,
        "startColumnNumber" : 18,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "r1Below=new QuadTree.Rect(2,-5,5,-1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 29,
      "startColumnNumber" : 53,
      "endLineNumber" : 29,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 29,
        "startColumnNumber" : 27,
        "endLineNumber" : 29,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new QuadTree.Rect(-5,-4,-1,8)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 29,
        "startColumnNumber" : 18,
        "endLineNumber" : 29,
        "endColumnNumber" : 59
      },
      "nodeContext" : "r1Left=new QuadTree.Rect(-5,-4,-1,8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 60
      },
      "nodeContext" : "QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1625,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectIntersection(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  QuadTree.Rect r1Center=new QuadTree.Rect(1,1,4,4);\n  QuadTree.Rect r1NWCorner=new QuadTree.Rect(-1,5,0,6);\n  QuadTree.Rect r1SWCorner=new QuadTree.Rect(-1,-1,0,0);\n  QuadTree.Rect r1SECorner=new QuadTree.Rect(5,-1,6,0);\n  QuadTree.Rect r1NECorner=new QuadTree.Rect(5,5,6,6);\n  QuadTree.Rect r1Above=new QuadTree.Rect(2,6,3,8);\n  QuadTree.Rect r1Below=new QuadTree.Rect(2,-5,5,-1);\n  QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n  QuadTree.Rect r1Right=new QuadTree.Rect(6,-3,7,8);\n  assertThat(r1.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Center)).isTrue();\n  assertThat(r1Center.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NWCorner)).isTrue();\n  assertThat(r1NWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1NECorner)).isTrue();\n  assertThat(r1NECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SECorner)).isTrue();\n  assertThat(r1SECorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1SWCorner)).isTrue();\n  assertThat(r1SWCorner.intersects(r1)).isTrue();\n  assertThat(r1.intersects(r1Above)).isFalse();\n  assertThat(r1Above.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Below)).isFalse();\n  assertThat(r1Below.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Left)).isFalse();\n  assertThat(r1Left.intersects(r1)).isFalse();\n  assertThat(r1.intersects(r1Right)).isFalse();\n  assertThat(r1Right.intersects(r1)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 60
      },
      "nodeContext" : "QuadTree.Rect r1Left=new QuadTree.Rect(-5,-4,-1,8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 23,
    "startColumnNumber" : 49,
    "endLineNumber" : 23,
    "endColumnNumber" : 51
  }, {
    "charLength" : 2,
    "startLineNumber" : 24,
    "startColumnNumber" : 49,
    "endLineNumber" : 24,
    "endColumnNumber" : 51
  }, {
    "charLength" : 2,
    "startLineNumber" : 24,
    "startColumnNumber" : 53,
    "endLineNumber" : 24,
    "endColumnNumber" : 55
  }, {
    "charLength" : 2,
    "startLineNumber" : 25,
    "startColumnNumber" : 52,
    "endLineNumber" : 25,
    "endColumnNumber" : 54
  }, {
    "charLength" : 2,
    "startLineNumber" : 28,
    "startColumnNumber" : 56,
    "endLineNumber" : 28,
    "endColumnNumber" : 58
  }, {
    "charLength" : 2,
    "startLineNumber" : 29,
    "startColumnNumber" : 53,
    "endLineNumber" : 29,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}