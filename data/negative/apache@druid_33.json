{
  "id" : 33,
  "expression" : "segments.isEmpty()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/segment/SegmentUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "segments.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 93,
      "startColumnNumber" : 28,
      "endLineNumber" : 93,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "segments == null || segments.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (segments == null || segments.isEmpty()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (segments == null || segments.isEmpty()) {\n    return null;\n  }\n  return Collections2.transform(segments,DataSegment::getId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an object whose toString() returns a String with identifiers of the given segments, comma-separated. Useful for log messages. Not useful for anything else, because this doesn't take special effort to escape commas that occur in identifiers (not common, but could potentially occur in a datasource name).\n */\n@Nullable public static Object commaSeparatedIdentifiers(@Nullable final Collection<DataSegment> segments){\n  if (segments == null || segments.isEmpty()) {\n    return null;\n  }\n  return Collections2.transform(segments,DataSegment::getId);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "segments == null || segments.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 93,
    "startColumnNumber" : 28,
    "endLineNumber" : 93,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}