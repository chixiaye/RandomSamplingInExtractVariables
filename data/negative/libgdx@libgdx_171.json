{
  "id" : 171,
  "expression" : "contentAsString",
  "projectName" : "libgdx@libgdx",
  "commitID" : "a5a87fdf07d60ed0ad72e32150c88bbd9877474e",
  "filePath" : "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "contentAsString",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 203,
      "startColumnNumber" : 11,
      "endLineNumber" : 203,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 203,
        "startColumnNumber" : 11,
        "endLineNumber" : 203,
        "endColumnNumber" : 34
      },
      "nodeContext" : "contentAsString != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 203,
        "startColumnNumber" : 7,
        "endLineNumber" : 220,
        "endColumnNumber" : 8
      },
      "nodeContext" : "if (contentAsString != null) {\n  OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n  try {\n    writer.write(contentAsString);\n  }\n  finally {\n    StreamUtils.closeQuietly(writer);\n  }\n}\n else {\n  InputStream contentAsStream=httpRequest.getContentStream();\n  if (contentAsStream != null) {\n    OutputStream os=connection.getOutputStream();\n    try {\n      StreamUtils.copyStream(contentAsStream,os);\n    }\n  finally {\n      StreamUtils.closeQuietly(os);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 200,
        "startColumnNumber" : 23,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String contentAsString=httpRequest.getContent();\n  if (contentAsString != null) {\n    OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n    try {\n      writer.write(contentAsString);\n    }\n  finally {\n      StreamUtils.closeQuietly(writer);\n    }\n  }\n else {\n    InputStream contentAsStream=httpRequest.getContentStream();\n    if (contentAsStream != null) {\n      OutputStream os=connection.getOutputStream();\n      try {\n        StreamUtils.copyStream(contentAsStream,os);\n      }\n  finally {\n        StreamUtils.closeQuietly(os);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 200,
        "startColumnNumber" : 6,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (doingOutPut) {\n  String contentAsString=httpRequest.getContent();\n  if (contentAsString != null) {\n    OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n    try {\n      writer.write(contentAsString);\n    }\n  finally {\n      StreamUtils.closeQuietly(writer);\n    }\n  }\n else {\n    InputStream contentAsStream=httpRequest.getContentStream();\n    if (contentAsStream != null) {\n      OutputStream os=connection.getOutputStream();\n      try {\n        StreamUtils.copyStream(contentAsStream,os);\n      }\n  finally {\n        StreamUtils.closeQuietly(os);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 198,
        "startColumnNumber" : 9,
        "endLineNumber" : 236,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 198,
        "startColumnNumber" : 5,
        "endLineNumber" : 243,
        "endColumnNumber" : 6
      },
      "nodeContext" : "try {\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n catch (final Exception e) {\n  connection.disconnect();\n  try {\n    httpResponseListener.failed(e);\n  }\n  finally {\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1552,
        "startLineNumber" : 197,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 203,
        "startColumnNumber" : 11,
        "endLineNumber" : 203,
        "endColumnNumber" : 34
      },
      "nodeContext" : "contentAsString != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "contentAsString",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 206,
      "startColumnNumber" : 22,
      "endLineNumber" : 206,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 206,
        "startColumnNumber" : 9,
        "endLineNumber" : 206,
        "endColumnNumber" : 38
      },
      "nodeContext" : "writer.write(contentAsString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 206,
        "startColumnNumber" : 9,
        "endLineNumber" : 206,
        "endColumnNumber" : 39
      },
      "nodeContext" : "writer.write(contentAsString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  writer.write(contentAsString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  writer.write(contentAsString);\n}\n  finally {\n  StreamUtils.closeQuietly(writer);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 203,
        "startColumnNumber" : 36,
        "endLineNumber" : 210,
        "endColumnNumber" : 8
      },
      "nodeContext" : "{\n  OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n  try {\n    writer.write(contentAsString);\n  }\n  finally {\n    StreamUtils.closeQuietly(writer);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 203,
        "startColumnNumber" : 7,
        "endLineNumber" : 220,
        "endColumnNumber" : 8
      },
      "nodeContext" : "if (contentAsString != null) {\n  OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n  try {\n    writer.write(contentAsString);\n  }\n  finally {\n    StreamUtils.closeQuietly(writer);\n  }\n}\n else {\n  InputStream contentAsStream=httpRequest.getContentStream();\n  if (contentAsStream != null) {\n    OutputStream os=connection.getOutputStream();\n    try {\n      StreamUtils.copyStream(contentAsStream,os);\n    }\n  finally {\n      StreamUtils.closeQuietly(os);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 200,
        "startColumnNumber" : 23,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String contentAsString=httpRequest.getContent();\n  if (contentAsString != null) {\n    OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n    try {\n      writer.write(contentAsString);\n    }\n  finally {\n      StreamUtils.closeQuietly(writer);\n    }\n  }\n else {\n    InputStream contentAsStream=httpRequest.getContentStream();\n    if (contentAsStream != null) {\n      OutputStream os=connection.getOutputStream();\n      try {\n        StreamUtils.copyStream(contentAsStream,os);\n      }\n  finally {\n        StreamUtils.closeQuietly(os);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 200,
        "startColumnNumber" : 6,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (doingOutPut) {\n  String contentAsString=httpRequest.getContent();\n  if (contentAsString != null) {\n    OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n    try {\n      writer.write(contentAsString);\n    }\n  finally {\n      StreamUtils.closeQuietly(writer);\n    }\n  }\n else {\n    InputStream contentAsStream=httpRequest.getContentStream();\n    if (contentAsStream != null) {\n      OutputStream os=connection.getOutputStream();\n      try {\n        StreamUtils.copyStream(contentAsStream,os);\n      }\n  finally {\n        StreamUtils.closeQuietly(os);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 198,
        "startColumnNumber" : 9,
        "endLineNumber" : 236,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 198,
        "startColumnNumber" : 5,
        "endLineNumber" : 243,
        "endColumnNumber" : 6
      },
      "nodeContext" : "try {\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n catch (final Exception e) {\n  connection.disconnect();\n  try {\n    httpResponseListener.failed(e);\n  }\n  finally {\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1552,
        "startLineNumber" : 197,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 206,
        "startColumnNumber" : 9,
        "endLineNumber" : 206,
        "endColumnNumber" : 39
      },
      "nodeContext" : "writer.write(contentAsString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 203,
    "startColumnNumber" : 11,
    "endLineNumber" : 203,
    "endColumnNumber" : 26
  }, {
    "charLength" : 15,
    "startLineNumber" : 206,
    "startColumnNumber" : 22,
    "endLineNumber" : 206,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}