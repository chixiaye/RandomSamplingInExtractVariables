{
  "id" : 245,
  "expression" : "\"%28\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/net/UrlEscapersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"%28\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 98,
      "startColumnNumber" : 22,
      "endLineNumber" : 98,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertEscaping(e,\"%28\",'(')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEscaping(e,\"%28\",'(');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 86,
        "startColumnNumber" : 44,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  UnicodeEscaper e=(UnicodeEscaper)urlFormParameterEscaper();\n  assertSame(e,urlFormParameterEscaper());\n  assertBasicUrlEscaper(e);\n  assertEscaping(e,\"%21\",'!');\n  assertEscaping(e,\"%28\",'(');\n  assertEscaping(e,\"%29\",')');\n  assertEscaping(e,\"%7E\",'~');\n  assertEscaping(e,\"%27\",'\\'');\n  assertEscaping(e,\"+\",' ');\n  assertEscaping(e,\"%2B\",'+');\n  assertEquals(\"safe+with+spaces\",e.escape(\"safe with spaces\"));\n  assertEquals(\"foo%40bar.com\",e.escape(\"foo@bar.com\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testUrlFormParameterEscaper(){\n  UnicodeEscaper e=(UnicodeEscaper)urlFormParameterEscaper();\n  assertSame(e,urlFormParameterEscaper());\n  assertBasicUrlEscaper(e);\n  assertEscaping(e,\"%21\",'!');\n  assertEscaping(e,\"%28\",'(');\n  assertEscaping(e,\"%29\",')');\n  assertEscaping(e,\"%7E\",'~');\n  assertEscaping(e,\"%27\",'\\'');\n  assertEscaping(e,\"+\",' ');\n  assertEscaping(e,\"%2B\",'+');\n  assertEquals(\"safe+with+spaces\",e.escape(\"safe with spaces\"));\n  assertEquals(\"foo%40bar.com\",e.escape(\"foo@bar.com\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEscaping(e,\"%28\",'(');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 98,
    "startColumnNumber" : 22,
    "endLineNumber" : 98,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}