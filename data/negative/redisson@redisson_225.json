{
  "id" : 225,
  "expression" : "new RedissonPromise<Map<KOut,VOut>>()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/mapreduce/MapReduceExecutor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RedissonPromise<Map<KOut,VOut>>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 95,
      "startColumnNumber" : 50,
      "endLineNumber" : 95,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 95,
        "startColumnNumber" : 40,
        "endLineNumber" : 95,
        "endColumnNumber" : 88
      },
      "nodeContext" : "promise=new RedissonPromise<Map<KOut,VOut>>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "final RPromise<Map<KOut,VOut>> promise=new RedissonPromise<Map<KOut,VOut>>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 94,
        "startColumnNumber" : 51,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final RPromise<Map<KOut,VOut>> promise=new RedissonPromise<Map<KOut,VOut>>();\n  final RFuture<Void> future=executeMapperAsync(resultMapName,null);\n  addCancelHandling(promise,future);\n  future.onComplete((res,e) -> {\n    if (e != null) {\n      promise.tryFailure(e);\n      return;\n    }\n    RBatch batch=redisson.createBatch();\n    RMapAsync<KOut,VOut> resultMap=batch.getMap(resultMapName,objectCodec);\n    resultMap.readAllMapAsync().onComplete(new TransferListener<Map<KOut,VOut>>(promise));\n    resultMap.deleteAsync();\n    batch.executeAsync();\n  }\n);\n  return promise;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RFuture<Map<KOut,VOut>> executeAsync(){\n  final RPromise<Map<KOut,VOut>> promise=new RedissonPromise<Map<KOut,VOut>>();\n  final RFuture<Void> future=executeMapperAsync(resultMapName,null);\n  addCancelHandling(promise,future);\n  future.onComplete((res,e) -> {\n    if (e != null) {\n      promise.tryFailure(e);\n      return;\n    }\n    RBatch batch=redisson.createBatch();\n    RMapAsync<KOut,VOut> resultMap=batch.getMap(resultMapName,objectCodec);\n    resultMap.readAllMapAsync().onComplete(new TransferListener<Map<KOut,VOut>>(promise));\n    resultMap.deleteAsync();\n    batch.executeAsync();\n  }\n);\n  return promise;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "final RPromise<Map<KOut,VOut>> promise=new RedissonPromise<Map<KOut,VOut>>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "org.redisson.misc.RedissonPromise<java.util.Map<KOut,VOut>>"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 95,
    "startColumnNumber" : 50,
    "endLineNumber" : 95,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}