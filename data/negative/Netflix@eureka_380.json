{
  "id" : 380,
  "expression" : "Interests",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-kafka/src/main/java/com/netflix/eureka2/server/audit/kafka/KafkaServersProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Interests",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 60,
      "startColumnNumber" : 59,
      "endLineNumber" : 60,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 60,
        "startColumnNumber" : 59,
        "endLineNumber" : 60,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Interests.forVips(config.getKafkaVip())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 99
      },
      "nodeContext" : "context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 59,
        "startColumnNumber" : 23,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n  @Override public InetSocketAddress call(  InstanceInfo instanceInfo){\n    return SELECTOR.returnServiceAddress(instanceInfo);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n  @Override public InetSocketAddress call(  InstanceInfo instanceInfo){\n    return SELECTOR.returnServiceAddress(instanceInfo);\n  }\n}\n)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 14
      },
      "nodeContext" : "delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n  @Override public InetSocketAddress call(  InstanceInfo instanceInfo){\n    return SELECTOR.returnServiceAddress(instanceInfo);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 58,
        "startColumnNumber" : 49,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n    @Override public InetSocketAddress call(    InstanceInfo instanceInfo){\n      return SELECTOR.returnServiceAddress(instanceInfo);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config.getKafkaServerList() == null) {\n  delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n    @Override public InetSocketAddress call(    InstanceInfo instanceInfo){\n      return SELECTOR.returnServiceAddress(instanceInfo);\n    }\n  }\n);\n}\n else {\n  delegate=StreamedDataCollector.from(parseServerList());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 56,
        "startColumnNumber" : 58,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StreamedDataCollector<InetSocketAddress> delegate;\n  if (config.getKafkaServerList() == null) {\n    delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n      @Override public InetSocketAddress call(      InstanceInfo instanceInfo){\n        return SELECTOR.returnServiceAddress(instanceInfo);\n      }\n    }\n);\n  }\n else {\n    delegate=StreamedDataCollector.from(parseServerList());\n  }\n  return delegate;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public StreamedDataCollector<InetSocketAddress> get(){\n  StreamedDataCollector<InetSocketAddress> delegate;\n  if (config.getKafkaServerList() == null) {\n    delegate=StreamedDataCollector.from(context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip())),new Func1<InstanceInfo,InetSocketAddress>(){\n      @Override public InetSocketAddress call(      InstanceInfo instanceInfo){\n        return SELECTOR.returnServiceAddress(instanceInfo);\n      }\n    }\n);\n  }\n else {\n    delegate=StreamedDataCollector.from(parseServerList());\n  }\n  return delegate;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 99
      },
      "nodeContext" : "context.getLocalRegistry().forInterest(Interests.forVips(config.getKafkaVip()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.interests.Interests"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 60,
    "startColumnNumber" : 59,
    "endLineNumber" : 60,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}