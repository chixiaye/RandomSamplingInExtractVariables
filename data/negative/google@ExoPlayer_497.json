{
  "id" : 497,
  "expression" : "schemeIndex + 1",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/common/src/main/java/com/google/android/exoplayer2/util/UriUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "schemeIndex + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 263,
      "startColumnNumber" : 32,
      "endLineNumber" : 263,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 263,
        "startColumnNumber" : 15,
        "endLineNumber" : 263,
        "endColumnNumber" : 48
      },
      "nodeContext" : "uriString.charAt(schemeIndex + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 263,
        "startColumnNumber" : 15,
        "endLineNumber" : 263,
        "endColumnNumber" : 55
      },
      "nodeContext" : "uriString.charAt(schemeIndex + 1) == '/'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 262,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 55
      },
      "nodeContext" : "schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 262,
        "startColumnNumber" : 8,
        "endLineNumber" : 264,
        "endColumnNumber" : 55
      },
      "nodeContext" : "schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 264,
        "endColumnNumber" : 55
      },
      "nodeContext" : "hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/'",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 261,
        "startColumnNumber" : 4,
        "endLineNumber" : 264,
        "endColumnNumber" : 56
      },
      "nodeContext" : "boolean hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/';\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1821,
        "startLineNumber" : 228,
        "startColumnNumber" : 55,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] indices=new int[INDEX_COUNT];\n  if (TextUtils.isEmpty(uriString)) {\n    indices[SCHEME_COLON]=-1;\n    return indices;\n  }\n  int length=uriString.length();\n  int fragmentIndex=uriString.indexOf('#');\n  if (fragmentIndex == -1) {\n    fragmentIndex=length;\n  }\n  int queryIndex=uriString.indexOf('?');\n  if (queryIndex == -1 || queryIndex > fragmentIndex) {\n    queryIndex=fragmentIndex;\n  }\n  int schemeIndexLimit=uriString.indexOf('/');\n  if (schemeIndexLimit == -1 || schemeIndexLimit > queryIndex) {\n    schemeIndexLimit=queryIndex;\n  }\n  int schemeIndex=uriString.indexOf(':');\n  if (schemeIndex > schemeIndexLimit) {\n    schemeIndex=-1;\n  }\n  boolean hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/';\n  int pathIndex;\n  if (hasAuthority) {\n    pathIndex=uriString.indexOf('/',schemeIndex + 3);\n    if (pathIndex == -1 || pathIndex > queryIndex) {\n      pathIndex=queryIndex;\n    }\n  }\n else {\n    pathIndex=schemeIndex + 1;\n  }\n  indices[SCHEME_COLON]=schemeIndex;\n  indices[PATH]=pathIndex;\n  indices[QUERY]=queryIndex;\n  indices[FRAGMENT]=fragmentIndex;\n  return indices;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates indices of the constituent components of a URI.\n * @param uriString The URI as a string.\n * @return The corresponding indices.\n */\nprivate static int[] getUriIndices(String uriString){\n  int[] indices=new int[INDEX_COUNT];\n  if (TextUtils.isEmpty(uriString)) {\n    indices[SCHEME_COLON]=-1;\n    return indices;\n  }\n  int length=uriString.length();\n  int fragmentIndex=uriString.indexOf('#');\n  if (fragmentIndex == -1) {\n    fragmentIndex=length;\n  }\n  int queryIndex=uriString.indexOf('?');\n  if (queryIndex == -1 || queryIndex > fragmentIndex) {\n    queryIndex=fragmentIndex;\n  }\n  int schemeIndexLimit=uriString.indexOf('/');\n  if (schemeIndexLimit == -1 || schemeIndexLimit > queryIndex) {\n    schemeIndexLimit=queryIndex;\n  }\n  int schemeIndex=uriString.indexOf(':');\n  if (schemeIndex > schemeIndexLimit) {\n    schemeIndex=-1;\n  }\n  boolean hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/';\n  int pathIndex;\n  if (hasAuthority) {\n    pathIndex=uriString.indexOf('/',schemeIndex + 3);\n    if (pathIndex == -1 || pathIndex > queryIndex) {\n      pathIndex=queryIndex;\n    }\n  }\n else {\n    pathIndex=schemeIndex + 1;\n  }\n  indices[SCHEME_COLON]=schemeIndex;\n  indices[PATH]=pathIndex;\n  indices[QUERY]=queryIndex;\n  indices[FRAGMENT]=fragmentIndex;\n  return indices;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 263,
        "startColumnNumber" : 15,
        "endLineNumber" : 263,
        "endColumnNumber" : 55
      },
      "nodeContext" : "uriString.charAt(schemeIndex + 1) == '/'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "schemeIndex + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 272,
      "startColumnNumber" : 18,
      "endLineNumber" : 272,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 272,
        "startColumnNumber" : 6,
        "endLineNumber" : 272,
        "endColumnNumber" : 33
      },
      "nodeContext" : "pathIndex=schemeIndex + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 272,
        "startColumnNumber" : 6,
        "endLineNumber" : 272,
        "endColumnNumber" : 34
      },
      "nodeContext" : "pathIndex=schemeIndex + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 271,
        "startColumnNumber" : 11,
        "endLineNumber" : 273,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  pathIndex=schemeIndex + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 266,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hasAuthority) {\n  pathIndex=uriString.indexOf('/',schemeIndex + 3);\n  if (pathIndex == -1 || pathIndex > queryIndex) {\n    pathIndex=queryIndex;\n  }\n}\n else {\n  pathIndex=schemeIndex + 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1821,
        "startLineNumber" : 228,
        "startColumnNumber" : 55,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] indices=new int[INDEX_COUNT];\n  if (TextUtils.isEmpty(uriString)) {\n    indices[SCHEME_COLON]=-1;\n    return indices;\n  }\n  int length=uriString.length();\n  int fragmentIndex=uriString.indexOf('#');\n  if (fragmentIndex == -1) {\n    fragmentIndex=length;\n  }\n  int queryIndex=uriString.indexOf('?');\n  if (queryIndex == -1 || queryIndex > fragmentIndex) {\n    queryIndex=fragmentIndex;\n  }\n  int schemeIndexLimit=uriString.indexOf('/');\n  if (schemeIndexLimit == -1 || schemeIndexLimit > queryIndex) {\n    schemeIndexLimit=queryIndex;\n  }\n  int schemeIndex=uriString.indexOf(':');\n  if (schemeIndex > schemeIndexLimit) {\n    schemeIndex=-1;\n  }\n  boolean hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/';\n  int pathIndex;\n  if (hasAuthority) {\n    pathIndex=uriString.indexOf('/',schemeIndex + 3);\n    if (pathIndex == -1 || pathIndex > queryIndex) {\n      pathIndex=queryIndex;\n    }\n  }\n else {\n    pathIndex=schemeIndex + 1;\n  }\n  indices[SCHEME_COLON]=schemeIndex;\n  indices[PATH]=pathIndex;\n  indices[QUERY]=queryIndex;\n  indices[FRAGMENT]=fragmentIndex;\n  return indices;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates indices of the constituent components of a URI.\n * @param uriString The URI as a string.\n * @return The corresponding indices.\n */\nprivate static int[] getUriIndices(String uriString){\n  int[] indices=new int[INDEX_COUNT];\n  if (TextUtils.isEmpty(uriString)) {\n    indices[SCHEME_COLON]=-1;\n    return indices;\n  }\n  int length=uriString.length();\n  int fragmentIndex=uriString.indexOf('#');\n  if (fragmentIndex == -1) {\n    fragmentIndex=length;\n  }\n  int queryIndex=uriString.indexOf('?');\n  if (queryIndex == -1 || queryIndex > fragmentIndex) {\n    queryIndex=fragmentIndex;\n  }\n  int schemeIndexLimit=uriString.indexOf('/');\n  if (schemeIndexLimit == -1 || schemeIndexLimit > queryIndex) {\n    schemeIndexLimit=queryIndex;\n  }\n  int schemeIndex=uriString.indexOf(':');\n  if (schemeIndex > schemeIndexLimit) {\n    schemeIndex=-1;\n  }\n  boolean hasAuthority=schemeIndex + 2 < queryIndex && uriString.charAt(schemeIndex + 1) == '/' && uriString.charAt(schemeIndex + 2) == '/';\n  int pathIndex;\n  if (hasAuthority) {\n    pathIndex=uriString.indexOf('/',schemeIndex + 3);\n    if (pathIndex == -1 || pathIndex > queryIndex) {\n      pathIndex=queryIndex;\n    }\n  }\n else {\n    pathIndex=schemeIndex + 1;\n  }\n  indices[SCHEME_COLON]=schemeIndex;\n  indices[PATH]=pathIndex;\n  indices[QUERY]=queryIndex;\n  indices[FRAGMENT]=fragmentIndex;\n  return indices;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 272,
        "startColumnNumber" : 6,
        "endLineNumber" : 272,
        "endColumnNumber" : 34
      },
      "nodeContext" : "pathIndex=schemeIndex + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 263,
    "startColumnNumber" : 32,
    "endLineNumber" : 263,
    "endColumnNumber" : 47
  }, {
    "charLength" : 15,
    "startLineNumber" : 272,
    "startColumnNumber" : 18,
    "endLineNumber" : 272,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}