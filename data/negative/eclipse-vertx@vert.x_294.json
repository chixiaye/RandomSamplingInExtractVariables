{
  "id" : 294,
  "expression" : "(Number)json.getValue(\"clusterPingReplyInterval\")",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/generated/io/vertx/core/eventbus/EventBusOptionsConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Number)json.getValue(\"clusterPingReplyInterval\")",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 40,
      "startColumnNumber" : 39,
      "endLineNumber" : 40,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 40,
        "startColumnNumber" : 38,
        "endLineNumber" : 40,
        "endColumnNumber" : 89
      },
      "nodeContext" : "((Number)json.getValue(\"clusterPingReplyInterval\"))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 40,
        "startColumnNumber" : 38,
        "endLineNumber" : 40,
        "endColumnNumber" : 101
      },
      "nodeContext" : "((Number)json.getValue(\"clusterPingReplyInterval\")).longValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 102
      },
      "nodeContext" : "obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 103
      },
      "nodeContext" : "obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (json.getValue(\"clusterPingReplyInterval\") instanceof Number) {\n  obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5673,
        "startLineNumber" : 29,
        "startColumnNumber" : 68,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (json.getValue(\"acceptBacklog\") instanceof Number) {\n    obj.setAcceptBacklog(((Number)json.getValue(\"acceptBacklog\")).intValue());\n  }\n  if (json.getValue(\"clientAuth\") instanceof String) {\n    obj.setClientAuth(io.vertx.core.http.ClientAuth.valueOf((String)json.getValue(\"clientAuth\")));\n  }\n  if (json.getValue(\"clusterPingInterval\") instanceof Number) {\n    obj.setClusterPingInterval(((Number)json.getValue(\"clusterPingInterval\")).longValue());\n  }\n  if (json.getValue(\"clusterPingReplyInterval\") instanceof Number) {\n    obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n  }\n  if (json.getValue(\"clusterPublicHost\") instanceof String) {\n    obj.setClusterPublicHost((String)json.getValue(\"clusterPublicHost\"));\n  }\n  if (json.getValue(\"clusterPublicPort\") instanceof Number) {\n    obj.setClusterPublicPort(((Number)json.getValue(\"clusterPublicPort\")).intValue());\n  }\n  if (json.getValue(\"clustered\") instanceof Boolean) {\n    obj.setClustered((Boolean)json.getValue(\"clustered\"));\n  }\n  if (json.getValue(\"connectTimeout\") instanceof Number) {\n    obj.setConnectTimeout(((Number)json.getValue(\"connectTimeout\")).intValue());\n  }\n  if (json.getValue(\"crlPaths\") instanceof JsonArray) {\n    json.getJsonArray(\"crlPaths\").forEach(item -> {\n      if (item instanceof String)       obj.addCrlPath((String)item);\n    }\n);\n  }\n  if (json.getValue(\"crlValues\") instanceof JsonArray) {\n    json.getJsonArray(\"crlValues\").forEach(item -> {\n      if (item instanceof String)       obj.addCrlValue(io.vertx.core.buffer.Buffer.buffer(java.util.Base64.getDecoder().decode((String)item)));\n    }\n);\n  }\n  if (json.getValue(\"enabledCipherSuites\") instanceof JsonArray) {\n    json.getJsonArray(\"enabledCipherSuites\").forEach(item -> {\n      if (item instanceof String)       obj.addEnabledCipherSuite((String)item);\n    }\n);\n  }\n  if (json.getValue(\"enabledSecureTransportProtocols\") instanceof JsonArray) {\n    json.getJsonArray(\"enabledSecureTransportProtocols\").forEach(item -> {\n      if (item instanceof String)       obj.addEnabledSecureTransportProtocol((String)item);\n    }\n);\n  }\n  if (json.getValue(\"host\") instanceof String) {\n    obj.setHost((String)json.getValue(\"host\"));\n  }\n  if (json.getValue(\"idleTimeout\") instanceof Number) {\n    obj.setIdleTimeout(((Number)json.getValue(\"idleTimeout\")).intValue());\n  }\n  if (json.getValue(\"keyStoreOptions\") instanceof JsonObject) {\n    obj.setKeyStoreOptions(new io.vertx.core.net.JksOptions((JsonObject)json.getValue(\"keyStoreOptions\")));\n  }\n  if (json.getValue(\"pemKeyCertOptions\") instanceof JsonObject) {\n    obj.setPemKeyCertOptions(new io.vertx.core.net.PemKeyCertOptions((JsonObject)json.getValue(\"pemKeyCertOptions\")));\n  }\n  if (json.getValue(\"pemTrustOptions\") instanceof JsonObject) {\n    obj.setPemTrustOptions(new io.vertx.core.net.PemTrustOptions((JsonObject)json.getValue(\"pemTrustOptions\")));\n  }\n  if (json.getValue(\"pfxKeyCertOptions\") instanceof JsonObject) {\n    obj.setPfxKeyCertOptions(new io.vertx.core.net.PfxOptions((JsonObject)json.getValue(\"pfxKeyCertOptions\")));\n  }\n  if (json.getValue(\"pfxTrustOptions\") instanceof JsonObject) {\n    obj.setPfxTrustOptions(new io.vertx.core.net.PfxOptions((JsonObject)json.getValue(\"pfxTrustOptions\")));\n  }\n  if (json.getValue(\"port\") instanceof Number) {\n    obj.setPort(((Number)json.getValue(\"port\")).intValue());\n  }\n  if (json.getValue(\"receiveBufferSize\") instanceof Number) {\n    obj.setReceiveBufferSize(((Number)json.getValue(\"receiveBufferSize\")).intValue());\n  }\n  if (json.getValue(\"reconnectAttempts\") instanceof Number) {\n    obj.setReconnectAttempts(((Number)json.getValue(\"reconnectAttempts\")).intValue());\n  }\n  if (json.getValue(\"reconnectInterval\") instanceof Number) {\n    obj.setReconnectInterval(((Number)json.getValue(\"reconnectInterval\")).longValue());\n  }\n  if (json.getValue(\"reuseAddress\") instanceof Boolean) {\n    obj.setReuseAddress((Boolean)json.getValue(\"reuseAddress\"));\n  }\n  if (json.getValue(\"sendBufferSize\") instanceof Number) {\n    obj.setSendBufferSize(((Number)json.getValue(\"sendBufferSize\")).intValue());\n  }\n  if (json.getValue(\"soLinger\") instanceof Number) {\n    obj.setSoLinger(((Number)json.getValue(\"soLinger\")).intValue());\n  }\n  if (json.getValue(\"ssl\") instanceof Boolean) {\n    obj.setSsl((Boolean)json.getValue(\"ssl\"));\n  }\n  if (json.getValue(\"sslEngine\") instanceof String) {\n    obj.setSslEngine(io.vertx.core.net.SSLEngine.valueOf((String)json.getValue(\"sslEngine\")));\n  }\n  if (json.getValue(\"tcpKeepAlive\") instanceof Boolean) {\n    obj.setTcpKeepAlive((Boolean)json.getValue(\"tcpKeepAlive\"));\n  }\n  if (json.getValue(\"tcpNoDelay\") instanceof Boolean) {\n    obj.setTcpNoDelay((Boolean)json.getValue(\"tcpNoDelay\"));\n  }\n  if (json.getValue(\"trafficClass\") instanceof Number) {\n    obj.setTrafficClass(((Number)json.getValue(\"trafficClass\")).intValue());\n  }\n  if (json.getValue(\"trustAll\") instanceof Boolean) {\n    obj.setTrustAll((Boolean)json.getValue(\"trustAll\"));\n  }\n  if (json.getValue(\"trustStoreOptions\") instanceof JsonObject) {\n    obj.setTrustStoreOptions(new io.vertx.core.net.JksOptions((JsonObject)json.getValue(\"trustStoreOptions\")));\n  }\n  if (json.getValue(\"useAlpn\") instanceof Boolean) {\n    obj.setUseAlpn((Boolean)json.getValue(\"useAlpn\"));\n  }\n  if (json.getValue(\"usePooledBuffers\") instanceof Boolean) {\n    obj.setUsePooledBuffers((Boolean)json.getValue(\"usePooledBuffers\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5739,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void fromJson(JsonObject json,EventBusOptions obj){\n  if (json.getValue(\"acceptBacklog\") instanceof Number) {\n    obj.setAcceptBacklog(((Number)json.getValue(\"acceptBacklog\")).intValue());\n  }\n  if (json.getValue(\"clientAuth\") instanceof String) {\n    obj.setClientAuth(io.vertx.core.http.ClientAuth.valueOf((String)json.getValue(\"clientAuth\")));\n  }\n  if (json.getValue(\"clusterPingInterval\") instanceof Number) {\n    obj.setClusterPingInterval(((Number)json.getValue(\"clusterPingInterval\")).longValue());\n  }\n  if (json.getValue(\"clusterPingReplyInterval\") instanceof Number) {\n    obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n  }\n  if (json.getValue(\"clusterPublicHost\") instanceof String) {\n    obj.setClusterPublicHost((String)json.getValue(\"clusterPublicHost\"));\n  }\n  if (json.getValue(\"clusterPublicPort\") instanceof Number) {\n    obj.setClusterPublicPort(((Number)json.getValue(\"clusterPublicPort\")).intValue());\n  }\n  if (json.getValue(\"clustered\") instanceof Boolean) {\n    obj.setClustered((Boolean)json.getValue(\"clustered\"));\n  }\n  if (json.getValue(\"connectTimeout\") instanceof Number) {\n    obj.setConnectTimeout(((Number)json.getValue(\"connectTimeout\")).intValue());\n  }\n  if (json.getValue(\"crlPaths\") instanceof JsonArray) {\n    json.getJsonArray(\"crlPaths\").forEach(item -> {\n      if (item instanceof String)       obj.addCrlPath((String)item);\n    }\n);\n  }\n  if (json.getValue(\"crlValues\") instanceof JsonArray) {\n    json.getJsonArray(\"crlValues\").forEach(item -> {\n      if (item instanceof String)       obj.addCrlValue(io.vertx.core.buffer.Buffer.buffer(java.util.Base64.getDecoder().decode((String)item)));\n    }\n);\n  }\n  if (json.getValue(\"enabledCipherSuites\") instanceof JsonArray) {\n    json.getJsonArray(\"enabledCipherSuites\").forEach(item -> {\n      if (item instanceof String)       obj.addEnabledCipherSuite((String)item);\n    }\n);\n  }\n  if (json.getValue(\"enabledSecureTransportProtocols\") instanceof JsonArray) {\n    json.getJsonArray(\"enabledSecureTransportProtocols\").forEach(item -> {\n      if (item instanceof String)       obj.addEnabledSecureTransportProtocol((String)item);\n    }\n);\n  }\n  if (json.getValue(\"host\") instanceof String) {\n    obj.setHost((String)json.getValue(\"host\"));\n  }\n  if (json.getValue(\"idleTimeout\") instanceof Number) {\n    obj.setIdleTimeout(((Number)json.getValue(\"idleTimeout\")).intValue());\n  }\n  if (json.getValue(\"keyStoreOptions\") instanceof JsonObject) {\n    obj.setKeyStoreOptions(new io.vertx.core.net.JksOptions((JsonObject)json.getValue(\"keyStoreOptions\")));\n  }\n  if (json.getValue(\"pemKeyCertOptions\") instanceof JsonObject) {\n    obj.setPemKeyCertOptions(new io.vertx.core.net.PemKeyCertOptions((JsonObject)json.getValue(\"pemKeyCertOptions\")));\n  }\n  if (json.getValue(\"pemTrustOptions\") instanceof JsonObject) {\n    obj.setPemTrustOptions(new io.vertx.core.net.PemTrustOptions((JsonObject)json.getValue(\"pemTrustOptions\")));\n  }\n  if (json.getValue(\"pfxKeyCertOptions\") instanceof JsonObject) {\n    obj.setPfxKeyCertOptions(new io.vertx.core.net.PfxOptions((JsonObject)json.getValue(\"pfxKeyCertOptions\")));\n  }\n  if (json.getValue(\"pfxTrustOptions\") instanceof JsonObject) {\n    obj.setPfxTrustOptions(new io.vertx.core.net.PfxOptions((JsonObject)json.getValue(\"pfxTrustOptions\")));\n  }\n  if (json.getValue(\"port\") instanceof Number) {\n    obj.setPort(((Number)json.getValue(\"port\")).intValue());\n  }\n  if (json.getValue(\"receiveBufferSize\") instanceof Number) {\n    obj.setReceiveBufferSize(((Number)json.getValue(\"receiveBufferSize\")).intValue());\n  }\n  if (json.getValue(\"reconnectAttempts\") instanceof Number) {\n    obj.setReconnectAttempts(((Number)json.getValue(\"reconnectAttempts\")).intValue());\n  }\n  if (json.getValue(\"reconnectInterval\") instanceof Number) {\n    obj.setReconnectInterval(((Number)json.getValue(\"reconnectInterval\")).longValue());\n  }\n  if (json.getValue(\"reuseAddress\") instanceof Boolean) {\n    obj.setReuseAddress((Boolean)json.getValue(\"reuseAddress\"));\n  }\n  if (json.getValue(\"sendBufferSize\") instanceof Number) {\n    obj.setSendBufferSize(((Number)json.getValue(\"sendBufferSize\")).intValue());\n  }\n  if (json.getValue(\"soLinger\") instanceof Number) {\n    obj.setSoLinger(((Number)json.getValue(\"soLinger\")).intValue());\n  }\n  if (json.getValue(\"ssl\") instanceof Boolean) {\n    obj.setSsl((Boolean)json.getValue(\"ssl\"));\n  }\n  if (json.getValue(\"sslEngine\") instanceof String) {\n    obj.setSslEngine(io.vertx.core.net.SSLEngine.valueOf((String)json.getValue(\"sslEngine\")));\n  }\n  if (json.getValue(\"tcpKeepAlive\") instanceof Boolean) {\n    obj.setTcpKeepAlive((Boolean)json.getValue(\"tcpKeepAlive\"));\n  }\n  if (json.getValue(\"tcpNoDelay\") instanceof Boolean) {\n    obj.setTcpNoDelay((Boolean)json.getValue(\"tcpNoDelay\"));\n  }\n  if (json.getValue(\"trafficClass\") instanceof Number) {\n    obj.setTrafficClass(((Number)json.getValue(\"trafficClass\")).intValue());\n  }\n  if (json.getValue(\"trustAll\") instanceof Boolean) {\n    obj.setTrustAll((Boolean)json.getValue(\"trustAll\"));\n  }\n  if (json.getValue(\"trustStoreOptions\") instanceof JsonObject) {\n    obj.setTrustStoreOptions(new io.vertx.core.net.JksOptions((JsonObject)json.getValue(\"trustStoreOptions\")));\n  }\n  if (json.getValue(\"useAlpn\") instanceof Boolean) {\n    obj.setUseAlpn((Boolean)json.getValue(\"useAlpn\"));\n  }\n  if (json.getValue(\"usePooledBuffers\") instanceof Boolean) {\n    obj.setUsePooledBuffers((Boolean)json.getValue(\"usePooledBuffers\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 913,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 103
      },
      "nodeContext" : "obj.setClusterPingReplyInterval(((Number)json.getValue(\"clusterPingReplyInterval\")).longValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.Number"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 40,
    "startColumnNumber" : 39,
    "endLineNumber" : 40,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}