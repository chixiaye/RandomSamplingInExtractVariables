{
  "id" : 446,
  "expression" : "BatchStreamReaders.class",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-orc/src/main/java/com/facebook/presto/orc/reader/BatchStreamReaders.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BatchStreamReaders.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 34,
      "startColumnNumber" : 121,
      "endLineNumber" : 34,
      "endColumnNumber" : 145
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 121,
        "endLineNumber" : 34,
        "endColumnNumber" : 161
      },
      "nodeContext" : "BatchStreamReaders.class.getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 34,
        "startColumnNumber" : 76,
        "endLineNumber" : 34,
        "endColumnNumber" : 162
      },
      "nodeContext" : "systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 34,
        "startColumnNumber" : 23,
        "endLineNumber" : 34,
        "endColumnNumber" : 163
      },
      "nodeContext" : "new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 34,
        "startColumnNumber" : 16,
        "endLineNumber" : 34,
        "endColumnNumber" : 164
      },
      "nodeContext" : "return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:  return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 145,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:    return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:  return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2126,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static BatchStreamReader createStreamReader(Type type,StreamDescriptor streamDescriptor,DateTimeZone hiveStorageTimeZone,OrcRecordReaderOptions options,OrcAggregatedMemoryContext systemMemoryContext) throws OrcCorruptionException {\nswitch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:    return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:  return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 34,
        "startColumnNumber" : 16,
        "endLineNumber" : 34,
        "endColumnNumber" : 164
      },
      "nodeContext" : "return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.facebook.presto.orc.reader.BatchStreamReaders>"
  }, {
    "nodeContext" : "BatchStreamReaders.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 36,
      "startColumnNumber" : 118,
      "endLineNumber" : 36,
      "endColumnNumber" : 142
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 36,
        "startColumnNumber" : 118,
        "endLineNumber" : 36,
        "endColumnNumber" : 158
      },
      "nodeContext" : "BatchStreamReaders.class.getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 36,
        "startColumnNumber" : 73,
        "endLineNumber" : 36,
        "endColumnNumber" : 159
      },
      "nodeContext" : "systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 36,
        "startColumnNumber" : 23,
        "endLineNumber" : 36,
        "endColumnNumber" : 160
      },
      "nodeContext" : "new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 161
      },
      "nodeContext" : "return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:  return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 145,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:    return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:  return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2126,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static BatchStreamReader createStreamReader(Type type,StreamDescriptor streamDescriptor,DateTimeZone hiveStorageTimeZone,OrcRecordReaderOptions options,OrcAggregatedMemoryContext systemMemoryContext) throws OrcCorruptionException {\nswitch (streamDescriptor.getOrcTypeKind()) {\ncase BOOLEAN:    return new BooleanBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase BYTE:  return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\ncase SHORT:case INT:case LONG:case DATE:return new LongBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase FLOAT:return new FloatBatchStreamReader(type,streamDescriptor);\ncase DOUBLE:return new DoubleBatchStreamReader(type,streamDescriptor);\ncase BINARY:case STRING:case VARCHAR:case CHAR:return new SliceBatchStreamReader(type,streamDescriptor,systemMemoryContext);\ncase TIMESTAMP:return new TimestampBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options);\ncase LIST:return new ListBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase STRUCT:return new StructBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase MAP:return new MapBatchStreamReader(type,streamDescriptor,hiveStorageTimeZone,options,systemMemoryContext);\ncase DECIMAL:return new DecimalBatchStreamReader(type,streamDescriptor);\ncase UNION:default:throw new IllegalArgumentException(\"Unsupported type: \" + streamDescriptor.getOrcTypeKind());\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 161
      },
      "nodeContext" : "return new ByteBatchStreamReader(type,streamDescriptor,systemMemoryContext.newOrcLocalMemoryContext(BatchStreamReaders.class.getSimpleName()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.facebook.presto.orc.reader.BatchStreamReaders>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 34,
    "startColumnNumber" : 121,
    "endLineNumber" : 34,
    "endColumnNumber" : 145
  }, {
    "charLength" : 24,
    "startLineNumber" : 36,
    "startColumnNumber" : 118,
    "endLineNumber" : 36,
    "endColumnNumber" : 142
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}