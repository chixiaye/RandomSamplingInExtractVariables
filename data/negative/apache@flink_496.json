{
  "id" : 496,
  "expression" : "forwardGroup",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptivebatch/forwardgroup/ForwardGroupComputeUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "forwardGroup",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 85,
      "startColumnNumber" : 47,
      "endLineNumber" : 85,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 85,
        "startColumnNumber" : 47,
        "endLineNumber" : 85,
        "endColumnNumber" : 77
      },
      "nodeContext" : "forwardGroup.getJobVertexIds()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n  ret.put(jobVertexId,forwardGroup);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 76,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n  for (  JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n    ret.put(jobVertexId,forwardGroup);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (vertexGroup.size() > 1) {\n  ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n  for (  JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n    ret.put(jobVertexId,forwardGroup);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 75,
        "startColumnNumber" : 74,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (vertexGroup.size() > 1) {\n    ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n    for (    JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n      ret.put(jobVertexId,forwardGroup);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n  if (vertexGroup.size() > 1) {\n    ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n    for (    JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n      ret.put(jobVertexId,forwardGroup);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2327,
        "startLineNumber" : 41,
        "startColumnNumber" : 83,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<JobVertex,Set<JobVertex>> vertexToGroup=new IdentityHashMap<>();\n  for (  JobVertex vertex : topologicallySortedVertices) {\n    Set<JobVertex> currentGroup=new HashSet<>();\n    currentGroup.add(vertex);\n    vertexToGroup.put(vertex,currentGroup);\n    for (    JobEdge input : getForwardInputs(vertex)) {\n      final JobVertex producerVertex=input.getSource().getProducer();\n      final Set<JobVertex> producerGroup=vertexToGroup.get(producerVertex);\n      if (producerGroup == null) {\n        throw new IllegalStateException(\"Producer task \" + producerVertex.getID() + \" forward group is null\"+ \" while calculating forward group for the consumer task \"+ vertex.getID()+ \". This should be a forward group building bug.\");\n      }\n      if (currentGroup != producerGroup) {\n        currentGroup=VertexGroupComputeUtil.mergeVertexGroups(currentGroup,producerGroup,vertexToGroup);\n      }\n    }\n  }\n  final Map<JobVertexID,ForwardGroup> ret=new HashMap<>();\n  for (  Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n    if (vertexGroup.size() > 1) {\n      ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n      for (      JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n        ret.put(jobVertexId,forwardGroup);\n      }\n    }\n  }\n  return ret;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2544,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Map<JobVertexID,ForwardGroup> computeForwardGroups(final Iterable<JobVertex> topologicallySortedVertices,Function<JobVertexID,ExecutionJobVertex> executionJobVertexRetriever){\n  final Map<JobVertex,Set<JobVertex>> vertexToGroup=new IdentityHashMap<>();\n  for (  JobVertex vertex : topologicallySortedVertices) {\n    Set<JobVertex> currentGroup=new HashSet<>();\n    currentGroup.add(vertex);\n    vertexToGroup.put(vertex,currentGroup);\n    for (    JobEdge input : getForwardInputs(vertex)) {\n      final JobVertex producerVertex=input.getSource().getProducer();\n      final Set<JobVertex> producerGroup=vertexToGroup.get(producerVertex);\n      if (producerGroup == null) {\n        throw new IllegalStateException(\"Producer task \" + producerVertex.getID() + \" forward group is null\"+ \" while calculating forward group for the consumer task \"+ vertex.getID()+ \". This should be a forward group building bug.\");\n      }\n      if (currentGroup != producerGroup) {\n        currentGroup=VertexGroupComputeUtil.mergeVertexGroups(currentGroup,producerGroup,vertexToGroup);\n      }\n    }\n  }\n  final Map<JobVertexID,ForwardGroup> ret=new HashMap<>();\n  for (  Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n    if (vertexGroup.size() > 1) {\n      ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n      for (      JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n        ret.put(jobVertexId,forwardGroup);\n      }\n    }\n  }\n  return ret;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 85,
        "startColumnNumber" : 47,
        "endLineNumber" : 85,
        "endColumnNumber" : 77
      },
      "nodeContext" : "forwardGroup.getJobVertexIds()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.runtime.scheduler.adaptivebatch.forwardgroup.ForwardGroup"
  }, {
    "nodeContext" : "forwardGroup",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 86,
      "startColumnNumber" : 41,
      "endLineNumber" : 86,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ret.put(jobVertexId,forwardGroup)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ret.put(jobVertexId,forwardGroup);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 85,
        "startColumnNumber" : 79,
        "endLineNumber" : 87,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ret.put(jobVertexId,forwardGroup);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n  ret.put(jobVertexId,forwardGroup);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 76,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n  for (  JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n    ret.put(jobVertexId,forwardGroup);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (vertexGroup.size() > 1) {\n  ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n  for (  JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n    ret.put(jobVertexId,forwardGroup);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 75,
        "startColumnNumber" : 74,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (vertexGroup.size() > 1) {\n    ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n    for (    JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n      ret.put(jobVertexId,forwardGroup);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n  if (vertexGroup.size() > 1) {\n    ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n    for (    JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n      ret.put(jobVertexId,forwardGroup);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2327,
        "startLineNumber" : 41,
        "startColumnNumber" : 83,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<JobVertex,Set<JobVertex>> vertexToGroup=new IdentityHashMap<>();\n  for (  JobVertex vertex : topologicallySortedVertices) {\n    Set<JobVertex> currentGroup=new HashSet<>();\n    currentGroup.add(vertex);\n    vertexToGroup.put(vertex,currentGroup);\n    for (    JobEdge input : getForwardInputs(vertex)) {\n      final JobVertex producerVertex=input.getSource().getProducer();\n      final Set<JobVertex> producerGroup=vertexToGroup.get(producerVertex);\n      if (producerGroup == null) {\n        throw new IllegalStateException(\"Producer task \" + producerVertex.getID() + \" forward group is null\"+ \" while calculating forward group for the consumer task \"+ vertex.getID()+ \". This should be a forward group building bug.\");\n      }\n      if (currentGroup != producerGroup) {\n        currentGroup=VertexGroupComputeUtil.mergeVertexGroups(currentGroup,producerGroup,vertexToGroup);\n      }\n    }\n  }\n  final Map<JobVertexID,ForwardGroup> ret=new HashMap<>();\n  for (  Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n    if (vertexGroup.size() > 1) {\n      ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n      for (      JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n        ret.put(jobVertexId,forwardGroup);\n      }\n    }\n  }\n  return ret;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2544,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Map<JobVertexID,ForwardGroup> computeForwardGroups(final Iterable<JobVertex> topologicallySortedVertices,Function<JobVertexID,ExecutionJobVertex> executionJobVertexRetriever){\n  final Map<JobVertex,Set<JobVertex>> vertexToGroup=new IdentityHashMap<>();\n  for (  JobVertex vertex : topologicallySortedVertices) {\n    Set<JobVertex> currentGroup=new HashSet<>();\n    currentGroup.add(vertex);\n    vertexToGroup.put(vertex,currentGroup);\n    for (    JobEdge input : getForwardInputs(vertex)) {\n      final JobVertex producerVertex=input.getSource().getProducer();\n      final Set<JobVertex> producerGroup=vertexToGroup.get(producerVertex);\n      if (producerGroup == null) {\n        throw new IllegalStateException(\"Producer task \" + producerVertex.getID() + \" forward group is null\"+ \" while calculating forward group for the consumer task \"+ vertex.getID()+ \". This should be a forward group building bug.\");\n      }\n      if (currentGroup != producerGroup) {\n        currentGroup=VertexGroupComputeUtil.mergeVertexGroups(currentGroup,producerGroup,vertexToGroup);\n      }\n    }\n  }\n  final Map<JobVertexID,ForwardGroup> ret=new HashMap<>();\n  for (  Set<JobVertex> vertexGroup : VertexGroupComputeUtil.uniqueVertexGroups(vertexToGroup)) {\n    if (vertexGroup.size() > 1) {\n      ForwardGroup forwardGroup=new ForwardGroup(vertexGroup.stream().map(vertex -> executionJobVertexRetriever.apply(vertex.getID())).collect(Collectors.toSet()));\n      for (      JobVertexID jobVertexId : forwardGroup.getJobVertexIds()) {\n        ret.put(jobVertexId,forwardGroup);\n      }\n    }\n  }\n  return ret;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ret.put(jobVertexId,forwardGroup);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.runtime.scheduler.adaptivebatch.forwardgroup.ForwardGroup"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 85,
    "startColumnNumber" : 47,
    "endLineNumber" : 85,
    "endColumnNumber" : 59
  }, {
    "charLength" : 12,
    "startLineNumber" : 86,
    "startColumnNumber" : 41,
    "endLineNumber" : 86,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}