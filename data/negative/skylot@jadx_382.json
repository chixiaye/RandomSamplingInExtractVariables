{
  "id" : 382,
  "expression" : "response.startsWith(SERVER_ERR)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/inline/TestIssue86.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response.startsWith(SERVER_ERR)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 32,
      "startColumnNumber" : 10,
      "endLineNumber" : 32,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 32,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 39
      },
      "nodeContext" : "response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 32,
        "startColumnNumber" : 9,
        "endLineNumber" : 33,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 40
      },
      "nodeContext" : "response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))) {\n  return reportList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 29,
        "startColumnNumber" : 7,
        "endLineNumber" : 53,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  System.out.println(response);\n  if (response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))) {\n    return reportList;\n  }\n  JSONObject jsonObj=new JSONObject(response);\n  JSONArray days=jsonObj.getJSONArray(LIST_TAG);\n  for (int i=0; i < days.length(); i++) {\n    JSONObject c=days.getJSONObject(i);\n    long millis=c.getLong(MILLIS_TAG);\n    JSONObject temp=c.getJSONObject(TEMP_TAG);\n    String max=temp.getString(MAX_TAG);\n    String min=temp.getString(MIN_TAG);\n    JSONArray weather=c.getJSONArray(WEATHER_TAG);\n    String weatherDesc=weather.getJSONObject(0).getString(DESC_TAG);\n    Day d=new Day();\n    d.setMilis(millis);\n    d.setMinTmp(min);\n    d.setMaxTmp(max);\n    d.setWeatherDesc(weatherDesc);\n    reportList.add(d);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 29,
        "startColumnNumber" : 3,
        "endLineNumber" : 55,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  System.out.println(response);\n  if (response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))) {\n    return reportList;\n  }\n  JSONObject jsonObj=new JSONObject(response);\n  JSONArray days=jsonObj.getJSONArray(LIST_TAG);\n  for (int i=0; i < days.length(); i++) {\n    JSONObject c=days.getJSONObject(i);\n    long millis=c.getLong(MILLIS_TAG);\n    JSONObject temp=c.getJSONObject(TEMP_TAG);\n    String max=temp.getString(MAX_TAG);\n    String min=temp.getString(MIN_TAG);\n    JSONArray weather=c.getJSONArray(WEATHER_TAG);\n    String weatherDesc=weather.getJSONObject(0).getString(DESC_TAG);\n    Day d=new Day();\n    d.setMilis(millis);\n    d.setMinTmp(min);\n    d.setMaxTmp(max);\n    d.setWeatherDesc(weatherDesc);\n    reportList.add(d);\n  }\n}\n catch (JSONException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 27,
        "startColumnNumber" : 42,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Day> reportList=new ArrayList<>();\n  try {\n    System.out.println(response);\n    if (response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))) {\n      return reportList;\n    }\n    JSONObject jsonObj=new JSONObject(response);\n    JSONArray days=jsonObj.getJSONArray(LIST_TAG);\n    for (int i=0; i < days.length(); i++) {\n      JSONObject c=days.getJSONObject(i);\n      long millis=c.getLong(MILLIS_TAG);\n      JSONObject temp=c.getJSONObject(TEMP_TAG);\n      String max=temp.getString(MAX_TAG);\n      String min=temp.getString(MIN_TAG);\n      JSONArray weather=c.getJSONArray(WEATHER_TAG);\n      String weatherDesc=weather.getJSONObject(0).getString(DESC_TAG);\n      Day d=new Day();\n      d.setMilis(millis);\n      d.setMinTmp(min);\n      d.setMaxTmp(max);\n      d.setWeatherDesc(weatherDesc);\n      reportList.add(d);\n    }\n  }\n catch (  JSONException e) {\n    e.printStackTrace();\n  }\n  return reportList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private List<Day> test(String response){\n  List<Day> reportList=new ArrayList<>();\n  try {\n    System.out.println(response);\n    if (response != null && (response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND))) {\n      return reportList;\n    }\n    JSONObject jsonObj=new JSONObject(response);\n    JSONArray days=jsonObj.getJSONArray(LIST_TAG);\n    for (int i=0; i < days.length(); i++) {\n      JSONObject c=days.getJSONObject(i);\n      long millis=c.getLong(MILLIS_TAG);\n      JSONObject temp=c.getJSONObject(TEMP_TAG);\n      String max=temp.getString(MAX_TAG);\n      String min=temp.getString(MIN_TAG);\n      JSONArray weather=c.getJSONArray(WEATHER_TAG);\n      String weatherDesc=weather.getJSONObject(0).getString(DESC_TAG);\n      Day d=new Day();\n      d.setMilis(millis);\n      d.setMinTmp(min);\n      d.setMaxTmp(max);\n      d.setWeatherDesc(weatherDesc);\n      reportList.add(d);\n    }\n  }\n catch (  JSONException e) {\n    e.printStackTrace();\n  }\n  return reportList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 32,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 39
      },
      "nodeContext" : "response.startsWith(SERVER_ERR) || response.startsWith(NOT_FOUND)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 32,
    "startColumnNumber" : 10,
    "endLineNumber" : 32,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}