{
  "id" : 366,
  "expression" : "example == null",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "d68d65ce00c49b43ca238ada5d843cd9e681bff6",
  "filePath" : "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1107,
      "startColumnNumber" : 16,
      "endLineNumber" : 1107,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 1107,
        "startColumnNumber" : 12,
        "endLineNumber" : 1109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=p.paramName + \"_example\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 1106,
        "startColumnNumber" : 35,
        "endLineNumber" : 1111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 1107,
        "startColumnNumber" : 12,
        "endLineNumber" : 1109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=p.paramName + \"_example\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1112,
      "startColumnNumber" : 16,
      "endLineNumber" : 1112,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1112,
        "startColumnNumber" : 12,
        "endLineNumber" : 1114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"56\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 1111,
        "startColumnNumber" : 67,
        "endLineNumber" : 1115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"56\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1112,
        "startColumnNumber" : 12,
        "endLineNumber" : 1114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"56\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1116,
      "startColumnNumber" : 16,
      "endLineNumber" : 1116,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1116,
        "startColumnNumber" : 12,
        "endLineNumber" : 1118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"56\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 1115,
        "startColumnNumber" : 40,
        "endLineNumber" : 1120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1116,
        "startColumnNumber" : 12,
        "endLineNumber" : 1118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"56\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1121,
      "startColumnNumber" : 16,
      "endLineNumber" : 1121,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 1121,
        "startColumnNumber" : 12,
        "endLineNumber" : 1123,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"3.4\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 1120,
        "startColumnNumber" : 41,
        "endLineNumber" : 1125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 1121,
        "startColumnNumber" : 12,
        "endLineNumber" : 1123,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"3.4\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1126,
      "startColumnNumber" : 16,
      "endLineNumber" : 1126,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 1126,
        "startColumnNumber" : 12,
        "endLineNumber" : 1128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"3.4\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 1125,
        "startColumnNumber" : 42,
        "endLineNumber" : 1130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 1126,
        "startColumnNumber" : 12,
        "endLineNumber" : 1128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"3.4\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1131,
      "startColumnNumber" : 16,
      "endLineNumber" : 1131,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 1131,
        "startColumnNumber" : 12,
        "endLineNumber" : 1133,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"true\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 1130,
        "startColumnNumber" : 43,
        "endLineNumber" : 1134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"true\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 1131,
        "startColumnNumber" : 12,
        "endLineNumber" : 1133,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"true\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1135,
      "startColumnNumber" : 16,
      "endLineNumber" : 1135,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 1135,
        "startColumnNumber" : 12,
        "endLineNumber" : 1137,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"/path/to/file\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 1134,
        "startColumnNumber" : 40,
        "endLineNumber" : 1139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 1134,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 1135,
        "startColumnNumber" : 12,
        "endLineNumber" : 1137,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"/path/to/file\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1142,
      "startColumnNumber" : 16,
      "endLineNumber" : 1142,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 1142,
        "startColumnNumber" : 12,
        "endLineNumber" : 1146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"LocalDate.now()\";\n}\n else {\n  example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 1141,
        "startColumnNumber" : 45,
        "endLineNumber" : 1147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 1141,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 1139,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 1134,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 1142,
        "startColumnNumber" : 12,
        "endLineNumber" : 1146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"LocalDate.now()\";\n}\n else {\n  example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1148,
      "startColumnNumber" : 16,
      "endLineNumber" : 1148,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 1148,
        "startColumnNumber" : 12,
        "endLineNumber" : 1152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"OffsetDateTime.now()\";\n}\n else {\n  example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 1147,
        "startColumnNumber" : 50,
        "endLineNumber" : 1153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 1147,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 1141,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 1139,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 1134,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 1148,
        "startColumnNumber" : 12,
        "endLineNumber" : 1152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"OffsetDateTime.now()\";\n}\n else {\n  example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1154,
      "startColumnNumber" : 16,
      "endLineNumber" : 1154,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 1154,
        "startColumnNumber" : 12,
        "endLineNumber" : 1158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"new BigDecimal(78)\";\n}\n else {\n  example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 1153,
        "startColumnNumber" : 46,
        "endLineNumber" : 1159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 1153,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 1147,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 1141,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 1139,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 1134,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 1154,
        "startColumnNumber" : 12,
        "endLineNumber" : 1158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"new BigDecimal(78)\";\n}\n else {\n  example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1160,
      "startColumnNumber" : 16,
      "endLineNumber" : 1160,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 1160,
        "startColumnNumber" : 12,
        "endLineNumber" : 1164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"UUID.randomUUID()\";\n}\n else {\n  example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 1159,
        "startColumnNumber" : 40,
        "endLineNumber" : 1165,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 1159,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 1153,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 1147,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 1141,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 1139,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 1134,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 1130,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 1125,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1120,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 1115,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 235,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 1111,
        "startColumnNumber" : 15,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2603,
        "startLineNumber" : 1106,
        "startColumnNumber" : 8,
        "endLineNumber" : 1171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"String\".equals(type)) {\n  if (example == null) {\n    example=p.paramName + \"_example\";\n  }\n  example=\"\\\"\" + escapeText(example) + \"\\\"\";\n}\n else if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n}\n else if (\"Long\".equals(type)) {\n  if (example == null) {\n    example=\"56\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n}\n else if (\"Float\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n}\n else if (\"Double\".equals(type)) {\n  if (example == null) {\n    example=\"3.4\";\n  }\n  example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n}\n else if (\"Boolean\".equals(type)) {\n  if (example == null) {\n    example=\"true\";\n  }\n}\n else if (\"File\".equals(type)) {\n  if (example == null) {\n    example=\"/path/to/file\";\n  }\n  example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n}\n else if (\"Date\".equals(type)) {\n  example=\"new Date()\";\n}\n else if (\"LocalDate\".equals(type)) {\n  if (example == null) {\n    example=\"LocalDate.now()\";\n  }\n else {\n    example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"OffsetDateTime\".equals(type)) {\n  if (example == null) {\n    example=\"OffsetDateTime.now()\";\n  }\n else {\n    example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"BigDecimal\".equals(type)) {\n  if (example == null) {\n    example=\"new BigDecimal(78)\";\n  }\n else {\n    example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (\"UUID\".equals(type)) {\n  if (example == null) {\n    example=\"UUID.randomUUID()\";\n  }\n else {\n    example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n  }\n}\n else if (hasAllowableValues) {\n  example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n}\n else if (!languageSpecificPrimitives.contains(type)) {\n  example=\"new \" + type + \"()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 283,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 1160,
        "startColumnNumber" : 12,
        "endLineNumber" : 1164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (example == null) {\n  example=\"UUID.randomUUID()\";\n}\n else {\n  example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "example == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 1173,
      "startColumnNumber" : 12,
      "endLineNumber" : 1173,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 1173,
        "startColumnNumber" : 8,
        "endLineNumber" : 1190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (example == null) {\n  example=\"null\";\n}\n else if (Boolean.TRUE.equals(p.isArray)) {\n  if (p.items.defaultValue != null) {\n    String innerExample;\n    if (\"String\".equals(p.items.dataType)) {\n      innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n    }\n else {\n      innerExample=p.items.defaultValue;\n    }\n    example=\"Arrays.asList(\" + innerExample + \")\";\n  }\n else {\n    example=\"Arrays.asList()\";\n  }\n}\n else if (Boolean.TRUE.equals(p.isMap)) {\n  example=\"new HashMap()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 1087,
        "startColumnNumber" : 61,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3986,
        "startLineNumber" : 1086,
        "startColumnNumber" : 4,
        "endLineNumber" : 1193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setParameterExampleValue(CodegenParameter p){\n  String example;\n  boolean hasAllowableValues=p.allowableValues != null && !p.allowableValues.isEmpty();\n  if (hasAllowableValues) {\n    final List<Object> values=(List<Object>)p.allowableValues.get(\"values\");\n    example=String.valueOf(values.get(0));\n  }\n else   if (p.defaultValue == null) {\n    example=p.example;\n  }\n else {\n    example=p.defaultValue;\n  }\n  String type=p.baseType;\n  if (type == null) {\n    type=p.dataType;\n  }\n  if (\"String\".equals(type)) {\n    if (example == null) {\n      example=p.paramName + \"_example\";\n    }\n    example=\"\\\"\" + escapeText(example) + \"\\\"\";\n  }\n else   if (\"Integer\".equals(type) || \"Short\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n  }\n else   if (\"Long\".equals(type)) {\n    if (example == null) {\n      example=\"56\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"L\");\n  }\n else   if (\"Float\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"F\");\n  }\n else   if (\"Double\".equals(type)) {\n    if (example == null) {\n      example=\"3.4\";\n    }\n    example=StringUtils.appendIfMissingIgnoreCase(example,\"D\");\n  }\n else   if (\"Boolean\".equals(type)) {\n    if (example == null) {\n      example=\"true\";\n    }\n  }\n else   if (\"File\".equals(type)) {\n    if (example == null) {\n      example=\"/path/to/file\";\n    }\n    example=\"new File(\\\"\" + escapeText(example) + \"\\\")\";\n  }\n else   if (\"Date\".equals(type)) {\n    example=\"new Date()\";\n  }\n else   if (\"LocalDate\".equals(type)) {\n    if (example == null) {\n      example=\"LocalDate.now()\";\n    }\n else {\n      example=\"LocalDate.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"OffsetDateTime\".equals(type)) {\n    if (example == null) {\n      example=\"OffsetDateTime.now()\";\n    }\n else {\n      example=\"OffsetDateTime.parse(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"BigDecimal\".equals(type)) {\n    if (example == null) {\n      example=\"new BigDecimal(78)\";\n    }\n else {\n      example=\"new BigDecimal(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (\"UUID\".equals(type)) {\n    if (example == null) {\n      example=\"UUID.randomUUID()\";\n    }\n else {\n      example=\"UUID.fromString(\\\"\" + example + \"\\\")\";\n    }\n  }\n else   if (hasAllowableValues) {\n    example=type + \".fromValue(\\\"\" + example+ \"\\\")\";\n  }\n else   if (!languageSpecificPrimitives.contains(type)) {\n    example=\"new \" + type + \"()\";\n  }\n  if (example == null) {\n    example=\"null\";\n  }\n else   if (Boolean.TRUE.equals(p.isArray)) {\n    if (p.items.defaultValue != null) {\n      String innerExample;\n      if (\"String\".equals(p.items.dataType)) {\n        innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n      }\n else {\n        innerExample=p.items.defaultValue;\n      }\n      example=\"Arrays.asList(\" + innerExample + \")\";\n    }\n else {\n      example=\"Arrays.asList()\";\n    }\n  }\n else   if (Boolean.TRUE.equals(p.isMap)) {\n    example=\"new HashMap()\";\n  }\n  p.example=example;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 483,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 1173,
        "startColumnNumber" : 8,
        "endLineNumber" : 1190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (example == null) {\n  example=\"null\";\n}\n else if (Boolean.TRUE.equals(p.isArray)) {\n  if (p.items.defaultValue != null) {\n    String innerExample;\n    if (\"String\".equals(p.items.dataType)) {\n      innerExample=\"\\\"\" + p.items.defaultValue + \"\\\"\";\n    }\n else {\n      innerExample=p.items.defaultValue;\n    }\n    example=\"Arrays.asList(\" + innerExample + \")\";\n  }\n else {\n    example=\"Arrays.asList()\";\n  }\n}\n else if (Boolean.TRUE.equals(p.isMap)) {\n  example=\"new HashMap()\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 1107,
    "startColumnNumber" : 16,
    "endLineNumber" : 1107,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1112,
    "startColumnNumber" : 16,
    "endLineNumber" : 1112,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1116,
    "startColumnNumber" : 16,
    "endLineNumber" : 1116,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1121,
    "startColumnNumber" : 16,
    "endLineNumber" : 1121,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1126,
    "startColumnNumber" : 16,
    "endLineNumber" : 1126,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1131,
    "startColumnNumber" : 16,
    "endLineNumber" : 1131,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1135,
    "startColumnNumber" : 16,
    "endLineNumber" : 1135,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1142,
    "startColumnNumber" : 16,
    "endLineNumber" : 1142,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1148,
    "startColumnNumber" : 16,
    "endLineNumber" : 1148,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1154,
    "startColumnNumber" : 16,
    "endLineNumber" : 1154,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1160,
    "startColumnNumber" : 16,
    "endLineNumber" : 1160,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 1173,
    "startColumnNumber" : 12,
    "endLineNumber" : 1173,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 13
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 14
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 1
  } ]
}