{
  "id" : 480,
  "expression" : "currentProgressTime",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/InfiniteProgress.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentProgressTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 56,
      "startColumnNumber" : 12,
      "endLineNumber" : 56,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 45
      },
      "nodeContext" : "currentProgressTime >= risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (currentProgressTime >= risingTime) {\n  currentProgressTime=risingTime;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 43,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateAnimation(){\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 45
      },
      "nodeContext" : "currentProgressTime >= risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "currentProgressTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 60,
      "startColumnNumber" : 101,
      "endLineNumber" : 60,
      "endColumnNumber" : 120
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 60,
        "startColumnNumber" : 101,
        "endLineNumber" : 60,
        "endColumnNumber" : 133
      },
      "nodeContext" : "currentProgressTime / risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 60,
        "startColumnNumber" : 44,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 60,
        "startColumnNumber" : 38,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 60,
        "startColumnNumber" : 34,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 59,
        "startColumnNumber" : 32,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (risingCircleLength) {\n  currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n}\n else {\n  currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 43,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateAnimation(){\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "currentProgressTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 62,
      "startColumnNumber" : 109,
      "endLineNumber" : 62,
      "endColumnNumber" : 128
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 62,
        "startColumnNumber" : 109,
        "endLineNumber" : 62,
        "endColumnNumber" : 141
      },
      "nodeContext" : "currentProgressTime / risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 62,
        "startColumnNumber" : 52,
        "endLineNumber" : 62,
        "endColumnNumber" : 142
      },
      "nodeContext" : "AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 62,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 142
      },
      "nodeContext" : "1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 62,
        "startColumnNumber" : 44,
        "endLineNumber" : 62,
        "endColumnNumber" : 143
      },
      "nodeContext" : "(1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 62,
        "startColumnNumber" : 38,
        "endLineNumber" : 62,
        "endColumnNumber" : 143
      },
      "nodeContext" : "270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 62,
        "startColumnNumber" : 34,
        "endLineNumber" : 62,
        "endColumnNumber" : 143
      },
      "nodeContext" : "4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 143
      },
      "nodeContext" : "currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 144
      },
      "nodeContext" : "currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 61,
        "startColumnNumber" : 15,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (risingCircleLength) {\n  currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n}\n else {\n  currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 43,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateAnimation(){\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 144
      },
      "nodeContext" : "currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "currentProgressTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 64,
      "startColumnNumber" : 12,
      "endLineNumber" : 64,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "currentProgressTime == risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (currentProgressTime == risingTime) {\n  if (risingCircleLength) {\n    radOffset+=270;\n    currentCircleLength=-266;\n  }\n  risingCircleLength=!risingCircleLength;\n  currentProgressTime=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 43,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateAnimation(){\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastUpdateTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastUpdateTime=newTime;\n  radOffset+=360 * dt / rotationTime;\n  int count=(int)(radOffset / 360);\n  radOffset-=count * 360;\n  currentProgressTime+=dt;\n  if (currentProgressTime >= risingTime) {\n    currentProgressTime=risingTime;\n  }\n  if (risingCircleLength) {\n    currentCircleLength=4 + 266 * AndroidUtilities.accelerateInterpolator.getInterpolation(currentProgressTime / risingTime);\n  }\n else {\n    currentCircleLength=4 - 270 * (1.0f - AndroidUtilities.decelerateInterpolator.getInterpolation(currentProgressTime / risingTime));\n  }\n  if (currentProgressTime == risingTime) {\n    if (risingCircleLength) {\n      radOffset+=270;\n      currentCircleLength=-266;\n    }\n    risingCircleLength=!risingCircleLength;\n    currentProgressTime=0;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "currentProgressTime == risingTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 56,
    "startColumnNumber" : 12,
    "endLineNumber" : 56,
    "endColumnNumber" : 31
  }, {
    "charLength" : 19,
    "startLineNumber" : 60,
    "startColumnNumber" : 101,
    "endLineNumber" : 60,
    "endColumnNumber" : 120
  }, {
    "charLength" : 19,
    "startLineNumber" : 62,
    "startColumnNumber" : 109,
    "endLineNumber" : 62,
    "endColumnNumber" : 128
  }, {
    "charLength" : 19,
    "startLineNumber" : 64,
    "startColumnNumber" : 12,
    "endLineNumber" : 64,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}