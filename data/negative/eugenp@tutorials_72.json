{
  "id" : 72,
  "expression" : "(b1 << 1)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lang-math/src/test/java/com/baeldung/java8/UnsignedArithmeticUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(b1 << 1)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 13,
      "startColumnNumber" : 25,
      "endLineNumber" : 13,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 13,
        "startColumnNumber" : 18,
        "endLineNumber" : 13,
        "endColumnNumber" : 34
      },
      "nodeContext" : "(byte)(b1 << 1)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 13,
        "startColumnNumber" : 13,
        "endLineNumber" : 13,
        "endColumnNumber" : 34
      },
      "nodeContext" : "b2=(byte)(b1 << 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 35
      },
      "nodeContext" : "byte b2=(byte)(b1 << 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 11,
        "startColumnNumber" : 60,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte b1=100;\n  byte b2=(byte)(b1 << 1);\n  assertEquals(-56,b2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 10,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenDoublingALargeByteNumber_thenOverflow(){\n  byte b1=100;\n  byte b2=(byte)(b1 << 1);\n  assertEquals(-56,b2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 28,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 35
      },
      "nodeContext" : "byte b2=(byte)(b1 << 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 13,
    "startColumnNumber" : 25,
    "endLineNumber" : 13,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}