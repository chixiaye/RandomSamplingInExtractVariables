{
  "id" : 72,
  "expression" : "Customer::hasOverThousandPoints",
  "projectName" : "eugenp@tutorials",
  "commitID" : "be16616bb82749212e259b4d0e44d3f28601a9f4",
  "filePath" : "java-streams/src/test/java/com/baeldung/stream/filter/StreamFilterUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Customer::hasOverThousandPoints",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 84,
      "startColumnNumber" : 18,
      "endLineNumber" : 84,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 79,
        "startColumnNumber" : 56,
        "endLineNumber" : 84,
        "endColumnNumber" : 50
      },
      "nodeContext" : "customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 79,
        "startColumnNumber" : 56,
        "endLineNumber" : 85,
        "endColumnNumber" : 39
      },
      "nodeContext" : "customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 79,
        "startColumnNumber" : 23,
        "endLineNumber" : 85,
        "endColumnNumber" : 39
      },
      "nodeContext" : "customersWithMoreThan100Points=customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 40
      },
      "nodeContext" : "List<Customer> customersWithMoreThan100Points=customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 73,
        "startColumnNumber" : 84,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<Customer> john=Optional.of(new Customer(\"John P.\",15));\n  Optional<Customer> sarah=Optional.of(new Customer(\"Sarah M.\",200));\n  Optional<Customer> mary=Optional.of(new Customer(\"Mary T.\",300));\n  List<Optional<Customer>> customers=Arrays.asList(john,sarah,Optional.empty(),mary,Optional.empty());\n  List<Customer> customersWithMoreThan100Points=customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints).collect(Collectors.toList());\n  assertThat(customersWithMoreThan100Points).hasSize(2);\n  assertThat(customersWithMoreThan100Points).contains(sarah.get(),mary.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenListOfCustomersWithOptional_whenFilterBy100Points_thenGetTwo(){\n  Optional<Customer> john=Optional.of(new Customer(\"John P.\",15));\n  Optional<Customer> sarah=Optional.of(new Customer(\"Sarah M.\",200));\n  Optional<Customer> mary=Optional.of(new Customer(\"Mary T.\",300));\n  List<Optional<Customer>> customers=Arrays.asList(john,sarah,Optional.empty(),mary,Optional.empty());\n  List<Customer> customersWithMoreThan100Points=customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints).collect(Collectors.toList());\n  assertThat(customersWithMoreThan100Points).hasSize(2);\n  assertThat(customersWithMoreThan100Points).contains(sarah.get(),mary.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 79,
        "startColumnNumber" : 56,
        "endLineNumber" : 84,
        "endColumnNumber" : 50
      },
      "nodeContext" : "customers.stream().flatMap(c -> c.map(Stream::of).orElseGet(Stream::empty)).filter(Customer::hasOverThousandPoints)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Predicate<? super com.baeldung.stream.filter.Customer>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 84,
    "startColumnNumber" : 18,
    "endLineNumber" : 84,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}