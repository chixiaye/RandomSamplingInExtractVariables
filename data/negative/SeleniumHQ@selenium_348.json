{
  "id" : 348,
  "expression" : "\"testInt\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/remote/tracing/opentelemetry/TracerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"testInt\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 423,
      "startColumnNumber" : 19,
      "endLineNumber" : 423,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 423,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 33
      },
      "nodeContext" : "attributes.put(\"testInt\",10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 423,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 34
      },
      "nodeContext" : "attributes.put(\"testInt\",10);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 414,
        "startColumnNumber" : 62,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<SpanData> allSpans=new ArrayList<>();\n  Tracer tracer=createTracer(allSpans);\n  String event=\"Test event\";\n  String[] stringArray=new String[]{\"Hey\",\"Hello\"};\n  boolean[] booleanArray=new boolean[]{true,false};\n  AttributesBuilder attributes=Attributes.builder();\n  attributes.put(\"testFloat\",5.5f);\n  attributes.put(\"testInt\",10);\n  attributes.put(\"testStringArray\",stringArray);\n  attributes.put(\"testBooleanArray\",booleanArray);\n  try (Span span=tracer.getCurrentContext().createSpan(\"parent\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n    attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n    attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n    attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n    span.addEvent(event,attributeMap);\n  }\n   assertThat(allSpans).hasSize(1);\n  SpanData spanData=allSpans.get(0);\n  assertThat(spanData.getEvents()).hasSize(1);\n  List<SpanData.Event> timedEvents=spanData.getEvents();\n  assertThat(timedEvents).element(0).extracting(SpanData.Event::getName).isEqualTo(event);\n  assertThat(timedEvents.get(0).getAttributes()).isEqualTo(attributes.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 413,
        "startColumnNumber" : 2,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void canCreateASpanEventWithMultipleAttributeTypes(){\n  List<SpanData> allSpans=new ArrayList<>();\n  Tracer tracer=createTracer(allSpans);\n  String event=\"Test event\";\n  String[] stringArray=new String[]{\"Hey\",\"Hello\"};\n  boolean[] booleanArray=new boolean[]{true,false};\n  AttributesBuilder attributes=Attributes.builder();\n  attributes.put(\"testFloat\",5.5f);\n  attributes.put(\"testInt\",10);\n  attributes.put(\"testStringArray\",stringArray);\n  attributes.put(\"testBooleanArray\",booleanArray);\n  try (Span span=tracer.getCurrentContext().createSpan(\"parent\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n    attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n    attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n    attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n    span.addEvent(event,attributeMap);\n  }\n   assertThat(allSpans).hasSize(1);\n  SpanData spanData=allSpans.get(0);\n  assertThat(spanData.getEvents()).hasSize(1);\n  List<SpanData.Event> timedEvents=spanData.getEvents();\n  assertThat(timedEvents).element(0).extracting(SpanData.Event::getName).isEqualTo(event);\n  assertThat(timedEvents.get(0).getAttributes()).isEqualTo(attributes.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 423,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 34
      },
      "nodeContext" : "attributes.put(\"testInt\",10);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"testInt\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 431,
      "startColumnNumber" : 23,
      "endLineNumber" : 431,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 431,
        "startColumnNumber" : 6,
        "endLineNumber" : 431,
        "endColumnNumber" : 62
      },
      "nodeContext" : "attributeMap.put(\"testInt\",EventAttribute.setValue(10))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 431,
        "startColumnNumber" : 6,
        "endLineNumber" : 431,
        "endColumnNumber" : 63
      },
      "nodeContext" : "attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 427,
        "startColumnNumber" : 70,
        "endLineNumber" : 436,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n  attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n  attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n  attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n  span.addEvent(event,attributeMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 427,
        "startColumnNumber" : 4,
        "endLineNumber" : 436,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Span span=tracer.getCurrentContext().createSpan(\"parent\")){\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n  attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n  attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n  attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n  span.addEvent(event,attributeMap);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 414,
        "startColumnNumber" : 62,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<SpanData> allSpans=new ArrayList<>();\n  Tracer tracer=createTracer(allSpans);\n  String event=\"Test event\";\n  String[] stringArray=new String[]{\"Hey\",\"Hello\"};\n  boolean[] booleanArray=new boolean[]{true,false};\n  AttributesBuilder attributes=Attributes.builder();\n  attributes.put(\"testFloat\",5.5f);\n  attributes.put(\"testInt\",10);\n  attributes.put(\"testStringArray\",stringArray);\n  attributes.put(\"testBooleanArray\",booleanArray);\n  try (Span span=tracer.getCurrentContext().createSpan(\"parent\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n    attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n    attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n    attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n    span.addEvent(event,attributeMap);\n  }\n   assertThat(allSpans).hasSize(1);\n  SpanData spanData=allSpans.get(0);\n  assertThat(spanData.getEvents()).hasSize(1);\n  List<SpanData.Event> timedEvents=spanData.getEvents();\n  assertThat(timedEvents).element(0).extracting(SpanData.Event::getName).isEqualTo(event);\n  assertThat(timedEvents.get(0).getAttributes()).isEqualTo(attributes.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 413,
        "startColumnNumber" : 2,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void canCreateASpanEventWithMultipleAttributeTypes(){\n  List<SpanData> allSpans=new ArrayList<>();\n  Tracer tracer=createTracer(allSpans);\n  String event=\"Test event\";\n  String[] stringArray=new String[]{\"Hey\",\"Hello\"};\n  boolean[] booleanArray=new boolean[]{true,false};\n  AttributesBuilder attributes=Attributes.builder();\n  attributes.put(\"testFloat\",5.5f);\n  attributes.put(\"testInt\",10);\n  attributes.put(\"testStringArray\",stringArray);\n  attributes.put(\"testBooleanArray\",booleanArray);\n  try (Span span=tracer.getCurrentContext().createSpan(\"parent\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(\"testFloat\",EventAttribute.setValue(5.5f));\n    attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n    attributeMap.put(\"testStringArray\",EventAttribute.setValue(stringArray));\n    attributeMap.put(\"testBooleanArray\",EventAttribute.setValue(booleanArray));\n    span.addEvent(event,attributeMap);\n  }\n   assertThat(allSpans).hasSize(1);\n  SpanData spanData=allSpans.get(0);\n  assertThat(spanData.getEvents()).hasSize(1);\n  List<SpanData.Event> timedEvents=spanData.getEvents();\n  assertThat(timedEvents).element(0).extracting(SpanData.Event::getName).isEqualTo(event);\n  assertThat(timedEvents.get(0).getAttributes()).isEqualTo(attributes.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 431,
        "startColumnNumber" : 6,
        "endLineNumber" : 431,
        "endColumnNumber" : 63
      },
      "nodeContext" : "attributeMap.put(\"testInt\",EventAttribute.setValue(10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 423,
    "startColumnNumber" : 19,
    "endLineNumber" : 423,
    "endColumnNumber" : 28
  }, {
    "charLength" : 9,
    "startLineNumber" : 431,
    "startColumnNumber" : 23,
    "endLineNumber" : 431,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}