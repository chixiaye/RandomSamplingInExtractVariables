{
  "id" : 517,
  "expression" : "3",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableScanTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 38,
      "startColumnNumber" : 59,
      "endLineNumber" : 38,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 38,
        "startColumnNumber" : 39,
        "endLineNumber" : 38,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Flowable.just(1,2,3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 26,
        "endLineNumber" : 38,
        "endColumnNumber" : 61
      },
      "nodeContext" : "observable=Flowable.just(1,2,3)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Flowable<Integer> observable=Flowable.just(1,2,3);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 35,
        "startColumnNumber" : 51,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<String> observer=TestHelper.mockSubscriber();\n  Flowable<Integer> observable=Flowable.just(1,2,3);\n  Flowable<String> m=observable.scan(\"\",new BiFunction<String,Integer,String>(){\n    @Override public String apply(    String s,    Integer n){\n      return s + n.toString();\n    }\n  }\n);\n  m.subscribe(observer);\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,times(1)).onNext(\"\");\n  verify(observer,times(1)).onNext(\"1\");\n  verify(observer,times(1)).onNext(\"12\");\n  verify(observer,times(1)).onNext(\"123\");\n  verify(observer,times(4)).onNext(anyString());\n  verify(observer,times(1)).onComplete();\n  verify(observer,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testScanIntegersWithInitialValue(){\n  Subscriber<String> observer=TestHelper.mockSubscriber();\n  Flowable<Integer> observable=Flowable.just(1,2,3);\n  Flowable<String> m=observable.scan(\"\",new BiFunction<String,Integer,String>(){\n    @Override public String apply(    String s,    Integer n){\n      return s + n.toString();\n    }\n  }\n);\n  m.subscribe(observer);\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,times(1)).onNext(\"\");\n  verify(observer,times(1)).onNext(\"1\");\n  verify(observer,times(1)).onNext(\"12\");\n  verify(observer,times(1)).onNext(\"123\");\n  verify(observer,times(4)).onNext(anyString());\n  verify(observer,times(1)).onComplete();\n  verify(observer,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Flowable<Integer> observable=Flowable.just(1,2,3);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 38,
    "startColumnNumber" : 59,
    "endLineNumber" : 38,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}