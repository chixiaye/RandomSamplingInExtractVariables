{
  "id" : 2,
  "expression" : "line.indexOf(' ',keyBegin)",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/main/java/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "line.indexOf(' ',keyBegin)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 293,
      "startColumnNumber" : 20,
      "endLineNumber" : 293,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 293,
        "startColumnNumber" : 6,
        "endLineNumber" : 293,
        "endColumnNumber" : 47
      },
      "nodeContext" : "secondSpace=line.indexOf(' ',keyBegin)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 293,
        "startColumnNumber" : 2,
        "endLineNumber" : 293,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int secondSpace=line.indexOf(' ',keyBegin);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 286,
        "startColumnNumber" : 62,
        "endLineNumber" : 323,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1295,
        "startLineNumber" : 286,
        "startColumnNumber" : 1,
        "endLineNumber" : 323,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 293,
        "startColumnNumber" : 2,
        "endLineNumber" : 293,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int secondSpace=line.indexOf(' ',keyBegin);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 293,
    "startColumnNumber" : 20,
    "endLineNumber" : 293,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}