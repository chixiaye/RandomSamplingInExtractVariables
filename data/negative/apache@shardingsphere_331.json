{
  "id" : 331,
  "expression" : "0",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/MySQLBinlogRowsEventPacketTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 69,
      "endLineNumber" : 84,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 71
      },
      "nodeContext" : "actual.getColumnsPresentBitmap().isNullParameter(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 78,
        "startColumnNumber" : 55,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertReadWriteRowV1WithoutNullValue(){\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 40,
      "endLineNumber" : 87,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 87,
        "startColumnNumber" : 19,
        "endLineNumber" : 87,
        "endColumnNumber" : 42
      },
      "nodeContext" : "actual.getRows().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 87,
        "startColumnNumber" : 19,
        "endLineNumber" : 87,
        "endColumnNumber" : 45
      },
      "nodeContext" : "actual.getRows().get(0)[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 78,
        "startColumnNumber" : 55,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertReadWriteRowV1WithoutNullValue(){\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 43,
      "endLineNumber" : 87,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 87,
        "startColumnNumber" : 19,
        "endLineNumber" : 87,
        "endColumnNumber" : 45
      },
      "nodeContext" : "actual.getRows().get(0)[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 78,
        "startColumnNumber" : 55,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertReadWriteRowV1WithoutNullValue(){\n  when(binlogEventHeader.getEventType()).thenReturn(MySQLBinlogEventType.WRITE_ROWS_EVENTv1.getValue());\n  when(payload.readInt8()).thenReturn(Long.MAX_VALUE);\n  MySQLBinlogRowsEventPacket actual=new MySQLBinlogRowsEventPacket(binlogEventHeader,payload);\n  actual.readRows(tableMapEventPacket,payload);\n  assertBinlogRowsEventV1BeforeRows(actual);\n  assertFalse(actual.getColumnsPresentBitmap().isNullParameter(0));\n  assertNull(actual.getColumnsPresentBitmap2());\n  assertThat(actual.getRows().size(),is(1));\n  assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n  assertTrue(actual.getRows2().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(actual.getRows().get(0)[0],is(Long.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 69,
    "endLineNumber" : 84,
    "endColumnNumber" : 70
  }, {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 40,
    "endLineNumber" : 87,
    "endColumnNumber" : 41
  }, {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 43,
    "endLineNumber" : 87,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  } ]
}