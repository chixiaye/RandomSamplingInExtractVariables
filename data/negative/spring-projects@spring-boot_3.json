{
  "id" : 3,
  "expression" : "Void.TYPE",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Void.TYPE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 143,
      "startColumnNumber" : 46,
      "endLineNumber" : 143,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 134,
        "startColumnNumber" : 7,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n  Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n  assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n  assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n  assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n  assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n  assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 134,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n  Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n  assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n  assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n  assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n  assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n  assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n}\n catch (Exception ex) {\n  throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 132,
        "startColumnNumber" : 42,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectName objectName=registerEndpoint(discoverer,\"foo\");\n  try {\n    MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n    Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n    assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n    assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n    assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n    assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n    assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n  }\n catch (  Exception ex) {\n    throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 132,
        "startColumnNumber" : 26,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "(discoverer) -> {\n  ObjectName objectName=registerEndpoint(discoverer,\"foo\");\n  try {\n    MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n    Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n    assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n    assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n    assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n    assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n    assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n  }\n catch (  Exception ex) {\n    throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<java.lang.Void>"
  }, {
    "nodeContext" : "Void.TYPE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 146,
      "startColumnNumber" : 49,
      "endLineNumber" : 146,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 134,
        "startColumnNumber" : 7,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n  Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n  assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n  assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n  assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n  assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n  assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 134,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n  Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n  assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n  assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n  assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n  assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n  assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n}\n catch (Exception ex) {\n  throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 132,
        "startColumnNumber" : 42,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectName objectName=registerEndpoint(discoverer,\"foo\");\n  try {\n    MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n    Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n    assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n    assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n    assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n    assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n    assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n  }\n catch (  Exception ex) {\n    throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 132,
        "startColumnNumber" : 26,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "(discoverer) -> {\n  ObjectName objectName=registerEndpoint(discoverer,\"foo\");\n  try {\n    MBeanInfo mBeanInfo=this.server.getMBeanInfo(objectName);\n    Map<String,MBeanOperationInfo> operations=mapOperations(mBeanInfo);\n    assertThat(operations).containsOnlyKeys(\"getAll\",\"getOne\",\"update\",\"deleteOne\");\n    assertOperation(operations.get(\"getAll\"),String.class,MBeanOperationInfo.INFO,new Class<?>[0]);\n    assertOperation(operations.get(\"getOne\"),String.class,MBeanOperationInfo.INFO,new Class<?>[]{String.class});\n    assertOperation(operations.get(\"update\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class,String.class});\n    assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class});\n  }\n catch (  Exception ex) {\n    throw new AssertionError(\"Failed to retrieve MBeanInfo of FooEndpoint\",ex);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertOperation(operations.get(\"deleteOne\"),Void.TYPE,MBeanOperationInfo.ACTION,new Class<?>[]{String.class})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 143,
    "startColumnNumber" : 46,
    "endLineNumber" : 143,
    "endColumnNumber" : 55
  }, {
    "charLength" : 9,
    "startLineNumber" : 146,
    "startColumnNumber" : 49,
    "endLineNumber" : 146,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}