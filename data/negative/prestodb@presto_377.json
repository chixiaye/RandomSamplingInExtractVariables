{
  "id" : 377,
  "expression" : "PlanNodeStatsEstimate.unknown()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/cost/SpatialJoinStatsRule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PlanNodeStatsEstimate.unknown()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 58,
      "startColumnNumber" : 35,
      "endLineNumber" : 58,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 58,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Optional.of(PlanNodeStatsEstimate.unknown())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return Optional.of(PlanNodeStatsEstimate.unknown());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (node.getType()) {\ncase INNER:  if (isExpression(node.getFilter())) {\n    return Optional.of(statsCalculator.filterStats(crossJoinStats,castToExpression(node.getFilter()),session,types));\n  }\n else {\n    return Optional.of(statsCalculator.filterStats(crossJoinStats,node.getFilter(),session));\n  }\ncase LEFT:return Optional.of(PlanNodeStatsEstimate.unknown());\ndefault:throw new IllegalArgumentException(\"Unknown spatial join type: \" + node.getType());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 905,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PlanNodeStatsEstimate leftStats=sourceStats.getStats(node.getLeft());\n  PlanNodeStatsEstimate rightStats=sourceStats.getStats(node.getRight());\n  PlanNodeStatsEstimate crossJoinStats=crossJoinStats(node,leftStats,rightStats);\nswitch (node.getType()) {\ncase INNER:    if (isExpression(node.getFilter())) {\n      return Optional.of(statsCalculator.filterStats(crossJoinStats,castToExpression(node.getFilter()),session,types));\n    }\n else {\n      return Optional.of(statsCalculator.filterStats(crossJoinStats,node.getFilter(),session));\n    }\ncase LEFT:  return Optional.of(PlanNodeStatsEstimate.unknown());\ndefault:throw new IllegalArgumentException(\"Unknown spatial join type: \" + node.getType());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Optional<PlanNodeStatsEstimate> doCalculate(SpatialJoinNode node,StatsProvider sourceStats,Lookup lookup,Session session,TypeProvider types){\n  PlanNodeStatsEstimate leftStats=sourceStats.getStats(node.getLeft());\n  PlanNodeStatsEstimate rightStats=sourceStats.getStats(node.getRight());\n  PlanNodeStatsEstimate crossJoinStats=crossJoinStats(node,leftStats,rightStats);\nswitch (node.getType()) {\ncase INNER:    if (isExpression(node.getFilter())) {\n      return Optional.of(statsCalculator.filterStats(crossJoinStats,castToExpression(node.getFilter()),session,types));\n    }\n else {\n      return Optional.of(statsCalculator.filterStats(crossJoinStats,node.getFilter(),session));\n    }\ncase LEFT:  return Optional.of(PlanNodeStatsEstimate.unknown());\ndefault:throw new IllegalArgumentException(\"Unknown spatial join type: \" + node.getType());\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return Optional.of(PlanNodeStatsEstimate.unknown());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.cost.PlanNodeStatsEstimate"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 58,
    "startColumnNumber" : 35,
    "endLineNumber" : 58,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}