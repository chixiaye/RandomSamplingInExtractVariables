{
  "id" : 190,
  "expression" : "callExpression.getArguments().stream()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/util/SpatialJoinUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "callExpression.getArguments().stream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 134,
      "startColumnNumber" : 65,
      "endLineNumber" : 134,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 134,
        "startColumnNumber" : 65,
        "endLineNumber" : 134,
        "endColumnNumber" : 131
      },
      "nodeContext" : "callExpression.getArguments().stream().map(RowExpression::getType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 134,
        "startColumnNumber" : 65,
        "endLineNumber" : 134,
        "endColumnNumber" : 158
      },
      "nodeContext" : "callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 134,
        "startColumnNumber" : 55,
        "endLineNumber" : 134,
        "endColumnNumber" : 159
      },
      "nodeContext" : "fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 134,
        "startColumnNumber" : 36,
        "endLineNumber" : 134,
        "endColumnNumber" : 159
      },
      "nodeContext" : "typeProviderList=fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 160
      },
      "nodeContext" : "List<TypeSignatureProvider> typeProviderList=fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FunctionMetadata callExpressionMetadata=functionAndTypeManager.getFunctionMetadata(callExpression.getFunctionHandle());\n  checkArgument(callExpressionMetadata.getOperatorType().isPresent());\n  OperatorType operatorType=flip(callExpressionMetadata.getOperatorType().get());\n  List<TypeSignatureProvider> typeProviderList=fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()));\n  checkArgument(typeProviderList.size() == 2,\"Expected there to be only two arguments in type provider\");\n  return functionAndTypeManager.resolveOperator(operatorType,ImmutableList.of(typeProviderList.get(1),typeProviderList.get(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static FunctionHandle getFlippedFunctionHandle(CallExpression callExpression,FunctionAndTypeManager functionAndTypeManager){\n  FunctionMetadata callExpressionMetadata=functionAndTypeManager.getFunctionMetadata(callExpression.getFunctionHandle());\n  checkArgument(callExpressionMetadata.getOperatorType().isPresent());\n  OperatorType operatorType=flip(callExpressionMetadata.getOperatorType().get());\n  List<TypeSignatureProvider> typeProviderList=fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()));\n  checkArgument(typeProviderList.size() == 2,\"Expected there to be only two arguments in type provider\");\n  return functionAndTypeManager.resolveOperator(operatorType,ImmutableList.of(typeProviderList.get(1),typeProviderList.get(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 160
      },
      "nodeContext" : "List<TypeSignatureProvider> typeProviderList=fromTypes(callExpression.getArguments().stream().map(RowExpression::getType).collect(toImmutableList()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "java.util.stream.Stream<com.facebook.presto.spi.relation.RowExpression>"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 134,
    "startColumnNumber" : 65,
    "endLineNumber" : 134,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ ]
}