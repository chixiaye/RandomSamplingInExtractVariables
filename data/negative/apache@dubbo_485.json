{
  "id" : 485,
  "expression" : "(T)converter.convert(source,multiValueType,elementType)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/convert/multiple/MultiValueConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(T)converter.convert(source,multiValueType,elementType)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 58,
      "startLineNumber" : 88,
      "startColumnNumber" : 19,
      "endLineNumber" : 88,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "return (T)converter.convert(source,multiValueType,elementType);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 87,
        "startColumnNumber" : 31,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return (T)converter.convert(source,multiValueType,elementType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (converter != null) {\n  return (T)converter.convert(source,multiValueType,elementType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 84,
        "startColumnNumber" : 97,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> sourceType=source.getClass();\n  MultiValueConverter converter=find(sourceType,multiValueType);\n  if (converter != null) {\n    return (T)converter.convert(source,multiValueType,elementType);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static <T>T convertIfPossible(Object source,Class<?> multiValueType,Class<?> elementType){\n  Class<?> sourceType=source.getClass();\n  MultiValueConverter converter=find(sourceType,multiValueType);\n  if (converter != null) {\n    return (T)converter.convert(source,multiValueType,elementType);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "return (T)converter.convert(source,multiValueType,elementType);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 58,
    "startLineNumber" : 88,
    "startColumnNumber" : 19,
    "endLineNumber" : 88,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}