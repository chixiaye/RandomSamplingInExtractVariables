{
  "id" : 197,
  "expression" : "collection",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-8/src/main/java/com/baeldung/nullsafecollectionstreams/NullSafeCollectionStreamsUsingCommonsEmptyIfNull.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "collection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 17,
      "startColumnNumber" : 27,
      "endLineNumber" : 17,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 17,
        "startColumnNumber" : 15,
        "endLineNumber" : 17,
        "endColumnNumber" : 38
      },
      "nodeContext" : "emptyIfNull(collection)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 17,
        "startColumnNumber" : 15,
        "endLineNumber" : 17,
        "endColumnNumber" : 47
      },
      "nodeContext" : "emptyIfNull(collection).stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return emptyIfNull(collection).stream();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 16,
        "startColumnNumber" : 76,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return emptyIfNull(collection).stream();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method shows how to make a null safe stream from a collection through the use of  emptyIfNull() method from Apache Commons CollectionUtils library\n * @param collection The collection that is to be converted into a stream\n * @return The stream that has been created from the collection or an empty stream if the collection is null\n */\npublic Stream<String> collectionAsStream(Collection<String> collection){\n  return emptyIfNull(collection).stream();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 23,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return emptyIfNull(collection).stream();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 17,
    "startColumnNumber" : 27,
    "endLineNumber" : 17,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}