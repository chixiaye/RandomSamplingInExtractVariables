{
  "id" : 128,
  "expression" : "header.channels",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/MpegAudioReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "header.channels",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 185,
      "startColumnNumber" : 65,
      "endLineNumber" : 185,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 184,
        "startColumnNumber" : 22,
        "endLineNumber" : 186,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 184,
        "startColumnNumber" : 13,
        "endLineNumber" : 186,
        "endColumnNumber" : 34
      },
      "nodeContext" : "format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 184,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Format format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 182,
        "startColumnNumber" : 26,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  frameDurationUs=(C.MICROS_PER_SECOND * header.samplesPerFrame) / header.sampleRate;\n  Format format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language);\n  output.format(format);\n  hasOutputFormat=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 182,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!hasOutputFormat) {\n  frameDurationUs=(C.MICROS_PER_SECOND * header.samplesPerFrame) / header.sampleRate;\n  Format format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language);\n  output.format(format);\n  hasOutputFormat=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 163,
        "startColumnNumber" : 61,
        "endLineNumber" : 194,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bytesToRead=Math.min(source.bytesLeft(),HEADER_SIZE - frameBytesRead);\n  source.readBytes(headerScratch.data,frameBytesRead,bytesToRead);\n  frameBytesRead+=bytesToRead;\n  if (frameBytesRead < HEADER_SIZE) {\n    return;\n  }\n  headerScratch.setPosition(0);\n  boolean parsedHeader=MpegAudioHeader.populateHeader(headerScratch.readInt(),header);\n  if (!parsedHeader) {\n    frameBytesRead=0;\n    state=STATE_READING_HEADER;\n    return;\n  }\n  frameSize=header.frameSize;\n  if (!hasOutputFormat) {\n    frameDurationUs=(C.MICROS_PER_SECOND * header.samplesPerFrame) / header.sampleRate;\n    Format format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language);\n    output.format(format);\n    hasOutputFormat=true;\n  }\n  headerScratch.setPosition(0);\n  output.sampleData(headerScratch,HEADER_SIZE);\n  state=STATE_READING_FRAME;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2010,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 194,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Attempts to read the remaining two bytes of the frame header. <p> If a frame header is read in full then the state is changed to  {@link #STATE_READING_FRAME}, the media format is output if this has not previously occurred, the four header bytes are output as sample data, and the position of the source is advanced to the byte that immediately follows the header. <p> If a frame header is read in full but cannot be parsed then the state is changed to {@link #STATE_READING_HEADER}. <p> If a frame header is not read in full then the position of the source is advanced to the limit, and the method should be called again with the next source to continue the read.\n * @param source The source from which to read.\n */\nprivate void readHeaderRemainder(ParsableByteArray source){\n  int bytesToRead=Math.min(source.bytesLeft(),HEADER_SIZE - frameBytesRead);\n  source.readBytes(headerScratch.data,frameBytesRead,bytesToRead);\n  frameBytesRead+=bytesToRead;\n  if (frameBytesRead < HEADER_SIZE) {\n    return;\n  }\n  headerScratch.setPosition(0);\n  boolean parsedHeader=MpegAudioHeader.populateHeader(headerScratch.readInt(),header);\n  if (!parsedHeader) {\n    frameBytesRead=0;\n    state=STATE_READING_HEADER;\n    return;\n  }\n  frameSize=header.frameSize;\n  if (!hasOutputFormat) {\n    frameDurationUs=(C.MICROS_PER_SECOND * header.samplesPerFrame) / header.sampleRate;\n    Format format=Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language);\n    output.format(format);\n    hasOutputFormat=true;\n  }\n  headerScratch.setPosition(0);\n  output.sampleData(headerScratch,HEADER_SIZE);\n  state=STATE_READING_FRAME;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 184,
        "startColumnNumber" : 22,
        "endLineNumber" : 186,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Format.createAudioSampleFormat(formatId,header.mimeType,null,Format.NO_VALUE,MpegAudioHeader.MAX_FRAME_SIZE_BYTES,header.channels,header.sampleRate,null,null,0,language)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 185,
    "startColumnNumber" : 65,
    "endLineNumber" : 185,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}