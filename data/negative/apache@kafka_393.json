{
  "id" : 393,
  "expression" : "windowedKeyBytes",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/state/internals/CachingWindowStore.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "windowedKeyBytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 114,
      "startColumnNumber" : 42,
      "endLineNumber" : 114,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 114,
        "startColumnNumber" : 42,
        "endLineNumber" : 114,
        "endColumnNumber" : 67
      },
      "nodeContext" : "windowedKeyBytes.window()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 114,
        "startColumnNumber" : 42,
        "endLineNumber" : 114,
        "endColumnNumber" : 75
      },
      "nodeContext" : "windowedKeyBytes.window().start()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 114,
        "endColumnNumber" : 75
      },
      "nodeContext" : "windowStartTimestamp=windowedKeyBytes.window().start()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 76
      },
      "nodeContext" : "final long windowStartTimestamp=windowedKeyBytes.window().start();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 111,
        "startColumnNumber" : 82,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] binaryWindowKey=cacheFunction.key(entry.key()).get();\n  final Windowed<Bytes> windowedKeyBytes=WindowKeySchema.fromStoreBytesKey(binaryWindowKey,windowSize);\n  final long windowStartTimestamp=windowedKeyBytes.window().start();\n  final Bytes binaryKey=windowedKeyBytes.key();\n  if (flushListener != null) {\n    final byte[] rawNewValue=entry.newValue();\n    final byte[] rawOldValue=rawNewValue == null || sendOldValues ? wrapped().fetch(binaryKey,windowStartTimestamp) : null;\n    if (rawNewValue != null || rawOldValue != null) {\n      wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n      final ProcessorRecordContext current=context.recordContext();\n      context.setRecordContext(entry.entry().context());\n      try {\n        flushListener.apply(new Record<>(binaryWindowKey,new Change<>(rawNewValue,sendOldValues ? rawOldValue : null),entry.entry().context().timestamp(),entry.entry().context().headers()));\n      }\n  finally {\n        context.setRecordContext(current);\n      }\n    }\n  }\n else {\n    wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1905,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void putAndMaybeForward(final ThreadCache.DirtyEntry entry,final InternalProcessorContext<?,?> context){\n  final byte[] binaryWindowKey=cacheFunction.key(entry.key()).get();\n  final Windowed<Bytes> windowedKeyBytes=WindowKeySchema.fromStoreBytesKey(binaryWindowKey,windowSize);\n  final long windowStartTimestamp=windowedKeyBytes.window().start();\n  final Bytes binaryKey=windowedKeyBytes.key();\n  if (flushListener != null) {\n    final byte[] rawNewValue=entry.newValue();\n    final byte[] rawOldValue=rawNewValue == null || sendOldValues ? wrapped().fetch(binaryKey,windowStartTimestamp) : null;\n    if (rawNewValue != null || rawOldValue != null) {\n      wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n      final ProcessorRecordContext current=context.recordContext();\n      context.setRecordContext(entry.entry().context());\n      try {\n        flushListener.apply(new Record<>(binaryWindowKey,new Change<>(rawNewValue,sendOldValues ? rawOldValue : null),entry.entry().context().timestamp(),entry.entry().context().headers()));\n      }\n  finally {\n        context.setRecordContext(current);\n      }\n    }\n  }\n else {\n    wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 76
      },
      "nodeContext" : "final long windowStartTimestamp=windowedKeyBytes.window().start();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>"
  }, {
    "nodeContext" : "windowedKeyBytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 115,
      "startColumnNumber" : 32,
      "endLineNumber" : 115,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 115,
        "startColumnNumber" : 32,
        "endLineNumber" : 115,
        "endColumnNumber" : 54
      },
      "nodeContext" : "windowedKeyBytes.key()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 54
      },
      "nodeContext" : "binaryKey=windowedKeyBytes.key()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 55
      },
      "nodeContext" : "final Bytes binaryKey=windowedKeyBytes.key();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 111,
        "startColumnNumber" : 82,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] binaryWindowKey=cacheFunction.key(entry.key()).get();\n  final Windowed<Bytes> windowedKeyBytes=WindowKeySchema.fromStoreBytesKey(binaryWindowKey,windowSize);\n  final long windowStartTimestamp=windowedKeyBytes.window().start();\n  final Bytes binaryKey=windowedKeyBytes.key();\n  if (flushListener != null) {\n    final byte[] rawNewValue=entry.newValue();\n    final byte[] rawOldValue=rawNewValue == null || sendOldValues ? wrapped().fetch(binaryKey,windowStartTimestamp) : null;\n    if (rawNewValue != null || rawOldValue != null) {\n      wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n      final ProcessorRecordContext current=context.recordContext();\n      context.setRecordContext(entry.entry().context());\n      try {\n        flushListener.apply(new Record<>(binaryWindowKey,new Change<>(rawNewValue,sendOldValues ? rawOldValue : null),entry.entry().context().timestamp(),entry.entry().context().headers()));\n      }\n  finally {\n        context.setRecordContext(current);\n      }\n    }\n  }\n else {\n    wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1905,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void putAndMaybeForward(final ThreadCache.DirtyEntry entry,final InternalProcessorContext<?,?> context){\n  final byte[] binaryWindowKey=cacheFunction.key(entry.key()).get();\n  final Windowed<Bytes> windowedKeyBytes=WindowKeySchema.fromStoreBytesKey(binaryWindowKey,windowSize);\n  final long windowStartTimestamp=windowedKeyBytes.window().start();\n  final Bytes binaryKey=windowedKeyBytes.key();\n  if (flushListener != null) {\n    final byte[] rawNewValue=entry.newValue();\n    final byte[] rawOldValue=rawNewValue == null || sendOldValues ? wrapped().fetch(binaryKey,windowStartTimestamp) : null;\n    if (rawNewValue != null || rawOldValue != null) {\n      wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n      final ProcessorRecordContext current=context.recordContext();\n      context.setRecordContext(entry.entry().context());\n      try {\n        flushListener.apply(new Record<>(binaryWindowKey,new Change<>(rawNewValue,sendOldValues ? rawOldValue : null),entry.entry().context().timestamp(),entry.entry().context().headers()));\n      }\n  finally {\n        context.setRecordContext(current);\n      }\n    }\n  }\n else {\n    wrapped().put(binaryKey,entry.newValue(),windowStartTimestamp);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 55
      },
      "nodeContext" : "final Bytes binaryKey=windowedKeyBytes.key();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 114,
    "startColumnNumber" : 42,
    "endLineNumber" : 114,
    "endColumnNumber" : 58
  }, {
    "charLength" : 16,
    "startLineNumber" : 115,
    "startColumnNumber" : 32,
    "endLineNumber" : 115,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}