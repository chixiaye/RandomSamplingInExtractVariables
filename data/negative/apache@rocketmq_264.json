{
  "id" : 264,
  "expression" : "\"\\\\t\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/filter/src/main/java/org/apache/rocketmq/filter/parser/ParseException.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\\\t\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 170,
      "startColumnNumber" : 34,
      "endLineNumber" : 170,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 40
      },
      "nodeContext" : "retval.append(\"\\\\t\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 41
      },
      "nodeContext" : "retval.append(\"\\\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1262,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 198,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (str.charAt(i)) {\ncase 0:  continue;\ncase '\\b':retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1286,
        "startLineNumber" : 162,
        "startColumnNumber" : 47,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (str.charAt(i)) {\ncase 0:    continue;\ncase '\\b':  retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1325,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:    continue;\ncase '\\b':  retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 159,
        "startColumnNumber" : 42,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuffer retval=new StringBuffer();\n  char ch;\n  for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:      continue;\ncase '\\b':    retval.append(\"\\\\b\");\n  continue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\nreturn retval.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1647,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Used to convert raw characters to their escaped version when these raw version cannot be used as part of an ASCII string literal.\n */\nstatic String add_escapes(String str){\n  StringBuffer retval=new StringBuffer();\n  char ch;\n  for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:      continue;\ncase '\\b':    retval.append(\"\\\\b\");\n  continue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\nreturn retval.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 41
      },
      "nodeContext" : "retval.append(\"\\\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 170,
    "startColumnNumber" : 34,
    "endLineNumber" : 170,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}