{
  "id" : 221,
  "expression" : "ChannelOption",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/core/src/test/java/io/seata/core/rpc/netty/TmRpcClientTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 88,
      "startColumnNumber" : 62,
      "endLineNumber" : 88,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 88,
        "startColumnNumber" : 62,
        "endLineNumber" : 88,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ChannelOption.TCP_NODELAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 88,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 88
      },
      "nodeContext" : "options.get(ChannelOption.TCP_NODELAY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 72,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Do connect.\n * @throws Exception the exception\n */\n@Test public void testInit() throws Exception {\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 89,
      "startColumnNumber" : 62,
      "endLineNumber" : 89,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 89,
        "startColumnNumber" : 62,
        "endLineNumber" : 89,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 89,
        "startColumnNumber" : 50,
        "endLineNumber" : 89,
        "endColumnNumber" : 89
      },
      "nodeContext" : "options.get(ChannelOption.SO_KEEPALIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 89,
        "startColumnNumber" : 30,
        "endLineNumber" : 89,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 72,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Do connect.\n * @throws Exception the exception\n */\n@Test public void testInit() throws Exception {\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 90,
      "startColumnNumber" : 51,
      "endLineNumber" : 90,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 90,
        "startColumnNumber" : 51,
        "endLineNumber" : 90,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ChannelOption.CONNECT_TIMEOUT_MILLIS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 90,
        "startColumnNumber" : 39,
        "endLineNumber" : 90,
        "endColumnNumber" : 88
      },
      "nodeContext" : "options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 72,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Do connect.\n * @throws Exception the exception\n */\n@Test public void testInit() throws Exception {\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 91,
      "startColumnNumber" : 62,
      "endLineNumber" : 91,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 91,
        "startColumnNumber" : 62,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 91,
        "startColumnNumber" : 50,
        "endLineNumber" : 91,
        "endColumnNumber" : 89
      },
      "nodeContext" : "options.get(ChannelOption.SO_KEEPALIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 91,
        "startColumnNumber" : 30,
        "endLineNumber" : 91,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 72,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Do connect.\n * @throws Exception the exception\n */\n@Test public void testInit() throws Exception {\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 92,
      "startColumnNumber" : 52,
      "endLineNumber" : 92,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 92,
        "startColumnNumber" : 52,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ChannelOption.SO_RCVBUF",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 92,
        "startColumnNumber" : 40,
        "endLineNumber" : 92,
        "endColumnNumber" : 76
      },
      "nodeContext" : "options.get(ChannelOption.SO_RCVBUF)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 72,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Do connect.\n * @throws Exception the exception\n */\n@Test public void testInit() throws Exception {\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"group A\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Field bootstrapField=getDeclaredField(tmRpcClient,\"bootstrap\");\n  bootstrapField.setAccessible(true);\n  Bootstrap bootstrap=(Bootstrap)bootstrapField.get(tmRpcClient);\n  Assertions.assertNotNull(bootstrap);\n  Field optionsField=getDeclaredField(bootstrap,\"options\");\n  optionsField.setAccessible(true);\n  Map<ChannelOption<?>,Object> options=(Map<ChannelOption<?>,Object>)optionsField.get(bootstrap);\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.TCP_NODELAY)));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(10000,options.get(ChannelOption.CONNECT_TIMEOUT_MILLIS));\n  Assertions.assertTrue(Boolean.TRUE.equals(options.get(ChannelOption.SO_KEEPALIVE)));\n  Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n  Field channelFactoryField=getDeclaredField(bootstrap,\"channelFactory\");\n  channelFactoryField.setAccessible(true);\n  ChannelFactory<? extends Channel> channelFactory=(ChannelFactory<? extends Channel>)channelFactoryField.get(bootstrap);\n  Assertions.assertNotNull(channelFactory);\n  Assertions.assertTrue(channelFactory.newChannel() instanceof NioSocketChannel);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assertions.assertEquals(153600,options.get(ChannelOption.SO_RCVBUF));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 88,
    "startColumnNumber" : 62,
    "endLineNumber" : 88,
    "endColumnNumber" : 75
  }, {
    "charLength" : 13,
    "startLineNumber" : 89,
    "startColumnNumber" : 62,
    "endLineNumber" : 89,
    "endColumnNumber" : 75
  }, {
    "charLength" : 13,
    "startLineNumber" : 90,
    "startColumnNumber" : 51,
    "endLineNumber" : 90,
    "endColumnNumber" : 64
  }, {
    "charLength" : 13,
    "startLineNumber" : 91,
    "startColumnNumber" : 62,
    "endLineNumber" : 91,
    "endColumnNumber" : 75
  }, {
    "charLength" : 13,
    "startLineNumber" : 92,
    "startColumnNumber" : 52,
    "endLineNumber" : 92,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}