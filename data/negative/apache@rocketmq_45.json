{
  "id" : 45,
  "expression" : "Charset.forName(\"UTF-8\")",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/example/src/main/java/org/apache/rocketmq/example/openmessaging/SimpleProducer.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Charset.forName(\"UTF-8\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 43,
      "startColumnNumber" : 103,
      "endLineNumber" : 43,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 43,
        "startColumnNumber" : 77,
        "endLineNumber" : 43,
        "endColumnNumber" : 128
      },
      "nodeContext" : "\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 43,
        "startColumnNumber" : 30,
        "endLineNumber" : 43,
        "endColumnNumber" : 129
      },
      "nodeContext" : "producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 129
      },
      "nodeContext" : "message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n  SendResult sendResult=producer.send(message);\n  System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "Charset.forName(\"UTF-8\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 51,
      "startColumnNumber" : 138,
      "endLineNumber" : 51,
      "endColumnNumber" : 162
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 51,
        "startColumnNumber" : 112,
        "endLineNumber" : 51,
        "endColumnNumber" : 163
      },
      "nodeContext" : "\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 51,
        "startColumnNumber" : 65,
        "endLineNumber" : 51,
        "endColumnNumber" : 164
      },
      "nodeContext" : "producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 51,
        "startColumnNumber" : 46,
        "endLineNumber" : 51,
        "endColumnNumber" : 165
      },
      "nodeContext" : "producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 51,
        "startColumnNumber" : 37,
        "endLineNumber" : 51,
        "endColumnNumber" : 165
      },
      "nodeContext" : "result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n  result.addListener(new FutureListener<SendResult>(){\n    @Override public void operationComplete(    Future<SendResult> future){\n      if (future.getThrowable() != null) {\n        System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n      }\n else {\n        System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n      }\n      countDownLatch.countDown();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "Charset.forName(\"UTF-8\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 66,
      "startColumnNumber" : 105,
      "endLineNumber" : 66,
      "endColumnNumber" : 129
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 66,
        "startColumnNumber" : 79,
        "endLineNumber" : 66,
        "endColumnNumber" : 130
      },
      "nodeContext" : "\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 66,
        "startColumnNumber" : 32,
        "endLineNumber" : 66,
        "endColumnNumber" : 131
      },
      "nodeContext" : "producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 132
      },
      "nodeContext" : "producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 133
      },
      "nodeContext" : "producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n  System.out.printf(\"Send oneway message OK%n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  final MessagingAccessPoint messagingAccessPoint=OMS.getMessagingAccessPoint(\"oms:rocketmq://localhost:9876/default:default\");\n  final Producer producer=messagingAccessPoint.createProducer();\n  messagingAccessPoint.startup();\n  System.out.printf(\"MessagingAccessPoint startup OK%n\");\n  producer.startup();\n  System.out.printf(\"Producer startup OK%n\");\n{\n    Message message=producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\")));\n    SendResult sendResult=producer.send(message);\n    System.out.printf(\"Send async message OK, msgId: %s%n\",sendResult.messageId());\n  }\n  final CountDownLatch countDownLatch=new CountDownLatch(1);\n{\n    final Future<SendResult> result=producer.sendAsync(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    result.addListener(new FutureListener<SendResult>(){\n      @Override public void operationComplete(      Future<SendResult> future){\n        if (future.getThrowable() != null) {\n          System.out.printf(\"Send async message Failed, error: %s%n\",future.getThrowable().getMessage());\n        }\n else {\n          System.out.printf(\"Send async message OK, msgId: %s%n\",future.get().messageId());\n        }\n        countDownLatch.countDown();\n      }\n    }\n);\n  }\n{\n    producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n    System.out.printf(\"Send oneway message OK%n\");\n  }\n  try {\n    countDownLatch.await();\n    Thread.sleep(500);\n  }\n catch (  InterruptedException ignore) {\n  }\n  producer.shutdown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 133
      },
      "nodeContext" : "producer.sendOneway(producer.createBytesMessage(\"OMS_HELLO_TOPIC\",\"OMS_HELLO_BODY\".getBytes(Charset.forName(\"UTF-8\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.nio.charset.Charset"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 43,
    "startColumnNumber" : 103,
    "endLineNumber" : 43,
    "endColumnNumber" : 127
  }, {
    "charLength" : 24,
    "startLineNumber" : 51,
    "startColumnNumber" : 138,
    "endLineNumber" : 51,
    "endColumnNumber" : 162
  }, {
    "charLength" : 24,
    "startLineNumber" : 66,
    "startColumnNumber" : 105,
    "endLineNumber" : 66,
    "endColumnNumber" : 129
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}