{
  "id" : 352,
  "expression" : "\"third\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/instance/src/test/java/org/apache/pulsar/functions/instance/ContextImplTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"third\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 315,
      "startColumnNumber" : 32,
      "endLineNumber" : 315,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 315,
        "startColumnNumber" : 12,
        "endLineNumber" : 315,
        "endColumnNumber" : 43
      },
      "nodeContext" : "context.getConsumer(\"third\",0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 315,
        "startColumnNumber" : 12,
        "endLineNumber" : 315,
        "endColumnNumber" : 44
      },
      "nodeContext" : "context.getConsumer(\"third\",0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 317,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  context.getConsumer(\"third\",0);\n  Assert.fail(\"Expected exception\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 313,
        "startColumnNumber" : 8,
        "endLineNumber" : 319,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  context.getConsumer(\"third\",0);\n  Assert.fail(\"Expected exception\");\n}\n catch (PulsarClientException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 290,
        "startColumnNumber" : 73,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 289,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetConsumerMultiTopic() throws PulsarClientException {\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 315,
        "startColumnNumber" : 12,
        "endLineNumber" : 315,
        "endColumnNumber" : 44
      },
      "nodeContext" : "context.getConsumer(\"third\",0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"third\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 323,
      "startColumnNumber" : 60,
      "endLineNumber" : 323,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 323,
        "startColumnNumber" : 46,
        "endLineNumber" : 323,
        "endColumnNumber" : 68
      },
      "nodeContext" : "TopicName.get(\"third\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 323,
        "startColumnNumber" : 46,
        "endLineNumber" : 323,
        "endColumnNumber" : 79
      },
      "nodeContext" : "TopicName.get(\"third\").toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 80
      },
      "nodeContext" : "when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 81
      },
      "nodeContext" : "when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 290,
        "startColumnNumber" : 73,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 289,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetConsumerMultiTopic() throws PulsarClientException {\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 81
      },
      "nodeContext" : "when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"third\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 326,
      "startColumnNumber" : 49,
      "endLineNumber" : 326,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 326,
        "startColumnNumber" : 29,
        "endLineNumber" : 326,
        "endColumnNumber" : 60
      },
      "nodeContext" : "context.getConsumer(\"third\",0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 326,
        "startColumnNumber" : 8,
        "endLineNumber" : 326,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertNotNull(context.getConsumer(\"third\",0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 326,
        "startColumnNumber" : 8,
        "endLineNumber" : 326,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.assertNotNull(context.getConsumer(\"third\",0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 290,
        "startColumnNumber" : 73,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 289,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetConsumerMultiTopic() throws PulsarClientException {\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 326,
        "startColumnNumber" : 8,
        "endLineNumber" : 326,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.assertNotNull(context.getConsumer(\"third\",0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"third\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 330,
      "startColumnNumber" : 32,
      "endLineNumber" : 330,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 330,
        "startColumnNumber" : 12,
        "endLineNumber" : 330,
        "endColumnNumber" : 43
      },
      "nodeContext" : "context.getConsumer(\"third\",1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 330,
        "startColumnNumber" : 12,
        "endLineNumber" : 330,
        "endColumnNumber" : 44
      },
      "nodeContext" : "context.getConsumer(\"third\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 328,
        "startColumnNumber" : 12,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  context.getConsumer(\"third\",1);\n  Assert.fail(\"Expected exception\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 334,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  context.getConsumer(\"third\",1);\n  Assert.fail(\"Expected exception\");\n}\n catch (PulsarClientException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 290,
        "startColumnNumber" : 73,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 289,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetConsumerMultiTopic() throws PulsarClientException {\n  config.setExposePulsarAdminClientEnabled(false);\n  context=new ContextImpl(config,logger,client,new EnvironmentBasedSecretsProvider(),FunctionCollectorRegistry.getDefaultImplementation(),new String[0],FunctionDetails.ComponentType.FUNCTION,null,new InstanceStateManager(),pulsarAdmin);\n  ConsumerImpl<?> consumer1=Mockito.mock(ConsumerImpl.class);\n  when(consumer1.getTopic()).thenReturn(TopicName.get(\"first\").toString());\n  ConsumerImpl<?> consumer2=Mockito.mock(ConsumerImpl.class);\n  when(consumer2.getTopic()).thenReturn(TopicName.get(\"second\").toString());\n  List<Consumer<?>> consumersList=Lists.newArrayList(consumer1,consumer2);\n  MultiTopicsConsumerImpl mtc=Mockito.mock(MultiTopicsConsumerImpl.class);\n  when(mtc.getConsumers()).thenReturn(consumersList);\n  context.setInputConsumers(Lists.newArrayList(mtc));\n  Assert.assertNotNull(context.getConsumer(\"first\",0));\n  Assert.assertNotNull(context.getConsumer(\"second\",0));\n  try {\n    context.getConsumer(\"third\",0);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n  ConsumerImpl<?> consumer3=Mockito.mock(ConsumerImpl.class);\n  when(consumer3.getTopic()).thenReturn(TopicName.get(\"third\").toString());\n  consumersList.add(consumer3);\n  Assert.assertNotNull(context.getConsumer(\"third\",0));\n  try {\n    context.getConsumer(\"third\",1);\n    Assert.fail(\"Expected exception\");\n  }\n catch (  PulsarClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 330,
        "startColumnNumber" : 12,
        "endLineNumber" : 330,
        "endColumnNumber" : 44
      },
      "nodeContext" : "context.getConsumer(\"third\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 315,
    "startColumnNumber" : 32,
    "endLineNumber" : 315,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 323,
    "startColumnNumber" : 60,
    "endLineNumber" : 323,
    "endColumnNumber" : 67
  }, {
    "charLength" : 7,
    "startLineNumber" : 326,
    "startColumnNumber" : 49,
    "endLineNumber" : 326,
    "endColumnNumber" : 56
  }, {
    "charLength" : 7,
    "startLineNumber" : 330,
    "startColumnNumber" : 32,
    "endLineNumber" : 330,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}