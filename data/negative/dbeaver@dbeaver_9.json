{
  "id" : 9,
  "expression" : "connectionInfo.getServerName()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.athena.ui/src/org/jkiss/dbeaver/ext/athena/ui/views/AthenaConnectionPage.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connectionInfo.getServerName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 106,
      "startColumnNumber" : 37,
      "endLineNumber" : 106,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 106,
        "startColumnNumber" : 17,
        "endLineNumber" : 106,
        "endColumnNumber" : 68
      },
      "nodeContext" : "CommonUtils.isEmpty(connectionInfo.getServerName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 68
      },
      "nodeContext" : "!CommonUtils.isEmpty(connectionInfo.getServerName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n  awsRegionCombo.setText(connectionInfo.getServerName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 101,
        "startColumnNumber" : 36,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  awsRegionCombo.removeAll();\n  for (  AWSRegion region : AWSRegion.values()) {\n    awsRegionCombo.add(region.getId());\n  }\n  if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n    awsRegionCombo.setText(connectionInfo.getServerName());\n  }\n  if (awsRegionCombo.getText().isEmpty()) {\n    awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (awsRegionCombo != null) {\n  awsRegionCombo.removeAll();\n  for (  AWSRegion region : AWSRegion.values()) {\n    awsRegionCombo.add(region.getId());\n  }\n  if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n    awsRegionCombo.setText(connectionInfo.getServerName());\n  }\n  if (awsRegionCombo.getText().isEmpty()) {\n    awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 95,
        "startColumnNumber" : 31,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.loadSettings();\n  DBPConnectionConfiguration connectionInfo=site.getActiveDataSource().getConnectionConfiguration();\n  if (awsRegionCombo != null) {\n    awsRegionCombo.removeAll();\n    for (    AWSRegion region : AWSRegion.values()) {\n      awsRegionCombo.add(region.getId());\n    }\n    if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n      awsRegionCombo.setText(connectionInfo.getServerName());\n    }\n    if (awsRegionCombo.getText().isEmpty()) {\n      awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n    }\n  }\n  if (s3LocationText != null) {\n    String databaseName=connectionInfo.getDatabaseName();\n    if (CommonUtils.isEmpty(databaseName)) {\n      databaseName=\"s3://aws-athena-query-results-\";\n    }\n    s3LocationText.setText(databaseName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void loadSettings(){\n  super.loadSettings();\n  DBPConnectionConfiguration connectionInfo=site.getActiveDataSource().getConnectionConfiguration();\n  if (awsRegionCombo != null) {\n    awsRegionCombo.removeAll();\n    for (    AWSRegion region : AWSRegion.values()) {\n      awsRegionCombo.add(region.getId());\n    }\n    if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n      awsRegionCombo.setText(connectionInfo.getServerName());\n    }\n    if (awsRegionCombo.getText().isEmpty()) {\n      awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n    }\n  }\n  if (s3LocationText != null) {\n    String databaseName=connectionInfo.getDatabaseName();\n    if (CommonUtils.isEmpty(databaseName)) {\n      databaseName=\"s3://aws-athena-query-results-\";\n    }\n    s3LocationText.setText(databaseName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 68
      },
      "nodeContext" : "!CommonUtils.isEmpty(connectionInfo.getServerName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "connectionInfo.getServerName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 107,
      "startColumnNumber" : 39,
      "endLineNumber" : 107,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 107,
        "endColumnNumber" : 70
      },
      "nodeContext" : "awsRegionCombo.setText(connectionInfo.getServerName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "awsRegionCombo.setText(connectionInfo.getServerName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 106,
        "startColumnNumber" : 70,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  awsRegionCombo.setText(connectionInfo.getServerName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n  awsRegionCombo.setText(connectionInfo.getServerName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 101,
        "startColumnNumber" : 36,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  awsRegionCombo.removeAll();\n  for (  AWSRegion region : AWSRegion.values()) {\n    awsRegionCombo.add(region.getId());\n  }\n  if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n    awsRegionCombo.setText(connectionInfo.getServerName());\n  }\n  if (awsRegionCombo.getText().isEmpty()) {\n    awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (awsRegionCombo != null) {\n  awsRegionCombo.removeAll();\n  for (  AWSRegion region : AWSRegion.values()) {\n    awsRegionCombo.add(region.getId());\n  }\n  if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n    awsRegionCombo.setText(connectionInfo.getServerName());\n  }\n  if (awsRegionCombo.getText().isEmpty()) {\n    awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 95,
        "startColumnNumber" : 31,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.loadSettings();\n  DBPConnectionConfiguration connectionInfo=site.getActiveDataSource().getConnectionConfiguration();\n  if (awsRegionCombo != null) {\n    awsRegionCombo.removeAll();\n    for (    AWSRegion region : AWSRegion.values()) {\n      awsRegionCombo.add(region.getId());\n    }\n    if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n      awsRegionCombo.setText(connectionInfo.getServerName());\n    }\n    if (awsRegionCombo.getText().isEmpty()) {\n      awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n    }\n  }\n  if (s3LocationText != null) {\n    String databaseName=connectionInfo.getDatabaseName();\n    if (CommonUtils.isEmpty(databaseName)) {\n      databaseName=\"s3://aws-athena-query-results-\";\n    }\n    s3LocationText.setText(databaseName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void loadSettings(){\n  super.loadSettings();\n  DBPConnectionConfiguration connectionInfo=site.getActiveDataSource().getConnectionConfiguration();\n  if (awsRegionCombo != null) {\n    awsRegionCombo.removeAll();\n    for (    AWSRegion region : AWSRegion.values()) {\n      awsRegionCombo.add(region.getId());\n    }\n    if (!CommonUtils.isEmpty(connectionInfo.getServerName())) {\n      awsRegionCombo.setText(connectionInfo.getServerName());\n    }\n    if (awsRegionCombo.getText().isEmpty()) {\n      awsRegionCombo.setText(AWSRegion.us_west_1.getId());\n    }\n  }\n  if (s3LocationText != null) {\n    String databaseName=connectionInfo.getDatabaseName();\n    if (CommonUtils.isEmpty(databaseName)) {\n      databaseName=\"s3://aws-athena-query-results-\";\n    }\n    s3LocationText.setText(databaseName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "awsRegionCombo.setText(connectionInfo.getServerName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 106,
    "startColumnNumber" : 37,
    "endLineNumber" : 106,
    "endColumnNumber" : 67
  }, {
    "charLength" : 30,
    "startLineNumber" : 107,
    "startColumnNumber" : 39,
    "endLineNumber" : 107,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}