{
  "id" : 794,
  "expression" : "pushMessagesDict",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "9f7b47f5172e5df6143e2adecabc62e1bbff6523",
  "filePath" : "TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pushMessagesDict",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 654,
      "startColumnNumber" : 8,
      "endLineNumber" : 654,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 654,
        "startColumnNumber" : 8,
        "endLineNumber" : 654,
        "endColumnNumber" : 32
      },
      "nodeContext" : "pushMessagesDict.clear()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 654,
        "startColumnNumber" : 8,
        "endLineNumber" : 654,
        "endColumnNumber" : 33
      },
      "nodeContext" : "pushMessagesDict.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2812,
        "startLineNumber" : 647,
        "startColumnNumber" : 216,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3024,
        "startLineNumber" : 647,
        "startColumnNumber" : 4,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void processLoadedUnreadMessages(HashMap<Long,Integer> dialogs,ArrayList<TLRPC.Message> messages,ArrayList<TLRPC.User> users,ArrayList<TLRPC.Chat> chats,ArrayList<TLRPC.EncryptedChat> encryptedChats){\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 403,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 654,
        "startColumnNumber" : 8,
        "endLineNumber" : 654,
        "endColumnNumber" : 33
      },
      "nodeContext" : "pushMessagesDict.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.telegram.android.MessageObject>"
  }, {
    "nodeContext" : "pushMessagesDict",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 676,
      "startColumnNumber" : 20,
      "endLineNumber" : 676,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 676,
        "startColumnNumber" : 20,
        "endLineNumber" : 676,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pushMessagesDict.containsKey(message.id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 676,
        "startColumnNumber" : 16,
        "endLineNumber" : 678,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (pushMessagesDict.containsKey(message.id)) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 675,
        "startColumnNumber" : 51,
        "endLineNumber" : 692,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (pushMessagesDict.containsKey(message.id)) {\n    continue;\n  }\n  MessageObject messageObject=new MessageObject(message,null,0);\n  long dialog_id=messageObject.getDialogId();\n  Boolean value=settingsCache.get(dialog_id);\n  if (value == null) {\n    int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n    value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n    settingsCache.put(dialog_id,value);\n  }\n  if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n    continue;\n  }\n  pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n  pushMessages.add(0,messageObject);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 675,
        "startColumnNumber" : 12,
        "endLineNumber" : 692,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (TLRPC.Message message : messages) {\n  if (pushMessagesDict.containsKey(message.id)) {\n    continue;\n  }\n  MessageObject messageObject=new MessageObject(message,null,0);\n  long dialog_id=messageObject.getDialogId();\n  Boolean value=settingsCache.get(dialog_id);\n  if (value == null) {\n    int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n    value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n    settingsCache.put(dialog_id,value);\n  }\n  if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n    continue;\n  }\n  pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n  pushMessages.add(0,messageObject);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 674,
        "startColumnNumber" : 30,
        "endLineNumber" : 693,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  TLRPC.Message message : messages) {\n    if (pushMessagesDict.containsKey(message.id)) {\n      continue;\n    }\n    MessageObject messageObject=new MessageObject(message,null,0);\n    long dialog_id=messageObject.getDialogId();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n      continue;\n    }\n    pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n    pushMessages.add(0,messageObject);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 674,
        "startColumnNumber" : 8,
        "endLineNumber" : 693,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (messages != null) {\n  for (  TLRPC.Message message : messages) {\n    if (pushMessagesDict.containsKey(message.id)) {\n      continue;\n    }\n    MessageObject messageObject=new MessageObject(message,null,0);\n    long dialog_id=messageObject.getDialogId();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n      continue;\n    }\n    pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n    pushMessages.add(0,messageObject);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2812,
        "startLineNumber" : 647,
        "startColumnNumber" : 216,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3024,
        "startLineNumber" : 647,
        "startColumnNumber" : 4,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void processLoadedUnreadMessages(HashMap<Long,Integer> dialogs,ArrayList<TLRPC.Message> messages,ArrayList<TLRPC.User> users,ArrayList<TLRPC.Chat> chats,ArrayList<TLRPC.EncryptedChat> encryptedChats){\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 403,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 676,
        "startColumnNumber" : 20,
        "endLineNumber" : 676,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pushMessagesDict.containsKey(message.id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.telegram.android.MessageObject>"
  }, {
    "nodeContext" : "pushMessagesDict",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 690,
      "startColumnNumber" : 16,
      "endLineNumber" : 690,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 690,
        "startColumnNumber" : 16,
        "endLineNumber" : 690,
        "endColumnNumber" : 82
      },
      "nodeContext" : "pushMessagesDict.put(messageObject.messageOwner.id,messageObject)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 690,
        "startColumnNumber" : 16,
        "endLineNumber" : 690,
        "endColumnNumber" : 83
      },
      "nodeContext" : "pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 675,
        "startColumnNumber" : 51,
        "endLineNumber" : 692,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (pushMessagesDict.containsKey(message.id)) {\n    continue;\n  }\n  MessageObject messageObject=new MessageObject(message,null,0);\n  long dialog_id=messageObject.getDialogId();\n  Boolean value=settingsCache.get(dialog_id);\n  if (value == null) {\n    int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n    value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n    settingsCache.put(dialog_id,value);\n  }\n  if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n    continue;\n  }\n  pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n  pushMessages.add(0,messageObject);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 675,
        "startColumnNumber" : 12,
        "endLineNumber" : 692,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (TLRPC.Message message : messages) {\n  if (pushMessagesDict.containsKey(message.id)) {\n    continue;\n  }\n  MessageObject messageObject=new MessageObject(message,null,0);\n  long dialog_id=messageObject.getDialogId();\n  Boolean value=settingsCache.get(dialog_id);\n  if (value == null) {\n    int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n    value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n    settingsCache.put(dialog_id,value);\n  }\n  if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n    continue;\n  }\n  pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n  pushMessages.add(0,messageObject);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 674,
        "startColumnNumber" : 30,
        "endLineNumber" : 693,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  TLRPC.Message message : messages) {\n    if (pushMessagesDict.containsKey(message.id)) {\n      continue;\n    }\n    MessageObject messageObject=new MessageObject(message,null,0);\n    long dialog_id=messageObject.getDialogId();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n      continue;\n    }\n    pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n    pushMessages.add(0,messageObject);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 674,
        "startColumnNumber" : 8,
        "endLineNumber" : 693,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (messages != null) {\n  for (  TLRPC.Message message : messages) {\n    if (pushMessagesDict.containsKey(message.id)) {\n      continue;\n    }\n    MessageObject messageObject=new MessageObject(message,null,0);\n    long dialog_id=messageObject.getDialogId();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n      continue;\n    }\n    pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n    pushMessages.add(0,messageObject);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2812,
        "startLineNumber" : 647,
        "startColumnNumber" : 216,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3024,
        "startLineNumber" : 647,
        "startColumnNumber" : 4,
        "endLineNumber" : 703,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void processLoadedUnreadMessages(HashMap<Long,Integer> dialogs,ArrayList<TLRPC.Message> messages,ArrayList<TLRPC.User> users,ArrayList<TLRPC.Chat> chats,ArrayList<TLRPC.EncryptedChat> encryptedChats){\n  MessagesController.getInstance().putUsers(users,true);\n  MessagesController.getInstance().putChats(chats,true);\n  MessagesController.getInstance().putEncryptedChats(encryptedChats,true);\n  pushDialogs.clear();\n  pushMessages.clear();\n  pushMessagesDict.clear();\n  total_unread_count=0;\n  SharedPreferences preferences=ApplicationLoader.applicationContext.getSharedPreferences(\"Notifications\",Context.MODE_PRIVATE);\n  HashMap<Long,Boolean> settingsCache=new HashMap<Long,Boolean>();\n  for (  HashMap.Entry<Long,Integer> entry : dialogs.entrySet()) {\n    long dialog_id=entry.getKey();\n    Boolean value=settingsCache.get(dialog_id);\n    if (value == null) {\n      int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n      value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n      settingsCache.put(dialog_id,value);\n    }\n    if (!value) {\n      continue;\n    }\n    int count=entry.getValue();\n    pushDialogs.put(dialog_id,count);\n    total_unread_count+=count;\n  }\n  if (messages != null) {\n    for (    TLRPC.Message message : messages) {\n      if (pushMessagesDict.containsKey(message.id)) {\n        continue;\n      }\n      MessageObject messageObject=new MessageObject(message,null,0);\n      long dialog_id=messageObject.getDialogId();\n      Boolean value=settingsCache.get(dialog_id);\n      if (value == null) {\n        int notify_override=preferences.getInt(\"notify2_\" + dialog_id,0);\n        value=!(notify_override == 2 || (!preferences.getBoolean(\"EnableAll\",true) || ((int)dialog_id < 0) && !preferences.getBoolean(\"EnableGroup\",true)) && notify_override == 0);\n        settingsCache.put(dialog_id,value);\n      }\n      if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {\n        continue;\n      }\n      pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n      pushMessages.add(0,messageObject);\n    }\n  }\n  if (total_unread_count == 0) {\n    popupMessages.clear();\n    showOrUpdateNotification(false);\n    NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);\n  }\n  if (preferences.getBoolean(\"badgeNumber\",true)) {\n    setBadge(ApplicationLoader.applicationContext,total_unread_count);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 403,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 690,
        "startColumnNumber" : 16,
        "endLineNumber" : 690,
        "endColumnNumber" : 83
      },
      "nodeContext" : "pushMessagesDict.put(messageObject.messageOwner.id,messageObject);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.telegram.android.MessageObject>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 654,
    "startColumnNumber" : 8,
    "endLineNumber" : 654,
    "endColumnNumber" : 24
  }, {
    "charLength" : 16,
    "startLineNumber" : 676,
    "startColumnNumber" : 20,
    "endLineNumber" : 676,
    "endColumnNumber" : 36
  }, {
    "charLength" : 16,
    "startLineNumber" : 690,
    "startColumnNumber" : 16,
    "endLineNumber" : 690,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}