{
  "id" : 74,
  "expression" : "solver.getApspMatrix()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/FloydWarshallSolverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "solver.getApspMatrix()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 72,
      "startColumnNumber" : 22,
      "endLineNumber" : 72,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 44
      },
      "nodeContext" : "soln=solver.getApspMatrix()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "double[][] soln=solver.getApspMatrix();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 807,
        "startLineNumber" : 70,
        "startColumnNumber" : 34,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FloydWarshallSolver solver=new FloydWarshallSolver(matrix1);\n  double[][] soln=solver.getApspMatrix();\n  assertThat(soln[0][0]).isEqualTo(0.0);\n  assertThat(soln[1][0]).isEqualTo(1.0);\n  assertThat(soln[1][1]).isEqualTo(0.0);\n  assertThat(soln[1][2]).isEqualTo(7.0);\n  assertThat(soln[2][0]).isEqualTo(4.0);\n  assertThat(soln[2][1]).isEqualTo(3.0);\n  assertThat(soln[2][2]).isEqualTo(0.0);\n  assertThat(soln[3][0]).isEqualTo(8.0);\n  assertThat(soln[3][1]).isEqualTo(7.0);\n  assertThat(soln[3][2]).isEqualTo(4.0);\n  assertThat(soln[3][3]).isEqualTo(0.0);\n  assertThat(soln[4][0]).isEqualTo(7.0);\n  assertThat(soln[4][1]).isEqualTo(6.0);\n  assertThat(soln[4][2]).isEqualTo(3.0);\n  assertThat(soln[4][3]).isEqualTo(0.0);\n  assertThat(soln[4][4]).isEqualTo(0.0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDirectedGraph(){\n  FloydWarshallSolver solver=new FloydWarshallSolver(matrix1);\n  double[][] soln=solver.getApspMatrix();\n  assertThat(soln[0][0]).isEqualTo(0.0);\n  assertThat(soln[1][0]).isEqualTo(1.0);\n  assertThat(soln[1][1]).isEqualTo(0.0);\n  assertThat(soln[1][2]).isEqualTo(7.0);\n  assertThat(soln[2][0]).isEqualTo(4.0);\n  assertThat(soln[2][1]).isEqualTo(3.0);\n  assertThat(soln[2][2]).isEqualTo(0.0);\n  assertThat(soln[3][0]).isEqualTo(8.0);\n  assertThat(soln[3][1]).isEqualTo(7.0);\n  assertThat(soln[3][2]).isEqualTo(4.0);\n  assertThat(soln[3][3]).isEqualTo(0.0);\n  assertThat(soln[4][0]).isEqualTo(7.0);\n  assertThat(soln[4][1]).isEqualTo(6.0);\n  assertThat(soln[4][2]).isEqualTo(3.0);\n  assertThat(soln[4][3]).isEqualTo(0.0);\n  assertThat(soln[4][4]).isEqualTo(0.0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "double[][] soln=solver.getApspMatrix();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "double[][]"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 72,
    "startColumnNumber" : 22,
    "endLineNumber" : 72,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}