{
  "id" : 219,
  "expression" : "servant.name",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/servant/src/main/java/com/iluwatar/servant/App.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "servant.name",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 76,
      "startColumnNumber" : 46,
      "endLineNumber" : 76,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 59
      },
      "nodeContext" : "LOGGER.info(\"{} will live another day\",servant.name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "LOGGER.info(\"{} will live another day\",servant.name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 75,
        "startColumnNumber" : 48,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.info(\"{} will live another day\",servant.name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (servant.checkIfYouWillBeHanged(guests)) {\n  LOGGER.info(\"{} will live another day\",servant.name);\n}\n else {\n  LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 56,
        "startColumnNumber" : 63,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var k=new King();\n  var q=new Queen();\n  var guests=List.of(k,q);\n  servant.feed(k);\n  servant.feed(q);\n  servant.giveWine(k);\n  servant.giveWine(q);\n  servant.giveCompliments(guests.get(compliment));\n  guests.forEach(Royalty::changeMood);\n  if (servant.checkIfYouWillBeHanged(guests)) {\n    LOGGER.info(\"{} will live another day\",servant.name);\n  }\n else {\n    LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Can add a List with enum Actions for variable scenarios.\n */\npublic static void scenario(Servant servant,int compliment){\n  var k=new King();\n  var q=new Queen();\n  var guests=List.of(k,q);\n  servant.feed(k);\n  servant.feed(q);\n  servant.giveWine(k);\n  servant.giveWine(q);\n  servant.giveCompliments(guests.get(compliment));\n  guests.forEach(Royalty::changeMood);\n  if (servant.checkIfYouWillBeHanged(guests)) {\n    LOGGER.info(\"{} will live another day\",servant.name);\n  }\n else {\n    LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "LOGGER.info(\"{} will live another day\",servant.name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "servant.name",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 78,
      "startColumnNumber" : 52,
      "endLineNumber" : 78,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 65
      },
      "nodeContext" : "LOGGER.info(\"Poor {}. His days are numbered\",servant.name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 66
      },
      "nodeContext" : "LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 77,
        "startColumnNumber" : 11,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (servant.checkIfYouWillBeHanged(guests)) {\n  LOGGER.info(\"{} will live another day\",servant.name);\n}\n else {\n  LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 56,
        "startColumnNumber" : 63,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var k=new King();\n  var q=new Queen();\n  var guests=List.of(k,q);\n  servant.feed(k);\n  servant.feed(q);\n  servant.giveWine(k);\n  servant.giveWine(q);\n  servant.giveCompliments(guests.get(compliment));\n  guests.forEach(Royalty::changeMood);\n  if (servant.checkIfYouWillBeHanged(guests)) {\n    LOGGER.info(\"{} will live another day\",servant.name);\n  }\n else {\n    LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Can add a List with enum Actions for variable scenarios.\n */\npublic static void scenario(Servant servant,int compliment){\n  var k=new King();\n  var q=new Queen();\n  var guests=List.of(k,q);\n  servant.feed(k);\n  servant.feed(q);\n  servant.giveWine(k);\n  servant.giveWine(q);\n  servant.giveCompliments(guests.get(compliment));\n  guests.forEach(Royalty::changeMood);\n  if (servant.checkIfYouWillBeHanged(guests)) {\n    LOGGER.info(\"{} will live another day\",servant.name);\n  }\n else {\n    LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 66
      },
      "nodeContext" : "LOGGER.info(\"Poor {}. His days are numbered\",servant.name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 76,
    "startColumnNumber" : 46,
    "endLineNumber" : 76,
    "endColumnNumber" : 58
  }, {
    "charLength" : 12,
    "startLineNumber" : 78,
    "startColumnNumber" : 52,
    "endLineNumber" : 78,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}