{
  "id" : 184,
  "expression" : "expandedAbsGravity",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/internal/CollapsingTextHelper.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expandedAbsGravity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 491,
      "startColumnNumber" : 12,
      "endLineNumber" : 491,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 491,
        "startColumnNumber" : 12,
        "endLineNumber" : 491,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 491,
        "startColumnNumber" : 4,
        "endLineNumber" : 504,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:  expandedDrawY=expandedBounds.bottom;\nbreak;\ncase Gravity.TOP:expandedDrawY=expandedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\nexpandedDrawY=expandedBounds.centerY() + textOffset;\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2889,
        "startLineNumber" : 447,
        "startColumnNumber" : 38,
        "endLineNumber" : 522,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final float currentTextSize=this.currentTextSize;\n  calculateUsingTextSize(collapsedTextSize);\n  float width=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\n  final int collapsedAbsGravity=GravityCompat.getAbsoluteGravity(collapsedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (collapsedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:    collapsedDrawY=collapsedBounds.bottom;\n  break;\ncase Gravity.TOP:collapsedDrawY=collapsedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\ncollapsedDrawY=collapsedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (collapsedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:collapsedDrawX=collapsedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:collapsedDrawX=collapsedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:collapsedDrawX=collapsedBounds.left;\nbreak;\n}\ncalculateUsingTextSize(expandedTextSize);\nwidth=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\nfinal int expandedAbsGravity=GravityCompat.getAbsoluteGravity(expandedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:expandedDrawY=expandedBounds.bottom;\nbreak;\ncase Gravity.TOP:expandedDrawY=expandedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\nexpandedDrawY=expandedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:expandedDrawX=expandedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:expandedDrawX=expandedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:expandedDrawX=expandedBounds.left;\nbreak;\n}\nclearTexture();\nsetInterpolatedTextSize(currentTextSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 323,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2925,
        "startLineNumber" : 447,
        "startColumnNumber" : 2,
        "endLineNumber" : 522,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void calculateBaseOffsets(){\n  final float currentTextSize=this.currentTextSize;\n  calculateUsingTextSize(collapsedTextSize);\n  float width=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\n  final int collapsedAbsGravity=GravityCompat.getAbsoluteGravity(collapsedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (collapsedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:    collapsedDrawY=collapsedBounds.bottom;\n  break;\ncase Gravity.TOP:collapsedDrawY=collapsedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\ncollapsedDrawY=collapsedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (collapsedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:collapsedDrawX=collapsedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:collapsedDrawX=collapsedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:collapsedDrawX=collapsedBounds.left;\nbreak;\n}\ncalculateUsingTextSize(expandedTextSize);\nwidth=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\nfinal int expandedAbsGravity=GravityCompat.getAbsoluteGravity(expandedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:expandedDrawY=expandedBounds.bottom;\nbreak;\ncase Gravity.TOP:expandedDrawY=expandedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\nexpandedDrawY=expandedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:expandedDrawX=expandedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:expandedDrawX=expandedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:expandedDrawX=expandedBounds.left;\nbreak;\n}\nclearTexture();\nsetInterpolatedTextSize(currentTextSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 327,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 491,
        "startColumnNumber" : 12,
        "endLineNumber" : 491,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "expandedAbsGravity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 505,
      "startColumnNumber" : 12,
      "endLineNumber" : 505,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 505,
        "startColumnNumber" : 12,
        "endLineNumber" : 505,
        "endColumnNumber" : 79
      },
      "nodeContext" : "expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 505,
        "startColumnNumber" : 4,
        "endLineNumber" : 516,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:  expandedDrawX=expandedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:expandedDrawX=expandedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:expandedDrawX=expandedBounds.left;\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2889,
        "startLineNumber" : 447,
        "startColumnNumber" : 38,
        "endLineNumber" : 522,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final float currentTextSize=this.currentTextSize;\n  calculateUsingTextSize(collapsedTextSize);\n  float width=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\n  final int collapsedAbsGravity=GravityCompat.getAbsoluteGravity(collapsedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (collapsedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:    collapsedDrawY=collapsedBounds.bottom;\n  break;\ncase Gravity.TOP:collapsedDrawY=collapsedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\ncollapsedDrawY=collapsedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (collapsedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:collapsedDrawX=collapsedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:collapsedDrawX=collapsedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:collapsedDrawX=collapsedBounds.left;\nbreak;\n}\ncalculateUsingTextSize(expandedTextSize);\nwidth=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\nfinal int expandedAbsGravity=GravityCompat.getAbsoluteGravity(expandedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:expandedDrawY=expandedBounds.bottom;\nbreak;\ncase Gravity.TOP:expandedDrawY=expandedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\nexpandedDrawY=expandedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:expandedDrawX=expandedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:expandedDrawX=expandedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:expandedDrawX=expandedBounds.left;\nbreak;\n}\nclearTexture();\nsetInterpolatedTextSize(currentTextSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 323,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2925,
        "startLineNumber" : 447,
        "startColumnNumber" : 2,
        "endLineNumber" : 522,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void calculateBaseOffsets(){\n  final float currentTextSize=this.currentTextSize;\n  calculateUsingTextSize(collapsedTextSize);\n  float width=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\n  final int collapsedAbsGravity=GravityCompat.getAbsoluteGravity(collapsedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (collapsedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:    collapsedDrawY=collapsedBounds.bottom;\n  break;\ncase Gravity.TOP:collapsedDrawY=collapsedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\ncollapsedDrawY=collapsedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (collapsedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:collapsedDrawX=collapsedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:collapsedDrawX=collapsedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:collapsedDrawX=collapsedBounds.left;\nbreak;\n}\ncalculateUsingTextSize(expandedTextSize);\nwidth=textToDraw != null ? textPaint.measureText(textToDraw,0,textToDraw.length()) : 0;\nfinal int expandedAbsGravity=GravityCompat.getAbsoluteGravity(expandedTextGravity,isRtl ? ViewCompat.LAYOUT_DIRECTION_RTL : ViewCompat.LAYOUT_DIRECTION_LTR);\nswitch (expandedAbsGravity & Gravity.VERTICAL_GRAVITY_MASK) {\ncase Gravity.BOTTOM:expandedDrawY=expandedBounds.bottom;\nbreak;\ncase Gravity.TOP:expandedDrawY=expandedBounds.top - textPaint.ascent();\nbreak;\ncase Gravity.CENTER_VERTICAL:default:float textHeight=textPaint.descent() - textPaint.ascent();\nfloat textOffset=(textHeight / 2) - textPaint.descent();\nexpandedDrawY=expandedBounds.centerY() + textOffset;\nbreak;\n}\nswitch (expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:expandedDrawX=expandedBounds.centerX() - (width / 2);\nbreak;\ncase Gravity.RIGHT:expandedDrawX=expandedBounds.right - width;\nbreak;\ncase Gravity.LEFT:default:expandedDrawX=expandedBounds.left;\nbreak;\n}\nclearTexture();\nsetInterpolatedTextSize(currentTextSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 327,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 505,
        "startColumnNumber" : 12,
        "endLineNumber" : 505,
        "endColumnNumber" : 79
      },
      "nodeContext" : "expandedAbsGravity & GravityCompat.RELATIVE_HORIZONTAL_GRAVITY_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 491,
    "startColumnNumber" : 12,
    "endLineNumber" : 491,
    "endColumnNumber" : 30
  }, {
    "charLength" : 18,
    "startLineNumber" : 505,
    "startColumnNumber" : 12,
    "endLineNumber" : 505,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}