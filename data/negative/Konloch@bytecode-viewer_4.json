{
  "id" : 4,
  "expression" : "\" triggered the 30 classes at once limit. Try refining your search.\"",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/gui/resourcelist/SearchKeyAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" triggered the 30 classes at once limit. Try refining your search.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 115,
      "startColumnNumber" : 12,
      "endLineNumber" : 115,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 114,
        "startColumnNumber" : 35,
        "endLineNumber" : 115,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 81
      },
      "nodeContext" : "BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 82
      },
      "nodeContext" : "BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 113,
        "startColumnNumber" : 7,
        "endLineNumber" : 117,
        "endColumnNumber" : 8
      },
      "nodeContext" : "{\n  BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 112,
        "startColumnNumber" : 7,
        "endLineNumber" : 117,
        "endColumnNumber" : 8
      },
      "nodeContext" : "if (found >= 30) {\n  BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.out.println(\"Found! \" + node);\n  found++;\n  if (found >= 30) {\n    BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n    return;\n  }\n  final TreePath pathn=new TreePath(node.getPath());\n  resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n  resourceListPane.tree.setSelectionPath(pathn);\n  resourceListPane.tree.makeVisible(pathn);\n  resourceListPane.tree.scrollPathToVisible(pathn);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 108,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n  System.out.println(\"Found! \" + node);\n  found++;\n  if (found >= 30) {\n    BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n    return;\n  }\n  final TreePath pathn=new TreePath(node.getPath());\n  resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n  resourceListPane.tree.setSelectionPath(pathn);\n  resourceListPane.tree.makeVisible(pathn);\n  resourceListPane.tree.scrollPathToVisible(pathn);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 92,
        "startColumnNumber" : 5,
        "endLineNumber" : 124,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  TreeNode[] pathArray=node.getPath();\n  int k=0;\n  StringBuilder fullPath=new StringBuilder();\n  while (pathArray != null && k < pathArray.length) {\n    ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n    String s=(String)(n.getUserObject());\n    fullPath.append(s);\n    if (k++ != pathArray.length - 1) {\n      fullPath.append(\".\");\n    }\n  }\n  String fullPathString=fullPath.toString();\n  if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n    System.out.println(\"Found! \" + node);\n    found++;\n    if (found >= 30) {\n      BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n      return;\n    }\n    final TreePath pathn=new TreePath(node.getPath());\n    resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n    resourceListPane.tree.setSelectionPath(pathn);\n    resourceListPane.tree.makeVisible(pathn);\n    resourceListPane.tree.scrollPathToVisible(pathn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 124,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n  TreeNode[] pathArray=node.getPath();\n  int k=0;\n  StringBuilder fullPath=new StringBuilder();\n  while (pathArray != null && k < pathArray.length) {\n    ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n    String s=(String)(n.getUserObject());\n    fullPath.append(s);\n    if (k++ != pathArray.length - 1) {\n      fullPath.append(\".\");\n    }\n  }\n  String fullPathString=fullPath.toString();\n  if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n    System.out.println(\"Found! \" + node);\n    found++;\n    if (found >= 30) {\n      BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n      return;\n    }\n    final TreePath pathn=new TreePath(node.getPath());\n    resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n    resourceListPane.tree.setSelectionPath(pathn);\n    resourceListPane.tree.makeVisible(pathn);\n    resourceListPane.tree.scrollPathToVisible(pathn);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n    TreeNode[] pathArray=node.getPath();\n    int k=0;\n    StringBuilder fullPath=new StringBuilder();\n    while (pathArray != null && k < pathArray.length) {\n      ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n      String s=(String)(n.getUserObject());\n      fullPath.append(s);\n      if (k++ != pathArray.length - 1) {\n        fullPath.append(\".\");\n      }\n    }\n    String fullPathString=fullPath.toString();\n    if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n      System.out.println(\"Found! \" + node);\n      found++;\n      if (found >= 30) {\n        BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n        return;\n      }\n      final TreePath pathn=new TreePath(node.getPath());\n      resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n      resourceListPane.tree.setSelectionPath(pathn);\n      resourceListPane.tree.makeVisible(pathn);\n      resourceListPane.tree.scrollPathToVisible(pathn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1335,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (node.isLeaf()) {\n  if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n    TreeNode[] pathArray=node.getPath();\n    int k=0;\n    StringBuilder fullPath=new StringBuilder();\n    while (pathArray != null && k < pathArray.length) {\n      ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n      String s=(String)(n.getUserObject());\n      fullPath.append(s);\n      if (k++ != pathArray.length - 1) {\n        fullPath.append(\".\");\n      }\n    }\n    String fullPathString=fullPath.toString();\n    if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n      System.out.println(\"Found! \" + node);\n      found++;\n      if (found >= 30) {\n        BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n        return;\n      }\n      final TreePath pathn=new TreePath(node.getPath());\n      resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n      resourceListPane.tree.setSelectionPath(pathn);\n      resourceListPane.tree.makeVisible(pathn);\n      resourceListPane.tree.scrollPathToVisible(pathn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 190,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1414,
        "startLineNumber" : 87,
        "startColumnNumber" : 3,
        "endLineNumber" : 126,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n  if (node.isLeaf()) {\n    if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n      TreeNode[] pathArray=node.getPath();\n      int k=0;\n      StringBuilder fullPath=new StringBuilder();\n      while (pathArray != null && k < pathArray.length) {\n        ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n        String s=(String)(n.getUserObject());\n        fullPath.append(s);\n        if (k++ != pathArray.length - 1) {\n          fullPath.append(\".\");\n        }\n      }\n      String fullPathString=fullPath.toString();\n      if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n        System.out.println(\"Found! \" + node);\n        found++;\n        if (found >= 30) {\n          BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n          return;\n        }\n        final TreePath pathn=new TreePath(node.getPath());\n        resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n        resourceListPane.tree.setSelectionPath(pathn);\n        resourceListPane.tree.makeVisible(pathn);\n        resourceListPane.tree.scrollPathToVisible(pathn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 126,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (enums != null && enums.hasMoreElements()) {\n  ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n  if (node.isLeaf()) {\n    if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n      TreeNode[] pathArray=node.getPath();\n      int k=0;\n      StringBuilder fullPath=new StringBuilder();\n      while (pathArray != null && k < pathArray.length) {\n        ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n        String s=(String)(n.getUserObject());\n        fullPath.append(s);\n        if (k++ != pathArray.length - 1) {\n          fullPath.append(\".\");\n        }\n      }\n      String fullPathString=fullPath.toString();\n      if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n        System.out.println(\"Found! \" + node);\n        found++;\n        if (found >= 30) {\n          BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n          return;\n        }\n        final TreePath pathn=new TreePath(node.getPath());\n        resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n        resourceListPane.tree.setSelectionPath(pathn);\n        resourceListPane.tree.makeVisible(pathn);\n        resourceListPane.tree.scrollPathToVisible(pathn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 210,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Enumeration<TreeNode> enums=curNode.depthFirstEnumeration();\n  while (enums != null && enums.hasMoreElements()) {\n    ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n    if (node.isLeaf()) {\n      if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n        TreeNode[] pathArray=node.getPath();\n        int k=0;\n        StringBuilder fullPath=new StringBuilder();\n        while (pathArray != null && k < pathArray.length) {\n          ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n          String s=(String)(n.getUserObject());\n          fullPath.append(s);\n          if (k++ != pathArray.length - 1) {\n            fullPath.append(\".\");\n          }\n        }\n        String fullPathString=fullPath.toString();\n        if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n          System.out.println(\"Found! \" + node);\n          found++;\n          if (found >= 30) {\n            BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n            return;\n          }\n          final TreePath pathn=new TreePath(node.getPath());\n          resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n          resourceListPane.tree.setSelectionPath(pathn);\n          resourceListPane.tree.makeVisible(pathn);\n          resourceListPane.tree.scrollPathToVisible(pathn);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (resourceListPane.exact.isSelected()) {\n  pathLoop:   for (int i=0; i < path.length; i++) {\n    final String pathName=path[i];\n    final boolean isLast=i == path.length - 1;\n    for (int c=0; c < curNode.getChildCount(); c++) {\n      final ResourceTreeNode child=(ResourceTreeNode)curNode.getChildAt(c);\n      System.out.println(pathName + \":\" + child.getUserObject());\n      if (child.getUserObject().equals(pathName)) {\n        curNode=child;\n        if (isLast) {\n          System.out.println(\"Found! \" + curNode);\n          found++;\n          final TreePath pathn=new TreePath(curNode.getPath());\n          resourceListPane.tree.setSelectionPath(pathn);\n          resourceListPane.tree.makeVisible(pathn);\n          resourceListPane.tree.scrollPathToVisible(pathn);\n          resourceListPane.openPath(pathn);\n          break pathLoop;\n        }\n        continue pathLoop;\n      }\n    }\n    System.out.println(\"Could not find \" + pathName);\n    break;\n  }\n}\n else {\n  @SuppressWarnings(\"unchecked\") Enumeration<TreeNode> enums=curNode.depthFirstEnumeration();\n  while (enums != null && enums.hasMoreElements()) {\n    ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n    if (node.isLeaf()) {\n      if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n        TreeNode[] pathArray=node.getPath();\n        int k=0;\n        StringBuilder fullPath=new StringBuilder();\n        while (pathArray != null && k < pathArray.length) {\n          ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n          String s=(String)(n.getUserObject());\n          fullPath.append(s);\n          if (k++ != pathArray.length - 1) {\n            fullPath.append(\".\");\n          }\n        }\n        String fullPathString=fullPath.toString();\n        if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n          System.out.println(\"Found! \" + node);\n          found++;\n          if (found >= 30) {\n            BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n            return;\n          }\n          final TreePath pathn=new TreePath(node.getPath());\n          resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n          resourceListPane.tree.setSelectionPath(pathn);\n          resourceListPane.tree.makeVisible(pathn);\n          resourceListPane.tree.scrollPathToVisible(pathn);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 387,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3018,
        "startLineNumber" : 23,
        "startColumnNumber" : 1,
        "endLineNumber" : 128,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (ke.getKeyCode() != KeyEvent.VK_ENTER)   return;\n  final String qt=resourceListPane.quickSearch.getText();\n  resourceListPane.quickSearch.setText(\"\");\n  if (qt.isEmpty())   return;\n  String[] path;\n  int found=0;\n  if (qt.contains(\".\")) {\n    path=qt.split(\"\\\\.\");\n  }\n else {\n    path=new String[]{qt};\n  }\n  ResourceTreeNode curNode=resourceListPane.treeRoot;\n  if (resourceListPane.exact.isSelected()) {\n    pathLoop:     for (int i=0; i < path.length; i++) {\n      final String pathName=path[i];\n      final boolean isLast=i == path.length - 1;\n      for (int c=0; c < curNode.getChildCount(); c++) {\n        final ResourceTreeNode child=(ResourceTreeNode)curNode.getChildAt(c);\n        System.out.println(pathName + \":\" + child.getUserObject());\n        if (child.getUserObject().equals(pathName)) {\n          curNode=child;\n          if (isLast) {\n            System.out.println(\"Found! \" + curNode);\n            found++;\n            final TreePath pathn=new TreePath(curNode.getPath());\n            resourceListPane.tree.setSelectionPath(pathn);\n            resourceListPane.tree.makeVisible(pathn);\n            resourceListPane.tree.scrollPathToVisible(pathn);\n            resourceListPane.openPath(pathn);\n            break pathLoop;\n          }\n          continue pathLoop;\n        }\n      }\n      System.out.println(\"Could not find \" + pathName);\n      break;\n    }\n  }\n else {\n    @SuppressWarnings(\"unchecked\") Enumeration<TreeNode> enums=curNode.depthFirstEnumeration();\n    while (enums != null && enums.hasMoreElements()) {\n      ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n      if (node.isLeaf()) {\n        if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n          TreeNode[] pathArray=node.getPath();\n          int k=0;\n          StringBuilder fullPath=new StringBuilder();\n          while (pathArray != null && k < pathArray.length) {\n            ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n            String s=(String)(n.getUserObject());\n            fullPath.append(s);\n            if (k++ != pathArray.length - 1) {\n              fullPath.append(\".\");\n            }\n          }\n          String fullPathString=fullPath.toString();\n          if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n            System.out.println(\"Found! \" + node);\n            found++;\n            if (found >= 30) {\n              BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n              return;\n            }\n            final TreePath pathn=new TreePath(node.getPath());\n            resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n            resourceListPane.tree.setSelectionPath(pathn);\n            resourceListPane.tree.makeVisible(pathn);\n            resourceListPane.tree.scrollPathToVisible(pathn);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 464,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3072,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 128,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void keyPressed(final KeyEvent ke){\n  if (ke.getKeyCode() != KeyEvent.VK_ENTER)   return;\n  final String qt=resourceListPane.quickSearch.getText();\n  resourceListPane.quickSearch.setText(\"\");\n  if (qt.isEmpty())   return;\n  String[] path;\n  int found=0;\n  if (qt.contains(\".\")) {\n    path=qt.split(\"\\\\.\");\n  }\n else {\n    path=new String[]{qt};\n  }\n  ResourceTreeNode curNode=resourceListPane.treeRoot;\n  if (resourceListPane.exact.isSelected()) {\n    pathLoop:     for (int i=0; i < path.length; i++) {\n      final String pathName=path[i];\n      final boolean isLast=i == path.length - 1;\n      for (int c=0; c < curNode.getChildCount(); c++) {\n        final ResourceTreeNode child=(ResourceTreeNode)curNode.getChildAt(c);\n        System.out.println(pathName + \":\" + child.getUserObject());\n        if (child.getUserObject().equals(pathName)) {\n          curNode=child;\n          if (isLast) {\n            System.out.println(\"Found! \" + curNode);\n            found++;\n            final TreePath pathn=new TreePath(curNode.getPath());\n            resourceListPane.tree.setSelectionPath(pathn);\n            resourceListPane.tree.makeVisible(pathn);\n            resourceListPane.tree.scrollPathToVisible(pathn);\n            resourceListPane.openPath(pathn);\n            break pathLoop;\n          }\n          continue pathLoop;\n        }\n      }\n      System.out.println(\"Could not find \" + pathName);\n      break;\n    }\n  }\n else {\n    @SuppressWarnings(\"unchecked\") Enumeration<TreeNode> enums=curNode.depthFirstEnumeration();\n    while (enums != null && enums.hasMoreElements()) {\n      ResourceTreeNode node=(ResourceTreeNode)enums.nextElement();\n      if (node.isLeaf()) {\n        if (((String)(node.getUserObject())).toLowerCase().contains(path[path.length - 1].toLowerCase())) {\n          TreeNode[] pathArray=node.getPath();\n          int k=0;\n          StringBuilder fullPath=new StringBuilder();\n          while (pathArray != null && k < pathArray.length) {\n            ResourceTreeNode n=(ResourceTreeNode)pathArray[k];\n            String s=(String)(n.getUserObject());\n            fullPath.append(s);\n            if (k++ != pathArray.length - 1) {\n              fullPath.append(\".\");\n            }\n          }\n          String fullPathString=fullPath.toString();\n          if (fullPathString.toLowerCase().contains(qt.toLowerCase())) {\n            System.out.println(\"Found! \" + node);\n            found++;\n            if (found >= 30) {\n              BytecodeViewer.showMessage(\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\");\n              return;\n            }\n            final TreePath pathn=new TreePath(node.getPath());\n            resourceListPane.tree.setSelectionPath(pathn.getParentPath());\n            resourceListPane.tree.setSelectionPath(pathn);\n            resourceListPane.tree.makeVisible(pathn);\n            resourceListPane.tree.scrollPathToVisible(pathn);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 475,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 114,
        "startColumnNumber" : 35,
        "endLineNumber" : 115,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"Uh oh, there could be more results but you've\" + \" triggered the 30 classes at once limit. Try refining your search.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 11,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 115,
    "startColumnNumber" : 12,
    "endLineNumber" : 115,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}