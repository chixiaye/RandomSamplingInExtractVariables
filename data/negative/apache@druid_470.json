{
  "id" : 470,
  "expression" : "expected",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/segment/realtime/firehose/InlineFirehoseTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 129,
      "startColumnNumber" : 4,
      "endLineNumber" : 129,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 42
      },
      "nodeContext" : "expected.put(\"timestamp\",TIMESTAMP_0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 43
      },
      "nodeContext" : "expected.put(\"timestamp\",TIMESTAMP_0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testNextRowWithRawParseable(){\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 43
      },
      "nodeContext" : "expected.put(\"timestamp\",TIMESTAMP_0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 130,
      "startColumnNumber" : 4,
      "endLineNumber" : 130,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 34
      },
      "nodeContext" : "expected.put(\"value\",VALUE_0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 35
      },
      "nodeContext" : "expected.put(\"value\",VALUE_0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testNextRowWithRawParseable(){\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 35
      },
      "nodeContext" : "expected.put(\"value\",VALUE_0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 131,
      "startColumnNumber" : 24,
      "endLineNumber" : 131,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Assert.assertEquals(expected,raw)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Assert.assertEquals(expected,raw);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testNextRowWithRawParseable(){\n  final String data=PARSEABLE;\n  InlineFirehose target=create(data);\n  InputRowListPlusRawValues rowPlusRaw=target.nextRowWithRaw();\n  InputRow row=Iterables.getOnlyElement(rowPlusRaw.getInputRows());\n  assertRowValue(VALUE_0,row);\n  Map<String,Object> raw=rowPlusRaw.getRawValues();\n  Map<String,Object> expected=new HashMap<>();\n  expected.put(\"timestamp\",TIMESTAMP_0);\n  expected.put(\"value\",VALUE_0);\n  Assert.assertEquals(expected,raw);\n  Assert.assertNull(rowPlusRaw.getParseException());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Assert.assertEquals(expected,raw);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 129,
    "startColumnNumber" : 4,
    "endLineNumber" : 129,
    "endColumnNumber" : 12
  }, {
    "charLength" : 8,
    "startLineNumber" : 130,
    "startColumnNumber" : 4,
    "endLineNumber" : 130,
    "endColumnNumber" : 12
  }, {
    "charLength" : 8,
    "startLineNumber" : 131,
    "startColumnNumber" : 24,
    "endLineNumber" : 131,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}