{
  "id" : 223,
  "expression" : "\"HE\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/windows/WindowsProcessesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"HE\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 195,
      "startColumnNumber" : 49,
      "endLineNumber" : 195,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(new String(one,UTF_8)).isEqualTo(\"HE\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(new String(one,UTF_8)).isEqualTo(\"HE\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 183,
        "startColumnNumber" : 49,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  process=WindowsProcesses.createProcess(mockBinary,mockArgs(\"O-HELLO\"),null,null,null,null);\n  byte[] one=new byte[2];\n  byte[] two=new byte[3];\n  assertThat(readStdout(one,0,2)).isEqualTo(2);\n  assertNoStreamError(WindowsProcesses.getStdout(process));\n  assertThat(readStdout(two,0,3)).isEqualTo(3);\n  assertNoStreamError(WindowsProcesses.getStdout(process));\n  assertThat(new String(one,UTF_8)).isEqualTo(\"HE\");\n  assertThat(new String(two,UTF_8)).isEqualTo(\"LLO\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPartialRead() throws Exception {\n  process=WindowsProcesses.createProcess(mockBinary,mockArgs(\"O-HELLO\"),null,null,null,null);\n  byte[] one=new byte[2];\n  byte[] two=new byte[3];\n  assertThat(readStdout(one,0,2)).isEqualTo(2);\n  assertNoStreamError(WindowsProcesses.getStdout(process));\n  assertThat(readStdout(two,0,3)).isEqualTo(3);\n  assertNoStreamError(WindowsProcesses.getStdout(process));\n  assertThat(new String(one,UTF_8)).isEqualTo(\"HE\");\n  assertThat(new String(two,UTF_8)).isEqualTo(\"LLO\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(new String(one,UTF_8)).isEqualTo(\"HE\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 195,
    "startColumnNumber" : 49,
    "endLineNumber" : 195,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}