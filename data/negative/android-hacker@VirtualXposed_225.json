{
  "id" : 225,
  "expression" : "interfaceClass.getClassLoader()",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/client/ipc/LocalProxyUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interfaceClass.getClassLoader()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 25,
      "startColumnNumber" : 42,
      "endLineNumber" : 25,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 25,
        "startColumnNumber" : 19,
        "endLineNumber" : 34,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n  @Override public Object invoke(  Object proxy,  Method method,  Object[] args) throws Throwable {\n    try {\n      return method.invoke(base,args);\n    }\n catch (    Throwable e) {\n      throw e.getCause() == null ? e : e.getCause();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 10
      },
      "nodeContext" : "(T)Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n  @Override public Object invoke(  Object proxy,  Method method,  Object[] args) throws Throwable {\n    try {\n      return method.invoke(base,args);\n    }\n catch (    Throwable e) {\n      throw e.getCause() == null ? e : e.getCause();\n    }\n  }\n}\n)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 69,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return (T)Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n  @Override public Object invoke(  Object proxy,  Method method,  Object[] args) throws Throwable {\n    try {\n      return method.invoke(base,args);\n    }\n catch (    Throwable e) {\n      throw e.getCause() == null ? e : e.getCause();\n    }\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 70,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 19,
        "startColumnNumber" : 77,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (true) {\n    return (T)base;\n  }\n  return (T)Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {\n      try {\n        return method.invoke(base,args);\n      }\n catch (      Throwable e) {\n        throw e.getCause() == null ? e : e.getCause();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 913,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Generates the Proxy instance for a base object, each IPC call will clean its calling identity.\n * @param interfaceClass interface class\n * @param base base object\n * @return proxy object\n */\npublic static <T>T genProxy(Class<T> interfaceClass,final Object base){\n  if (true) {\n    return (T)base;\n  }\n  return (T)Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {\n      try {\n        return method.invoke(base,args);\n      }\n catch (      Throwable e) {\n        throw e.getCause() == null ? e : e.getCause();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 25,
        "startColumnNumber" : 19,
        "endLineNumber" : 34,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Proxy.newProxyInstance(interfaceClass.getClassLoader(),new Class[]{interfaceClass},new InvocationHandler(){\n  @Override public Object invoke(  Object proxy,  Method method,  Object[] args) throws Throwable {\n    try {\n      return method.invoke(base,args);\n    }\n catch (    Throwable e) {\n      throw e.getCause() == null ? e : e.getCause();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 13
    },
    "tokenLength" : 2,
    "type" : "java.lang.ClassLoader"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 25,
    "startColumnNumber" : 42,
    "endLineNumber" : 25,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}