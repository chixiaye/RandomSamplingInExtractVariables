{
  "id" : 388,
  "expression" : "instanceInfo",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/test/java/com/netflix/eureka2/client/channel/SnapshotInterestChannelImplTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "instanceInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 61,
      "startColumnNumber" : 47,
      "endLineNumber" : 61,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 61,
        "startColumnNumber" : 31,
        "endLineNumber" : 61,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new AddInstance(instanceInfo)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 61
      },
      "nodeContext" : "incomingSubject.onNext(new AddInstance(instanceInfo))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "incomingSubject.onNext(new AddInstance(instanceInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 48,
        "startColumnNumber" : 66,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<InstanceInfo> testSubscriber=new TestSubscriber<>();\n  SnapshotInterestChannelImpl interestChannel=new SnapshotInterestChannelImpl(transportClient);\n  interestChannel.forSnapshot(SNAPSHOT_INTEREST).subscribe(testSubscriber);\n  ackReply.onCompleted();\n  verify(transportClient,times(1)).connect();\n  verify(connection,times(1)).submitWithAck(new SnapshotRegistration(SNAPSHOT_INTEREST));\n  InstanceInfo instanceInfo=SampleInstanceInfo.DiscoveryServer.build();\n  incomingSubject.onNext(new AddInstance(instanceInfo));\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n  incomingSubject.onNext(SnapshotComplete.INSTANCE);\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertTerminalEvent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSubscribeHandlesNotificationsAndDisconnects(){\n  TestSubscriber<InstanceInfo> testSubscriber=new TestSubscriber<>();\n  SnapshotInterestChannelImpl interestChannel=new SnapshotInterestChannelImpl(transportClient);\n  interestChannel.forSnapshot(SNAPSHOT_INTEREST).subscribe(testSubscriber);\n  ackReply.onCompleted();\n  verify(transportClient,times(1)).connect();\n  verify(connection,times(1)).submitWithAck(new SnapshotRegistration(SNAPSHOT_INTEREST));\n  InstanceInfo instanceInfo=SampleInstanceInfo.DiscoveryServer.build();\n  incomingSubject.onNext(new AddInstance(instanceInfo));\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n  incomingSubject.onNext(SnapshotComplete.INSTANCE);\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertTerminalEvent();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "incomingSubject.onNext(new AddInstance(instanceInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.registry.instance.InstanceInfo"
  }, {
    "nodeContext" : "instanceInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 64,
      "startColumnNumber" : 70,
      "endLineNumber" : 64,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 64,
        "startColumnNumber" : 44,
        "endLineNumber" : 64,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Collections.singletonList(instanceInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 84
      },
      "nodeContext" : "testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 48,
        "startColumnNumber" : 66,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<InstanceInfo> testSubscriber=new TestSubscriber<>();\n  SnapshotInterestChannelImpl interestChannel=new SnapshotInterestChannelImpl(transportClient);\n  interestChannel.forSnapshot(SNAPSHOT_INTEREST).subscribe(testSubscriber);\n  ackReply.onCompleted();\n  verify(transportClient,times(1)).connect();\n  verify(connection,times(1)).submitWithAck(new SnapshotRegistration(SNAPSHOT_INTEREST));\n  InstanceInfo instanceInfo=SampleInstanceInfo.DiscoveryServer.build();\n  incomingSubject.onNext(new AddInstance(instanceInfo));\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n  incomingSubject.onNext(SnapshotComplete.INSTANCE);\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertTerminalEvent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSubscribeHandlesNotificationsAndDisconnects(){\n  TestSubscriber<InstanceInfo> testSubscriber=new TestSubscriber<>();\n  SnapshotInterestChannelImpl interestChannel=new SnapshotInterestChannelImpl(transportClient);\n  interestChannel.forSnapshot(SNAPSHOT_INTEREST).subscribe(testSubscriber);\n  ackReply.onCompleted();\n  verify(transportClient,times(1)).connect();\n  verify(connection,times(1)).submitWithAck(new SnapshotRegistration(SNAPSHOT_INTEREST));\n  InstanceInfo instanceInfo=SampleInstanceInfo.DiscoveryServer.build();\n  incomingSubject.onNext(new AddInstance(instanceInfo));\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n  incomingSubject.onNext(SnapshotComplete.INSTANCE);\n  testSubscriber.assertNoErrors();\n  testSubscriber.assertTerminalEvent();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "testSubscriber.assertReceivedOnNext(Collections.singletonList(instanceInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.registry.instance.InstanceInfo"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 61,
    "startColumnNumber" : 47,
    "endLineNumber" : 61,
    "endColumnNumber" : 59
  }, {
    "charLength" : 12,
    "startLineNumber" : 64,
    "startColumnNumber" : 70,
    "endLineNumber" : 64,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}