{
  "id" : 173,
  "expression" : "new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/client/result/EmailAddressResultParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 80,
      "startLineNumber" : 58,
      "startColumnNumber" : 13,
      "endLineNumber" : 58,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 94
      },
      "nodeContext" : "return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!EmailDoCoMoResultParser.isBasicallyValidEmailAddress(rawText)) {\n    return null;\n  }\n  emailAddress=rawText;\n  return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (rawText.startsWith(\"mailto:\") || rawText.startsWith(\"MAILTO:\")) {\n  emailAddress=rawText.substring(7);\n  int queryStart=emailAddress.indexOf('?');\n  if (queryStart >= 0) {\n    emailAddress=emailAddress.substring(0,queryStart);\n  }\n  Map<String,String> nameValues=parseNameValuePairs(rawText);\n  String subject=null;\n  String body=null;\n  if (nameValues != null) {\n    if (emailAddress.length() == 0) {\n      emailAddress=nameValues.get(\"to\");\n    }\n    subject=nameValues.get(\"subject\");\n    body=nameValues.get(\"body\");\n  }\n  return new EmailAddressParsedResult(emailAddress,subject,body,rawText);\n}\n else {\n  if (!EmailDoCoMoResultParser.isBasicallyValidEmailAddress(rawText)) {\n    return null;\n  }\n  emailAddress=rawText;\n  return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 32,
        "startColumnNumber" : 55,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  String emailAddress;\n  if (rawText.startsWith(\"mailto:\") || rawText.startsWith(\"MAILTO:\")) {\n    emailAddress=rawText.substring(7);\n    int queryStart=emailAddress.indexOf('?');\n    if (queryStart >= 0) {\n      emailAddress=emailAddress.substring(0,queryStart);\n    }\n    Map<String,String> nameValues=parseNameValuePairs(rawText);\n    String subject=null;\n    String body=null;\n    if (nameValues != null) {\n      if (emailAddress.length() == 0) {\n        emailAddress=nameValues.get(\"to\");\n      }\n      subject=nameValues.get(\"subject\");\n      body=nameValues.get(\"body\");\n    }\n    return new EmailAddressParsedResult(emailAddress,subject,body,rawText);\n  }\n else {\n    if (!EmailDoCoMoResultParser.isBasicallyValidEmailAddress(rawText)) {\n      return null;\n    }\n    emailAddress=rawText;\n    return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1173,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public EmailAddressParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  String emailAddress;\n  if (rawText.startsWith(\"mailto:\") || rawText.startsWith(\"MAILTO:\")) {\n    emailAddress=rawText.substring(7);\n    int queryStart=emailAddress.indexOf('?');\n    if (queryStart >= 0) {\n      emailAddress=emailAddress.substring(0,queryStart);\n    }\n    Map<String,String> nameValues=parseNameValuePairs(rawText);\n    String subject=null;\n    String body=null;\n    if (nameValues != null) {\n      if (emailAddress.length() == 0) {\n        emailAddress=nameValues.get(\"to\");\n      }\n      subject=nameValues.get(\"subject\");\n      body=nameValues.get(\"body\");\n    }\n    return new EmailAddressParsedResult(emailAddress,subject,body,rawText);\n  }\n else {\n    if (!EmailDoCoMoResultParser.isBasicallyValidEmailAddress(rawText)) {\n      return null;\n    }\n    emailAddress=rawText;\n    return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 94
      },
      "nodeContext" : "return new EmailAddressParsedResult(emailAddress,null,null,\"mailto:\" + emailAddress);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "com.google.zxing.client.result.EmailAddressParsedResult"
  } ],
  "positionList" : [ {
    "charLength" : 80,
    "startLineNumber" : 58,
    "startColumnNumber" : 13,
    "endLineNumber" : 58,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}