{
  "id" : 16,
  "expression" : "value + \" is duplicated in \" + clazz",
  "projectName" : "permissions-dispatcher@PermissionsDispatcher",
  "commitID" : "206b897c3b59e6555b22c8c7f3aa9f79c423868b",
  "filePath" : "/permissionsdispatcher-processor/src/main/java/permissions/dispatcher/processor/Validator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value + \" is duplicated in \" + clazz",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 38,
      "startColumnNumber" : 51,
      "endLineNumber" : 38,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 38,
        "startColumnNumber" : 22,
        "endLineNumber" : 38,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new DuplicatedValueException(value + \" is duplicated in \" + clazz)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 37,
        "startColumnNumber" : 39,
        "endLineNumber" : 39,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!values.addAll(value)) {\n  throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 35,
        "startColumnNumber" : 49,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> value=getValueFromAnnotation(method,clazz);\n  if (!values.addAll(value)) {\n    throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ExecutableElement method : methods) {\n  List<String> value=getValueFromAnnotation(method,clazz);\n  if (!values.addAll(value)) {\n    throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 33,
        "startColumnNumber" : 105,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> values=new HashSet<>();\n  for (  ExecutableElement method : methods) {\n    List<String> value=getValueFromAnnotation(method,clazz);\n    if (!values.addAll(value)) {\n      throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void checkDuplicatedValue(List<ExecutableElement> methods,Class<? extends Annotation> clazz){\n  Set<String> values=new HashSet<>();\n  for (  ExecutableElement method : methods) {\n    List<String> value=getValueFromAnnotation(method,clazz);\n    if (!values.addAll(value)) {\n      throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "throw new DuplicatedValueException(value + \" is duplicated in \" + clazz);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 38,
    "startColumnNumber" : 51,
    "endLineNumber" : 38,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}