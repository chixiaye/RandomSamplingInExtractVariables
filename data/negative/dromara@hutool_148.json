{
  "id" : 148,
  "expression" : "FileUtil.readBytes(file)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-extra/src/main/java/cn/hutool/extra/compress/archiver/SevenZArchiver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FileUtil.readBytes(file)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 140,
      "startColumnNumber" : 14,
      "endLineNumber" : 140,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 39
      },
      "nodeContext" : "out.write(FileUtil.readBytes(file))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 40
      },
      "nodeContext" : "out.write(FileUtil.readBytes(file));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 138,
        "startColumnNumber" : 22,
        "endLineNumber" : 141,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  out.write(FileUtil.readBytes(file));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 138,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (file.isFile()) {\n  out.write(FileUtil.readBytes(file));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 137,
        "startColumnNumber" : 9,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (file.isFile()) {\n    out.write(FileUtil.readBytes(file));\n  }\n  out.closeArchiveEntry();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (file.isDirectory()) {\n  final File[] files=file.listFiles();\n  for (  File childFile : files) {\n    addInternal(childFile,entryName,filter);\n  }\n}\n else {\n  if (file.isFile()) {\n    out.write(FileUtil.readBytes(file));\n  }\n  out.closeArchiveEntry();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 623,
        "startLineNumber" : 122,
        "startColumnNumber" : 90,
        "endLineNumber" : 144,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null != filter && false == filter.accept(file)) {\n    return;\n  }\n  final SevenZOutputFile out=this.sevenZOutputFile;\n  final String entryName=StrUtil.addSuffixIfNot(StrUtil.nullToEmpty(path),StrUtil.SLASH) + file.getName();\n  out.putArchiveEntry(out.createArchiveEntry(file,entryName));\n  if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    for (    File childFile : files) {\n      addInternal(childFile,entryName,filter);\n    }\n  }\n else {\n    if (file.isFile()) {\n      out.write(FileUtil.readBytes(file));\n    }\n    out.closeArchiveEntry();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 115,
        "startColumnNumber" : 1,
        "endLineNumber" : 144,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将文件或目录加入归档包，目录采取递归读取方式按照层级加入\n * @param file   文件或目录\n * @param path   文件或目录的初始路径，null表示位于根路径\n * @param filter 文件过滤器，指定哪些文件或目录可以加入，当{@link Filter#accept(Object)}为true时加入。\n */\nprivate void addInternal(File file,String path,Filter<File> filter) throws IOException {\n  if (null != filter && false == filter.accept(file)) {\n    return;\n  }\n  final SevenZOutputFile out=this.sevenZOutputFile;\n  final String entryName=StrUtil.addSuffixIfNot(StrUtil.nullToEmpty(path),StrUtil.SLASH) + file.getName();\n  out.putArchiveEntry(out.createArchiveEntry(file,entryName));\n  if (file.isDirectory()) {\n    final File[] files=file.listFiles();\n    for (    File childFile : files) {\n      addInternal(childFile,entryName,filter);\n    }\n  }\n else {\n    if (file.isFile()) {\n      out.write(FileUtil.readBytes(file));\n    }\n    out.closeArchiveEntry();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 40
      },
      "nodeContext" : "out.write(FileUtil.readBytes(file));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 140,
    "startColumnNumber" : 14,
    "endLineNumber" : 140,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}