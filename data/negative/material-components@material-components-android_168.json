{
  "id" : 168,
  "expression" : "(endR - startR)",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/animation/ArgbEvaluatorCompat.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(endR - startR)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 78,
      "startColumnNumber" : 34,
      "endLineNumber" : 78,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 78,
        "startColumnNumber" : 23,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "fraction * (endR - startR)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 78,
        "startColumnNumber" : 14,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "startR + fraction * (endR - startR)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "r=startR + fraction * (endR - startR)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 50
      },
      "nodeContext" : "float r=startR + fraction * (endR - startR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 80,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int startInt=startValue;\n  float startA=((startInt >> 24) & 0xff) / 255.0f;\n  float startR=((startInt >> 16) & 0xff) / 255.0f;\n  float startG=((startInt >> 8) & 0xff) / 255.0f;\n  float startB=(startInt & 0xff) / 255.0f;\n  int endInt=endValue;\n  float endA=((endInt >> 24) & 0xff) / 255.0f;\n  float endR=((endInt >> 16) & 0xff) / 255.0f;\n  float endG=((endInt >> 8) & 0xff) / 255.0f;\n  float endB=(endInt & 0xff) / 255.0f;\n  startR=(float)Math.pow(startR,2.2);\n  startG=(float)Math.pow(startG,2.2);\n  startB=(float)Math.pow(startB,2.2);\n  endR=(float)Math.pow(endR,2.2);\n  endG=(float)Math.pow(endG,2.2);\n  endB=(float)Math.pow(endB,2.2);\n  float a=startA + fraction * (endA - startA);\n  float r=startR + fraction * (endR - startR);\n  float g=startG + fraction * (endG - startG);\n  float b=startB + fraction * (endB - startB);\n  a=a * 255.0f;\n  r=(float)Math.pow(r,1.0 / 2.2) * 255.0f;\n  g=(float)Math.pow(g,1.0 / 2.2) * 255.0f;\n  b=(float)Math.pow(b,1.0 / 2.2) * 255.0f;\n  return Math.round(a) << 24 | Math.round(r) << 16 | Math.round(g) << 8 | Math.round(b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2267,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This function returns the calculated in-between value for a color given integers that represent the start and end values in the four bytes of the 32-bit int. Each channel is separately linearly interpolated and the resulting calculated values are recombined into the return value.\n * @param fraction The fraction from the starting to the ending values\n * @param startValue A 32-bit int value representing colors in the separate bytes of the parameter\n * @param endValue A 32-bit int value representing colors in the separate bytes of the parameter\n * @return A value that is calculated to be the linearly interpolated result, derived byseparating the start and end values into separate color channels and interpolating each one separately, recombining the resulting values in the same way.\n */\n@Override public Integer evaluate(float fraction,Integer startValue,Integer endValue){\n  int startInt=startValue;\n  float startA=((startInt >> 24) & 0xff) / 255.0f;\n  float startR=((startInt >> 16) & 0xff) / 255.0f;\n  float startG=((startInt >> 8) & 0xff) / 255.0f;\n  float startB=(startInt & 0xff) / 255.0f;\n  int endInt=endValue;\n  float endA=((endInt >> 24) & 0xff) / 255.0f;\n  float endR=((endInt >> 16) & 0xff) / 255.0f;\n  float endG=((endInt >> 8) & 0xff) / 255.0f;\n  float endB=(endInt & 0xff) / 255.0f;\n  startR=(float)Math.pow(startR,2.2);\n  startG=(float)Math.pow(startG,2.2);\n  startB=(float)Math.pow(startB,2.2);\n  endR=(float)Math.pow(endR,2.2);\n  endG=(float)Math.pow(endG,2.2);\n  endB=(float)Math.pow(endB,2.2);\n  float a=startA + fraction * (endA - startA);\n  float r=startR + fraction * (endR - startR);\n  float g=startG + fraction * (endG - startG);\n  float b=startB + fraction * (endB - startB);\n  a=a * 255.0f;\n  r=(float)Math.pow(r,1.0 / 2.2) * 255.0f;\n  g=(float)Math.pow(g,1.0 / 2.2) * 255.0f;\n  b=(float)Math.pow(b,1.0 / 2.2) * 255.0f;\n  return Math.round(a) << 24 | Math.round(r) << 16 | Math.round(g) << 8 | Math.round(b);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 310,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 50
      },
      "nodeContext" : "float r=startR + fraction * (endR - startR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 78,
    "startColumnNumber" : 34,
    "endLineNumber" : 78,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}