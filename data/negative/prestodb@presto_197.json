{
  "id" : 197,
  "expression" : "maxLevelValue",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-parquet/src/main/java/com/facebook/presto/parquet/batchreader/decoders/Decoders.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "maxLevelValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 304,
      "startColumnNumber" : 12,
      "endLineNumber" : 304,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 304,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 30
      },
      "nodeContext" : "maxLevelValue == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 304,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (maxLevelValue == 0) {\n  return new FlatDefinitionLevelDecoder(0,valueCount);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isRequired) {\n    return new FlatDefinitionLevelDecoder(1,valueCount);\n  }\n  if (maxLevelValue == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n  if (bitWidth == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  checkArgument(encoding == RLE,\"Invalid definition level encoding: \" + encoding);\n  ByteBufferInputStream bufferInputStream=ByteBufferInputStream.wrap(buffer);\n  final int bufferSize=readIntLittleEndian(bufferInputStream);\n  FlatDefinitionLevelDecoder definitionLevelDecoder=new FlatDefinitionLevelDecoder(valueCount,bufferInputStream.sliceStream(bufferSize));\n  buffer.position(buffer.position() + bufferSize + 4);\n  return definitionLevelDecoder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 297,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static final FlatDefinitionLevelDecoder createFlatDefinitionLevelDecoder(ParquetEncoding encoding,boolean isRequired,int maxLevelValue,int valueCount,ByteBuffer buffer) throws IOException {\n  if (isRequired) {\n    return new FlatDefinitionLevelDecoder(1,valueCount);\n  }\n  if (maxLevelValue == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n  if (bitWidth == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  checkArgument(encoding == RLE,\"Invalid definition level encoding: \" + encoding);\n  ByteBufferInputStream bufferInputStream=ByteBufferInputStream.wrap(buffer);\n  final int bufferSize=readIntLittleEndian(bufferInputStream);\n  FlatDefinitionLevelDecoder definitionLevelDecoder=new FlatDefinitionLevelDecoder(valueCount,bufferInputStream.sliceStream(bufferSize));\n  buffer.position(buffer.position() + bufferSize + 4);\n  return definitionLevelDecoder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 304,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 30
      },
      "nodeContext" : "maxLevelValue == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "maxLevelValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 308,
      "startColumnNumber" : 48,
      "endLineNumber" : 308,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 308,
        "startColumnNumber" : 29,
        "endLineNumber" : 308,
        "endColumnNumber" : 62
      },
      "nodeContext" : "getWidthFromMaxInt(maxLevelValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 308,
        "startColumnNumber" : 18,
        "endLineNumber" : 308,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bitWidth=getWidthFromMaxInt(maxLevelValue)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isRequired) {\n    return new FlatDefinitionLevelDecoder(1,valueCount);\n  }\n  if (maxLevelValue == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n  if (bitWidth == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  checkArgument(encoding == RLE,\"Invalid definition level encoding: \" + encoding);\n  ByteBufferInputStream bufferInputStream=ByteBufferInputStream.wrap(buffer);\n  final int bufferSize=readIntLittleEndian(bufferInputStream);\n  FlatDefinitionLevelDecoder definitionLevelDecoder=new FlatDefinitionLevelDecoder(valueCount,bufferInputStream.sliceStream(bufferSize));\n  buffer.position(buffer.position() + bufferSize + 4);\n  return definitionLevelDecoder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 297,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static final FlatDefinitionLevelDecoder createFlatDefinitionLevelDecoder(ParquetEncoding encoding,boolean isRequired,int maxLevelValue,int valueCount,ByteBuffer buffer) throws IOException {\n  if (isRequired) {\n    return new FlatDefinitionLevelDecoder(1,valueCount);\n  }\n  if (maxLevelValue == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n  if (bitWidth == 0) {\n    return new FlatDefinitionLevelDecoder(0,valueCount);\n  }\n  checkArgument(encoding == RLE,\"Invalid definition level encoding: \" + encoding);\n  ByteBufferInputStream bufferInputStream=ByteBufferInputStream.wrap(buffer);\n  final int bufferSize=readIntLittleEndian(bufferInputStream);\n  FlatDefinitionLevelDecoder definitionLevelDecoder=new FlatDefinitionLevelDecoder(valueCount,bufferInputStream.sliceStream(bufferSize));\n  buffer.position(buffer.position() + bufferSize + 4);\n  return definitionLevelDecoder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final int bitWidth=getWidthFromMaxInt(maxLevelValue);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 304,
    "startColumnNumber" : 12,
    "endLineNumber" : 304,
    "endColumnNumber" : 25
  }, {
    "charLength" : 13,
    "startLineNumber" : 308,
    "startColumnNumber" : 48,
    "endLineNumber" : 308,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}