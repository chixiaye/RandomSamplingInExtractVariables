{
  "id" : 41,
  "expression" : "bizException.businessErrorCode",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/test/src/test/java/AppTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bizException.businessErrorCode",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 90,
      "startColumnNumber" : 28,
      "endLineNumber" : 90,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 88,
        "startColumnNumber" : 63,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (businessEx instanceof MyBusinessException) {\n  Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 86,
        "startColumnNumber" : 65,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Throwable businessEx=e.getOriginalException();\n  if (businessEx instanceof MyBusinessException) {\n    Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (code == TransactionalExecutor.Code.RollbackDone) {\n  Throwable businessEx=e.getOriginalException();\n  if (businessEx instanceof MyBusinessException) {\n    Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n  }\n}\n else {\n  Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 84,
        "startColumnNumber" : 61,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TransactionalExecutor.Code code=e.getCode();\n  if (code == TransactionalExecutor.Code.RollbackDone) {\n    Throwable businessEx=e.getOriginalException();\n    if (businessEx instanceof MyBusinessException) {\n      Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n    }\n  }\n else {\n    Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 84,
        "startColumnNumber" : 10,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (TransactionalExecutor.ExecutionException e) {\n  TransactionalExecutor.Code code=e.getCode();\n  if (code == TransactionalExecutor.Code.RollbackDone) {\n    Throwable businessEx=e.getOriginalException();\n    if (businessEx instanceof MyBusinessException) {\n      Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n    }\n  }\n else {\n    Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 66,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  transactionalTemplate.execute(new TransactionalExecutor(){\n    @Override public Object execute() throws Throwable {\n      if (LOGGER.isInfoEnabled()) {\n        LOGGER.info(\"Exception Rollback Business Begin ...\");\n      }\n      jdbcTemplate.update(\"update user0 set name = 'xxx' where id = ?\",new Object[]{1});\n      jdbcTemplate.update(\"insert into user1 (id, name, gmt) values (1, 'user1', '2019-01-01')\");\n      throw bizException;\n    }\n    @Override public TransactionInfo getTransactionInfo(){\n      TransactionInfo txInfo=new TransactionInfo();\n      txInfo.setTimeOut(TX_TIME_OUT);\n      txInfo.setName(TX_NAME);\n      return txInfo;\n    }\n  }\n);\n}\n catch (TransactionalExecutor.ExecutionException e) {\n  TransactionalExecutor.Code code=e.getCode();\n  if (code == TransactionalExecutor.Code.RollbackDone) {\n    Throwable businessEx=e.getOriginalException();\n    if (businessEx instanceof MyBusinessException) {\n      Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n    }\n  }\n else {\n    Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 143,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2385,
        "startLineNumber" : 47,
        "startColumnNumber" : 60,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TMClient.init(APPLICATION_ID,TX_SERVICE_GROUP);\n  RMClient.init(APPLICATION_ID,TX_SERVICE_GROUP);\n  ClassPathXmlApplicationContext context=new ClassPathXmlApplicationContext(\"basic-test-context.xml\");\n  final JdbcTemplate jdbcTemplate=(JdbcTemplate)context.getBean(\"jdbcTemplate\");\n  jdbcTemplate.update(\"delete from undo_log\");\n  jdbcTemplate.update(\"delete from user0\");\n  jdbcTemplate.update(\"insert into user0 (id, name, gmt) values (1, 'user0', '2019-01-01')\");\n  jdbcTemplate.update(\"delete from user1\");\n  final MyBusinessException bizException=new MyBusinessException(\"mock bizException\");\n  TransactionalTemplate transactionalTemplate=new TransactionalTemplate();\n  try {\n    transactionalTemplate.execute(new TransactionalExecutor(){\n      @Override public Object execute() throws Throwable {\n        if (LOGGER.isInfoEnabled()) {\n          LOGGER.info(\"Exception Rollback Business Begin ...\");\n        }\n        jdbcTemplate.update(\"update user0 set name = 'xxx' where id = ?\",new Object[]{1});\n        jdbcTemplate.update(\"insert into user1 (id, name, gmt) values (1, 'user1', '2019-01-01')\");\n        throw bizException;\n      }\n      @Override public TransactionInfo getTransactionInfo(){\n        TransactionInfo txInfo=new TransactionInfo();\n        txInfo.setTimeOut(TX_TIME_OUT);\n        txInfo.setName(TX_NAME);\n        return txInfo;\n      }\n    }\n);\n  }\n catch (  TransactionalExecutor.ExecutionException e) {\n    TransactionalExecutor.Code code=e.getCode();\n    if (code == TransactionalExecutor.Code.RollbackDone) {\n      Throwable businessEx=e.getOriginalException();\n      if (businessEx instanceof MyBusinessException) {\n        Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n      }\n    }\n else {\n      Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n    }\n  }\n  new ApplicationKeeper(context).keep();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2542,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The entry point of application.\n * @param args the input arguments\n */\npublic static void main(String[] args) throws Throwable {\n  TMClient.init(APPLICATION_ID,TX_SERVICE_GROUP);\n  RMClient.init(APPLICATION_ID,TX_SERVICE_GROUP);\n  ClassPathXmlApplicationContext context=new ClassPathXmlApplicationContext(\"basic-test-context.xml\");\n  final JdbcTemplate jdbcTemplate=(JdbcTemplate)context.getBean(\"jdbcTemplate\");\n  jdbcTemplate.update(\"delete from undo_log\");\n  jdbcTemplate.update(\"delete from user0\");\n  jdbcTemplate.update(\"insert into user0 (id, name, gmt) values (1, 'user0', '2019-01-01')\");\n  jdbcTemplate.update(\"delete from user1\");\n  final MyBusinessException bizException=new MyBusinessException(\"mock bizException\");\n  TransactionalTemplate transactionalTemplate=new TransactionalTemplate();\n  try {\n    transactionalTemplate.execute(new TransactionalExecutor(){\n      @Override public Object execute() throws Throwable {\n        if (LOGGER.isInfoEnabled()) {\n          LOGGER.info(\"Exception Rollback Business Begin ...\");\n        }\n        jdbcTemplate.update(\"update user0 set name = 'xxx' where id = ?\",new Object[]{1});\n        jdbcTemplate.update(\"insert into user1 (id, name, gmt) values (1, 'user1', '2019-01-01')\");\n        throw bizException;\n      }\n      @Override public TransactionInfo getTransactionInfo(){\n        TransactionInfo txInfo=new TransactionInfo();\n        txInfo.setTimeOut(TX_TIME_OUT);\n        txInfo.setName(TX_NAME);\n        return txInfo;\n      }\n    }\n);\n  }\n catch (  TransactionalExecutor.ExecutionException e) {\n    TransactionalExecutor.Code code=e.getCode();\n    if (code == TransactionalExecutor.Code.RollbackDone) {\n      Throwable businessEx=e.getOriginalException();\n      if (businessEx instanceof MyBusinessException) {\n        Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode);\n      }\n    }\n else {\n      Assertions.assertFalse(false,\"Not expected,\" + e.getMessage());\n    }\n  }\n  new ApplicationKeeper(context).keep();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 237,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assertions.assertEquals(((MyBusinessException)businessEx).getBusinessErrorCode(),bizException.businessErrorCode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 90,
    "startColumnNumber" : 28,
    "endLineNumber" : 90,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}