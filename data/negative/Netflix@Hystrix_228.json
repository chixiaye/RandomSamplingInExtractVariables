{
  "id" : 228,
  "expression" : "i < 5",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingThreadPoolEventCounterStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < 5",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 456,
      "startColumnNumber" : 24,
      "endLineNumber" : 456,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 456,
        "startColumnNumber" : 8,
        "endLineNumber" : 458,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  fallbackSaturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,400));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2184,
        "startLineNumber" : 442,
        "startColumnNumber" : 40,
        "endLineNumber" : 486,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandGroupKey groupKey=HystrixCommandGroupKey.Factory.asKey(\"ThreadPool-L\");\n  HystrixThreadPoolKey threadPoolKey=HystrixThreadPoolKey.Factory.asKey(\"ThreadPool-L\");\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"RollingCounter-L\");\n  stream=RollingThreadPoolEventCounterStream.getInstance(threadPoolKey,10,500);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(5).subscribe(getSubscriber(latch));\n  List<CommandStreamTest.Command> fallbackSaturators=new ArrayList<CommandStreamTest.Command>();\n  for (int i=0; i < 5; i++) {\n    fallbackSaturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,400));\n  }\n  CommandStreamTest.Command rejection1=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,0);\n  CommandStreamTest.Command rejection2=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,0);\n  for (  CommandStreamTest.Command saturator : fallbackSaturators) {\n    saturator.observe();\n  }\n  try {\n    Thread.sleep(70);\n  }\n catch (  InterruptedException ex) {\n    fail(ex.getMessage());\n  }\n  rejection1.observe();\n  rejection2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(2,stream.getLatest().length);\n  assertEquals(7,stream.getLatestCount(HystrixEventType.ThreadPool.EXECUTED));\n  assertEquals(0,stream.getLatestCount(HystrixEventType.ThreadPool.REJECTED));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2230,
        "startLineNumber" : 441,
        "startColumnNumber" : 4,
        "endLineNumber" : 486,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFallbackRejection(){\n  HystrixCommandGroupKey groupKey=HystrixCommandGroupKey.Factory.asKey(\"ThreadPool-L\");\n  HystrixThreadPoolKey threadPoolKey=HystrixThreadPoolKey.Factory.asKey(\"ThreadPool-L\");\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"RollingCounter-L\");\n  stream=RollingThreadPoolEventCounterStream.getInstance(threadPoolKey,10,500);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(5).subscribe(getSubscriber(latch));\n  List<CommandStreamTest.Command> fallbackSaturators=new ArrayList<CommandStreamTest.Command>();\n  for (int i=0; i < 5; i++) {\n    fallbackSaturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,400));\n  }\n  CommandStreamTest.Command rejection1=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,0);\n  CommandStreamTest.Command rejection2=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,0);\n  for (  CommandStreamTest.Command saturator : fallbackSaturators) {\n    saturator.observe();\n  }\n  try {\n    Thread.sleep(70);\n  }\n catch (  InterruptedException ex) {\n    fail(ex.getMessage());\n  }\n  rejection1.observe();\n  rejection2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(2,stream.getLatest().length);\n  assertEquals(7,stream.getLatestCount(HystrixEventType.ThreadPool.EXECUTED));\n  assertEquals(0,stream.getLatestCount(HystrixEventType.ThreadPool.REJECTED));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 456,
        "startColumnNumber" : 8,
        "endLineNumber" : 458,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  fallbackSaturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.FAILURE,20,HystrixEventType.FALLBACK_SUCCESS,400));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 456,
    "startColumnNumber" : 24,
    "endLineNumber" : 456,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}