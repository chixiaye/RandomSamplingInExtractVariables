{
  "id" : 173,
  "expression" : "\"/+$\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/values/Registration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/+$\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 153,
      "startColumnNumber" : 51,
      "endLineNumber" : 153,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 153,
        "startColumnNumber" : 34,
        "endLineNumber" : 153,
        "endColumnNumber" : 61
      },
      "nodeContext" : "url.replaceFirst(\"/+$\",\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 153,
        "startColumnNumber" : 34,
        "endLineNumber" : 153,
        "endColumnNumber" : 73
      },
      "nodeContext" : "url.replaceFirst(\"/+$\",\"\") + \"/health\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 153,
        "endColumnNumber" : 74
      },
      "nodeContext" : "builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 153,
        "endColumnNumber" : 93
      },
      "nodeContext" : "builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 153,
        "endColumnNumber" : 94
      },
      "nodeContext" : "builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 151,
        "startColumnNumber" : 33,
        "endLineNumber" : 154,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String url=node.get(\"url\").asText();\n  builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 151,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (node.has(\"url\")) {\n  String url=node.get(\"url\").asText();\n  builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n}\n else {\n  if (node.has(\"healthUrl\")) {\n    builder.healthUrl(node.get(\"healthUrl\").asText());\n  }\n  if (node.has(\"managementUrl\")) {\n    builder.managementUrl(node.get(\"managementUrl\").asText());\n  }\n  if (node.has(\"serviceUrl\")) {\n    builder.serviceUrl(node.get(\"serviceUrl\").asText());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 144,
        "startColumnNumber" : 102,
        "endLineNumber" : 174,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JsonNode node=p.readValueAsTree();\n  Registration.Builder builder=Registration.builder();\n  if (node.has(\"name\")) {\n    builder.name(node.get(\"name\").asText());\n  }\n  if (node.has(\"url\")) {\n    String url=node.get(\"url\").asText();\n    builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n  }\n else {\n    if (node.has(\"healthUrl\")) {\n      builder.healthUrl(node.get(\"healthUrl\").asText());\n    }\n    if (node.has(\"managementUrl\")) {\n      builder.managementUrl(node.get(\"managementUrl\").asText());\n    }\n    if (node.has(\"serviceUrl\")) {\n      builder.serviceUrl(node.get(\"serviceUrl\").asText());\n    }\n  }\n  if (node.has(\"metadata\")) {\n    Iterator<Map.Entry<String,JsonNode>> it=node.get(\"metadata\").fields();\n    while (it.hasNext()) {\n      Map.Entry<String,JsonNode> entry=it.next();\n      builder.metadata(entry.getKey(),entry.getValue().asText());\n    }\n  }\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Registration deserialize(JsonParser p,DeserializationContext ctxt) throws IOException {\n  JsonNode node=p.readValueAsTree();\n  Registration.Builder builder=Registration.builder();\n  if (node.has(\"name\")) {\n    builder.name(node.get(\"name\").asText());\n  }\n  if (node.has(\"url\")) {\n    String url=node.get(\"url\").asText();\n    builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n  }\n else {\n    if (node.has(\"healthUrl\")) {\n      builder.healthUrl(node.get(\"healthUrl\").asText());\n    }\n    if (node.has(\"managementUrl\")) {\n      builder.managementUrl(node.get(\"managementUrl\").asText());\n    }\n    if (node.has(\"serviceUrl\")) {\n      builder.serviceUrl(node.get(\"serviceUrl\").asText());\n    }\n  }\n  if (node.has(\"metadata\")) {\n    Iterator<Map.Entry<String,JsonNode>> it=node.get(\"metadata\").fields();\n    while (it.hasNext()) {\n      Map.Entry<String,JsonNode> entry=it.next();\n      builder.metadata(entry.getKey(),entry.getValue().asText());\n    }\n  }\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 153,
        "endColumnNumber" : 94
      },
      "nodeContext" : "builder.healthUrl(url.replaceFirst(\"/+$\",\"\") + \"/health\").managementUrl(url);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 153,
    "startColumnNumber" : 51,
    "endLineNumber" : 153,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}