{
  "id" : 469,
  "expression" : "psArgs",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/download/DownloadDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "psArgs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 917,
      "startColumnNumber" : 46,
      "endLineNumber" : 917,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 916,
        "startColumnNumber" : 8,
        "endLineNumber" : 917,
        "endColumnNumber" : 79
      },
      "nodeContext" : "DownloadManagerService.startMission(context,urls,storage,kind,threads,currentInfo.getUrl(),psName,psArgs,nearLength,recoveryInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 916,
        "startColumnNumber" : 8,
        "endLineNumber" : 917,
        "endColumnNumber" : 80
      },
      "nodeContext" : "DownloadManagerService.startMission(context,urls,storage,kind,threads,currentInfo.getUrl(),psName,psArgs,nearLength,recoveryInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4194,
        "startLineNumber" : 817,
        "startColumnNumber" : 83,
        "endLineNumber" : 920,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!storage.canWrite()) {\n    showFailedDialog(R.string.permission_denied);\n    return;\n  }\n  try {\n    if (storage.length() > 0) {\n      storage.truncate();\n    }\n  }\n catch (  IOException e) {\n    Log.e(TAG,\"failed to truncate the file: \" + storage.getUri().toString(),e);\n    showFailedDialog(R.string.overwrite_failed);\n    return;\n  }\n  Stream selectedStream;\n  Stream secondaryStream=null;\n  char kind;\n  int threads=threadsSeekBar.getProgress() + 1;\n  String[] urls;\n  MissionRecoveryInfo[] recoveryInfo;\n  String psName=null;\n  String[] psArgs=null;\n  long nearLength=0;\nswitch (radioStreamsGroup.getCheckedRadioButtonId()) {\ncase R.id.audio_button:    kind='a';\n  selectedStream=audioStreamsAdapter.getItem(selectedAudioIndex);\nif (selectedStream.getFormat() == MediaFormat.M4A) {\n  psName=Postprocessing.ALGORITHM_M4A_NO_DASH;\n}\n else if (selectedStream.getFormat() == MediaFormat.WEBMA_OPUS) {\n  psName=Postprocessing.ALGORITHM_OGG_FROM_WEBM_DEMUXER;\n}\nbreak;\ncase R.id.video_button:kind='v';\nselectedStream=videoStreamsAdapter.getItem(selectedVideoIndex);\nSecondaryStreamHelper<AudioStream> secondary=videoStreamsAdapter.getAllSecondary().get(wrappedVideoStreams.getStreamsList().indexOf(selectedStream));\nif (secondary != null) {\nsecondaryStream=secondary.getStream();\nif (selectedStream.getFormat() == MediaFormat.MPEG_4) {\npsName=Postprocessing.ALGORITHM_MP4_FROM_DASH_MUXER;\n}\n else {\npsName=Postprocessing.ALGORITHM_WEBM_MUXER;\n}\npsArgs=null;\nlong videoSize=wrappedVideoStreams.getSizeInBytes((VideoStream)selectedStream);\nif (secondary.getSizeInBytes() > 0 && videoSize > 0) {\nnearLength=secondary.getSizeInBytes() + videoSize;\n}\n}\nbreak;\ncase R.id.subtitle_button:threads=1;\nkind='s';\nselectedStream=subtitleStreamsAdapter.getItem(selectedSubtitleIndex);\nif (selectedStream.getFormat() == MediaFormat.TTML) {\npsName=Postprocessing.ALGORITHM_TTML_CONVERTER;\npsArgs=new String[]{selectedStream.getFormat().getSuffix(),\"false\"};\n}\nbreak;\ndefault:return;\n}\nif (secondaryStream == null) {\nurls=new String[]{selectedStream.getUrl()};\nrecoveryInfo=new MissionRecoveryInfo[]{new MissionRecoveryInfo(selectedStream)};\n}\n else {\nurls=new String[]{selectedStream.getUrl(),secondaryStream.getUrl()};\nrecoveryInfo=new MissionRecoveryInfo[]{new MissionRecoveryInfo(selectedStream),new MissionRecoveryInfo(secondaryStream)};\n}\nDownloadManagerService.startMission(context,urls,storage,kind,threads,currentInfo.getUrl(),psName,psArgs,nearLength,recoveryInfo);\ndismiss();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 406,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4273,
        "startLineNumber" : 817,
        "startColumnNumber" : 4,
        "endLineNumber" : 920,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void continueSelectedDownload(@NonNull final StoredFileHelper storage){\n  if (!storage.canWrite()) {\n    showFailedDialog(R.string.permission_denied);\n    return;\n  }\n  try {\n    if (storage.length() > 0) {\n      storage.truncate();\n    }\n  }\n catch (  IOException e) {\n    Log.e(TAG,\"failed to truncate the file: \" + storage.getUri().toString(),e);\n    showFailedDialog(R.string.overwrite_failed);\n    return;\n  }\n  Stream selectedStream;\n  Stream secondaryStream=null;\n  char kind;\n  int threads=threadsSeekBar.getProgress() + 1;\n  String[] urls;\n  MissionRecoveryInfo[] recoveryInfo;\n  String psName=null;\n  String[] psArgs=null;\n  long nearLength=0;\nswitch (radioStreamsGroup.getCheckedRadioButtonId()) {\ncase R.id.audio_button:    kind='a';\n  selectedStream=audioStreamsAdapter.getItem(selectedAudioIndex);\nif (selectedStream.getFormat() == MediaFormat.M4A) {\n  psName=Postprocessing.ALGORITHM_M4A_NO_DASH;\n}\n else if (selectedStream.getFormat() == MediaFormat.WEBMA_OPUS) {\n  psName=Postprocessing.ALGORITHM_OGG_FROM_WEBM_DEMUXER;\n}\nbreak;\ncase R.id.video_button:kind='v';\nselectedStream=videoStreamsAdapter.getItem(selectedVideoIndex);\nSecondaryStreamHelper<AudioStream> secondary=videoStreamsAdapter.getAllSecondary().get(wrappedVideoStreams.getStreamsList().indexOf(selectedStream));\nif (secondary != null) {\nsecondaryStream=secondary.getStream();\nif (selectedStream.getFormat() == MediaFormat.MPEG_4) {\npsName=Postprocessing.ALGORITHM_MP4_FROM_DASH_MUXER;\n}\n else {\npsName=Postprocessing.ALGORITHM_WEBM_MUXER;\n}\npsArgs=null;\nlong videoSize=wrappedVideoStreams.getSizeInBytes((VideoStream)selectedStream);\nif (secondary.getSizeInBytes() > 0 && videoSize > 0) {\nnearLength=secondary.getSizeInBytes() + videoSize;\n}\n}\nbreak;\ncase R.id.subtitle_button:threads=1;\nkind='s';\nselectedStream=subtitleStreamsAdapter.getItem(selectedSubtitleIndex);\nif (selectedStream.getFormat() == MediaFormat.TTML) {\npsName=Postprocessing.ALGORITHM_TTML_CONVERTER;\npsArgs=new String[]{selectedStream.getFormat().getSuffix(),\"false\"};\n}\nbreak;\ndefault:return;\n}\nif (secondaryStream == null) {\nurls=new String[]{selectedStream.getUrl()};\nrecoveryInfo=new MissionRecoveryInfo[]{new MissionRecoveryInfo(selectedStream)};\n}\n else {\nurls=new String[]{selectedStream.getUrl(),secondaryStream.getUrl()};\nrecoveryInfo=new MissionRecoveryInfo[]{new MissionRecoveryInfo(selectedStream),new MissionRecoveryInfo(secondaryStream)};\n}\nDownloadManagerService.startMission(context,urls,storage,kind,threads,currentInfo.getUrl(),psName,psArgs,nearLength,recoveryInfo);\ndismiss();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 417,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 916,
        "startColumnNumber" : 8,
        "endLineNumber" : 917,
        "endColumnNumber" : 79
      },
      "nodeContext" : "DownloadManagerService.startMission(context,urls,storage,kind,threads,currentInfo.getUrl(),psName,psArgs,nearLength,recoveryInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 917,
    "startColumnNumber" : 46,
    "endLineNumber" : 917,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}