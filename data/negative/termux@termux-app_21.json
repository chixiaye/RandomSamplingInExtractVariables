{
  "id" : 21,
  "expression" : "\"\\033OQ\"",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/terminal/KeyHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\033OQ\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 185,
      "startColumnNumber" : 40,
      "endLineNumber" : 185,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 185,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q')",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return (keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7057,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 279,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (keyCode) {\ncase KEYCODE_DPAD_CENTER:  return \"\\015\";\ncase KEYCODE_DPAD_UP:return (keyMode == 0) ? (cursorApp ? \"\\033OA\" : \"\\033[A\") : transformForModifiers(\"\\033[1\",keyMode,'A');\ncase KEYCODE_DPAD_DOWN:return (keyMode == 0) ? (cursorApp ? \"\\033OB\" : \"\\033[B\") : transformForModifiers(\"\\033[1\",keyMode,'B');\ncase KEYCODE_DPAD_RIGHT:return (keyMode == 0) ? (cursorApp ? \"\\033OC\" : \"\\033[C\") : transformForModifiers(\"\\033[1\",keyMode,'C');\ncase KEYCODE_DPAD_LEFT:return (keyMode == 0) ? (cursorApp ? \"\\033OD\" : \"\\033[D\") : transformForModifiers(\"\\033[1\",keyMode,'D');\ncase KEYCODE_MOVE_HOME:return (keyMode == 0) ? (cursorApp ? \"\\033OH\" : \"\\033[H\") : transformForModifiers(\"\\033[1\",keyMode,'H');\ncase KEYCODE_MOVE_END:return (keyMode == 0) ? (cursorApp ? \"\\033OF\" : \"\\033[F\") : transformForModifiers(\"\\033[1\",keyMode,'F');\ncase KEYCODE_F1:return (keyMode == 0) ? \"\\033OP\" : transformForModifiers(\"\\033[1\",keyMode,'P');\ncase KEYCODE_F2:return (keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q');\ncase KEYCODE_F3:return (keyMode == 0) ? \"\\033OR\" : transformForModifiers(\"\\033[1\",keyMode,'R');\ncase KEYCODE_F4:return (keyMode == 0) ? \"\\033OS\" : transformForModifiers(\"\\033[1\",keyMode,'S');\ncase KEYCODE_F5:return transformForModifiers(\"\\033[15\",keyMode,'~');\ncase KEYCODE_F6:return transformForModifiers(\"\\033[17\",keyMode,'~');\ncase KEYCODE_F7:return transformForModifiers(\"\\033[18\",keyMode,'~');\ncase KEYCODE_F8:return transformForModifiers(\"\\033[19\",keyMode,'~');\ncase KEYCODE_F9:return transformForModifiers(\"\\033[20\",keyMode,'~');\ncase KEYCODE_F10:return transformForModifiers(\"\\033[21\",keyMode,'~');\ncase KEYCODE_F11:return transformForModifiers(\"\\033[23\",keyMode,'~');\ncase KEYCODE_F12:return transformForModifiers(\"\\033[24\",keyMode,'~');\ncase KEYCODE_SYSRQ:return \"\\033[32~\";\ncase KEYCODE_BREAK:return \"\\033[34~\";\ncase KEYCODE_ESCAPE:case KEYCODE_BACK:return \"\\033\";\ncase KEYCODE_INSERT:return transformForModifiers(\"\\033[2\",keyMode,'~');\ncase KEYCODE_FORWARD_DEL:return transformForModifiers(\"\\033[3\",keyMode,'~');\ncase KEYCODE_PAGE_UP:return \"\\033[5~\";\ncase KEYCODE_PAGE_DOWN:return \"\\033[6~\";\ncase KEYCODE_DEL:String prefix=((keyMode & KEYMOD_ALT) == 0) ? \"\" : \"\\033\";\nreturn prefix + (((keyMode & KEYMOD_CTRL) == 0) ? \"\\u007F\" : \"\\u0008\");\ncase KEYCODE_NUM_LOCK:return \"\\033OP\";\ncase KEYCODE_SPACE:return ((keyMode & KEYMOD_CTRL) == 0) ? null : \"\\0\";\ncase KEYCODE_TAB:return (keyMode & KEYMOD_SHIFT) == 0 ? \"\\011\" : \"\\033[Z\";\ncase KEYCODE_ENTER:return ((keyMode & KEYMOD_ALT) == 0) ? \"\\r\" : \"\\033\\r\";\ncase KEYCODE_NUMPAD_ENTER:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'M') : \"\\n\";\ncase KEYCODE_NUMPAD_MULTIPLY:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'j') : \"*\";\ncase KEYCODE_NUMPAD_ADD:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'k') : \"+\";\ncase KEYCODE_NUMPAD_COMMA:return \",\";\ncase KEYCODE_NUMPAD_DOT:return keypadApplication ? \"\\033On\" : \".\";\ncase KEYCODE_NUMPAD_SUBTRACT:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'m') : \"-\";\ncase KEYCODE_NUMPAD_DIVIDE:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'o') : \"/\";\ncase KEYCODE_NUMPAD_0:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'p') : \"0\";\ncase KEYCODE_NUMPAD_1:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'q') : \"1\";\ncase KEYCODE_NUMPAD_2:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'r') : \"2\";\ncase KEYCODE_NUMPAD_3:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'s') : \"3\";\ncase KEYCODE_NUMPAD_4:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'t') : \"4\";\ncase KEYCODE_NUMPAD_5:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'u') : \"5\";\ncase KEYCODE_NUMPAD_6:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'v') : \"6\";\ncase KEYCODE_NUMPAD_7:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'w') : \"7\";\ncase KEYCODE_NUMPAD_8:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'x') : \"8\";\ncase KEYCODE_NUMPAD_9:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'y') : \"9\";\ncase KEYCODE_NUMPAD_EQUALS:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'X') : \"=\";\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 532,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7095,
        "startLineNumber" : 151,
        "startColumnNumber" : 105,
        "endLineNumber" : 282,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (keyCode) {\ncase KEYCODE_DPAD_CENTER:    return \"\\015\";\ncase KEYCODE_DPAD_UP:  return (keyMode == 0) ? (cursorApp ? \"\\033OA\" : \"\\033[A\") : transformForModifiers(\"\\033[1\",keyMode,'A');\ncase KEYCODE_DPAD_DOWN:return (keyMode == 0) ? (cursorApp ? \"\\033OB\" : \"\\033[B\") : transformForModifiers(\"\\033[1\",keyMode,'B');\ncase KEYCODE_DPAD_RIGHT:return (keyMode == 0) ? (cursorApp ? \"\\033OC\" : \"\\033[C\") : transformForModifiers(\"\\033[1\",keyMode,'C');\ncase KEYCODE_DPAD_LEFT:return (keyMode == 0) ? (cursorApp ? \"\\033OD\" : \"\\033[D\") : transformForModifiers(\"\\033[1\",keyMode,'D');\ncase KEYCODE_MOVE_HOME:return (keyMode == 0) ? (cursorApp ? \"\\033OH\" : \"\\033[H\") : transformForModifiers(\"\\033[1\",keyMode,'H');\ncase KEYCODE_MOVE_END:return (keyMode == 0) ? (cursorApp ? \"\\033OF\" : \"\\033[F\") : transformForModifiers(\"\\033[1\",keyMode,'F');\ncase KEYCODE_F1:return (keyMode == 0) ? \"\\033OP\" : transformForModifiers(\"\\033[1\",keyMode,'P');\ncase KEYCODE_F2:return (keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q');\ncase KEYCODE_F3:return (keyMode == 0) ? \"\\033OR\" : transformForModifiers(\"\\033[1\",keyMode,'R');\ncase KEYCODE_F4:return (keyMode == 0) ? \"\\033OS\" : transformForModifiers(\"\\033[1\",keyMode,'S');\ncase KEYCODE_F5:return transformForModifiers(\"\\033[15\",keyMode,'~');\ncase KEYCODE_F6:return transformForModifiers(\"\\033[17\",keyMode,'~');\ncase KEYCODE_F7:return transformForModifiers(\"\\033[18\",keyMode,'~');\ncase KEYCODE_F8:return transformForModifiers(\"\\033[19\",keyMode,'~');\ncase KEYCODE_F9:return transformForModifiers(\"\\033[20\",keyMode,'~');\ncase KEYCODE_F10:return transformForModifiers(\"\\033[21\",keyMode,'~');\ncase KEYCODE_F11:return transformForModifiers(\"\\033[23\",keyMode,'~');\ncase KEYCODE_F12:return transformForModifiers(\"\\033[24\",keyMode,'~');\ncase KEYCODE_SYSRQ:return \"\\033[32~\";\ncase KEYCODE_BREAK:return \"\\033[34~\";\ncase KEYCODE_ESCAPE:case KEYCODE_BACK:return \"\\033\";\ncase KEYCODE_INSERT:return transformForModifiers(\"\\033[2\",keyMode,'~');\ncase KEYCODE_FORWARD_DEL:return transformForModifiers(\"\\033[3\",keyMode,'~');\ncase KEYCODE_PAGE_UP:return \"\\033[5~\";\ncase KEYCODE_PAGE_DOWN:return \"\\033[6~\";\ncase KEYCODE_DEL:String prefix=((keyMode & KEYMOD_ALT) == 0) ? \"\" : \"\\033\";\nreturn prefix + (((keyMode & KEYMOD_CTRL) == 0) ? \"\\u007F\" : \"\\u0008\");\ncase KEYCODE_NUM_LOCK:return \"\\033OP\";\ncase KEYCODE_SPACE:return ((keyMode & KEYMOD_CTRL) == 0) ? null : \"\\0\";\ncase KEYCODE_TAB:return (keyMode & KEYMOD_SHIFT) == 0 ? \"\\011\" : \"\\033[Z\";\ncase KEYCODE_ENTER:return ((keyMode & KEYMOD_ALT) == 0) ? \"\\r\" : \"\\033\\r\";\ncase KEYCODE_NUMPAD_ENTER:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'M') : \"\\n\";\ncase KEYCODE_NUMPAD_MULTIPLY:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'j') : \"*\";\ncase KEYCODE_NUMPAD_ADD:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'k') : \"+\";\ncase KEYCODE_NUMPAD_COMMA:return \",\";\ncase KEYCODE_NUMPAD_DOT:return keypadApplication ? \"\\033On\" : \".\";\ncase KEYCODE_NUMPAD_SUBTRACT:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'m') : \"-\";\ncase KEYCODE_NUMPAD_DIVIDE:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'o') : \"/\";\ncase KEYCODE_NUMPAD_0:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'p') : \"0\";\ncase KEYCODE_NUMPAD_1:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'q') : \"1\";\ncase KEYCODE_NUMPAD_2:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'r') : \"2\";\ncase KEYCODE_NUMPAD_3:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'s') : \"3\";\ncase KEYCODE_NUMPAD_4:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'t') : \"4\";\ncase KEYCODE_NUMPAD_5:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'u') : \"5\";\ncase KEYCODE_NUMPAD_6:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'v') : \"6\";\ncase KEYCODE_NUMPAD_7:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'w') : \"7\";\ncase KEYCODE_NUMPAD_8:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'x') : \"8\";\ncase KEYCODE_NUMPAD_9:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'y') : \"9\";\ncase KEYCODE_NUMPAD_EQUALS:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'X') : \"=\";\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 535,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7196,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 282,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getCode(int keyCode,int keyMode,boolean cursorApp,boolean keypadApplication){\nswitch (keyCode) {\ncase KEYCODE_DPAD_CENTER:    return \"\\015\";\ncase KEYCODE_DPAD_UP:  return (keyMode == 0) ? (cursorApp ? \"\\033OA\" : \"\\033[A\") : transformForModifiers(\"\\033[1\",keyMode,'A');\ncase KEYCODE_DPAD_DOWN:return (keyMode == 0) ? (cursorApp ? \"\\033OB\" : \"\\033[B\") : transformForModifiers(\"\\033[1\",keyMode,'B');\ncase KEYCODE_DPAD_RIGHT:return (keyMode == 0) ? (cursorApp ? \"\\033OC\" : \"\\033[C\") : transformForModifiers(\"\\033[1\",keyMode,'C');\ncase KEYCODE_DPAD_LEFT:return (keyMode == 0) ? (cursorApp ? \"\\033OD\" : \"\\033[D\") : transformForModifiers(\"\\033[1\",keyMode,'D');\ncase KEYCODE_MOVE_HOME:return (keyMode == 0) ? (cursorApp ? \"\\033OH\" : \"\\033[H\") : transformForModifiers(\"\\033[1\",keyMode,'H');\ncase KEYCODE_MOVE_END:return (keyMode == 0) ? (cursorApp ? \"\\033OF\" : \"\\033[F\") : transformForModifiers(\"\\033[1\",keyMode,'F');\ncase KEYCODE_F1:return (keyMode == 0) ? \"\\033OP\" : transformForModifiers(\"\\033[1\",keyMode,'P');\ncase KEYCODE_F2:return (keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q');\ncase KEYCODE_F3:return (keyMode == 0) ? \"\\033OR\" : transformForModifiers(\"\\033[1\",keyMode,'R');\ncase KEYCODE_F4:return (keyMode == 0) ? \"\\033OS\" : transformForModifiers(\"\\033[1\",keyMode,'S');\ncase KEYCODE_F5:return transformForModifiers(\"\\033[15\",keyMode,'~');\ncase KEYCODE_F6:return transformForModifiers(\"\\033[17\",keyMode,'~');\ncase KEYCODE_F7:return transformForModifiers(\"\\033[18\",keyMode,'~');\ncase KEYCODE_F8:return transformForModifiers(\"\\033[19\",keyMode,'~');\ncase KEYCODE_F9:return transformForModifiers(\"\\033[20\",keyMode,'~');\ncase KEYCODE_F10:return transformForModifiers(\"\\033[21\",keyMode,'~');\ncase KEYCODE_F11:return transformForModifiers(\"\\033[23\",keyMode,'~');\ncase KEYCODE_F12:return transformForModifiers(\"\\033[24\",keyMode,'~');\ncase KEYCODE_SYSRQ:return \"\\033[32~\";\ncase KEYCODE_BREAK:return \"\\033[34~\";\ncase KEYCODE_ESCAPE:case KEYCODE_BACK:return \"\\033\";\ncase KEYCODE_INSERT:return transformForModifiers(\"\\033[2\",keyMode,'~');\ncase KEYCODE_FORWARD_DEL:return transformForModifiers(\"\\033[3\",keyMode,'~');\ncase KEYCODE_PAGE_UP:return \"\\033[5~\";\ncase KEYCODE_PAGE_DOWN:return \"\\033[6~\";\ncase KEYCODE_DEL:String prefix=((keyMode & KEYMOD_ALT) == 0) ? \"\" : \"\\033\";\nreturn prefix + (((keyMode & KEYMOD_CTRL) == 0) ? \"\\u007F\" : \"\\u0008\");\ncase KEYCODE_NUM_LOCK:return \"\\033OP\";\ncase KEYCODE_SPACE:return ((keyMode & KEYMOD_CTRL) == 0) ? null : \"\\0\";\ncase KEYCODE_TAB:return (keyMode & KEYMOD_SHIFT) == 0 ? \"\\011\" : \"\\033[Z\";\ncase KEYCODE_ENTER:return ((keyMode & KEYMOD_ALT) == 0) ? \"\\r\" : \"\\033\\r\";\ncase KEYCODE_NUMPAD_ENTER:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'M') : \"\\n\";\ncase KEYCODE_NUMPAD_MULTIPLY:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'j') : \"*\";\ncase KEYCODE_NUMPAD_ADD:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'k') : \"+\";\ncase KEYCODE_NUMPAD_COMMA:return \",\";\ncase KEYCODE_NUMPAD_DOT:return keypadApplication ? \"\\033On\" : \".\";\ncase KEYCODE_NUMPAD_SUBTRACT:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'m') : \"-\";\ncase KEYCODE_NUMPAD_DIVIDE:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'o') : \"/\";\ncase KEYCODE_NUMPAD_0:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'p') : \"0\";\ncase KEYCODE_NUMPAD_1:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'q') : \"1\";\ncase KEYCODE_NUMPAD_2:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'r') : \"2\";\ncase KEYCODE_NUMPAD_3:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'s') : \"3\";\ncase KEYCODE_NUMPAD_4:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'t') : \"4\";\ncase KEYCODE_NUMPAD_5:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'u') : \"5\";\ncase KEYCODE_NUMPAD_6:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'v') : \"6\";\ncase KEYCODE_NUMPAD_7:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'w') : \"7\";\ncase KEYCODE_NUMPAD_8:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'x') : \"8\";\ncase KEYCODE_NUMPAD_9:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'y') : \"9\";\ncase KEYCODE_NUMPAD_EQUALS:return keypadApplication ? transformForModifiers(\"\\033O\",keyMode,'X') : \"=\";\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 553,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return (keyMode == 0) ? \"\\033OQ\" : transformForModifiers(\"\\033[1\",keyMode,'Q');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 185,
    "startColumnNumber" : 40,
    "endLineNumber" : 185,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}