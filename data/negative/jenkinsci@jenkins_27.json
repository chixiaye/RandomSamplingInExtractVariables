{
  "id" : 27,
  "expression" : "!found || !old.isEmpty()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/Actionable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!found || !old.isEmpty()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 212,
      "startColumnNumber" : 15,
      "endLineNumber" : 212,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return !found || !old.isEmpty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 193,
        "startColumnNumber" : 57,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (a == null) {\n    throw new IllegalArgumentException(\"Action must be non-null\");\n  }\n  List<Action> old=new ArrayList<>(1);\n  List<Action> current=getActions();\n  boolean found=false;\n  for (  Action a2 : current) {\n    if (!found && a.equals(a2)) {\n      found=true;\n    }\n else     if (a2.getClass() == a.getClass()) {\n      old.add(a2);\n    }\n  }\n  current.removeAll(old);\n  if (!found) {\n    addAction(a);\n  }\n  return !found || !old.isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1731,
        "startLineNumber" : 178,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add an action, replacing any existing actions of the (exact) same class. Note: calls to  {@link #getAllActions()} that happen before calls to this method may not see the update.Note: this method does not affect transient actions contributed by a  {@link TransientActionFactory}Note: this method cannot provide concurrency control due to the backing storage being a {@link CopyOnWriteArrayList} so concurrent calls to any of the mutation methods may produce surprising resultsthough technically consistent from the concurrency contract of  {@link CopyOnWriteArrayList} (we would needsome form of transactions or a different backing type).\n * @param a an action to add/replace\n * @return {@code true} if this actions changed as a result of the call\n * @since 2.29\n */\n@SuppressWarnings({\"ConstantConditions\"}) @SuppressFBWarnings(\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\") public boolean addOrReplaceAction(@NonNull Action a){\n  if (a == null) {\n    throw new IllegalArgumentException(\"Action must be non-null\");\n  }\n  List<Action> old=new ArrayList<>(1);\n  List<Action> current=getActions();\n  boolean found=false;\n  for (  Action a2 : current) {\n    if (!found && a.equals(a2)) {\n      found=true;\n    }\n else     if (a2.getClass() == a.getClass()) {\n      old.add(a2);\n    }\n  }\n  current.removeAll(old);\n  if (!found) {\n    addAction(a);\n  }\n  return !found || !old.isEmpty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return !found || !old.isEmpty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 212,
    "startColumnNumber" : 15,
    "endLineNumber" : 212,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}