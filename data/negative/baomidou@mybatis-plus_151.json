{
  "id" : 151,
  "expression" : "System",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/test/java/com/baomidou/mybatisplus/test/GlobalConfigurationTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 74,
      "startColumnNumber" : 8,
      "endLineNumber" : 74,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 34
      },
      "nodeContext" : "System.out.println(notPKS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 35
      },
      "nodeContext" : "System.out.println(notPKS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 全局配置测试\n */\n@org.junit.Test public void testGlobalConfig(){\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 35
      },
      "nodeContext" : "System.out.println(notPKS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 77,
      "startColumnNumber" : 8,
      "endLineNumber" : 77,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(type.getSqlSegment())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.out.println(type.getSqlSegment());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 全局配置测试\n */\n@org.junit.Test public void testGlobalConfig(){\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.out.println(type.getSqlSegment());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 84,
      "startColumnNumber" : 12,
      "endLineNumber" : 84,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(\"因为没有主键,所以没有注入该方法\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(\"因为没有主键,所以没有注入该方法\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 83,
        "startColumnNumber" : 30,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"因为没有主键,所以没有注入该方法\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 83,
        "startColumnNumber" : 10,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  System.out.println(\"因为没有主键,所以没有注入该方法\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  notPK2=pkMapper.selectById(\"1\");\n}\n catch (Exception e) {\n  System.out.println(\"因为没有主键,所以没有注入该方法\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 全局配置测试\n */\n@org.junit.Test public void testGlobalConfig(){\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(\"因为没有主键,所以没有注入该方法\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 98,
      "startColumnNumber" : 8,
      "endLineNumber" : 98,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(list))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(list));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 全局配置测试\n */\n@org.junit.Test public void testGlobalConfig(){\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(list));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 99,
      "startColumnNumber" : 8,
      "endLineNumber" : 99,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(new HashSet<>(list)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 全局配置测试\n */\n@org.junit.Test public void testGlobalConfig(){\n  SqlSession session=this.sqlSessionFactory().openSession(false);\n  TestMapper testMapper=session.getMapper(TestMapper.class);\n  Test test=new Test();\n  test.setCreateTime(new Date());\n  test.setType(\"\");\n  testMapper.insert(test);\n  SqlSession sqlSession=this.sqlSessionFactory().openSession(false);\n  NotPKMapper pkMapper=sqlSession.getMapper(NotPKMapper.class);\n  NotPK notPK=new NotPK();\n  notPK.setUuid(UUID.randomUUID().toString());\n  notPK.setIs(true);\n  notPK.setIsis(false);\n  int num=pkMapper.insert(notPK);\n  Assert.assertTrue(num > 0);\n  NotPK notPK1=pkMapper.selectOne(notPK);\n  Assert.assertNotNull(notPK1);\n  List<NotPK> notPKS=pkMapper.selectPage(RowBounds.DEFAULT,new EntityWrapper<>(notPK));\n  System.out.println(notPKS);\n  Wrapper type=Condition.create().eq(\"type\",12121212);\n  Assert.assertFalse(type.isEmptyOfWhere());\n  System.out.println(type.getSqlSegment());\n  Assert.assertFalse(type.isEmptyOfWhere());\n  pkMapper.selectPage(RowBounds.DEFAULT,type);\n  NotPK notPK2=null;\n  try {\n    notPK2=pkMapper.selectById(\"1\");\n  }\n catch (  Exception e) {\n    System.out.println(\"因为没有主键,所以没有注入该方法\");\n  }\n  Assert.assertNull(notPK2);\n  int count=pkMapper.selectCount(Condition.EMPTY);\n  pkMapper.selectList(Condition.<NotPK>wrapper().orderBy(\"uuid\"));\n  pkMapper.selectList(Condition.<NotPK>wrapper().eq(\"uuid\",\"uuid\").orderBy(\"uuid\"));\n  Assert.assertTrue(count > 0);\n  int deleteCount=pkMapper.delete(null);\n  Assert.assertTrue(deleteCount > 0);\n  List<String> list=new ArrayList<>();\n  list.add(\"1\");\n  list.add(\"2\");\n  list.add(\"3\");\n  RoleMapper mapper=sqlSession.getMapper(RoleMapper.class);\n  System.out.println(mapper.selectBatchIds(list));\n  System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n  sqlSession.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "System.out.println(mapper.selectBatchIds(new HashSet<>(list)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 74,
    "startColumnNumber" : 8,
    "endLineNumber" : 74,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 77,
    "startColumnNumber" : 8,
    "endLineNumber" : 77,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 84,
    "startColumnNumber" : 12,
    "endLineNumber" : 84,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 98,
    "startColumnNumber" : 8,
    "endLineNumber" : 98,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 99,
    "startColumnNumber" : 8,
    "endLineNumber" : 99,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}