{
  "id" : 420,
  "expression" : "chainLength > 0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/TaskState.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "chainLength > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 70,
      "startColumnNumber" : 16,
      "endLineNumber" : 70,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Preconditions.checkArgument(chainLength > 0,\"There has to be at least one operator in the operator chain.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Preconditions.checkArgument(chainLength > 0,\"There has to be at least one operator in the operator chain.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 61,
        "startColumnNumber" : 91,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkArgument(parallelism <= maxParallelism,\"Parallelism \" + parallelism + \" is not smaller or equal to max parallelism \"+ maxParallelism+ \".\");\n  Preconditions.checkArgument(chainLength > 0,\"There has to be at least one operator in the operator chain.\");\n  this.jobVertexID=jobVertexID;\n  this.subtaskStates=new HashMap<>(parallelism);\n  this.parallelism=parallelism;\n  this.maxParallelism=maxParallelism;\n  this.chainLength=chainLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public TaskState(JobVertexID jobVertexID,int parallelism,int maxParallelism,int chainLength){\n  Preconditions.checkArgument(parallelism <= maxParallelism,\"Parallelism \" + parallelism + \" is not smaller or equal to max parallelism \"+ maxParallelism+ \".\");\n  Preconditions.checkArgument(chainLength > 0,\"There has to be at least one operator in the operator chain.\");\n  this.jobVertexID=jobVertexID;\n  this.subtaskStates=new HashMap<>(parallelism);\n  this.parallelism=parallelism;\n  this.maxParallelism=maxParallelism;\n  this.chainLength=chainLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Preconditions.checkArgument(chainLength > 0,\"There has to be at least one operator in the operator chain.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 70,
    "startColumnNumber" : 16,
    "endLineNumber" : 70,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}