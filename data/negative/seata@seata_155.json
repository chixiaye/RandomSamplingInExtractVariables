{
  "id" : 155,
  "expression" : "new ArrayList<>()",
  "projectName" : "seata@seata",
  "commitID" : "f35b292094e873c4112423fe51a1102ee4f8f917",
  "filePath" : "rm-datasource/src/main/java/com/alibaba/fescar/rm/datasource/exec/SelectForUpdateExecutor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayList<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 65,
      "startColumnNumber" : 42,
      "endLineNumber" : 65,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 65,
        "startColumnNumber" : 26,
        "endLineNumber" : 65,
        "endColumnNumber" : 59
      },
      "nodeContext" : "paramAppender=new ArrayList<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ArrayList<Object> paramAppender=new ArrayList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3197,
        "startLineNumber" : 52,
        "startColumnNumber" : 61,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLSelectRecognizer recognizer=(SQLSelectRecognizer)sqlRecognizer;\n  Connection conn=statementProxy.getConnection();\n  ResultSet rs=null;\n  Savepoint sp=null;\n  LockRetryController lockRetryController=new LockRetryController();\n  boolean originalAutoCommit=conn.getAutoCommit();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  selectSQLAppender.append(getColumnNameInSQL(getTableMeta().getPkName()));\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  if (!StringUtils.isEmpty(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectPKSQL=selectSQLAppender.toString();\n  try {\n    if (originalAutoCommit) {\n      conn.setAutoCommit(false);\n    }\n    sp=conn.setSavepoint();\n    rs=statementCallback.execute(statementProxy.getTargetStatement(),args);\n    while (true) {\n      Statement stPK=null;\n      PreparedStatement pstPK=null;\n      ResultSet rsPK=null;\n      try {\n        if (paramAppender.isEmpty()) {\n          stPK=statementProxy.getConnection().createStatement();\n          rsPK=stPK.executeQuery(selectPKSQL);\n        }\n else {\n          pstPK=statementProxy.getConnection().prepareStatement(selectPKSQL);\n          for (int i=0; i < paramAppender.size(); i++) {\n            pstPK.setObject(i + 1,paramAppender.get(i));\n          }\n          rsPK=pstPK.executeQuery();\n        }\n        TableRecords selectPKRows=TableRecords.buildRecords(getTableMeta(),rsPK);\n        String lockKeys=buildLockKey(selectPKRows);\n        statementProxy.getConnectionProxy().checkLock(lockKeys);\n        break;\n      }\n catch (      LockConflictException lce) {\n        conn.rollback(sp);\n        lockRetryController.sleep(lce);\n      }\n finally {\n        if (rsPK != null) {\n          rsPK.close();\n        }\n        if (stPK != null) {\n          stPK.close();\n        }\n        if (pstPK != null) {\n          pstPK.close();\n        }\n      }\n    }\n  }\n  finally {\n    if (sp != null) {\n      conn.releaseSavepoint(sp);\n    }\n    if (originalAutoCommit) {\n      conn.setAutoCommit(true);\n    }\n  }\n  return rs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 343,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3268,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object doExecute(Object... args) throws Throwable {\n  SQLSelectRecognizer recognizer=(SQLSelectRecognizer)sqlRecognizer;\n  Connection conn=statementProxy.getConnection();\n  ResultSet rs=null;\n  Savepoint sp=null;\n  LockRetryController lockRetryController=new LockRetryController();\n  boolean originalAutoCommit=conn.getAutoCommit();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  selectSQLAppender.append(getColumnNameInSQL(getTableMeta().getPkName()));\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  if (!StringUtils.isEmpty(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectPKSQL=selectSQLAppender.toString();\n  try {\n    if (originalAutoCommit) {\n      conn.setAutoCommit(false);\n    }\n    sp=conn.setSavepoint();\n    rs=statementCallback.execute(statementProxy.getTargetStatement(),args);\n    while (true) {\n      Statement stPK=null;\n      PreparedStatement pstPK=null;\n      ResultSet rsPK=null;\n      try {\n        if (paramAppender.isEmpty()) {\n          stPK=statementProxy.getConnection().createStatement();\n          rsPK=stPK.executeQuery(selectPKSQL);\n        }\n else {\n          pstPK=statementProxy.getConnection().prepareStatement(selectPKSQL);\n          for (int i=0; i < paramAppender.size(); i++) {\n            pstPK.setObject(i + 1,paramAppender.get(i));\n          }\n          rsPK=pstPK.executeQuery();\n        }\n        TableRecords selectPKRows=TableRecords.buildRecords(getTableMeta(),rsPK);\n        String lockKeys=buildLockKey(selectPKRows);\n        statementProxy.getConnectionProxy().checkLock(lockKeys);\n        break;\n      }\n catch (      LockConflictException lce) {\n        conn.rollback(sp);\n        lockRetryController.sleep(lce);\n      }\n finally {\n        if (rsPK != null) {\n          rsPK.close();\n        }\n        if (stPK != null) {\n          stPK.close();\n        }\n        if (pstPK != null) {\n          pstPK.close();\n        }\n      }\n    }\n  }\n  finally {\n    if (sp != null) {\n      conn.releaseSavepoint(sp);\n    }\n    if (originalAutoCommit) {\n      conn.setAutoCommit(true);\n    }\n  }\n  return rs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ArrayList<Object> paramAppender=new ArrayList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 65,
    "startColumnNumber" : 42,
    "endLineNumber" : 65,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}