{
  "id" : 89,
  "expression" : "Time",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/types/FormationAI.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Time",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 71,
      "endLineNumber" : 51,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 51,
        "startColumnNumber" : 71,
        "endLineNumber" : 51,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Time.delta",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 51,
        "startColumnNumber" : 22,
        "endLineNumber" : 51,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 51,
        "startColumnNumber" : 14,
        "endLineNumber" : 51,
        "endColumnNumber" : 81
      },
      "nodeContext" : "speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1771,
        "startLineNumber" : 28,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateUnit(){\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Time",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 52,
      "startColumnNumber" : 120,
      "endLineNumber" : 52,
      "endColumnNumber" : 124
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 52,
        "startColumnNumber" : 120,
        "endLineNumber" : 52,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Time.delta",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 52,
        "startColumnNumber" : 115,
        "endLineNumber" : 52,
        "endColumnNumber" : 130
      },
      "nodeContext" : "1f / Time.delta",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 52,
        "endColumnNumber" : 131
      },
      "nodeContext" : "Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 132
      },
      "nodeContext" : "unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 133
      },
      "nodeContext" : "unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1771,
        "startLineNumber" : 28,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateUnit(){\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 133
      },
      "nodeContext" : "unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 71,
    "endLineNumber" : 51,
    "endColumnNumber" : 75
  }, {
    "charLength" : 4,
    "startLineNumber" : 52,
    "startColumnNumber" : 120,
    "endLineNumber" : 52,
    "endColumnNumber" : 124
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}