{
  "id" : 90,
  "expression" : "new AssertionError()",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-converters/protobuf/src/main/java/retrofit/converter/ProtoConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AssertionError()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 40,
      "startColumnNumber" : 12,
      "endLineNumber" : 40,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 33
      },
      "nodeContext" : "throw new AssertionError();\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 39,
        "startColumnNumber" : 39,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new AssertionError();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IllegalAccessException e) {\n  throw new AssertionError();\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Method parseFrom=c.getMethod(\"parseFrom\",InputStream.class);\n  return parseFrom.invoke(null,body.in());\n}\n catch (InvocationTargetException e) {\n  throw new ConversionException(c.getName() + \".parseFrom() failed\",e.getCause());\n}\ncatch (NoSuchMethodException e) {\n  throw new IllegalArgumentException(\"Expected a protobuf message but was \" + c.getName());\n}\ncatch (IllegalAccessException e) {\n  throw new AssertionError();\n}\ncatch (IOException e) {\n  throw new ConversionException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 18,
        "startColumnNumber" : 90,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(type instanceof Class<?>)) {\n    throw new IllegalArgumentException(\"Expected a raw Class<?> but was \" + type);\n  }\n  Class<?> c=(Class<?>)type;\n  if (!AbstractMessageLite.class.isAssignableFrom(c)) {\n    throw new IllegalArgumentException(\"Expected a protobuf message but was \" + c.getName());\n  }\n  String mimeType=body.mimeType();\n  if (!MIME_TYPE.equals(mimeType)) {\n    throw new ConversionException(\"Response content type was not a proto: \" + mimeType);\n  }\n  try {\n    Method parseFrom=c.getMethod(\"parseFrom\",InputStream.class);\n    return parseFrom.invoke(null,body.in());\n  }\n catch (  InvocationTargetException e) {\n    throw new ConversionException(c.getName() + \".parseFrom() failed\",e.getCause());\n  }\ncatch (  NoSuchMethodException e) {\n    throw new IllegalArgumentException(\"Expected a protobuf message but was \" + c.getName());\n  }\ncatch (  IllegalAccessException e) {\n    throw new AssertionError();\n  }\ncatch (  IOException e) {\n    throw new ConversionException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 18,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object fromBody(TypedInput body,Type type) throws ConversionException {\n  if (!(type instanceof Class<?>)) {\n    throw new IllegalArgumentException(\"Expected a raw Class<?> but was \" + type);\n  }\n  Class<?> c=(Class<?>)type;\n  if (!AbstractMessageLite.class.isAssignableFrom(c)) {\n    throw new IllegalArgumentException(\"Expected a protobuf message but was \" + c.getName());\n  }\n  String mimeType=body.mimeType();\n  if (!MIME_TYPE.equals(mimeType)) {\n    throw new ConversionException(\"Response content type was not a proto: \" + mimeType);\n  }\n  try {\n    Method parseFrom=c.getMethod(\"parseFrom\",InputStream.class);\n    return parseFrom.invoke(null,body.in());\n  }\n catch (  InvocationTargetException e) {\n    throw new ConversionException(c.getName() + \".parseFrom() failed\",e.getCause());\n  }\ncatch (  NoSuchMethodException e) {\n    throw new IllegalArgumentException(\"Expected a protobuf message but was \" + c.getName());\n  }\ncatch (  IllegalAccessException e) {\n    throw new AssertionError();\n  }\ncatch (  IOException e) {\n    throw new ConversionException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 33
      },
      "nodeContext" : "throw new AssertionError();\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.AssertionError"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 40,
    "startColumnNumber" : 12,
    "endLineNumber" : 40,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}