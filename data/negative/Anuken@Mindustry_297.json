{
  "id" : 297,
  "expression" : "state.teams.playerCores()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/WaveSpawner.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state.teams.playerCores()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 114,
      "startColumnNumber" : 84,
      "endLineNumber" : 114,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 114,
        "startColumnNumber" : 84,
        "endLineNumber" : 114,
        "endColumnNumber" : 119
      },
      "nodeContext" : "state.teams.playerCores().isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 114,
        "startColumnNumber" : 83,
        "endLineNumber" : 114,
        "endColumnNumber" : 119
      },
      "nodeContext" : "!state.teams.playerCores().isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 114,
        "startColumnNumber" : 11,
        "endLineNumber" : 114,
        "endColumnNumber" : 119
      },
      "nodeContext" : "state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n  Building firstCore=state.teams.playerCores().first();\n  for (  Building core : state.rules.waveTeam.cores()) {\n    Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n    boolean valid=false;\n    int steps=0;\n    while (steps++ < maxSteps) {\n      int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n      any=false;\n      Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n        if (world.solid(x,y)) {\n          any=true;\n        }\n      }\n);\n      if (!any) {\n        valid=true;\n        break;\n      }\n else {\n        Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n      }\n    }\n    if (valid) {\n      cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 107,
        "startColumnNumber" : 52,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state.hasSpawns()) {\n    for (    Tile spawn : spawns) {\n      cons.accept(spawn.worldx(),spawn.worldy(),true);\n    }\n  }\n  if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n    Building firstCore=state.teams.playerCores().first();\n    for (    Building core : state.rules.waveTeam.cores()) {\n      Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n      boolean valid=false;\n      int steps=0;\n      while (steps++ < maxSteps) {\n        int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n        any=false;\n        Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n          if (world.solid(x,y)) {\n            any=true;\n          }\n        }\n);\n        if (!any) {\n          valid=true;\n          break;\n        }\n else {\n          Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n        }\n      }\n      if (valid) {\n        cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void eachGroundSpawn(SpawnConsumer cons){\n  if (state.hasSpawns()) {\n    for (    Tile spawn : spawns) {\n      cons.accept(spawn.worldx(),spawn.worldy(),true);\n    }\n  }\n  if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n    Building firstCore=state.teams.playerCores().first();\n    for (    Building core : state.rules.waveTeam.cores()) {\n      Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n      boolean valid=false;\n      int steps=0;\n      while (steps++ < maxSteps) {\n        int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n        any=false;\n        Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n          if (world.solid(x,y)) {\n            any=true;\n          }\n        }\n);\n        if (!any) {\n          valid=true;\n          break;\n        }\n else {\n          Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n        }\n      }\n      if (valid) {\n        cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 114,
        "startColumnNumber" : 11,
        "endLineNumber" : 114,
        "endColumnNumber" : 119
      },
      "nodeContext" : "state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "mindustry.ai.Seq<mindustry.world.blocks.storage.CoreBlock.CoreBuild>"
  }, {
    "nodeContext" : "state.teams.playerCores()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 115,
      "startColumnNumber" : 33,
      "endLineNumber" : 115,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 115,
        "startColumnNumber" : 33,
        "endLineNumber" : 115,
        "endColumnNumber" : 66
      },
      "nodeContext" : "state.teams.playerCores().first()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 115,
        "startColumnNumber" : 21,
        "endLineNumber" : 115,
        "endColumnNumber" : 66
      },
      "nodeContext" : "firstCore=state.teams.playerCores().first()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Building firstCore=state.teams.playerCores().first();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1286,
        "startLineNumber" : 114,
        "startColumnNumber" : 120,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Building firstCore=state.teams.playerCores().first();\n  for (  Building core : state.rules.waveTeam.cores()) {\n    Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n    boolean valid=false;\n    int steps=0;\n    while (steps++ < maxSteps) {\n      int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n      any=false;\n      Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n        if (world.solid(x,y)) {\n          any=true;\n        }\n      }\n);\n      if (!any) {\n        valid=true;\n        break;\n      }\n else {\n        Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n      }\n    }\n    if (valid) {\n      cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n  Building firstCore=state.teams.playerCores().first();\n  for (  Building core : state.rules.waveTeam.cores()) {\n    Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n    boolean valid=false;\n    int steps=0;\n    while (steps++ < maxSteps) {\n      int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n      any=false;\n      Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n        if (world.solid(x,y)) {\n          any=true;\n        }\n      }\n);\n      if (!any) {\n        valid=true;\n        break;\n      }\n else {\n        Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n      }\n    }\n    if (valid) {\n      cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 107,
        "startColumnNumber" : 52,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state.hasSpawns()) {\n    for (    Tile spawn : spawns) {\n      cons.accept(spawn.worldx(),spawn.worldy(),true);\n    }\n  }\n  if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n    Building firstCore=state.teams.playerCores().first();\n    for (    Building core : state.rules.waveTeam.cores()) {\n      Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n      boolean valid=false;\n      int steps=0;\n      while (steps++ < maxSteps) {\n        int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n        any=false;\n        Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n          if (world.solid(x,y)) {\n            any=true;\n          }\n        }\n);\n        if (!any) {\n          valid=true;\n          break;\n        }\n else {\n          Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n        }\n      }\n      if (valid) {\n        cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void eachGroundSpawn(SpawnConsumer cons){\n  if (state.hasSpawns()) {\n    for (    Tile spawn : spawns) {\n      cons.accept(spawn.worldx(),spawn.worldy(),true);\n    }\n  }\n  if (state.rules.attackMode && state.teams.isActive(state.rules.waveTeam) && !state.teams.playerCores().isEmpty()) {\n    Building firstCore=state.teams.playerCores().first();\n    for (    Building core : state.rules.waveTeam.cores()) {\n      Tmp.v1.set(firstCore).sub(core).limit(coreMargin + core.block.size * tilesize / 2f * Mathf.sqrt2);\n      boolean valid=false;\n      int steps=0;\n      while (steps++ < maxSteps) {\n        int tx=World.toTile(core.x + Tmp.v1.x), ty=World.toTile(core.y + Tmp.v1.y);\n        any=false;\n        Geometry.circle(tx,ty,world.width(),world.height(),3,(x,y) -> {\n          if (world.solid(x,y)) {\n            any=true;\n          }\n        }\n);\n        if (!any) {\n          valid=true;\n          break;\n        }\n else {\n          Tmp.v1.setLength(Tmp.v1.len() + tilesize * 1.1f);\n        }\n      }\n      if (valid) {\n        cons.accept(core.x + Tmp.v1.x,core.y + Tmp.v1.y,false);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Building firstCore=state.teams.playerCores().first();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "mindustry.ai.Seq<mindustry.world.blocks.storage.CoreBlock.CoreBuild>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 114,
    "startColumnNumber" : 84,
    "endLineNumber" : 114,
    "endColumnNumber" : 109
  }, {
    "charLength" : 25,
    "startLineNumber" : 115,
    "startColumnNumber" : 33,
    "endLineNumber" : 115,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}