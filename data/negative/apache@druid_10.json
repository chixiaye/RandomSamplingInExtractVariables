{
  "id" : 10,
  "expression" : "1L",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMinAveragerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 40,
      "startColumnNumber" : 53,
      "endLineNumber" : 40,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Collections.singletonMap(\"field\",1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 74
      },
      "nodeContext" : "avg.addElement(Collections.singletonMap(\"field\",1L),new HashMap<>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 75
      },
      "nodeContext" : "avg.addElement(Collections.singletonMap(\"field\",1L),new HashMap<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BaseAverager<Number,Long> avg=new LongMinAverager(3,\"test\",\"field\",1);\n  Assert.assertEquals(Long.MAX_VALUE,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",-10000L),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",1L),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",1000),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",5L),new HashMap<>());\n  avg.addElement(Collections.singletonMap(\"field\",2L),new HashMap<>());\n  avg.addElement(Collections.singletonMap(\"field\",3L),new HashMap<>());\n  Assert.assertEquals(2,(long)avg.computeResult());\n  avg.skip();\n  avg.skip();\n  Assert.assertEquals(3,(long)avg.computeResult());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testComputeResult(){\n  BaseAverager<Number,Long> avg=new LongMinAverager(3,\"test\",\"field\",1);\n  Assert.assertEquals(Long.MAX_VALUE,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",-10000L),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",1L),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",1000),new HashMap<>());\n  Assert.assertEquals(-10000,(long)avg.computeResult());\n  avg.addElement(Collections.singletonMap(\"field\",5L),new HashMap<>());\n  avg.addElement(Collections.singletonMap(\"field\",2L),new HashMap<>());\n  avg.addElement(Collections.singletonMap(\"field\",3L),new HashMap<>());\n  Assert.assertEquals(2,(long)avg.computeResult());\n  avg.skip();\n  avg.skip();\n  Assert.assertEquals(3,(long)avg.computeResult());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 75
      },
      "nodeContext" : "avg.addElement(Collections.singletonMap(\"field\",1L),new HashMap<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 40,
    "startColumnNumber" : 53,
    "endLineNumber" : 40,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}