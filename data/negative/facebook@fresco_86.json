{
  "id" : 86,
  "expression" : "(length & 0x01)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/util/Hex.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(length & 0x01)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 90,
      "startColumnNumber" : 8,
      "endLineNumber" : 90,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 28
      },
      "nodeContext" : "(length & 0x01) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((length & 0x01) != 0) {\n  throw new IllegalArgumentException(\"Odd number of characters.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 87,
        "startColumnNumber" : 51,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=hexString.length();\n  if ((length & 0x01) != 0) {\n    throw new IllegalArgumentException(\"Odd number of characters.\");\n  }\n  boolean badHex=false;\n  byte[] out=new byte[length >> 1];\n  for (int i=0, j=0; j < length; i++) {\n    int c1=hexString.charAt(j++);\n    if (c1 > 'f') {\n      badHex=true;\n      break;\n    }\n    final byte d1=DIGITS[c1];\n    if (d1 == -1) {\n      badHex=true;\n      break;\n    }\n    int c2=hexString.charAt(j++);\n    if (c2 > 'f') {\n      badHex=true;\n      break;\n    }\n    final byte d2=DIGITS[c2];\n    if (d2 == -1) {\n      badHex=true;\n      break;\n    }\n    out[i]=(byte)(d1 << 4 | d2);\n  }\n  if (badHex) {\n    throw new IllegalArgumentException(\"Invalid hexadecimal digit: \" + hexString);\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Quickly converts a hexadecimal string to a byte array. \n */\npublic static byte[] decodeHex(String hexString){\n  int length=hexString.length();\n  if ((length & 0x01) != 0) {\n    throw new IllegalArgumentException(\"Odd number of characters.\");\n  }\n  boolean badHex=false;\n  byte[] out=new byte[length >> 1];\n  for (int i=0, j=0; j < length; i++) {\n    int c1=hexString.charAt(j++);\n    if (c1 > 'f') {\n      badHex=true;\n      break;\n    }\n    final byte d1=DIGITS[c1];\n    if (d1 == -1) {\n      badHex=true;\n      break;\n    }\n    int c2=hexString.charAt(j++);\n    if (c2 > 'f') {\n      badHex=true;\n      break;\n    }\n    final byte d2=DIGITS[c2];\n    if (d2 == -1) {\n      badHex=true;\n      break;\n    }\n    out[i]=(byte)(d1 << 4 | d2);\n  }\n  if (badHex) {\n    throw new IllegalArgumentException(\"Invalid hexadecimal digit: \" + hexString);\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 28
      },
      "nodeContext" : "(length & 0x01) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 90,
    "startColumnNumber" : 8,
    "endLineNumber" : 90,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}