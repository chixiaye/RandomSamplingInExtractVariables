{
  "id" : 447,
  "expression" : "100",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-http/src/test/java/cn/hutool/http/test/HttpsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "100",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 20,
      "startColumnNumber" : 20,
      "endLineNumber" : 20,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 23
      },
      "nodeContext" : "i < 100",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  ThreadUtil.execute(() -> {\n    final String s=HttpUtil.get(\"https://www.baidu.com/\");\n    Console.log(count.incrementAndGet());\n  }\n);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 18,
        "startColumnNumber" : 23,
        "endLineNumber" : 27,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final AtomicInteger count=new AtomicInteger();\n  for (int i=0; i < 100; i++) {\n    ThreadUtil.execute(() -> {\n      final String s=HttpUtil.get(\"https://www.baidu.com/\");\n      Console.log(count.incrementAndGet());\n    }\n);\n  }\n  ThreadUtil.sync(this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 13,
        "startColumnNumber" : 1,
        "endLineNumber" : 27,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 测试单例的SSLSocketFactory是否有线程安全问题\n */\n@Test @Ignore public void getTest(){\n  final AtomicInteger count=new AtomicInteger();\n  for (int i=0; i < 100; i++) {\n    ThreadUtil.execute(() -> {\n      final String s=HttpUtil.get(\"https://www.baidu.com/\");\n      Console.log(count.incrementAndGet());\n    }\n);\n  }\n  ThreadUtil.sync(this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 23
      },
      "nodeContext" : "i < 100",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 20,
    "startColumnNumber" : 20,
    "endLineNumber" : 20,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}