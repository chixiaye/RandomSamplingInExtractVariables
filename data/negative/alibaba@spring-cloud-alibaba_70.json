{
  "id" : 70,
  "expression" : "new IllegalArgumentException(\"Unknown auth mode.\")",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alicloud-context/src/main/java/com/alibaba/alicloud/context/oss/OssContextAutoConfiguration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(\"Unknown auth mode.\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 79,
      "startColumnNumber" : 9,
      "endLineNumber" : 79,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 60
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unknown auth mode.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 78,
        "startColumnNumber" : 7,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Unknown auth mode.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 64,
        "startColumnNumber" : 7,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.STS) {\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getAccessKey()),\"Access key can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecretKey()),\"Secret key can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecurityToken()),\"Security Token can't be empty.\");\n  return new OSSClientBuilder().build(ossProperties.getEndpoint(),ossProperties.getSts().getAccessKey(),ossProperties.getSts().getSecretKey(),ossProperties.getSts().getSecurityToken(),ossProperties.getConfig());\n}\n else {\n  throw new IllegalArgumentException(\"Unknown auth mode.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1484,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.AK_SK) {\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getAccessKey()),\"${spring.cloud.alicloud.access-key} can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getSecretKey()),\"${spring.cloud.alicloud.secret-key} can't be empty.\");\n  return new OSSClientBuilder().build(ossProperties.getEndpoint(),aliCloudProperties.getAccessKey(),aliCloudProperties.getSecretKey(),ossProperties.getConfig());\n}\n else if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.STS) {\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getAccessKey()),\"Access key can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecretKey()),\"Secret key can't be empty.\");\n  Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecurityToken()),\"Security Token can't be empty.\");\n  return new OSSClientBuilder().build(ossProperties.getEndpoint(),ossProperties.getSts().getAccessKey(),ossProperties.getSts().getSecretKey(),ossProperties.getSts().getSecurityToken(),ossProperties.getConfig());\n}\n else {\n  throw new IllegalArgumentException(\"Unknown auth mode.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1491,
        "startLineNumber" : 52,
        "startColumnNumber" : 32,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.AK_SK) {\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getAccessKey()),\"${spring.cloud.alicloud.access-key} can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getSecretKey()),\"${spring.cloud.alicloud.secret-key} can't be empty.\");\n    return new OSSClientBuilder().build(ossProperties.getEndpoint(),aliCloudProperties.getAccessKey(),aliCloudProperties.getSecretKey(),ossProperties.getConfig());\n  }\n else   if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.STS) {\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getAccessKey()),\"Access key can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecretKey()),\"Secret key can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecurityToken()),\"Security Token can't be empty.\");\n    return new OSSClientBuilder().build(ossProperties.getEndpoint(),ossProperties.getSts().getAccessKey(),ossProperties.getSts().getSecretKey(),ossProperties.getSts().getSecurityToken(),ossProperties.getConfig());\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown auth mode.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1617,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@ConditionalOnMissingBean @Bean public OSS ossClient(AliCloudProperties aliCloudProperties,OssProperties ossProperties){\n  if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.AK_SK) {\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getAccessKey()),\"${spring.cloud.alicloud.access-key} can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(aliCloudProperties.getSecretKey()),\"${spring.cloud.alicloud.secret-key} can't be empty.\");\n    return new OSSClientBuilder().build(ossProperties.getEndpoint(),aliCloudProperties.getAccessKey(),aliCloudProperties.getSecretKey(),ossProperties.getConfig());\n  }\n else   if (ossProperties.getAuthorizationMode() == AliCloudAuthorizationMode.STS) {\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getEndpoint()),\"Oss endpoint can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getAccessKey()),\"Access key can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecretKey()),\"Secret key can't be empty.\");\n    Assert.isTrue(!StringUtils.isEmpty(ossProperties.getSts().getSecurityToken()),\"Security Token can't be empty.\");\n    return new OSSClientBuilder().build(ossProperties.getEndpoint(),ossProperties.getSts().getAccessKey(),ossProperties.getSts().getSecretKey(),ossProperties.getSts().getSecurityToken(),ossProperties.getConfig());\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown auth mode.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 60
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unknown auth mode.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 79,
    "startColumnNumber" : 9,
    "endLineNumber" : 79,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}