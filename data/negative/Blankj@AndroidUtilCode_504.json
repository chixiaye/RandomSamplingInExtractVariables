{
  "id" : 504,
  "expression" : "testTimeStringFormat",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/test/java/com/blankj/utilcode/util/TimeUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testTimeStringFormat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 81,
      "startColumnNumber" : 64,
      "endLineNumber" : 81,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 81,
        "startColumnNumber" : 24,
        "endLineNumber" : 81,
        "endColumnNumber" : 113
      },
      "nodeContext" : "TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(2,TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(2,TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 75,
        "startColumnNumber" : 47,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long testTimeMillis=timeMillis + 120 * TimeConstants.SEC;\n  String testTimeString=TimeUtils.millis2String(testTimeMillis);\n  String testTimeStringFormat=TimeUtils.millis2String(testTimeMillis,mFormat);\n  Date testTimeDate=TimeUtils.millis2Date(testTimeMillis);\n  assertEquals(120,TimeUtils.getTimeSpan(timeString,testTimeString,TimeConstants.SEC));\n  assertEquals(2,TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN));\n  assertEquals(2,TimeUtils.getTimeSpan(timeDate,testTimeDate,TimeConstants.MIN));\n  assertEquals(120,TimeUtils.getTimeSpan(timeMillis,testTimeMillis,TimeConstants.SEC));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getTimeSpan() throws Exception {\n  long testTimeMillis=timeMillis + 120 * TimeConstants.SEC;\n  String testTimeString=TimeUtils.millis2String(testTimeMillis);\n  String testTimeStringFormat=TimeUtils.millis2String(testTimeMillis,mFormat);\n  Date testTimeDate=TimeUtils.millis2Date(testTimeMillis);\n  assertEquals(120,TimeUtils.getTimeSpan(timeString,testTimeString,TimeConstants.SEC));\n  assertEquals(2,TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN));\n  assertEquals(2,TimeUtils.getTimeSpan(timeDate,testTimeDate,TimeConstants.MIN));\n  assertEquals(120,TimeUtils.getTimeSpan(timeMillis,testTimeMillis,TimeConstants.SEC));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(2,TimeUtils.getTimeSpan(timeStringFormat,testTimeStringFormat,mFormat,TimeConstants.MIN));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 81,
    "startColumnNumber" : 64,
    "endLineNumber" : 81,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}