{
  "id" : 385,
  "expression" : "\"Could not delete \" + file",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/ZipHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Could not delete \" + file",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 88,
      "startColumnNumber" : 44,
      "endLineNumber" : 88,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new Exception(\"Could not delete \" + file)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 88,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 72
      },
      "nodeContext" : "throw new Exception(\"Could not delete \" + file);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 87,
        "startColumnNumber" : 43,
        "endLineNumber" : 89,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  throw new Exception(\"Could not delete \" + file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 87,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!oldFile.delete()) {\n  throw new Exception(\"Could not delete \" + file);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 86,
        "startColumnNumber" : 38,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!oldFile.delete()) {\n    throw new Exception(\"Could not delete \" + file);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (oldFile.exists()) {\n  if (!oldFile.delete()) {\n    throw new Exception(\"Could not delete \" + file);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 82,
        "startColumnNumber" : 43,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  found=true;\n  File oldFile=new File(file);\n  if (oldFile.exists()) {\n    if (!oldFile.delete()) {\n      throw new Exception(\"Could not delete \" + file);\n    }\n  }\n  FileOutputStream outFile=new FileOutputStream(file);\n  int count=0;\n  while ((count=inZip.read(data)) != -1) {\n    outFile.write(data,0,count);\n  }\n  outFile.close();\n  inZip.closeEntry();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ze.getName().equals(name)) {\n  found=true;\n  File oldFile=new File(file);\n  if (oldFile.exists()) {\n    if (!oldFile.delete()) {\n      throw new Exception(\"Could not delete \" + file);\n    }\n  }\n  FileOutputStream outFile=new FileOutputStream(file);\n  int count=0;\n  while ((count=inZip.read(data)) != -1) {\n    outFile.write(data,0,count);\n  }\n  outFile.close();\n  inZip.closeEntry();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 81,
        "startColumnNumber" : 52,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (ze.getName().equals(name)) {\n    found=true;\n    File oldFile=new File(file);\n    if (oldFile.exists()) {\n      if (!oldFile.delete()) {\n        throw new Exception(\"Could not delete \" + file);\n      }\n    }\n    FileOutputStream outFile=new FileOutputStream(file);\n    int count=0;\n    while ((count=inZip.read(data)) != -1) {\n      outFile.write(data,0,count);\n    }\n    outFile.close();\n    inZip.closeEntry();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while ((ze=inZip.getNextEntry()) != null) {\n  if (ze.getName().equals(name)) {\n    found=true;\n    File oldFile=new File(file);\n    if (oldFile.exists()) {\n      if (!oldFile.delete()) {\n        throw new Exception(\"Could not delete \" + file);\n      }\n    }\n    FileOutputStream outFile=new FileOutputStream(file);\n    int count=0;\n    while ((count=inZip.read(data)) != -1) {\n      outFile.write(data,0,count);\n    }\n    outFile.close();\n    inZip.closeEntry();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 70,
        "startColumnNumber" : 81,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ZipInputStream inZip=new ZipInputStream(new BufferedInputStream(new FileInputStream(filePath)));\n  byte[] data=new byte[BUFFER_SIZE];\n  boolean found=false;\n  ZipEntry ze;\n  while ((ze=inZip.getNextEntry()) != null) {\n    if (ze.getName().equals(name)) {\n      found=true;\n      File oldFile=new File(file);\n      if (oldFile.exists()) {\n        if (!oldFile.delete()) {\n          throw new Exception(\"Could not delete \" + file);\n        }\n      }\n      FileOutputStream outFile=new FileOutputStream(file);\n      int count=0;\n      while ((count=inZip.read(data)) != -1) {\n        outFile.write(data,0,count);\n      }\n      outFile.close();\n      inZip.closeEntry();\n    }\n  }\n  return found;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1593,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This will extract data from Zipfiles. Caution this will override the original file.\n * @param filePath The path of the zip\n * @param file The path of the file on the disk where the data should be extracted to.\n * @param name The path of the file inside the zip.\n * @return will return true if the file was found within the zip file\n * @throws Exception\n */\npublic static boolean extractFileFromZip(final String filePath,final String file,final String name) throws Exception {\n  ZipInputStream inZip=new ZipInputStream(new BufferedInputStream(new FileInputStream(filePath)));\n  byte[] data=new byte[BUFFER_SIZE];\n  boolean found=false;\n  ZipEntry ze;\n  while ((ze=inZip.getNextEntry()) != null) {\n    if (ze.getName().equals(name)) {\n      found=true;\n      File oldFile=new File(file);\n      if (oldFile.exists()) {\n        if (!oldFile.delete()) {\n          throw new Exception(\"Could not delete \" + file);\n        }\n      }\n      FileOutputStream outFile=new FileOutputStream(file);\n      int count=0;\n      while ((count=inZip.read(data)) != -1) {\n        outFile.write(data,0,count);\n      }\n      outFile.close();\n      inZip.closeEntry();\n    }\n  }\n  return found;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 88,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 72
      },
      "nodeContext" : "throw new Exception(\"Could not delete \" + file);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 88,
    "startColumnNumber" : 44,
    "endLineNumber" : 88,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}