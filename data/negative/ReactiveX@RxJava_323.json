{
  "id" : 323,
  "expression" : "Flowable.just(\"Boo!\").all(new Predicate<String>(){\n  @Override public boolean test(  String v){\n    throw ex;\n  }\n}\n)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableAllTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable.just(\"Boo!\").all(new Predicate<String>(){\n  @Override public boolean test(  String v){\n    throw ex;\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 173,
      "startLineNumber" : 181,
      "startColumnNumber" : 8,
      "endLineNumber" : 186,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 26,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 22
      },
      "nodeContext" : "Flowable.just(\"Boo!\").all(new Predicate<String>(){\n  @Override public boolean test(  String v){\n    throw ex;\n  }\n}\n).subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 23
      },
      "nodeContext" : "Flowable.just(\"Boo!\").all(new Predicate<String>(){\n  @Override public boolean test(  String v){\n    throw ex;\n  }\n}\n).subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 176,
        "startColumnNumber" : 69,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<Boolean> ts=new TestSubscriber<Boolean>();\n  final IllegalArgumentException ex=new IllegalArgumentException();\n  Flowable.just(\"Boo!\").all(new Predicate<String>(){\n    @Override public boolean test(    String v){\n      throw ex;\n    }\n  }\n).subscribe(ts);\n  ts.assertTerminated();\n  ts.assertNoValues();\n  ts.assertNotComplete();\n  ts.assertError(ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPredicateThrowsExceptionAndValueInCauseMessage(){\n  TestSubscriber<Boolean> ts=new TestSubscriber<Boolean>();\n  final IllegalArgumentException ex=new IllegalArgumentException();\n  Flowable.just(\"Boo!\").all(new Predicate<String>(){\n    @Override public boolean test(    String v){\n      throw ex;\n    }\n  }\n).subscribe(ts);\n  ts.assertTerminated();\n  ts.assertNoValues();\n  ts.assertNotComplete();\n  ts.assertError(ex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 22
      },
      "nodeContext" : "Flowable.just(\"Boo!\").all(new Predicate<String>(){\n  @Override public boolean test(  String v){\n    throw ex;\n  }\n}\n).subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "io.reactivex.Flowable<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 173,
    "startLineNumber" : 181,
    "startColumnNumber" : 8,
    "endLineNumber" : 186,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}