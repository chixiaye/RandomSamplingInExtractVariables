{
  "id" : 467,
  "expression" : "\"Registration not complete. Skipping.\"",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/GroupV1MigrationJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Registration not complete. Skipping.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 76,
      "startColumnNumber" : 17,
      "endLineNumber" : 76,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Log.i(TAG,\"Registration not complete. Skipping.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Log.i(TAG,\"Registration not complete. Skipping.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.i(TAG,\"Registration not complete. Skipping.\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!SignalStore.registrationValues().isRegistrationComplete() || !TextSecurePreferences.isPushRegistered(application) || TextSecurePreferences.getLocalUuid(application) == null) {\n  Log.i(TAG,\"Registration not complete. Skipping.\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1831,
        "startLineNumber" : 71,
        "startColumnNumber" : 91,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!SignalStore.registrationValues().isRegistrationComplete() || !TextSecurePreferences.isPushRegistered(application) || TextSecurePreferences.getLocalUuid(application) == null) {\n    Log.i(TAG,\"Registration not complete. Skipping.\");\n    return;\n  }\n  long timeSinceRefresh=System.currentTimeMillis() - SignalStore.misc().getLastGv1RoutineMigrationTime();\n  if (timeSinceRefresh < REFRESH_INTERVAL) {\n    Log.i(TAG,\"Too soon to refresh. Did the last refresh \" + timeSinceRefresh + \" ms ago.\");\n    return;\n  }\n  SignalStore.misc().setLastGv1RoutineMigrationTime(System.currentTimeMillis());\n  SignalExecutors.BOUNDED.execute(() -> {\n    JobManager jobManager=ApplicationDependencies.getJobManager();\n    List<ThreadRecord> threads=DatabaseFactory.getThreadDatabase(application).getRecentV1Groups(ROUTINE_LIMIT);\n    Set<RecipientId> needsRefresh=new HashSet<>();\n    if (threads.size() > 0) {\n      Log.d(TAG,\"About to enqueue refreshes for \" + threads.size() + \" groups.\");\n    }\n    for (    ThreadRecord thread : threads) {\n      jobManager.add(new GroupV1MigrationJob(thread.getRecipient().getId()));\n      needsRefresh.addAll(Stream.of(thread.getRecipient().getParticipants()).filter(r -> r.getGroupsV2Capability() != Recipient.Capability.SUPPORTED || r.getGroupsV1MigrationCapability() != Recipient.Capability.SUPPORTED).map(Recipient::getId).toList());\n    }\n    if (needsRefresh.size() > 0) {\n      Log.w(TAG,\"Enqueuing profile refreshes for \" + needsRefresh.size() + \" GV1 participants.\");\n      RetrieveProfileJob.enqueue(needsRefresh);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1920,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void enqueueRoutineMigrationsIfNecessary(@NonNull Application application){\n  if (!SignalStore.registrationValues().isRegistrationComplete() || !TextSecurePreferences.isPushRegistered(application) || TextSecurePreferences.getLocalUuid(application) == null) {\n    Log.i(TAG,\"Registration not complete. Skipping.\");\n    return;\n  }\n  long timeSinceRefresh=System.currentTimeMillis() - SignalStore.misc().getLastGv1RoutineMigrationTime();\n  if (timeSinceRefresh < REFRESH_INTERVAL) {\n    Log.i(TAG,\"Too soon to refresh. Did the last refresh \" + timeSinceRefresh + \" ms ago.\");\n    return;\n  }\n  SignalStore.misc().setLastGv1RoutineMigrationTime(System.currentTimeMillis());\n  SignalExecutors.BOUNDED.execute(() -> {\n    JobManager jobManager=ApplicationDependencies.getJobManager();\n    List<ThreadRecord> threads=DatabaseFactory.getThreadDatabase(application).getRecentV1Groups(ROUTINE_LIMIT);\n    Set<RecipientId> needsRefresh=new HashSet<>();\n    if (threads.size() > 0) {\n      Log.d(TAG,\"About to enqueue refreshes for \" + threads.size() + \" groups.\");\n    }\n    for (    ThreadRecord thread : threads) {\n      jobManager.add(new GroupV1MigrationJob(thread.getRecipient().getId()));\n      needsRefresh.addAll(Stream.of(thread.getRecipient().getParticipants()).filter(r -> r.getGroupsV2Capability() != Recipient.Capability.SUPPORTED || r.getGroupsV1MigrationCapability() != Recipient.Capability.SUPPORTED).map(Recipient::getId).toList());\n    }\n    if (needsRefresh.size() > 0) {\n      Log.w(TAG,\"Enqueuing profile refreshes for \" + needsRefresh.size() + \" GV1 participants.\");\n      RetrieveProfileJob.enqueue(needsRefresh);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Log.i(TAG,\"Registration not complete. Skipping.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 76,
    "startColumnNumber" : 17,
    "endLineNumber" : 76,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}