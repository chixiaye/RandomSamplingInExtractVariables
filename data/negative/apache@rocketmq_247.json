{
  "id" : 247,
  "expression" : "new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status))",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/main/java/org/apache/rocketmq/store/dledger/DLedgerCommitLog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 100,
      "startLineNumber" : 421,
      "startColumnNumber" : 23,
      "endLineNumber" : 421,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 421,
        "startColumnNumber" : 16,
        "endLineNumber" : 421,
        "endColumnNumber" : 124
      },
      "nodeContext" : "return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 420,
        "startColumnNumber" : 68,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 420,
        "startColumnNumber" : 12,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (encodeResult.status != AppendMessageStatus.PUT_OK) {\n  return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2134,
        "startLineNumber" : 416,
        "startColumnNumber" : 12,
        "endLineNumber" : 448,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  beginTimeInDledgerLock=this.defaultMessageStore.getSystemClock().now();\n  encodeResult=this.messageSerializer.serialize(msg);\n  queueOffset=topicQueueTable.get(encodeResult.queueOffsetKey);\n  if (encodeResult.status != AppendMessageStatus.PUT_OK) {\n    return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n  }\n  AppendEntryRequest request=new AppendEntryRequest();\n  request.setGroup(dLedgerConfig.getGroup());\n  request.setRemoteId(dLedgerServer.getMemberState().getSelfId());\n  request.setBody(encodeResult.data);\n  dledgerFuture=(AppendFuture<AppendEntryResponse>)dLedgerServer.handleAppend(request);\n  if (dledgerFuture.getPos() == -1) {\n    return new PutMessageResult(PutMessageStatus.OS_PAGECACHE_BUSY,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n  }\n  long wroteOffset=dledgerFuture.getPos() + DLedgerEntry.BODY_OFFSET;\n  ByteBuffer buffer=ByteBuffer.allocate(MessageDecoder.MSG_ID_LENGTH);\n  String msgId=MessageDecoder.createMessageId(buffer,msg.getStoreHostBytes(),wroteOffset);\n  eclipseTimeInLock=this.defaultMessageStore.getSystemClock().now() - beginTimeInDledgerLock;\n  appendResult=new AppendMessageResult(AppendMessageStatus.PUT_OK,wroteOffset,encodeResult.data.length,msgId,System.currentTimeMillis(),queueOffset,eclipseTimeInLock);\nswitch (tranType) {\ncase MessageSysFlag.TRANSACTION_PREPARED_TYPE:case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:    break;\ncase MessageSysFlag.TRANSACTION_NOT_TYPE:case MessageSysFlag.TRANSACTION_COMMIT_TYPE:  DLedgerCommitLog.this.topicQueueTable.put(encodeResult.queueOffsetKey,queueOffset + 1);\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2447,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 454,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  beginTimeInDledgerLock=this.defaultMessageStore.getSystemClock().now();\n  encodeResult=this.messageSerializer.serialize(msg);\n  queueOffset=topicQueueTable.get(encodeResult.queueOffsetKey);\n  if (encodeResult.status != AppendMessageStatus.PUT_OK) {\n    return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n  }\n  AppendEntryRequest request=new AppendEntryRequest();\n  request.setGroup(dLedgerConfig.getGroup());\n  request.setRemoteId(dLedgerServer.getMemberState().getSelfId());\n  request.setBody(encodeResult.data);\n  dledgerFuture=(AppendFuture<AppendEntryResponse>)dLedgerServer.handleAppend(request);\n  if (dledgerFuture.getPos() == -1) {\n    return new PutMessageResult(PutMessageStatus.OS_PAGECACHE_BUSY,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n  }\n  long wroteOffset=dledgerFuture.getPos() + DLedgerEntry.BODY_OFFSET;\n  ByteBuffer buffer=ByteBuffer.allocate(MessageDecoder.MSG_ID_LENGTH);\n  String msgId=MessageDecoder.createMessageId(buffer,msg.getStoreHostBytes(),wroteOffset);\n  eclipseTimeInLock=this.defaultMessageStore.getSystemClock().now() - beginTimeInDledgerLock;\n  appendResult=new AppendMessageResult(AppendMessageStatus.PUT_OK,wroteOffset,encodeResult.data.length,msgId,System.currentTimeMillis(),queueOffset,eclipseTimeInLock);\nswitch (tranType) {\ncase MessageSysFlag.TRANSACTION_PREPARED_TYPE:case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:    break;\ncase MessageSysFlag.TRANSACTION_NOT_TYPE:case MessageSysFlag.TRANSACTION_COMMIT_TYPE:  DLedgerCommitLog.this.topicQueueTable.put(encodeResult.queueOffsetKey,queueOffset + 1);\nbreak;\ndefault:break;\n}\n}\n catch (Exception e) {\nlog.error(\"Put message error\",e);\nreturn new PutMessageResult(PutMessageStatus.UNKNOWN_ERROR,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n}\n finally {\nbeginTimeInDledgerLock=0;\nputMessageLock.unlock();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 254,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6234,
        "startLineNumber" : 373,
        "startColumnNumber" : 72,
        "endLineNumber" : 492,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  msg.setStoreTimestamp(System.currentTimeMillis());\n  msg.setBodyCRC(UtilAll.crc32(msg.getBody()));\n  StoreStatsService storeStatsService=this.defaultMessageStore.getStoreStatsService();\n  String topic=msg.getTopic();\n  int queueId=msg.getQueueId();\n  final int tranType=MessageSysFlag.getTransactionValue(msg.getSysFlag());\n  if (tranType == MessageSysFlag.TRANSACTION_NOT_TYPE || tranType == MessageSysFlag.TRANSACTION_COMMIT_TYPE) {\n    if (msg.getDelayTimeLevel() > 0) {\n      if (msg.getDelayTimeLevel() > this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {\n        msg.setDelayTimeLevel(this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel());\n      }\n      topic=ScheduleMessageService.SCHEDULE_TOPIC;\n      queueId=ScheduleMessageService.delayLevel2QueueId(msg.getDelayTimeLevel());\n      MessageAccessor.putProperty(msg,MessageConst.PROPERTY_REAL_TOPIC,msg.getTopic());\n      MessageAccessor.putProperty(msg,MessageConst.PROPERTY_REAL_QUEUE_ID,String.valueOf(msg.getQueueId()));\n      msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));\n      msg.setTopic(topic);\n      msg.setQueueId(queueId);\n    }\n  }\n  AppendMessageResult appendResult;\n  AppendFuture<AppendEntryResponse> dledgerFuture;\n  EncodeResult encodeResult;\n  putMessageLock.lock();\n  long eclipseTimeInLock;\n  long queueOffset;\n  try {\n    beginTimeInDledgerLock=this.defaultMessageStore.getSystemClock().now();\n    encodeResult=this.messageSerializer.serialize(msg);\n    queueOffset=topicQueueTable.get(encodeResult.queueOffsetKey);\n    if (encodeResult.status != AppendMessageStatus.PUT_OK) {\n      return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n    }\n    AppendEntryRequest request=new AppendEntryRequest();\n    request.setGroup(dLedgerConfig.getGroup());\n    request.setRemoteId(dLedgerServer.getMemberState().getSelfId());\n    request.setBody(encodeResult.data);\n    dledgerFuture=(AppendFuture<AppendEntryResponse>)dLedgerServer.handleAppend(request);\n    if (dledgerFuture.getPos() == -1) {\n      return new PutMessageResult(PutMessageStatus.OS_PAGECACHE_BUSY,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n    }\n    long wroteOffset=dledgerFuture.getPos() + DLedgerEntry.BODY_OFFSET;\n    ByteBuffer buffer=ByteBuffer.allocate(MessageDecoder.MSG_ID_LENGTH);\n    String msgId=MessageDecoder.createMessageId(buffer,msg.getStoreHostBytes(),wroteOffset);\n    eclipseTimeInLock=this.defaultMessageStore.getSystemClock().now() - beginTimeInDledgerLock;\n    appendResult=new AppendMessageResult(AppendMessageStatus.PUT_OK,wroteOffset,encodeResult.data.length,msgId,System.currentTimeMillis(),queueOffset,eclipseTimeInLock);\nswitch (tranType) {\ncase MessageSysFlag.TRANSACTION_PREPARED_TYPE:case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:      break;\ncase MessageSysFlag.TRANSACTION_NOT_TYPE:case MessageSysFlag.TRANSACTION_COMMIT_TYPE:    DLedgerCommitLog.this.topicQueueTable.put(encodeResult.queueOffsetKey,queueOffset + 1);\n  break;\ndefault:break;\n}\n}\n catch (Exception e) {\nlog.error(\"Put message error\",e);\nreturn new PutMessageResult(PutMessageStatus.UNKNOWN_ERROR,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n}\n finally {\nbeginTimeInDledgerLock=0;\nputMessageLock.unlock();\n}\nif (eclipseTimeInLock > 500) {\nlog.warn(\"[NOTIFYME]putMessage in lock cost time(ms)={}, bodyLength={} AppendMessageResult={}\",eclipseTimeInLock,msg.getBody().length,appendResult);\n}\nPutMessageStatus putMessageStatus=PutMessageStatus.UNKNOWN_ERROR;\ntry {\nAppendEntryResponse appendEntryResponse=dledgerFuture.get(3,TimeUnit.SECONDS);\nswitch (DLedgerResponseCode.valueOf(appendEntryResponse.getCode())) {\ncase SUCCESS:putMessageStatus=PutMessageStatus.PUT_OK;\nbreak;\ncase INCONSISTENT_LEADER:case NOT_LEADER:case LEADER_NOT_READY:case DISK_FULL:putMessageStatus=PutMessageStatus.SERVICE_NOT_AVAILABLE;\nbreak;\ncase WAIT_QUORUM_ACK_TIMEOUT:putMessageStatus=PutMessageStatus.OS_PAGECACHE_BUSY;\nbreak;\ncase LEADER_PENDING_FULL:putMessageStatus=PutMessageStatus.OS_PAGECACHE_BUSY;\nbreak;\n}\n}\n catch (Throwable t) {\nlog.error(\"Failed to get dledger append result\",t);\n}\nPutMessageResult putMessageResult=new PutMessageResult(putMessageStatus,appendResult);\nif (putMessageStatus == PutMessageStatus.PUT_OK) {\nstoreStatsService.getSinglePutMessageTopicTimesTotal(msg.getTopic()).incrementAndGet();\nstoreStatsService.getSinglePutMessageTopicSizeTotal(topic).addAndGet(appendResult.getWroteBytes());\n}\nreturn putMessageResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 580,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6316,
        "startLineNumber" : 372,
        "startColumnNumber" : 4,
        "endLineNumber" : 492,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public PutMessageResult putMessage(final MessageExtBrokerInner msg){\n  msg.setStoreTimestamp(System.currentTimeMillis());\n  msg.setBodyCRC(UtilAll.crc32(msg.getBody()));\n  StoreStatsService storeStatsService=this.defaultMessageStore.getStoreStatsService();\n  String topic=msg.getTopic();\n  int queueId=msg.getQueueId();\n  final int tranType=MessageSysFlag.getTransactionValue(msg.getSysFlag());\n  if (tranType == MessageSysFlag.TRANSACTION_NOT_TYPE || tranType == MessageSysFlag.TRANSACTION_COMMIT_TYPE) {\n    if (msg.getDelayTimeLevel() > 0) {\n      if (msg.getDelayTimeLevel() > this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {\n        msg.setDelayTimeLevel(this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel());\n      }\n      topic=ScheduleMessageService.SCHEDULE_TOPIC;\n      queueId=ScheduleMessageService.delayLevel2QueueId(msg.getDelayTimeLevel());\n      MessageAccessor.putProperty(msg,MessageConst.PROPERTY_REAL_TOPIC,msg.getTopic());\n      MessageAccessor.putProperty(msg,MessageConst.PROPERTY_REAL_QUEUE_ID,String.valueOf(msg.getQueueId()));\n      msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));\n      msg.setTopic(topic);\n      msg.setQueueId(queueId);\n    }\n  }\n  AppendMessageResult appendResult;\n  AppendFuture<AppendEntryResponse> dledgerFuture;\n  EncodeResult encodeResult;\n  putMessageLock.lock();\n  long eclipseTimeInLock;\n  long queueOffset;\n  try {\n    beginTimeInDledgerLock=this.defaultMessageStore.getSystemClock().now();\n    encodeResult=this.messageSerializer.serialize(msg);\n    queueOffset=topicQueueTable.get(encodeResult.queueOffsetKey);\n    if (encodeResult.status != AppendMessageStatus.PUT_OK) {\n      return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n    }\n    AppendEntryRequest request=new AppendEntryRequest();\n    request.setGroup(dLedgerConfig.getGroup());\n    request.setRemoteId(dLedgerServer.getMemberState().getSelfId());\n    request.setBody(encodeResult.data);\n    dledgerFuture=(AppendFuture<AppendEntryResponse>)dLedgerServer.handleAppend(request);\n    if (dledgerFuture.getPos() == -1) {\n      return new PutMessageResult(PutMessageStatus.OS_PAGECACHE_BUSY,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n    }\n    long wroteOffset=dledgerFuture.getPos() + DLedgerEntry.BODY_OFFSET;\n    ByteBuffer buffer=ByteBuffer.allocate(MessageDecoder.MSG_ID_LENGTH);\n    String msgId=MessageDecoder.createMessageId(buffer,msg.getStoreHostBytes(),wroteOffset);\n    eclipseTimeInLock=this.defaultMessageStore.getSystemClock().now() - beginTimeInDledgerLock;\n    appendResult=new AppendMessageResult(AppendMessageStatus.PUT_OK,wroteOffset,encodeResult.data.length,msgId,System.currentTimeMillis(),queueOffset,eclipseTimeInLock);\nswitch (tranType) {\ncase MessageSysFlag.TRANSACTION_PREPARED_TYPE:case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:      break;\ncase MessageSysFlag.TRANSACTION_NOT_TYPE:case MessageSysFlag.TRANSACTION_COMMIT_TYPE:    DLedgerCommitLog.this.topicQueueTable.put(encodeResult.queueOffsetKey,queueOffset + 1);\n  break;\ndefault:break;\n}\n}\n catch (Exception e) {\nlog.error(\"Put message error\",e);\nreturn new PutMessageResult(PutMessageStatus.UNKNOWN_ERROR,new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR));\n}\n finally {\nbeginTimeInDledgerLock=0;\nputMessageLock.unlock();\n}\nif (eclipseTimeInLock > 500) {\nlog.warn(\"[NOTIFYME]putMessage in lock cost time(ms)={}, bodyLength={} AppendMessageResult={}\",eclipseTimeInLock,msg.getBody().length,appendResult);\n}\nPutMessageStatus putMessageStatus=PutMessageStatus.UNKNOWN_ERROR;\ntry {\nAppendEntryResponse appendEntryResponse=dledgerFuture.get(3,TimeUnit.SECONDS);\nswitch (DLedgerResponseCode.valueOf(appendEntryResponse.getCode())) {\ncase SUCCESS:putMessageStatus=PutMessageStatus.PUT_OK;\nbreak;\ncase INCONSISTENT_LEADER:case NOT_LEADER:case LEADER_NOT_READY:case DISK_FULL:putMessageStatus=PutMessageStatus.SERVICE_NOT_AVAILABLE;\nbreak;\ncase WAIT_QUORUM_ACK_TIMEOUT:putMessageStatus=PutMessageStatus.OS_PAGECACHE_BUSY;\nbreak;\ncase LEADER_PENDING_FULL:putMessageStatus=PutMessageStatus.OS_PAGECACHE_BUSY;\nbreak;\n}\n}\n catch (Throwable t) {\nlog.error(\"Failed to get dledger append result\",t);\n}\nPutMessageResult putMessageResult=new PutMessageResult(putMessageStatus,appendResult);\nif (putMessageStatus == PutMessageStatus.PUT_OK) {\nstoreStatsService.getSinglePutMessageTopicTimesTotal(msg.getTopic()).incrementAndGet();\nstoreStatsService.getSinglePutMessageTopicSizeTotal(topic).addAndGet(appendResult.getWroteBytes());\n}\nreturn putMessageResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 592,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 421,
        "startColumnNumber" : 16,
        "endLineNumber" : 421,
        "endColumnNumber" : 124
      },
      "nodeContext" : "return new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL,new AppendMessageResult(encodeResult.status));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "org.apache.rocketmq.store.PutMessageResult"
  } ],
  "positionList" : [ {
    "charLength" : 100,
    "startLineNumber" : 421,
    "startColumnNumber" : 23,
    "endLineNumber" : 421,
    "endColumnNumber" : 123
  } ],
  "layoutRelationDataList" : [ ]
}