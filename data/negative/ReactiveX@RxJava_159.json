{
  "id" : 159,
  "expression" : "Flowable.fromArray(1,2).elementAt(1).toBlocking()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableElementAtTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable.fromArray(1,2).elementAt(1).toBlocking()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 26,
      "startColumnNumber" : 24,
      "endLineNumber" : 26,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 26,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Flowable.fromArray(1,2).elementAt(1).toBlocking().single()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 27,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Flowable.fromArray(1,2).elementAt(1).toBlocking().single().intValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertEquals(2,Flowable.fromArray(1,2).elementAt(1).toBlocking().single().intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertEquals(2,Flowable.fromArray(1,2).elementAt(1).toBlocking().single().intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 25,
        "startColumnNumber" : 32,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(2,Flowable.fromArray(1,2).elementAt(1).toBlocking().single().intValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testElementAt(){\n  assertEquals(2,Flowable.fromArray(1,2).elementAt(1).toBlocking().single().intValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 25,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 26,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Flowable.fromArray(1,2).elementAt(1).toBlocking().single()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "io.reactivex.flowables.BlockingFlowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 26,
    "startColumnNumber" : 24,
    "endLineNumber" : 26,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}