{
  "id" : 356,
  "expression" : "maxDescrLength",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "e4843aef44587051310ce19d33b08f28e2e93004",
  "filePath" : "core/src/main/java/hudson/model/Run.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "maxDescrLength",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 700,
      "startColumnNumber" : 68,
      "endLineNumber" : 700,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 700,
        "startColumnNumber" : 40,
        "endLineNumber" : 700,
        "endColumnNumber" : 82
      },
      "nodeContext" : "localDescription.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 700,
        "startColumnNumber" : 12,
        "endLineNumber" : 700,
        "endColumnNumber" : 82
      },
      "nodeContext" : "localDescription == null || localDescription.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 700,
        "startColumnNumber" : 8,
        "endLineNumber" : 702,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (localDescription == null || localDescription.length() < maxDescrLength) {\n  return localDescription;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 700,
        "startColumnNumber" : 12,
        "endLineNumber" : 700,
        "endColumnNumber" : 82
      },
      "nodeContext" : "localDescription == null || localDescription.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "maxDescrLength",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 705,
      "startColumnNumber" : 67,
      "endLineNumber" : 705,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 705,
        "startColumnNumber" : 67,
        "endLineNumber" : 705,
        "endColumnNumber" : 99
      },
      "nodeContext" : "maxDescrLength - ending.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 705,
        "startColumnNumber" : 50,
        "endLineNumber" : 705,
        "endColumnNumber" : 99
      },
      "nodeContext" : "maxTruncLength=maxDescrLength - ending.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 705,
        "startColumnNumber" : 8,
        "endLineNumber" : 705,
        "endColumnNumber" : 100
      },
      "nodeContext" : "final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 705,
        "startColumnNumber" : 8,
        "endLineNumber" : 705,
        "endColumnNumber" : 100
      },
      "nodeContext" : "final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "maxDescrLength",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 735,
      "startColumnNumber" : 28,
      "endLineNumber" : 735,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 735,
        "startColumnNumber" : 12,
        "endLineNumber" : 735,
        "endColumnNumber" : 42
      },
      "nodeContext" : "displayChars >= maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 735,
        "startColumnNumber" : 8,
        "endLineNumber" : 737,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (displayChars >= maxDescrLength) {\n  truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String localDescription=description;\n  if (localDescription == null || localDescription.length() < maxDescrLength) {\n    return localDescription;\n  }\n  final String ending=\"...\";\n  final int sz=localDescription.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=localDescription.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=localDescription;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 735,
        "startColumnNumber" : 12,
        "endLineNumber" : 735,
        "endColumnNumber" : 42
      },
      "nodeContext" : "displayChars >= maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 700,
    "startColumnNumber" : 68,
    "endLineNumber" : 700,
    "endColumnNumber" : 82
  }, {
    "charLength" : 14,
    "startLineNumber" : 705,
    "startColumnNumber" : 67,
    "endLineNumber" : 705,
    "endColumnNumber" : 81
  }, {
    "charLength" : 14,
    "startLineNumber" : 735,
    "startColumnNumber" : 28,
    "endLineNumber" : 735,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}