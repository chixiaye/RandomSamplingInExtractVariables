{
  "id" : 351,
  "expression" : "valueGetter.get(record.key())",
  "projectName" : "apache@kafka",
  "commitID" : "807c5b4d282e7a7a16d0bb94aa2cda9566a7cc2d",
  "filePath" : "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valueGetter.get(record.key())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 112,
      "startColumnNumber" : 65,
      "endLineNumber" : 112,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 112,
        "startColumnNumber" : 40,
        "endLineNumber" : 112,
        "endColumnNumber" : 94
      },
      "nodeContext" : "valueAndTimestampRight=valueGetter.get(record.key())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 95
      },
      "nodeContext" : "final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1751,
        "startLineNumber" : 89,
        "startColumnNumber" : 64,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<K,Change<V1>> record){\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 95
      },
      "nodeContext" : "final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "org.apache.kafka.streams.state.ValueAndTimestamp<V2>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 112,
    "startColumnNumber" : 65,
    "endLineNumber" : 112,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}