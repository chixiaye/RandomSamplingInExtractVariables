{
  "id" : 234,
  "expression" : "(Throwable)maybeInvokeMethodHandle",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/main/java/io/netty/util/internal/CleanerJava9.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Throwable)maybeInvokeMethodHandle",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 58,
      "startColumnNumber" : 24,
      "endLineNumber" : 58,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 59
      },
      "nodeContext" : "error=(Throwable)maybeInvokeMethodHandle",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 60
      },
      "nodeContext" : "error=(Throwable)maybeInvokeMethodHandle;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 56,
        "startColumnNumber" : 62,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  invokeCleanerHandle=null;\n  error=(Throwable)maybeInvokeMethodHandle;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (maybeInvokeMethodHandle instanceof Throwable) {\n  invokeCleanerHandle=null;\n  error=(Throwable)maybeInvokeMethodHandle;\n}\n else {\n  invokeCleanerHandle=(MethodHandle)maybeInvokeMethodHandle;\n  error=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 39,
        "startColumnNumber" : 44,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final ByteBuffer buffer=ByteBuffer.allocateDirect(1);\n  Object maybeInvokeMethodHandle=AccessController.doPrivileged((PrivilegedAction<Object>)() -> {\n    try {\n      MethodHandles.Lookup lookup=MethodHandles.lookup();\n      MethodHandle m=lookup.findVirtual(PlatformDependent0.UNSAFE.getClass(),\"invokeCleaner\",MethodType.methodType(void.class,ByteBuffer.class)).bindTo(PlatformDependent0.UNSAFE);\n      m.invokeExact(buffer);\n      return m;\n    }\n catch (    Throwable cause) {\n      return cause;\n    }\n  }\n);\n  if (maybeInvokeMethodHandle instanceof Throwable) {\n    invokeCleanerHandle=null;\n    error=(Throwable)maybeInvokeMethodHandle;\n  }\n else {\n    invokeCleanerHandle=(MethodHandle)maybeInvokeMethodHandle;\n    error=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (PlatformDependent0.hasUnsafe()) {\n  final ByteBuffer buffer=ByteBuffer.allocateDirect(1);\n  Object maybeInvokeMethodHandle=AccessController.doPrivileged((PrivilegedAction<Object>)() -> {\n    try {\n      MethodHandles.Lookup lookup=MethodHandles.lookup();\n      MethodHandle m=lookup.findVirtual(PlatformDependent0.UNSAFE.getClass(),\"invokeCleaner\",MethodType.methodType(void.class,ByteBuffer.class)).bindTo(PlatformDependent0.UNSAFE);\n      m.invokeExact(buffer);\n      return m;\n    }\n catch (    Throwable cause) {\n      return cause;\n    }\n  }\n);\n  if (maybeInvokeMethodHandle instanceof Throwable) {\n    invokeCleanerHandle=null;\n    error=(Throwable)maybeInvokeMethodHandle;\n  }\n else {\n    invokeCleanerHandle=(MethodHandle)maybeInvokeMethodHandle;\n    error=null;\n  }\n}\n else {\n  invokeCleanerHandle=null;\n  error=new UnsupportedOperationException(\"sun.misc.Unsafe unavailable\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 1712,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MethodHandle invokeCleanerHandle;\n  final Throwable error;\n  if (PlatformDependent0.hasUnsafe()) {\n    final ByteBuffer buffer=ByteBuffer.allocateDirect(1);\n    Object maybeInvokeMethodHandle=AccessController.doPrivileged((PrivilegedAction<Object>)() -> {\n      try {\n        MethodHandles.Lookup lookup=MethodHandles.lookup();\n        MethodHandle m=lookup.findVirtual(PlatformDependent0.UNSAFE.getClass(),\"invokeCleaner\",MethodType.methodType(void.class,ByteBuffer.class)).bindTo(PlatformDependent0.UNSAFE);\n        m.invokeExact(buffer);\n        return m;\n      }\n catch (      Throwable cause) {\n        return cause;\n      }\n    }\n);\n    if (maybeInvokeMethodHandle instanceof Throwable) {\n      invokeCleanerHandle=null;\n      error=(Throwable)maybeInvokeMethodHandle;\n    }\n else {\n      invokeCleanerHandle=(MethodHandle)maybeInvokeMethodHandle;\n      error=null;\n    }\n  }\n else {\n    invokeCleanerHandle=null;\n    error=new UnsupportedOperationException(\"sun.misc.Unsafe unavailable\");\n  }\n  if (error == null) {\n    logger.debug(\"java.nio.ByteBuffer.cleaner(): available\");\n  }\n else {\n    logger.debug(\"java.nio.ByteBuffer.cleaner(): unavailable\",error);\n  }\n  INVOKE_CLEANER_HANDLE=invokeCleanerHandle;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1719,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  final MethodHandle invokeCleanerHandle;\n  final Throwable error;\n  if (PlatformDependent0.hasUnsafe()) {\n    final ByteBuffer buffer=ByteBuffer.allocateDirect(1);\n    Object maybeInvokeMethodHandle=AccessController.doPrivileged((PrivilegedAction<Object>)() -> {\n      try {\n        MethodHandles.Lookup lookup=MethodHandles.lookup();\n        MethodHandle m=lookup.findVirtual(PlatformDependent0.UNSAFE.getClass(),\"invokeCleaner\",MethodType.methodType(void.class,ByteBuffer.class)).bindTo(PlatformDependent0.UNSAFE);\n        m.invokeExact(buffer);\n        return m;\n      }\n catch (      Throwable cause) {\n        return cause;\n      }\n    }\n);\n    if (maybeInvokeMethodHandle instanceof Throwable) {\n      invokeCleanerHandle=null;\n      error=(Throwable)maybeInvokeMethodHandle;\n    }\n else {\n      invokeCleanerHandle=(MethodHandle)maybeInvokeMethodHandle;\n      error=null;\n    }\n  }\n else {\n    invokeCleanerHandle=null;\n    error=new UnsupportedOperationException(\"sun.misc.Unsafe unavailable\");\n  }\n  if (error == null) {\n    logger.debug(\"java.nio.ByteBuffer.cleaner(): available\");\n  }\n else {\n    logger.debug(\"java.nio.ByteBuffer.cleaner(): unavailable\",error);\n  }\n  INVOKE_CLEANER_HANDLE=invokeCleanerHandle;\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 162,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 60
      },
      "nodeContext" : "error=(Throwable)maybeInvokeMethodHandle;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 58,
    "startColumnNumber" : 24,
    "endLineNumber" : 58,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}