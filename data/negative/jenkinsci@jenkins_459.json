{
  "id" : 459,
  "expression" : "lock.writeLock()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "core/src/main/java/hudson/model/Executor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lock.writeLock()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 866,
      "startColumnNumber" : 8,
      "endLineNumber" : 866,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 866,
        "startColumnNumber" : 8,
        "endLineNumber" : 866,
        "endColumnNumber" : 31
      },
      "nodeContext" : "lock.writeLock().lock()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 866,
        "startColumnNumber" : 8,
        "endLineNumber" : 866,
        "endColumnNumber" : 32
      },
      "nodeContext" : "lock.writeLock().lock();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 865,
        "startColumnNumber" : 100,
        "endLineNumber" : 887,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  lock.writeLock().lock();\n  try {\n    if (executable != null) {\n      if (runExtId == null || runExtId.isEmpty() || !(executable instanceof Run) || (runExtId.equals(((Run<?,?>)executable).getExternalizableId()))) {\n        final Queue.Task ownerTask=getParentOf(executable).getOwnerTask();\n        boolean canAbort=ownerTask.hasAbortPermission();\n        if (canAbort && ownerTask instanceof AccessControlled) {\n          if (!((AccessControlled)ownerTask).hasPermission(Item.READ)) {\n            return HttpResponses.forwardToPreviousPage();\n          }\n        }\n        ownerTask.checkAbortPermission();\n        interrupt();\n      }\n    }\n  }\n  finally {\n    lock.writeLock().unlock();\n  }\n  return HttpResponses.forwardToPreviousPage();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1631,
        "startLineNumber" : 854,
        "startColumnNumber" : 4,
        "endLineNumber" : 887,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Stops the current build, if matching the specified external id (or no id is specified, or the current  {@link Executable} is not a {@link Run}).\n * @param runExtId if not null, the externalizable id ( {@link Run#getExternalizableId()}) of the build the user expects to interrupt\n * @since 2.209\n */\n@RequirePOST @Restricted(NoExternalUse.class) public HttpResponse doStopBuild(@CheckForNull @QueryParameter(fixEmpty=true) String runExtId){\n  lock.writeLock().lock();\n  try {\n    if (executable != null) {\n      if (runExtId == null || runExtId.isEmpty() || !(executable instanceof Run) || (runExtId.equals(((Run<?,?>)executable).getExternalizableId()))) {\n        final Queue.Task ownerTask=getParentOf(executable).getOwnerTask();\n        boolean canAbort=ownerTask.hasAbortPermission();\n        if (canAbort && ownerTask instanceof AccessControlled) {\n          if (!((AccessControlled)ownerTask).hasPermission(Item.READ)) {\n            return HttpResponses.forwardToPreviousPage();\n          }\n        }\n        ownerTask.checkAbortPermission();\n        interrupt();\n      }\n    }\n  }\n  finally {\n    lock.writeLock().unlock();\n  }\n  return HttpResponses.forwardToPreviousPage();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 866,
        "startColumnNumber" : 8,
        "endLineNumber" : 866,
        "endColumnNumber" : 32
      },
      "nodeContext" : "lock.writeLock().lock();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.locks.Lock"
  }, {
    "nodeContext" : "lock.writeLock()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 884,
      "startColumnNumber" : 12,
      "endLineNumber" : 884,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 884,
        "startColumnNumber" : 12,
        "endLineNumber" : 884,
        "endColumnNumber" : 37
      },
      "nodeContext" : "lock.writeLock().unlock()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 884,
        "startColumnNumber" : 12,
        "endLineNumber" : 884,
        "endColumnNumber" : 38
      },
      "nodeContext" : "lock.writeLock().unlock();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 883,
        "startColumnNumber" : 18,
        "endLineNumber" : 885,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  lock.writeLock().unlock();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 867,
        "startColumnNumber" : 8,
        "endLineNumber" : 885,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (executable != null) {\n    if (runExtId == null || runExtId.isEmpty() || !(executable instanceof Run) || (runExtId.equals(((Run<?,?>)executable).getExternalizableId()))) {\n      final Queue.Task ownerTask=getParentOf(executable).getOwnerTask();\n      boolean canAbort=ownerTask.hasAbortPermission();\n      if (canAbort && ownerTask instanceof AccessControlled) {\n        if (!((AccessControlled)ownerTask).hasPermission(Item.READ)) {\n          return HttpResponses.forwardToPreviousPage();\n        }\n      }\n      ownerTask.checkAbortPermission();\n      interrupt();\n    }\n  }\n}\n  finally {\n  lock.writeLock().unlock();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 97,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 865,
        "startColumnNumber" : 100,
        "endLineNumber" : 887,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  lock.writeLock().lock();\n  try {\n    if (executable != null) {\n      if (runExtId == null || runExtId.isEmpty() || !(executable instanceof Run) || (runExtId.equals(((Run<?,?>)executable).getExternalizableId()))) {\n        final Queue.Task ownerTask=getParentOf(executable).getOwnerTask();\n        boolean canAbort=ownerTask.hasAbortPermission();\n        if (canAbort && ownerTask instanceof AccessControlled) {\n          if (!((AccessControlled)ownerTask).hasPermission(Item.READ)) {\n            return HttpResponses.forwardToPreviousPage();\n          }\n        }\n        ownerTask.checkAbortPermission();\n        interrupt();\n      }\n    }\n  }\n  finally {\n    lock.writeLock().unlock();\n  }\n  return HttpResponses.forwardToPreviousPage();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1631,
        "startLineNumber" : 854,
        "startColumnNumber" : 4,
        "endLineNumber" : 887,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Stops the current build, if matching the specified external id (or no id is specified, or the current  {@link Executable} is not a {@link Run}).\n * @param runExtId if not null, the externalizable id ( {@link Run#getExternalizableId()}) of the build the user expects to interrupt\n * @since 2.209\n */\n@RequirePOST @Restricted(NoExternalUse.class) public HttpResponse doStopBuild(@CheckForNull @QueryParameter(fixEmpty=true) String runExtId){\n  lock.writeLock().lock();\n  try {\n    if (executable != null) {\n      if (runExtId == null || runExtId.isEmpty() || !(executable instanceof Run) || (runExtId.equals(((Run<?,?>)executable).getExternalizableId()))) {\n        final Queue.Task ownerTask=getParentOf(executable).getOwnerTask();\n        boolean canAbort=ownerTask.hasAbortPermission();\n        if (canAbort && ownerTask instanceof AccessControlled) {\n          if (!((AccessControlled)ownerTask).hasPermission(Item.READ)) {\n            return HttpResponses.forwardToPreviousPage();\n          }\n        }\n        ownerTask.checkAbortPermission();\n        interrupt();\n      }\n    }\n  }\n  finally {\n    lock.writeLock().unlock();\n  }\n  return HttpResponses.forwardToPreviousPage();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 884,
        "startColumnNumber" : 12,
        "endLineNumber" : 884,
        "endColumnNumber" : 38
      },
      "nodeContext" : "lock.writeLock().unlock();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.locks.Lock"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 866,
    "startColumnNumber" : 8,
    "endLineNumber" : 866,
    "endColumnNumber" : 24
  }, {
    "charLength" : 16,
    "startLineNumber" : 884,
    "startColumnNumber" : 12,
    "endLineNumber" : 884,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}