{
  "id" : 166,
  "expression" : "itemIconPadding",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/navigation/NavigationView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemIconPadding",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 183,
      "startColumnNumber" : 33,
      "endLineNumber" : 183,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 49
      },
      "nodeContext" : "presenter.setItemIconPadding(itemIconPadding)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 50
      },
      "nodeContext" : "presenter.setItemIconPadding(itemIconPadding);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3459,
        "startLineNumber" : 106,
        "startColumnNumber" : 79,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(context,attrs,defStyleAttr);\n  this.menu=new NavigationMenu(context);\n  TintTypedArray a=ThemeEnforcement.obtainTintedStyledAttributes(context,attrs,R.styleable.NavigationView,defStyleAttr,R.style.Widget_Design_NavigationView);\n  ViewCompat.setBackground(this,a.getDrawable(R.styleable.NavigationView_android_background));\n  if (a.hasValue(R.styleable.NavigationView_elevation)) {\n    ViewCompat.setElevation(this,a.getDimensionPixelSize(R.styleable.NavigationView_elevation,0));\n  }\n  ViewCompat.setFitsSystemWindows(this,a.getBoolean(R.styleable.NavigationView_android_fitsSystemWindows,false));\n  maxWidth=a.getDimensionPixelSize(R.styleable.NavigationView_android_maxWidth,0);\n  final ColorStateList itemIconTint;\n  if (a.hasValue(R.styleable.NavigationView_itemIconTint)) {\n    itemIconTint=a.getColorStateList(R.styleable.NavigationView_itemIconTint);\n  }\n else {\n    itemIconTint=createDefaultColorStateList(android.R.attr.textColorSecondary);\n  }\n  boolean textAppearanceSet=false;\n  int textAppearance=0;\n  if (a.hasValue(R.styleable.NavigationView_itemTextAppearance)) {\n    textAppearance=a.getResourceId(R.styleable.NavigationView_itemTextAppearance,0);\n    textAppearanceSet=true;\n  }\n  ColorStateList itemTextColor=null;\n  if (a.hasValue(R.styleable.NavigationView_itemTextColor)) {\n    itemTextColor=a.getColorStateList(R.styleable.NavigationView_itemTextColor);\n  }\n  if (!textAppearanceSet && itemTextColor == null) {\n    itemTextColor=createDefaultColorStateList(android.R.attr.textColorPrimary);\n  }\n  final Drawable itemBackground=a.getDrawable(R.styleable.NavigationView_itemBackground);\n  if (a.hasValue(R.styleable.NavigationView_itemHorizontalPadding)) {\n    final int itemHorizontalPadding=a.getDimensionPixelSize(R.styleable.NavigationView_itemHorizontalPadding,0);\n    presenter.setItemHorizontalPadding(itemHorizontalPadding);\n  }\n  final int itemIconPadding=a.getDimensionPixelSize(R.styleable.NavigationView_itemIconPadding,0);\n  this.menu.setCallback(new MenuBuilder.Callback(){\n    @Override public boolean onMenuItemSelected(    MenuBuilder menu,    MenuItem item){\n      return listener != null && listener.onNavigationItemSelected(item);\n    }\n    @Override public void onMenuModeChange(    MenuBuilder menu){\n    }\n  }\n);\n  presenter.setId(PRESENTER_NAVIGATION_VIEW_ID);\n  presenter.initForMenu(context,this.menu);\n  presenter.setItemIconTintList(itemIconTint);\n  if (textAppearanceSet) {\n    presenter.setItemTextAppearance(textAppearance);\n  }\n  presenter.setItemTextColor(itemTextColor);\n  presenter.setItemBackground(itemBackground);\n  presenter.setItemIconPadding(itemIconPadding);\n  this.menu.addMenuPresenter(presenter);\n  addView((View)presenter.getMenuView(this));\n  if (a.hasValue(R.styleable.NavigationView_menu)) {\n    inflateMenu(a.getResourceId(R.styleable.NavigationView_menu,0));\n  }\n  if (a.hasValue(R.styleable.NavigationView_headerLayout)) {\n    inflateHeaderView(a.getResourceId(R.styleable.NavigationView_headerLayout,0));\n  }\n  a.recycle();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 431,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3536,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public NavigationView(Context context,AttributeSet attrs,int defStyleAttr){\n  super(context,attrs,defStyleAttr);\n  this.menu=new NavigationMenu(context);\n  TintTypedArray a=ThemeEnforcement.obtainTintedStyledAttributes(context,attrs,R.styleable.NavigationView,defStyleAttr,R.style.Widget_Design_NavigationView);\n  ViewCompat.setBackground(this,a.getDrawable(R.styleable.NavigationView_android_background));\n  if (a.hasValue(R.styleable.NavigationView_elevation)) {\n    ViewCompat.setElevation(this,a.getDimensionPixelSize(R.styleable.NavigationView_elevation,0));\n  }\n  ViewCompat.setFitsSystemWindows(this,a.getBoolean(R.styleable.NavigationView_android_fitsSystemWindows,false));\n  maxWidth=a.getDimensionPixelSize(R.styleable.NavigationView_android_maxWidth,0);\n  final ColorStateList itemIconTint;\n  if (a.hasValue(R.styleable.NavigationView_itemIconTint)) {\n    itemIconTint=a.getColorStateList(R.styleable.NavigationView_itemIconTint);\n  }\n else {\n    itemIconTint=createDefaultColorStateList(android.R.attr.textColorSecondary);\n  }\n  boolean textAppearanceSet=false;\n  int textAppearance=0;\n  if (a.hasValue(R.styleable.NavigationView_itemTextAppearance)) {\n    textAppearance=a.getResourceId(R.styleable.NavigationView_itemTextAppearance,0);\n    textAppearanceSet=true;\n  }\n  ColorStateList itemTextColor=null;\n  if (a.hasValue(R.styleable.NavigationView_itemTextColor)) {\n    itemTextColor=a.getColorStateList(R.styleable.NavigationView_itemTextColor);\n  }\n  if (!textAppearanceSet && itemTextColor == null) {\n    itemTextColor=createDefaultColorStateList(android.R.attr.textColorPrimary);\n  }\n  final Drawable itemBackground=a.getDrawable(R.styleable.NavigationView_itemBackground);\n  if (a.hasValue(R.styleable.NavigationView_itemHorizontalPadding)) {\n    final int itemHorizontalPadding=a.getDimensionPixelSize(R.styleable.NavigationView_itemHorizontalPadding,0);\n    presenter.setItemHorizontalPadding(itemHorizontalPadding);\n  }\n  final int itemIconPadding=a.getDimensionPixelSize(R.styleable.NavigationView_itemIconPadding,0);\n  this.menu.setCallback(new MenuBuilder.Callback(){\n    @Override public boolean onMenuItemSelected(    MenuBuilder menu,    MenuItem item){\n      return listener != null && listener.onNavigationItemSelected(item);\n    }\n    @Override public void onMenuModeChange(    MenuBuilder menu){\n    }\n  }\n);\n  presenter.setId(PRESENTER_NAVIGATION_VIEW_ID);\n  presenter.initForMenu(context,this.menu);\n  presenter.setItemIconTintList(itemIconTint);\n  if (textAppearanceSet) {\n    presenter.setItemTextAppearance(textAppearance);\n  }\n  presenter.setItemTextColor(itemTextColor);\n  presenter.setItemBackground(itemBackground);\n  presenter.setItemIconPadding(itemIconPadding);\n  this.menu.addMenuPresenter(presenter);\n  addView((View)presenter.getMenuView(this));\n  if (a.hasValue(R.styleable.NavigationView_menu)) {\n    inflateMenu(a.getResourceId(R.styleable.NavigationView_menu,0));\n  }\n  if (a.hasValue(R.styleable.NavigationView_headerLayout)) {\n    inflateHeaderView(a.getResourceId(R.styleable.NavigationView_headerLayout,0));\n  }\n  a.recycle();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 445,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 50
      },
      "nodeContext" : "presenter.setItemIconPadding(itemIconPadding);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 183,
    "startColumnNumber" : 33,
    "endLineNumber" : 183,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}