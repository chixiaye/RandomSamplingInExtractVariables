{
  "id" : 97,
  "expression" : "prod",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/trampoline/src/main/java/com/iluwatar/trampoline/TrampolineApp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "prod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 53,
      "startColumnNumber" : 29,
      "endLineNumber" : 53,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 53,
        "startColumnNumber" : 13,
        "endLineNumber" : 53,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Trampoline.done(prod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return Trampoline.done(prod);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Trampoline.done(prod);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (times == 0) {\n  return Trampoline.done(prod);\n}\n else {\n  return Trampoline.more(() -> loop(times - 1,prod * times));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 51,
        "startColumnNumber" : 62,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (times == 0) {\n    return Trampoline.done(prod);\n  }\n else {\n    return Trampoline.more(() -> loop(times - 1,prod * times));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Manager for pattern. Define it with a factorial function.\n */\npublic static Trampoline<Integer> loop(int times,int prod){\n  if (times == 0) {\n    return Trampoline.done(prod);\n  }\n else {\n    return Trampoline.more(() -> loop(times - 1,prod * times));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return Trampoline.done(prod);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 53,
    "startColumnNumber" : 29,
    "endLineNumber" : 53,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}