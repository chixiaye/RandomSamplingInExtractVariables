{
  "id" : 122,
  "expression" : "annotations == null",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "ff4c073df242c93e8f6f65b6d757e74e4e5a2114",
  "filePath" : "zipkin-java-core/src/main/java/io/zipkin/internal/CorrectForClockSkew.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "annotations == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 81,
      "startColumnNumber" : 12,
      "endLineNumber" : 81,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (annotations == null) annotations=span.annotations.toArray(new Annotation[length]);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 80,
        "startColumnNumber" : 54,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (annotations == null)   annotations=span.annotations.toArray(new Annotation[length]);\n  annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 80,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n  if (annotations == null)   annotations=span.annotations.toArray(new Annotation[length]);\n  annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 77,
        "startColumnNumber" : 37,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Annotation a=span.annotations.get(i);\n  if (a.endpoint == null)   continue;\n  if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n    if (annotations == null)     annotations=span.annotations.toArray(new Annotation[length]);\n    annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < length; i++) {\n  Annotation a=span.annotations.get(i);\n  if (a.endpoint == null)   continue;\n  if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n    if (annotations == null)     annotations=span.annotations.toArray(new Annotation[length]);\n    annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 83,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 74,
        "startColumnNumber" : 71,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Annotation[] annotations=null;\n  int length=span.annotations.size();\n  for (int i=0; i < length; i++) {\n    Annotation a=span.annotations.get(i);\n    if (a.endpoint == null)     continue;\n    if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n      if (annotations == null)       annotations=span.annotations.toArray(new Annotation[length]);\n      annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n    }\n  }\n  if (annotations == null)   return span;\n  long first=annotations[0].timestamp;\n  long last=annotations[length - 1].timestamp;\n  long duration=last - first;\n  return new Span.Builder(span).timestamp(first).duration(duration).annotations(annotations).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * If any annotation has an IP with skew associated, adjust accordingly. \n */\nprivate static Span adjustTimestamps(Span span,ClockSkew clockSkew){\n  Annotation[] annotations=null;\n  int length=span.annotations.size();\n  for (int i=0; i < length; i++) {\n    Annotation a=span.annotations.get(i);\n    if (a.endpoint == null)     continue;\n    if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n      if (annotations == null)       annotations=span.annotations.toArray(new Annotation[length]);\n      annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n    }\n  }\n  if (annotations == null)   return span;\n  long first=annotations[0].timestamp;\n  long last=annotations[length - 1].timestamp;\n  long duration=last - first;\n  return new Span.Builder(span).timestamp(first).duration(duration).annotations(annotations).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (annotations == null) annotations=span.annotations.toArray(new Annotation[length]);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "annotations == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 85,
      "startColumnNumber" : 8,
      "endLineNumber" : 85,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if (annotations == null) return span;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 74,
        "startColumnNumber" : 71,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Annotation[] annotations=null;\n  int length=span.annotations.size();\n  for (int i=0; i < length; i++) {\n    Annotation a=span.annotations.get(i);\n    if (a.endpoint == null)     continue;\n    if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n      if (annotations == null)       annotations=span.annotations.toArray(new Annotation[length]);\n      annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n    }\n  }\n  if (annotations == null)   return span;\n  long first=annotations[0].timestamp;\n  long last=annotations[length - 1].timestamp;\n  long duration=last - first;\n  return new Span.Builder(span).timestamp(first).duration(duration).annotations(annotations).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * If any annotation has an IP with skew associated, adjust accordingly. \n */\nprivate static Span adjustTimestamps(Span span,ClockSkew clockSkew){\n  Annotation[] annotations=null;\n  int length=span.annotations.size();\n  for (int i=0; i < length; i++) {\n    Annotation a=span.annotations.get(i);\n    if (a.endpoint == null)     continue;\n    if (clockSkew.endpoint.ipv4 == a.endpoint.ipv4) {\n      if (annotations == null)       annotations=span.annotations.toArray(new Annotation[length]);\n      annotations[i]=new Annotation.Builder(a).timestamp(a.timestamp - clockSkew.skew).build();\n    }\n  }\n  if (annotations == null)   return span;\n  long first=annotations[0].timestamp;\n  long last=annotations[length - 1].timestamp;\n  long duration=last - first;\n  return new Span.Builder(span).timestamp(first).duration(duration).annotations(annotations).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if (annotations == null) return span;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 81,
    "startColumnNumber" : 12,
    "endLineNumber" : 81,
    "endColumnNumber" : 31
  }, {
    "charLength" : 19,
    "startLineNumber" : 85,
    "startColumnNumber" : 8,
    "endLineNumber" : 85,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}