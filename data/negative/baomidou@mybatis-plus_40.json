{
  "id" : 40,
  "expression" : "exceptionTranslator",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/MybatisSqlSessionTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exceptionTranslator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 101,
      "startColumnNumber" : 35,
      "endLineNumber" : 101,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.exceptionTranslator=exceptionTranslator",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.exceptionTranslator=exceptionTranslator;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 499,
        "startLineNumber" : 94,
        "startColumnNumber" : 89,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.notNull(sqlSessionFactory,\"Property 'sqlSessionFactory' is required\");\n  Assert.notNull(executorType,\"Property 'executorType' is required\");\n  this.sqlSessionFactory=sqlSessionFactory;\n  this.executorType=executorType;\n  this.exceptionTranslator=exceptionTranslator;\n  this.sqlSessionProxy=(SqlSession)newProxyInstance(SqlSessionFactory.class.getClassLoader(),new Class[]{SqlSession.class},new SqlSessionInterceptor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructs a Spring managed  {@code SqlSession} with the given{@code SqlSessionFactory} and {@code ExecutorType}. A custom {@code SQLExceptionTranslator} can be provided as an argument so any{@code PersistenceException} thrown by MyBatis can be custom translatedto a  {@code RuntimeException} The {@code SQLExceptionTranslator} can alsobe null and thus no exception translation will be done and MyBatis exceptions will be thrown\n * @param sqlSessionFactory\n * @param executorType\n * @param exceptionTranslator\n */\npublic MybatisSqlSessionTemplate(SqlSessionFactory sqlSessionFactory,ExecutorType executorType,PersistenceExceptionTranslator exceptionTranslator){\n  Assert.notNull(sqlSessionFactory,\"Property 'sqlSessionFactory' is required\");\n  Assert.notNull(executorType,\"Property 'executorType' is required\");\n  this.sqlSessionFactory=sqlSessionFactory;\n  this.executorType=executorType;\n  this.exceptionTranslator=exceptionTranslator;\n  this.sqlSessionProxy=(SqlSession)newProxyInstance(SqlSessionFactory.class.getClassLoader(),new Class[]{SqlSession.class},new SqlSessionInterceptor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.exceptionTranslator=exceptionTranslator;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.PersistenceExceptionTranslator"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 101,
    "startColumnNumber" : 35,
    "endLineNumber" : 101,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}