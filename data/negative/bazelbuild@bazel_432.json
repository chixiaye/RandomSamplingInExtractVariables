{
  "id" : 432,
  "expression" : "newParameterSize",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/optimize/ParameterShrinker.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newParameterSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 91,
      "startColumnNumber" : 31,
      "endLineNumber" : 91,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 47
      },
      "nodeContext" : "oldParameterSize > newParameterSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2405,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldParameterSize > newParameterSize) {\n  int maxLocals=codeAttribute.u2maxLocals;\n  if (DEBUG) {\n    System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n    System.out.println(\"  Old parameter size = \" + oldParameterSize);\n    System.out.println(\"  New parameter size = \" + newParameterSize);\n    System.out.println(\"  Max locals         = \" + maxLocals);\n  }\n  int[] variableMap=new int[maxLocals];\n  int usedParameterIndex=0;\n  int unusedParameterIndex=newParameterSize;\n  for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n    if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n      variableMap[parameterIndex]=usedParameterIndex++;\n    }\n else {\n      if (DEBUG) {\n        System.out.println(\"  Deleting parameter #\" + parameterIndex);\n      }\n      variableMap[parameterIndex]=unusedParameterIndex++;\n      if (extraUnusedParameterMethodVisitor != null) {\n        method.accept(clazz,extraUnusedParameterMethodVisitor);\n      }\n    }\n  }\n  for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n    variableMap[variableIndex]=variableIndex;\n  }\n  variableRemapper.setVariableMap(variableMap);\n  variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2908,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitCodeAttribute(Clazz clazz,Method method,CodeAttribute codeAttribute){\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 47
      },
      "nodeContext" : "oldParameterSize > newParameterSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "newParameterSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 100,
      "startColumnNumber" : 63,
      "endLineNumber" : 100,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 100,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"  New parameter size = \" + newParameterSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 80
      },
      "nodeContext" : "System.out.println(\"  New parameter size = \" + newParameterSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.out.println(\"  New parameter size = \" + newParameterSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n  System.out.println(\"  Old parameter size = \" + oldParameterSize);\n  System.out.println(\"  New parameter size = \" + newParameterSize);\n  System.out.println(\"  Max locals         = \" + maxLocals);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (DEBUG) {\n  System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n  System.out.println(\"  Old parameter size = \" + oldParameterSize);\n  System.out.println(\"  New parameter size = \" + newParameterSize);\n  System.out.println(\"  Max locals         = \" + maxLocals);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2356,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int maxLocals=codeAttribute.u2maxLocals;\n  if (DEBUG) {\n    System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n    System.out.println(\"  Old parameter size = \" + oldParameterSize);\n    System.out.println(\"  New parameter size = \" + newParameterSize);\n    System.out.println(\"  Max locals         = \" + maxLocals);\n  }\n  int[] variableMap=new int[maxLocals];\n  int usedParameterIndex=0;\n  int unusedParameterIndex=newParameterSize;\n  for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n    if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n      variableMap[parameterIndex]=usedParameterIndex++;\n    }\n else {\n      if (DEBUG) {\n        System.out.println(\"  Deleting parameter #\" + parameterIndex);\n      }\n      variableMap[parameterIndex]=unusedParameterIndex++;\n      if (extraUnusedParameterMethodVisitor != null) {\n        method.accept(clazz,extraUnusedParameterMethodVisitor);\n      }\n    }\n  }\n  for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n    variableMap[variableIndex]=variableIndex;\n  }\n  variableRemapper.setVariableMap(variableMap);\n  variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2405,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldParameterSize > newParameterSize) {\n  int maxLocals=codeAttribute.u2maxLocals;\n  if (DEBUG) {\n    System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n    System.out.println(\"  Old parameter size = \" + oldParameterSize);\n    System.out.println(\"  New parameter size = \" + newParameterSize);\n    System.out.println(\"  Max locals         = \" + maxLocals);\n  }\n  int[] variableMap=new int[maxLocals];\n  int usedParameterIndex=0;\n  int unusedParameterIndex=newParameterSize;\n  for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n    if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n      variableMap[parameterIndex]=usedParameterIndex++;\n    }\n else {\n      if (DEBUG) {\n        System.out.println(\"  Deleting parameter #\" + parameterIndex);\n      }\n      variableMap[parameterIndex]=unusedParameterIndex++;\n      if (extraUnusedParameterMethodVisitor != null) {\n        method.accept(clazz,extraUnusedParameterMethodVisitor);\n      }\n    }\n  }\n  for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n    variableMap[variableIndex]=variableIndex;\n  }\n  variableRemapper.setVariableMap(variableMap);\n  variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2908,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitCodeAttribute(Clazz clazz,Method method,CodeAttribute codeAttribute){\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.out.println(\"  New parameter size = \" + newParameterSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "newParameterSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 109,
      "startColumnNumber" : 39,
      "endLineNumber" : 109,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 109,
        "startColumnNumber" : 16,
        "endLineNumber" : 109,
        "endColumnNumber" : 55
      },
      "nodeContext" : "unusedParameterIndex=newParameterSize",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 56
      },
      "nodeContext" : "int unusedParameterIndex=newParameterSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2356,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int maxLocals=codeAttribute.u2maxLocals;\n  if (DEBUG) {\n    System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n    System.out.println(\"  Old parameter size = \" + oldParameterSize);\n    System.out.println(\"  New parameter size = \" + newParameterSize);\n    System.out.println(\"  Max locals         = \" + maxLocals);\n  }\n  int[] variableMap=new int[maxLocals];\n  int usedParameterIndex=0;\n  int unusedParameterIndex=newParameterSize;\n  for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n    if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n      variableMap[parameterIndex]=usedParameterIndex++;\n    }\n else {\n      if (DEBUG) {\n        System.out.println(\"  Deleting parameter #\" + parameterIndex);\n      }\n      variableMap[parameterIndex]=unusedParameterIndex++;\n      if (extraUnusedParameterMethodVisitor != null) {\n        method.accept(clazz,extraUnusedParameterMethodVisitor);\n      }\n    }\n  }\n  for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n    variableMap[variableIndex]=variableIndex;\n  }\n  variableRemapper.setVariableMap(variableMap);\n  variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2405,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldParameterSize > newParameterSize) {\n  int maxLocals=codeAttribute.u2maxLocals;\n  if (DEBUG) {\n    System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n    System.out.println(\"  Old parameter size = \" + oldParameterSize);\n    System.out.println(\"  New parameter size = \" + newParameterSize);\n    System.out.println(\"  Max locals         = \" + maxLocals);\n  }\n  int[] variableMap=new int[maxLocals];\n  int usedParameterIndex=0;\n  int unusedParameterIndex=newParameterSize;\n  for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n    if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n      variableMap[parameterIndex]=usedParameterIndex++;\n    }\n else {\n      if (DEBUG) {\n        System.out.println(\"  Deleting parameter #\" + parameterIndex);\n      }\n      variableMap[parameterIndex]=unusedParameterIndex++;\n      if (extraUnusedParameterMethodVisitor != null) {\n        method.accept(clazz,extraUnusedParameterMethodVisitor);\n      }\n    }\n  }\n  for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n    variableMap[variableIndex]=variableIndex;\n  }\n  variableRemapper.setVariableMap(variableMap);\n  variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2908,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitCodeAttribute(Clazz clazz,Method method,CodeAttribute codeAttribute){\n  int oldParameterSize=ParameterUsageMarker.getParameterSize(method);\n  int newParameterSize=ClassUtil.internalMethodParameterSize(method.getDescriptor(clazz),method.getAccessFlags());\n  if (oldParameterSize > newParameterSize) {\n    int maxLocals=codeAttribute.u2maxLocals;\n    if (DEBUG) {\n      System.out.println(\"ParameterShrinker: \" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz));\n      System.out.println(\"  Old parameter size = \" + oldParameterSize);\n      System.out.println(\"  New parameter size = \" + newParameterSize);\n      System.out.println(\"  Max locals         = \" + maxLocals);\n    }\n    int[] variableMap=new int[maxLocals];\n    int usedParameterIndex=0;\n    int unusedParameterIndex=newParameterSize;\n    for (int parameterIndex=0; parameterIndex < oldParameterSize; parameterIndex++) {\n      if (ParameterUsageMarker.isParameterUsed(method,parameterIndex)) {\n        variableMap[parameterIndex]=usedParameterIndex++;\n      }\n else {\n        if (DEBUG) {\n          System.out.println(\"  Deleting parameter #\" + parameterIndex);\n        }\n        variableMap[parameterIndex]=unusedParameterIndex++;\n        if (extraUnusedParameterMethodVisitor != null) {\n          method.accept(clazz,extraUnusedParameterMethodVisitor);\n        }\n      }\n    }\n    for (int variableIndex=oldParameterSize; variableIndex < maxLocals; variableIndex++) {\n      variableMap[variableIndex]=variableIndex;\n    }\n    variableRemapper.setVariableMap(variableMap);\n    variableRemapper.visitCodeAttribute(clazz,method,codeAttribute);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 56
      },
      "nodeContext" : "int unusedParameterIndex=newParameterSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 91,
    "startColumnNumber" : 31,
    "endLineNumber" : 91,
    "endColumnNumber" : 47
  }, {
    "charLength" : 16,
    "startLineNumber" : 100,
    "startColumnNumber" : 63,
    "endLineNumber" : 100,
    "endColumnNumber" : 79
  }, {
    "charLength" : 16,
    "startLineNumber" : 109,
    "startColumnNumber" : 39,
    "endLineNumber" : 109,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}