{
  "id" : 502,
  "expression" : "Log",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/PushGroupUpdateJob.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 89,
      "startColumnNumber" : 6,
      "endLineNumber" : 89,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Log.w(TAG,sourceRecipient.getId() + \" not registered!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 88,
        "startColumnNumber" : 42,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (sourceRecipient.isUnregistered()) {\n  Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3098,
        "startLineNumber" : 81,
        "startColumnNumber" : 69,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  Recipient sourceRecipient=Recipient.resolved(source);\n  if (sourceRecipient.isUnregistered()) {\n    Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n    return;\n  }\n  GroupDatabase groupDatabase=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=groupDatabase.getGroup(groupId);\n  SignalServiceAttachment avatar=null;\n  if (record == null || !record.isPresent()) {\n    Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n    return;\n  }\n  if (AvatarHelper.hasAvatar(context,record.get().getRecipientId())) {\n    avatar=SignalServiceAttachmentStream.newStreamBuilder().withContentType(\"image/jpeg\").withStream(AvatarHelper.getAvatar(context,record.get().getRecipientId())).withLength(AvatarHelper.getAvatarLength(context,record.get().getRecipientId())).build();\n  }\n  List<SignalServiceAddress> members=new LinkedList<>();\n  for (  RecipientId member : record.get().getMembers()) {\n    Recipient recipient=Recipient.resolved(member);\n    if (recipient.isMaybeRegistered()) {\n      members.add(RecipientUtil.toSignalServiceAddress(context,recipient));\n    }\n  }\n  SignalServiceGroup groupContext=SignalServiceGroup.newBuilder(Type.UPDATE).withAvatar(avatar).withId(groupId.getDecodedId()).withMembers(members).withName(record.get().getTitle()).build();\n  RecipientId groupRecipientId=DatabaseFactory.getRecipientDatabase(context).getOrInsertFromGroupId(groupId);\n  Recipient groupRecipient=Recipient.resolved(groupRecipientId);\n  SignalServiceDataMessage message=SignalServiceDataMessage.newBuilder().asGroupMessage(groupContext).withTimestamp(System.currentTimeMillis()).withExpiration(groupRecipient.getExpiresInSeconds()).build();\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  messageSender.sendDataMessage(RecipientUtil.toSignalServiceAddress(context,sourceRecipient),UnidentifiedAccessUtil.getAccessFor(context,sourceRecipient),ContentHint.DEFAULT,message,IndividualSendEvents.EMPTY);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3177,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  Recipient sourceRecipient=Recipient.resolved(source);\n  if (sourceRecipient.isUnregistered()) {\n    Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n    return;\n  }\n  GroupDatabase groupDatabase=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=groupDatabase.getGroup(groupId);\n  SignalServiceAttachment avatar=null;\n  if (record == null || !record.isPresent()) {\n    Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n    return;\n  }\n  if (AvatarHelper.hasAvatar(context,record.get().getRecipientId())) {\n    avatar=SignalServiceAttachmentStream.newStreamBuilder().withContentType(\"image/jpeg\").withStream(AvatarHelper.getAvatar(context,record.get().getRecipientId())).withLength(AvatarHelper.getAvatarLength(context,record.get().getRecipientId())).build();\n  }\n  List<SignalServiceAddress> members=new LinkedList<>();\n  for (  RecipientId member : record.get().getMembers()) {\n    Recipient recipient=Recipient.resolved(member);\n    if (recipient.isMaybeRegistered()) {\n      members.add(RecipientUtil.toSignalServiceAddress(context,recipient));\n    }\n  }\n  SignalServiceGroup groupContext=SignalServiceGroup.newBuilder(Type.UPDATE).withAvatar(avatar).withId(groupId.getDecodedId()).withMembers(members).withName(record.get().getTitle()).build();\n  RecipientId groupRecipientId=DatabaseFactory.getRecipientDatabase(context).getOrInsertFromGroupId(groupId);\n  Recipient groupRecipient=Recipient.resolved(groupRecipientId);\n  SignalServiceDataMessage message=SignalServiceDataMessage.newBuilder().asGroupMessage(groupContext).withTimestamp(System.currentTimeMillis()).withExpiration(groupRecipient.getExpiresInSeconds()).build();\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  messageSender.sendDataMessage(RecipientUtil.toSignalServiceAddress(context,sourceRecipient),UnidentifiedAccessUtil.getAccessFor(context,sourceRecipient),ContentHint.DEFAULT,message,IndividualSendEvents.EMPTY);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.signal.core.util.logging.Log"
  }, {
    "nodeContext" : "Log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 98,
      "startColumnNumber" : 6,
      "endLineNumber" : 98,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Log.w(TAG,\"No information for group record info request: \" + groupId.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (record == null || !record.isPresent()) {\n  Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3098,
        "startLineNumber" : 81,
        "startColumnNumber" : 69,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  Recipient sourceRecipient=Recipient.resolved(source);\n  if (sourceRecipient.isUnregistered()) {\n    Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n    return;\n  }\n  GroupDatabase groupDatabase=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=groupDatabase.getGroup(groupId);\n  SignalServiceAttachment avatar=null;\n  if (record == null || !record.isPresent()) {\n    Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n    return;\n  }\n  if (AvatarHelper.hasAvatar(context,record.get().getRecipientId())) {\n    avatar=SignalServiceAttachmentStream.newStreamBuilder().withContentType(\"image/jpeg\").withStream(AvatarHelper.getAvatar(context,record.get().getRecipientId())).withLength(AvatarHelper.getAvatarLength(context,record.get().getRecipientId())).build();\n  }\n  List<SignalServiceAddress> members=new LinkedList<>();\n  for (  RecipientId member : record.get().getMembers()) {\n    Recipient recipient=Recipient.resolved(member);\n    if (recipient.isMaybeRegistered()) {\n      members.add(RecipientUtil.toSignalServiceAddress(context,recipient));\n    }\n  }\n  SignalServiceGroup groupContext=SignalServiceGroup.newBuilder(Type.UPDATE).withAvatar(avatar).withId(groupId.getDecodedId()).withMembers(members).withName(record.get().getTitle()).build();\n  RecipientId groupRecipientId=DatabaseFactory.getRecipientDatabase(context).getOrInsertFromGroupId(groupId);\n  Recipient groupRecipient=Recipient.resolved(groupRecipientId);\n  SignalServiceDataMessage message=SignalServiceDataMessage.newBuilder().asGroupMessage(groupContext).withTimestamp(System.currentTimeMillis()).withExpiration(groupRecipient.getExpiresInSeconds()).build();\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  messageSender.sendDataMessage(RecipientUtil.toSignalServiceAddress(context,sourceRecipient),UnidentifiedAccessUtil.getAccessFor(context,sourceRecipient),ContentHint.DEFAULT,message,IndividualSendEvents.EMPTY);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3177,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  Recipient sourceRecipient=Recipient.resolved(source);\n  if (sourceRecipient.isUnregistered()) {\n    Log.w(TAG,sourceRecipient.getId() + \" not registered!\");\n    return;\n  }\n  GroupDatabase groupDatabase=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=groupDatabase.getGroup(groupId);\n  SignalServiceAttachment avatar=null;\n  if (record == null || !record.isPresent()) {\n    Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n    return;\n  }\n  if (AvatarHelper.hasAvatar(context,record.get().getRecipientId())) {\n    avatar=SignalServiceAttachmentStream.newStreamBuilder().withContentType(\"image/jpeg\").withStream(AvatarHelper.getAvatar(context,record.get().getRecipientId())).withLength(AvatarHelper.getAvatarLength(context,record.get().getRecipientId())).build();\n  }\n  List<SignalServiceAddress> members=new LinkedList<>();\n  for (  RecipientId member : record.get().getMembers()) {\n    Recipient recipient=Recipient.resolved(member);\n    if (recipient.isMaybeRegistered()) {\n      members.add(RecipientUtil.toSignalServiceAddress(context,recipient));\n    }\n  }\n  SignalServiceGroup groupContext=SignalServiceGroup.newBuilder(Type.UPDATE).withAvatar(avatar).withId(groupId.getDecodedId()).withMembers(members).withName(record.get().getTitle()).build();\n  RecipientId groupRecipientId=DatabaseFactory.getRecipientDatabase(context).getOrInsertFromGroupId(groupId);\n  Recipient groupRecipient=Recipient.resolved(groupRecipientId);\n  SignalServiceDataMessage message=SignalServiceDataMessage.newBuilder().asGroupMessage(groupContext).withTimestamp(System.currentTimeMillis()).withExpiration(groupRecipient.getExpiresInSeconds()).build();\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  messageSender.sendDataMessage(RecipientUtil.toSignalServiceAddress(context,sourceRecipient),UnidentifiedAccessUtil.getAccessFor(context,sourceRecipient),ContentHint.DEFAULT,message,IndividualSendEvents.EMPTY);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Log.w(TAG,\"No information for group record info request: \" + groupId.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.signal.core.util.logging.Log"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 89,
    "startColumnNumber" : 6,
    "endLineNumber" : 89,
    "endColumnNumber" : 9
  }, {
    "charLength" : 3,
    "startLineNumber" : 98,
    "startColumnNumber" : 6,
    "endLineNumber" : 98,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}