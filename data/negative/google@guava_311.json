{
  "id" : 311,
  "expression" : "Arrays",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/reflect/SubtypeTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 140,
      "startColumnNumber" : 4,
      "endLineNumber" : 140,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Arrays.sort(methods,new Comparator<Method>(){\n  @Override public int compare(  Method a,  Method b){\n    return a.getName().compareTo(b.getName());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Arrays.sort(methods,new Comparator<Method>(){\n  @Override public int compare(  Method a,  Method b){\n    return a.getName().compareTo(b.getName());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 137,
        "startColumnNumber" : 52,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkState(method == null);\n  Method[] methods=getClass().getMethods();\n  Arrays.sort(methods,new Comparator<Method>(){\n    @Override public int compare(    Method a,    Method b){\n      return a.getName().compareTo(b.getName());\n    }\n  }\n);\n  for (  Method method : methods) {\n    if (method.isAnnotationPresent(TestSubtype.class)) {\n      method.setAccessible(true);\n      SubtypeTester tester=(SubtypeTester)clone();\n      tester.method=method;\n      method.invoke(tester,new Object[]{null});\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "final void testAllDeclarations() throws Exception {\n  checkState(method == null);\n  Method[] methods=getClass().getMethods();\n  Arrays.sort(methods,new Comparator<Method>(){\n    @Override public int compare(    Method a,    Method b){\n      return a.getName().compareTo(b.getName());\n    }\n  }\n);\n  for (  Method method : methods) {\n    if (method.isAnnotationPresent(TestSubtype.class)) {\n      method.setAccessible(true);\n      SubtypeTester tester=(SubtypeTester)clone();\n      tester.method=method;\n      method.invoke(tester,new Object[]{null});\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Arrays.sort(methods,new Comparator<Method>(){\n  @Override public int compare(  Method a,  Method b){\n    return a.getName().compareTo(b.getName());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 140,
    "startColumnNumber" : 4,
    "endLineNumber" : 140,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}