{
  "id" : 12,
  "expression" : "Tags.URL",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/vertx-plugins/vertx-core-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/vertx3/ServerConnectionHandleMessageInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Tags.URL",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 54,
      "startColumnNumber" : 12,
      "endLineNumber" : 54,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Tags.URL.set(span,request.getUri())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Tags.URL.set(span,request.getUri());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 40,
        "startColumnNumber" : 52,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpRequest request=(HttpRequest)allArguments[0];\n  ContextCarrier contextCarrier=new ContextCarrier();\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    next.setHeadValue(request.headers().get(next.getHeadKey()));\n    request.headers().remove(next.getHeadKey());\n  }\n  AbstractSpan span=ContextManager.createEntrySpan(\"{\" + request.getMethod() + \"}\"+ toPath(request.getUri()),contextCarrier);\n  span.setComponent(ComponentsDefine.VERTX);\n  SpanLayer.asHttp(span);\n  Tags.HTTP.METHOD.set(span,request.getMethod().toString());\n  Tags.URL.set(span,request.getUri());\n  objInst.setSkyWalkingDynamicField(new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (allArguments[0] instanceof HttpRequest) {\n  HttpRequest request=(HttpRequest)allArguments[0];\n  ContextCarrier contextCarrier=new ContextCarrier();\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    next.setHeadValue(request.headers().get(next.getHeadKey()));\n    request.headers().remove(next.getHeadKey());\n  }\n  AbstractSpan span=ContextManager.createEntrySpan(\"{\" + request.getMethod() + \"}\"+ toPath(request.getUri()),contextCarrier);\n  span.setComponent(ComponentsDefine.VERTX);\n  SpanLayer.asHttp(span);\n  Tags.HTTP.METHOD.set(span,request.getMethod().toString());\n  Tags.URL.set(span,request.getUri());\n  objInst.setSkyWalkingDynamicField(new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 136,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 39,
        "startColumnNumber" : 55,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (allArguments[0] instanceof HttpRequest) {\n    HttpRequest request=(HttpRequest)allArguments[0];\n    ContextCarrier contextCarrier=new ContextCarrier();\n    CarrierItem next=contextCarrier.items();\n    while (next.hasNext()) {\n      next=next.next();\n      next.setHeadValue(request.headers().get(next.getHeadKey()));\n      request.headers().remove(next.getHeadKey());\n    }\n    AbstractSpan span=ContextManager.createEntrySpan(\"{\" + request.getMethod() + \"}\"+ toPath(request.getUri()),contextCarrier);\n    span.setComponent(ComponentsDefine.VERTX);\n    SpanLayer.asHttp(span);\n    Tags.HTTP.METHOD.set(span,request.getMethod().toString());\n    Tags.URL.set(span,request.getUri());\n    objInst.setSkyWalkingDynamicField(new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void beforeMethod(EnhancedInstance objInst,Method method,Object[] allArguments,Class<?>[] argumentsTypes,MethodInterceptResult result) throws Throwable {\n  if (allArguments[0] instanceof HttpRequest) {\n    HttpRequest request=(HttpRequest)allArguments[0];\n    ContextCarrier contextCarrier=new ContextCarrier();\n    CarrierItem next=contextCarrier.items();\n    while (next.hasNext()) {\n      next=next.next();\n      next.setHeadValue(request.headers().get(next.getHeadKey()));\n      request.headers().remove(next.getHeadKey());\n    }\n    AbstractSpan span=ContextManager.createEntrySpan(\"{\" + request.getMethod() + \"}\"+ toPath(request.getUri()),contextCarrier);\n    span.setComponent(ComponentsDefine.VERTX);\n    SpanLayer.asHttp(span);\n    Tags.HTTP.METHOD.set(span,request.getMethod().toString());\n    Tags.URL.set(span,request.getUri());\n    objInst.setSkyWalkingDynamicField(new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Tags.URL.set(span,request.getUri());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.skywalking.apm.agent.core.context.tag.StringTag"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 54,
    "startColumnNumber" : 12,
    "endLineNumber" : 54,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}