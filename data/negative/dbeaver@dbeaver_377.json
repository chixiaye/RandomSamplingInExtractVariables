{
  "id" : 377,
  "expression" : "paramType.getTypeID()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/data/MySQLNumberValueHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "paramType.getTypeID()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 66,
      "startColumnNumber" : 16,
      "endLineNumber" : 66,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 50
      },
      "nodeContext" : "paramType.getTypeID() == Types.BIT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (paramType.getTypeID() == Types.BIT) {\n  long longValue;\n  try {\n    longValue=Long.parseLong(strValue,2);\n  }\n catch (  NumberFormatException e) {\n    throw new SQLException(\"Can't convert value '\" + value + \"' into bit string\",e);\n  }\n  if (CommonUtils.toInt(paramType.getPrecision()) <= 1) {\n    statement.setByte(paramIndex,(byte)longValue);\n  }\n else {\n    statement.setLong(paramIndex,longValue);\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 64,
        "startColumnNumber" : 37,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String strValue=(String)value;\n  if (paramType.getTypeID() == Types.BIT) {\n    long longValue;\n    try {\n      longValue=Long.parseLong(strValue,2);\n    }\n catch (    NumberFormatException e) {\n      throw new SQLException(\"Can't convert value '\" + value + \"' into bit string\",e);\n    }\n    if (CommonUtils.toInt(paramType.getPrecision()) <= 1) {\n      statement.setByte(paramIndex,(byte)longValue);\n    }\n else {\n      statement.setLong(paramIndex,longValue);\n    }\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof String) {\n  String strValue=(String)value;\n  if (paramType.getTypeID() == Types.BIT) {\n    long longValue;\n    try {\n      longValue=Long.parseLong(strValue,2);\n    }\n catch (    NumberFormatException e) {\n      throw new SQLException(\"Can't convert value '\" + value + \"' into bit string\",e);\n    }\n    if (CommonUtils.toInt(paramType.getPrecision()) <= 1) {\n      statement.setByte(paramIndex,(byte)longValue);\n    }\n else {\n      statement.setLong(paramIndex,longValue);\n    }\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 63,
        "startColumnNumber" : 97,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (value instanceof String) {\n    String strValue=(String)value;\n    if (paramType.getTypeID() == Types.BIT) {\n      long longValue;\n      try {\n        longValue=Long.parseLong(strValue,2);\n      }\n catch (      NumberFormatException e) {\n        throw new SQLException(\"Can't convert value '\" + value + \"' into bit string\",e);\n      }\n      if (CommonUtils.toInt(paramType.getPrecision()) <= 1) {\n        statement.setByte(paramIndex,(byte)longValue);\n      }\n else {\n        statement.setLong(paramIndex,longValue);\n      }\n      return;\n    }\n  }\n  super.bindParameter(session,statement,paramType,paramIndex,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void bindParameter(JDBCSession session,JDBCPreparedStatement statement,DBSTypedObject paramType,int paramIndex,Object value) throws SQLException, DBCException {\n  if (value instanceof String) {\n    String strValue=(String)value;\n    if (paramType.getTypeID() == Types.BIT) {\n      long longValue;\n      try {\n        longValue=Long.parseLong(strValue,2);\n      }\n catch (      NumberFormatException e) {\n        throw new SQLException(\"Can't convert value '\" + value + \"' into bit string\",e);\n      }\n      if (CommonUtils.toInt(paramType.getPrecision()) <= 1) {\n        statement.setByte(paramIndex,(byte)longValue);\n      }\n else {\n        statement.setLong(paramIndex,longValue);\n      }\n      return;\n    }\n  }\n  super.bindParameter(session,statement,paramType,paramIndex,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 50
      },
      "nodeContext" : "paramType.getTypeID() == Types.BIT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 66,
    "startColumnNumber" : 16,
    "endLineNumber" : 66,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}