{
  "id" : 223,
  "expression" : "calendar.get(Calendar.HOUR_OF_DAY)",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/parser/deser/DateParseTest7.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "calendar.get(Calendar.HOUR_OF_DAY)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 35,
      "startColumnNumber" : 32,
      "endLineNumber" : 35,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertEquals(13,calendar.get(Calendar.HOUR_OF_DAY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(13,calendar.get(Calendar.HOUR_OF_DAY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 19,
        "startColumnNumber" : 45,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.currentTimeMillis());\n  System.out.println(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(\"1970-01-01 20:00:01\").getTime());\n  System.out.println(new Date().toString());\n  String text=\"\\\"19790714130723\\\"\";\n  Date date=JSON.parseObject(text,Date.class);\n  Calendar calendar=Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale);\n  calendar.setTime(date);\n  Assert.assertEquals(1979,calendar.get(Calendar.YEAR));\n  Assert.assertEquals(6,calendar.get(Calendar.MONTH));\n  Assert.assertEquals(14,calendar.get(Calendar.DAY_OF_MONTH));\n  Assert.assertEquals(13,calendar.get(Calendar.HOUR_OF_DAY));\n  Assert.assertEquals(7,calendar.get(Calendar.MINUTE));\n  Assert.assertEquals(23,calendar.get(Calendar.SECOND));\n  Assert.assertEquals(0,calendar.get(Calendar.MILLISECOND));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_date() throws Exception {\n  System.out.println(System.currentTimeMillis());\n  System.out.println(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(\"1970-01-01 20:00:01\").getTime());\n  System.out.println(new Date().toString());\n  String text=\"\\\"19790714130723\\\"\";\n  Date date=JSON.parseObject(text,Date.class);\n  Calendar calendar=Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale);\n  calendar.setTime(date);\n  Assert.assertEquals(1979,calendar.get(Calendar.YEAR));\n  Assert.assertEquals(6,calendar.get(Calendar.MONTH));\n  Assert.assertEquals(14,calendar.get(Calendar.DAY_OF_MONTH));\n  Assert.assertEquals(13,calendar.get(Calendar.HOUR_OF_DAY));\n  Assert.assertEquals(7,calendar.get(Calendar.MINUTE));\n  Assert.assertEquals(23,calendar.get(Calendar.SECOND));\n  Assert.assertEquals(0,calendar.get(Calendar.MILLISECOND));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(13,calendar.get(Calendar.HOUR_OF_DAY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 35,
    "startColumnNumber" : 32,
    "endLineNumber" : 35,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}