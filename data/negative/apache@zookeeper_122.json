{
  "id" : 122,
  "expression" : "d",
  "projectName" : "apache@zookeeper",
  "commitID" : "925c425a73910bab9e40bc044329136379adadaa",
  "filePath" : "zookeeper/java/src/com/yahoo/zookeeper/server/ZooLog.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 231,
      "startColumnNumber" : 24,
      "endLineNumber" : 231,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 231,
        "startColumnNumber" : 24,
        "endLineNumber" : 231,
        "endColumnNumber" : 44
      },
      "nodeContext" : "d.get(Calendar.YEAR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 231,
        "startColumnNumber" : 17,
        "endLineNumber" : 231,
        "endColumnNumber" : 44
      },
      "nodeContext" : "year=d.get(Calendar.YEAR)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 45
      },
      "nodeContext" : "long year=d.get(Calendar.YEAR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 228,
        "startColumnNumber" : 36,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 228,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!textTraceInitialiazed) {\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 214,
        "startColumnNumber" : 58,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized private static void checkTextTraceFile(){\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 45
      },
      "nodeContext" : "long year=d.get(Calendar.YEAR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 232,
      "startColumnNumber" : 25,
      "endLineNumber" : 232,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 232,
        "startColumnNumber" : 25,
        "endLineNumber" : 232,
        "endColumnNumber" : 46
      },
      "nodeContext" : "d.get(Calendar.MONTH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 232,
        "startColumnNumber" : 25,
        "endLineNumber" : 232,
        "endColumnNumber" : 50
      },
      "nodeContext" : "d.get(Calendar.MONTH) + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 232,
        "startColumnNumber" : 17,
        "endLineNumber" : 232,
        "endColumnNumber" : 50
      },
      "nodeContext" : "month=d.get(Calendar.MONTH) + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 232,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 51
      },
      "nodeContext" : "long month=d.get(Calendar.MONTH) + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 228,
        "startColumnNumber" : 36,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 228,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!textTraceInitialiazed) {\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 214,
        "startColumnNumber" : 58,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized private static void checkTextTraceFile(){\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 232,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 51
      },
      "nodeContext" : "long month=d.get(Calendar.MONTH) + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 233,
      "startColumnNumber" : 23,
      "endLineNumber" : 233,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 233,
        "startColumnNumber" : 23,
        "endLineNumber" : 233,
        "endColumnNumber" : 51
      },
      "nodeContext" : "d.get(Calendar.DAY_OF_MONTH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 233,
        "startColumnNumber" : 17,
        "endLineNumber" : 233,
        "endColumnNumber" : 51
      },
      "nodeContext" : "day=d.get(Calendar.DAY_OF_MONTH)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 233,
        "startColumnNumber" : 12,
        "endLineNumber" : 233,
        "endColumnNumber" : 52
      },
      "nodeContext" : "long day=d.get(Calendar.DAY_OF_MONTH);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 228,
        "startColumnNumber" : 36,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 228,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!textTraceInitialiazed) {\n  textTraceInitialiazed=true;\n  Calendar d=new GregorianCalendar();\n  long year=d.get(Calendar.YEAR);\n  long month=d.get(Calendar.MONTH) + 1;\n  long day=d.get(Calendar.DAY_OF_MONTH);\n  if (requestTraceFile == null) {\n    return;\n  }\n  String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n  try {\n    textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n    textTosCreationTime=time;\n    write(textTos,\"\\n\");\n  }\n catch (  IOException e) {\n    ZooLog.logException(e);\n    return;\n  }\n  ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 214,
        "startColumnNumber" : 58,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized private static void checkTextTraceFile(){\n  long time=System.currentTimeMillis();\n  if ((time - textTosCreationTime) > ROLLOVER_TIME) {\n    textTraceInitialiazed=false;\n    if (textTos != null) {\n      try {\n        textTos.close();\n      }\n catch (      IOException e) {\n      }\n      textTos=null;\n    }\n  }\n  if (!textTraceInitialiazed) {\n    textTraceInitialiazed=true;\n    Calendar d=new GregorianCalendar();\n    long year=d.get(Calendar.YEAR);\n    long month=d.get(Calendar.MONTH) + 1;\n    long day=d.get(Calendar.DAY_OF_MONTH);\n    if (requestTraceFile == null) {\n      return;\n    }\n    String currentTextFile=requestTraceFile + \".\" + year+ \".\"+ month+ \".\"+ day;\n    try {\n      textTos=new FileOutputStream(currentTextFile + \".txt\",true).getChannel();\n      textTosCreationTime=time;\n      write(textTos,\"\\n\");\n    }\n catch (    IOException e) {\n      ZooLog.logException(e);\n      return;\n    }\n    ZooLog.logWarn(\"*********** Traced requests text saved to \" + currentTextFile + \".txt\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 233,
        "startColumnNumber" : 12,
        "endLineNumber" : 233,
        "endColumnNumber" : 52
      },
      "nodeContext" : "long day=d.get(Calendar.DAY_OF_MONTH);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 231,
    "startColumnNumber" : 24,
    "endLineNumber" : 231,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 232,
    "startColumnNumber" : 25,
    "endLineNumber" : 232,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 233,
    "startColumnNumber" : 23,
    "endLineNumber" : 233,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}