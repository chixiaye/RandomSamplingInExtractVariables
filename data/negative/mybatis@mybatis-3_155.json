{
  "id" : 155,
  "expression" : "\"BLOG\"",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/metadata/MetadataTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"BLOG\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 53,
      "startColumnNumber" : 19,
      "endLineNumber" : 53,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(\"BLOG\",t.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(\"BLOG\",t.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Database db=DatabaseFactory.newDatabase(connection,null,null);\n  Database db2=DatabaseFactory.newDatabase(connection,null,null);\n  assertNotNull(db);\n  assertTrue(db.equals(db2));\n  assertTrue(db.hashCode() == db.hashCode());\n  Table t=db.getTable(\"blog\");\n  Table t2=db.getTable(\"author\");\n  assertNotNull(t);\n  assertNotNull(t2);\n  assertFalse(t.equals(t2));\n  assertTrue(t.getCatalog().equals(t.getCatalog()));\n  assertTrue(t.getSchema().equals(t.getSchema()));\n  assertTrue(t.equals(t));\n  assertTrue(t.hashCode() == t.hashCode());\n  assertEquals(\"BLOG\",t.getName());\n  assertEquals(3,t.getColumnNames().length);\n  Column c=t.getColumn(\"author_id\");\n  Column c2=t.getColumn(\"id\");\n  assertNotNull(c);\n  assertNotNull(c2);\n  assertEquals(Types.INTEGER,c.getType());\n  assertFalse(c.equals(c2));\n  assertTrue(c.equals(c));\n  assertTrue(c.hashCode() == c.hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Database db=DatabaseFactory.newDatabase(connection,null,null);\n  Database db2=DatabaseFactory.newDatabase(connection,null,null);\n  assertNotNull(db);\n  assertTrue(db.equals(db2));\n  assertTrue(db.hashCode() == db.hashCode());\n  Table t=db.getTable(\"blog\");\n  Table t2=db.getTable(\"author\");\n  assertNotNull(t);\n  assertNotNull(t2);\n  assertFalse(t.equals(t2));\n  assertTrue(t.getCatalog().equals(t.getCatalog()));\n  assertTrue(t.getSchema().equals(t.getSchema()));\n  assertTrue(t.equals(t));\n  assertTrue(t.hashCode() == t.hashCode());\n  assertEquals(\"BLOG\",t.getName());\n  assertEquals(3,t.getColumnNames().length);\n  Column c=t.getColumn(\"author_id\");\n  Column c2=t.getColumn(\"id\");\n  assertNotNull(c);\n  assertNotNull(c2);\n  assertEquals(Types.INTEGER,c.getType());\n  assertFalse(c.equals(c2));\n  assertTrue(c.equals(c));\n  assertTrue(c.hashCode() == c.hashCode());\n}\n  finally {\n  connection.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 197,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 36,
        "startColumnNumber" : 88,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Connection connection=dataSource.getConnection();\n  try {\n    Database db=DatabaseFactory.newDatabase(connection,null,null);\n    Database db2=DatabaseFactory.newDatabase(connection,null,null);\n    assertNotNull(db);\n    assertTrue(db.equals(db2));\n    assertTrue(db.hashCode() == db.hashCode());\n    Table t=db.getTable(\"blog\");\n    Table t2=db.getTable(\"author\");\n    assertNotNull(t);\n    assertNotNull(t2);\n    assertFalse(t.equals(t2));\n    assertTrue(t.getCatalog().equals(t.getCatalog()));\n    assertTrue(t.getSchema().equals(t.getSchema()));\n    assertTrue(t.equals(t));\n    assertTrue(t.hashCode() == t.hashCode());\n    assertEquals(\"BLOG\",t.getName());\n    assertEquals(3,t.getColumnNames().length);\n    Column c=t.getColumn(\"author_id\");\n    Column c2=t.getColumn(\"id\");\n    assertNotNull(c);\n    assertNotNull(c2);\n    assertEquals(Types.INTEGER,c.getType());\n    assertFalse(c.equals(c2));\n    assertTrue(c.equals(c));\n    assertTrue(c.hashCode() == c.hashCode());\n  }\n  finally {\n    connection.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testShouldEnsureDatabasesTablesAndColumnsEqualityWorks() throws Exception {\n  Connection connection=dataSource.getConnection();\n  try {\n    Database db=DatabaseFactory.newDatabase(connection,null,null);\n    Database db2=DatabaseFactory.newDatabase(connection,null,null);\n    assertNotNull(db);\n    assertTrue(db.equals(db2));\n    assertTrue(db.hashCode() == db.hashCode());\n    Table t=db.getTable(\"blog\");\n    Table t2=db.getTable(\"author\");\n    assertNotNull(t);\n    assertNotNull(t2);\n    assertFalse(t.equals(t2));\n    assertTrue(t.getCatalog().equals(t.getCatalog()));\n    assertTrue(t.getSchema().equals(t.getSchema()));\n    assertTrue(t.equals(t));\n    assertTrue(t.hashCode() == t.hashCode());\n    assertEquals(\"BLOG\",t.getName());\n    assertEquals(3,t.getColumnNames().length);\n    Column c=t.getColumn(\"author_id\");\n    Column c2=t.getColumn(\"id\");\n    assertNotNull(c);\n    assertNotNull(c2);\n    assertEquals(Types.INTEGER,c.getType());\n    assertFalse(c.equals(c2));\n    assertTrue(c.equals(c));\n    assertTrue(c.hashCode() == c.hashCode());\n  }\n  finally {\n    connection.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(\"BLOG\",t.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 53,
    "startColumnNumber" : 19,
    "endLineNumber" : 53,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}