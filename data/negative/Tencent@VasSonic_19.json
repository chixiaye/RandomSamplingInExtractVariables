{
  "id" : 19,
  "expression" : "cachedResponseHeaders",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicSessionConnection.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 513,
      "startColumnNumber" : 24,
      "endLineNumber" : 513,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 513,
        "startColumnNumber" : 16,
        "endLineNumber" : 513,
        "endColumnNumber" : 45
      },
      "nodeContext" : "null == cachedResponseHeaders",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 513,
        "startColumnNumber" : 12,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == cachedResponseHeaders) {\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 513,
        "startColumnNumber" : 16,
        "endLineNumber" : 513,
        "endColumnNumber" : 45
      },
      "nodeContext" : "null == cachedResponseHeaders",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  }, {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 525,
      "startColumnNumber" : 44,
      "endLineNumber" : 525,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 525,
        "startColumnNumber" : 44,
        "endLineNumber" : 525,
        "endColumnNumber" : 88
      },
      "nodeContext" : "cachedResponseHeaders.get(key.toLowerCase())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 525,
        "startColumnNumber" : 28,
        "endLineNumber" : 525,
        "endColumnNumber" : 88
      },
      "nodeContext" : "tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 525,
        "startColumnNumber" : 28,
        "endLineNumber" : 525,
        "endColumnNumber" : 89
      },
      "nodeContext" : "tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 524,
        "startColumnNumber" : 53,
        "endLineNumber" : 531,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n  if (null == tmpHeaderList) {\n    tmpHeaderList=new ArrayList<String>(1);\n    cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n  }\n  tmpHeaderList.add(entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 524,
        "startColumnNumber" : 24,
        "endLineNumber" : 531,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!TextUtils.isEmpty(key)) {\n  tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n  if (null == tmpHeaderList) {\n    tmpHeaderList=new ArrayList<String>(1);\n    cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n  }\n  tmpHeaderList.add(entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 522,
        "startColumnNumber" : 108,
        "endLineNumber" : 532,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n    if (null == tmpHeaderList) {\n      tmpHeaderList=new ArrayList<String>(1);\n      cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n    }\n    tmpHeaderList.add(entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 522,
        "startColumnNumber" : 20,
        "endLineNumber" : 532,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n    if (null == tmpHeaderList) {\n      tmpHeaderList=new ArrayList<String>(1);\n      cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n    }\n    tmpHeaderList.add(entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1596,
        "startLineNumber" : 517,
        "startColumnNumber" : 23,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 515,
        "startColumnNumber" : 16,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n  cachedResponseHeaders=connectionImpl.getHeaderFields();\n}\n else {\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1929,
        "startLineNumber" : 513,
        "startColumnNumber" : 47,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 513,
        "startColumnNumber" : 12,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == cachedResponseHeaders) {\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 525,
        "startColumnNumber" : 28,
        "endLineNumber" : 525,
        "endColumnNumber" : 89
      },
      "nodeContext" : "tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  }, {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 528,
      "startColumnNumber" : 32,
      "endLineNumber" : 528,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 528,
        "startColumnNumber" : 32,
        "endLineNumber" : 528,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 528,
        "startColumnNumber" : 32,
        "endLineNumber" : 528,
        "endColumnNumber" : 92
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 526,
        "startColumnNumber" : 55,
        "endLineNumber" : 529,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  tmpHeaderList=new ArrayList<String>(1);\n  cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 526,
        "startColumnNumber" : 28,
        "endLineNumber" : 529,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (null == tmpHeaderList) {\n  tmpHeaderList=new ArrayList<String>(1);\n  cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 524,
        "startColumnNumber" : 53,
        "endLineNumber" : 531,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n  if (null == tmpHeaderList) {\n    tmpHeaderList=new ArrayList<String>(1);\n    cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n  }\n  tmpHeaderList.add(entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 524,
        "startColumnNumber" : 24,
        "endLineNumber" : 531,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!TextUtils.isEmpty(key)) {\n  tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n  if (null == tmpHeaderList) {\n    tmpHeaderList=new ArrayList<String>(1);\n    cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n  }\n  tmpHeaderList.add(entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 522,
        "startColumnNumber" : 108,
        "endLineNumber" : 532,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n    if (null == tmpHeaderList) {\n      tmpHeaderList=new ArrayList<String>(1);\n      cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n    }\n    tmpHeaderList.add(entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 522,
        "startColumnNumber" : 20,
        "endLineNumber" : 532,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n    if (null == tmpHeaderList) {\n      tmpHeaderList=new ArrayList<String>(1);\n      cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n    }\n    tmpHeaderList.add(entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1596,
        "startLineNumber" : 517,
        "startColumnNumber" : 23,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 515,
        "startColumnNumber" : 16,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n  cachedResponseHeaders=connectionImpl.getHeaderFields();\n}\n else {\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1929,
        "startLineNumber" : 513,
        "startColumnNumber" : 47,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 513,
        "startColumnNumber" : 12,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == cachedResponseHeaders) {\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 528,
        "startColumnNumber" : 32,
        "endLineNumber" : 528,
        "endColumnNumber" : 92
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  }, {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 539,
      "startColumnNumber" : 28,
      "endLineNumber" : 539,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 539,
        "startColumnNumber" : 28,
        "endLineNumber" : 539,
        "endColumnNumber" : 90
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 539,
        "startColumnNumber" : 28,
        "endLineNumber" : 539,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 538,
        "startColumnNumber" : 53,
        "endLineNumber" : 540,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 538,
        "startColumnNumber" : 24,
        "endLineNumber" : 542,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!TextUtils.isEmpty(key)) {\n  cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n}\n else {\n  cachedResponseHeaders.put(key,entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 536,
        "startColumnNumber" : 73,
        "endLineNumber" : 543,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n  }\n else {\n    cachedResponseHeaders.put(key,entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 536,
        "startColumnNumber" : 20,
        "endLineNumber" : 543,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> entry : entrySet) {\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n  }\n else {\n    cachedResponseHeaders.put(key,entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1596,
        "startLineNumber" : 517,
        "startColumnNumber" : 23,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 515,
        "startColumnNumber" : 16,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n  cachedResponseHeaders=connectionImpl.getHeaderFields();\n}\n else {\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1929,
        "startLineNumber" : 513,
        "startColumnNumber" : 47,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 513,
        "startColumnNumber" : 12,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == cachedResponseHeaders) {\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 539,
        "startColumnNumber" : 28,
        "endLineNumber" : 539,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  }, {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 541,
      "startColumnNumber" : 28,
      "endLineNumber" : 541,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 541,
        "startColumnNumber" : 28,
        "endLineNumber" : 541,
        "endColumnNumber" : 76
      },
      "nodeContext" : "cachedResponseHeaders.put(key,entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 541,
        "startColumnNumber" : 28,
        "endLineNumber" : 541,
        "endColumnNumber" : 77
      },
      "nodeContext" : "cachedResponseHeaders.put(key,entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 540,
        "startColumnNumber" : 31,
        "endLineNumber" : 542,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  cachedResponseHeaders.put(key,entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 538,
        "startColumnNumber" : 24,
        "endLineNumber" : 542,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!TextUtils.isEmpty(key)) {\n  cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n}\n else {\n  cachedResponseHeaders.put(key,entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 536,
        "startColumnNumber" : 73,
        "endLineNumber" : 543,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n  }\n else {\n    cachedResponseHeaders.put(key,entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 536,
        "startColumnNumber" : 20,
        "endLineNumber" : 543,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> entry : entrySet) {\n  String key=entry.getKey();\n  if (!TextUtils.isEmpty(key)) {\n    cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n  }\n else {\n    cachedResponseHeaders.put(key,entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1596,
        "startLineNumber" : 517,
        "startColumnNumber" : 23,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 515,
        "startColumnNumber" : 16,
        "endLineNumber" : 545,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n  cachedResponseHeaders=connectionImpl.getHeaderFields();\n}\n else {\n  cachedResponseHeaders=new HashMap<String,List<String>>();\n  List<String> tmpHeaderList;\n  for (  Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n      if (null == tmpHeaderList) {\n        tmpHeaderList=new ArrayList<String>(1);\n        cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n      }\n      tmpHeaderList.add(entry.getValue());\n    }\n  }\n  Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n  Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n  for (  Map.Entry<String,List<String>> entry : entrySet) {\n    String key=entry.getKey();\n    if (!TextUtils.isEmpty(key)) {\n      cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n    }\n else {\n      cachedResponseHeaders.put(key,entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1929,
        "startLineNumber" : 513,
        "startColumnNumber" : 47,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 513,
        "startColumnNumber" : 12,
        "endLineNumber" : 546,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == cachedResponseHeaders) {\n  if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n    cachedResponseHeaders=connectionImpl.getHeaderFields();\n  }\n else {\n    cachedResponseHeaders=new HashMap<String,List<String>>();\n    List<String> tmpHeaderList;\n    for (    Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n        if (null == tmpHeaderList) {\n          tmpHeaderList=new ArrayList<String>(1);\n          cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n        }\n        tmpHeaderList.add(entry.getValue());\n      }\n    }\n    Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n    Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n    for (    Map.Entry<String,List<String>> entry : entrySet) {\n      String key=entry.getKey();\n      if (!TextUtils.isEmpty(key)) {\n        cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n      }\n else {\n        cachedResponseHeaders.put(key,entry.getValue());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 541,
        "startColumnNumber" : 28,
        "endLineNumber" : 541,
        "endColumnNumber" : 77
      },
      "nodeContext" : "cachedResponseHeaders.put(key,entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  }, {
    "nodeContext" : "cachedResponseHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 547,
      "startColumnNumber" : 19,
      "endLineNumber" : 547,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 547,
        "startColumnNumber" : 12,
        "endLineNumber" : 547,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return cachedResponseHeaders;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 508,
        "startColumnNumber" : 67,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 502,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * return response headers which contains response headers from server and custom response headers from {@code com.tencent.sonic.sdk.SonicSessionConfig}note: server response headers have high priority than custom headers!\n */\n@Override public Map<String,List<String>> getResponseHeaderFields(){\n  if (null == connectionImpl) {\n    return null;\n  }\n  if (null == cachedResponseHeaders) {\n    if (null == session.config.customResponseHeaders || 0 == session.config.customResponseHeaders.size()) {\n      cachedResponseHeaders=connectionImpl.getHeaderFields();\n    }\n else {\n      cachedResponseHeaders=new HashMap<String,List<String>>();\n      List<String> tmpHeaderList;\n      for (      Map.Entry<String,String> entry : session.config.customResponseHeaders.entrySet()) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          tmpHeaderList=cachedResponseHeaders.get(key.toLowerCase());\n          if (null == tmpHeaderList) {\n            tmpHeaderList=new ArrayList<String>(1);\n            cachedResponseHeaders.put(key.toLowerCase(),tmpHeaderList);\n          }\n          tmpHeaderList.add(entry.getValue());\n        }\n      }\n      Map<String,List<String>> headersFromServer=connectionImpl.getHeaderFields();\n      Set<Map.Entry<String,List<String>>> entrySet=headersFromServer.entrySet();\n      for (      Map.Entry<String,List<String>> entry : entrySet) {\n        String key=entry.getKey();\n        if (!TextUtils.isEmpty(key)) {\n          cachedResponseHeaders.put(key.toLowerCase(),entry.getValue());\n        }\n else {\n          cachedResponseHeaders.put(key,entry.getValue());\n        }\n      }\n    }\n  }\n  return cachedResponseHeaders;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 547,
        "startColumnNumber" : 12,
        "endLineNumber" : 547,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return cachedResponseHeaders;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 513,
    "startColumnNumber" : 24,
    "endLineNumber" : 513,
    "endColumnNumber" : 45
  }, {
    "charLength" : 21,
    "startLineNumber" : 525,
    "startColumnNumber" : 44,
    "endLineNumber" : 525,
    "endColumnNumber" : 65
  }, {
    "charLength" : 21,
    "startLineNumber" : 528,
    "startColumnNumber" : 32,
    "endLineNumber" : 528,
    "endColumnNumber" : 53
  }, {
    "charLength" : 21,
    "startLineNumber" : 539,
    "startColumnNumber" : 28,
    "endLineNumber" : 539,
    "endColumnNumber" : 49
  }, {
    "charLength" : 21,
    "startLineNumber" : 541,
    "startColumnNumber" : 28,
    "endLineNumber" : 541,
    "endColumnNumber" : 49
  }, {
    "charLength" : 21,
    "startLineNumber" : 547,
    "startColumnNumber" : 19,
    "endLineNumber" : 547,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  } ]
}