{
  "id" : 267,
  "expression" : "itemValue",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 108,
      "startColumnNumber" : 17,
      "endLineNumber" : 108,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assert.hasText(itemValue,\"'itemValue' must not be empty\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 107,
        "startColumnNumber" : 44,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n  this.itemValue=itemValue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Set the name of the property mapped to the ' {@code value}' attribute of the ' {@code input type=\"checkbox/radio\"}' tag. <p>May be a runtime expression.\n */\npublic void setItemValue(String itemValue){\n  Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n  this.itemValue=itemValue;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 22,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "itemValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 109,
      "startColumnNumber" : 19,
      "endLineNumber" : 109,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 28
      },
      "nodeContext" : "this.itemValue=itemValue",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.itemValue=itemValue;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 107,
        "startColumnNumber" : 44,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n  this.itemValue=itemValue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Set the name of the property mapped to the ' {@code value}' attribute of the ' {@code input type=\"checkbox/radio\"}' tag. <p>May be a runtime expression.\n */\npublic void setItemValue(String itemValue){\n  Assert.hasText(itemValue,\"'itemValue' must not be empty\");\n  this.itemValue=itemValue;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 22,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.itemValue=itemValue;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 108,
    "startColumnNumber" : 17,
    "endLineNumber" : 108,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 109,
    "startColumnNumber" : 19,
    "endLineNumber" : 109,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}