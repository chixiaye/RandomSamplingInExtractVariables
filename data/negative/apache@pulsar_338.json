{
  "id" : 338,
  "expression" : "batchIndex >= 0",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "batchIndex >= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 2246,
      "startColumnNumber" : 12,
      "endLineNumber" : 2246,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2359,
        "startLineNumber" : 2246,
        "startColumnNumber" : 8,
        "endLineNumber" : 2289,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (batchIndex >= 0) {\n  try {\n    ManagedLedgerImpl ledger=(ManagedLedgerImpl)topic.getManagedLedger();\n    ledger.asyncReadEntry(new PositionImpl(messageId.getLedgerId(),messageId.getEntryId()),new AsyncCallbacks.ReadEntryCallback(){\n      @Override public void readEntryFailed(      ManagedLedgerException exception,      Object ctx){\n        batchSizeFuture.complete(0);\n      }\n      @Override public void readEntryComplete(      Entry entry,      Object ctx){\n        try {\n          try {\n            if (entry == null) {\n              batchSizeFuture.complete(0);\n            }\n else {\n              MessageMetadata metadata=Commands.parseMessageMetadata(entry.getDataBuffer());\n              batchSizeFuture.complete(metadata.getNumMessagesInBatch());\n            }\n          }\n catch (          Exception e) {\n            batchSizeFuture.completeExceptionally(new RestException(e));\n          }\n        }\n  finally {\n          if (entry != null) {\n            entry.release();\n          }\n        }\n      }\n    }\n,null);\n  }\n catch (  NullPointerException npe) {\n    batchSizeFuture.completeExceptionally(new RestException(Status.NOT_FOUND,\"Message not found\"));\n  }\ncatch (  Exception exception) {\n    log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",clientAppId(),messageId.getLedgerId(),messageId.getEntryId(),topicName,exception);\n    batchSizeFuture.completeExceptionally(new RestException(exception));\n  }\n}\n else {\n  batchSizeFuture.complete(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2375,
        "startLineNumber" : 2245,
        "startColumnNumber" : 76,
        "endLineNumber" : 2290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (batchIndex >= 0) {\n    try {\n      ManagedLedgerImpl ledger=(ManagedLedgerImpl)topic.getManagedLedger();\n      ledger.asyncReadEntry(new PositionImpl(messageId.getLedgerId(),messageId.getEntryId()),new AsyncCallbacks.ReadEntryCallback(){\n        @Override public void readEntryFailed(        ManagedLedgerException exception,        Object ctx){\n          batchSizeFuture.complete(0);\n        }\n        @Override public void readEntryComplete(        Entry entry,        Object ctx){\n          try {\n            try {\n              if (entry == null) {\n                batchSizeFuture.complete(0);\n              }\n else {\n                MessageMetadata metadata=Commands.parseMessageMetadata(entry.getDataBuffer());\n                batchSizeFuture.complete(metadata.getNumMessagesInBatch());\n              }\n            }\n catch (            Exception e) {\n              batchSizeFuture.completeExceptionally(new RestException(e));\n            }\n          }\n  finally {\n            if (entry != null) {\n              entry.release();\n            }\n          }\n        }\n      }\n,null);\n    }\n catch (    NullPointerException npe) {\n      batchSizeFuture.completeExceptionally(new RestException(Status.NOT_FOUND,\"Message not found\"));\n    }\ncatch (    Exception exception) {\n      log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",clientAppId(),messageId.getLedgerId(),messageId.getEntryId(),topicName,exception);\n      batchSizeFuture.completeExceptionally(new RestException(exception));\n    }\n  }\n else {\n    batchSizeFuture.complete(0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2549,
        "startLineNumber" : 2244,
        "startColumnNumber" : 4,
        "endLineNumber" : 2290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void getEntryBatchSize(CompletableFuture<Integer> batchSizeFuture,PersistentTopic topic,MessageIdImpl messageId,int batchIndex){\n  if (batchIndex >= 0) {\n    try {\n      ManagedLedgerImpl ledger=(ManagedLedgerImpl)topic.getManagedLedger();\n      ledger.asyncReadEntry(new PositionImpl(messageId.getLedgerId(),messageId.getEntryId()),new AsyncCallbacks.ReadEntryCallback(){\n        @Override public void readEntryFailed(        ManagedLedgerException exception,        Object ctx){\n          batchSizeFuture.complete(0);\n        }\n        @Override public void readEntryComplete(        Entry entry,        Object ctx){\n          try {\n            try {\n              if (entry == null) {\n                batchSizeFuture.complete(0);\n              }\n else {\n                MessageMetadata metadata=Commands.parseMessageMetadata(entry.getDataBuffer());\n                batchSizeFuture.complete(metadata.getNumMessagesInBatch());\n              }\n            }\n catch (            Exception e) {\n              batchSizeFuture.completeExceptionally(new RestException(e));\n            }\n          }\n  finally {\n            if (entry != null) {\n              entry.release();\n            }\n          }\n        }\n      }\n,null);\n    }\n catch (    NullPointerException npe) {\n      batchSizeFuture.completeExceptionally(new RestException(Status.NOT_FOUND,\"Message not found\"));\n    }\ncatch (    Exception exception) {\n      log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",clientAppId(),messageId.getLedgerId(),messageId.getEntryId(),topicName,exception);\n      batchSizeFuture.completeExceptionally(new RestException(exception));\n    }\n  }\n else {\n    batchSizeFuture.complete(0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2359,
        "startLineNumber" : 2246,
        "startColumnNumber" : 8,
        "endLineNumber" : 2289,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (batchIndex >= 0) {\n  try {\n    ManagedLedgerImpl ledger=(ManagedLedgerImpl)topic.getManagedLedger();\n    ledger.asyncReadEntry(new PositionImpl(messageId.getLedgerId(),messageId.getEntryId()),new AsyncCallbacks.ReadEntryCallback(){\n      @Override public void readEntryFailed(      ManagedLedgerException exception,      Object ctx){\n        batchSizeFuture.complete(0);\n      }\n      @Override public void readEntryComplete(      Entry entry,      Object ctx){\n        try {\n          try {\n            if (entry == null) {\n              batchSizeFuture.complete(0);\n            }\n else {\n              MessageMetadata metadata=Commands.parseMessageMetadata(entry.getDataBuffer());\n              batchSizeFuture.complete(metadata.getNumMessagesInBatch());\n            }\n          }\n catch (          Exception e) {\n            batchSizeFuture.completeExceptionally(new RestException(e));\n          }\n        }\n  finally {\n          if (entry != null) {\n            entry.release();\n          }\n        }\n      }\n    }\n,null);\n  }\n catch (  NullPointerException npe) {\n    batchSizeFuture.completeExceptionally(new RestException(Status.NOT_FOUND,\"Message not found\"));\n  }\ncatch (  Exception exception) {\n    log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",clientAppId(),messageId.getLedgerId(),messageId.getEntryId(),topicName,exception);\n    batchSizeFuture.completeExceptionally(new RestException(exception));\n  }\n}\n else {\n  batchSizeFuture.complete(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 21
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 2246,
    "startColumnNumber" : 12,
    "endLineNumber" : 2246,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}