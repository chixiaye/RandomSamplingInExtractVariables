{
  "id" : 354,
  "expression" : "!StringUtils.isInteger(message)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/legacy/SelectTelnetHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!StringUtils.isInteger(message)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 51,
      "startColumnNumber" : 12,
      "endLineNumber" : 51,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!StringUtils.isInteger(message) || Integer.parseInt(message) < 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 125
      },
      "nodeContext" : "!StringUtils.isInteger(message) || Integer.parseInt(message) < 1 || Integer.parseInt(message) > methodList.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!StringUtils.isInteger(message) || Integer.parseInt(message) < 1 || Integer.parseInt(message) > methodList.size()) {\n  return \"Illegal index ,please input select 1~\" + methodList.size();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 43,
        "startColumnNumber" : 58,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message == null || message.length() == 0) {\n    return \"Please input the index of the method you want to invoke, eg: \\r\\n select 1\";\n  }\n  List<Method> methodList=(List<Method>)channel.getAttribute(InvokeTelnetHandler.INVOKE_METHOD_LIST_KEY);\n  if (CollectionUtils.isEmpty(methodList)) {\n    return \"Please use the invoke command first.\";\n  }\n  if (!StringUtils.isInteger(message) || Integer.parseInt(message) < 1 || Integer.parseInt(message) > methodList.size()) {\n    return \"Illegal index ,please input select 1~\" + methodList.size();\n  }\n  Method method=methodList.get(Integer.parseInt(message) - 1);\n  channel.setAttribute(SELECT_METHOD_KEY,method);\n  channel.setAttribute(SELECT_KEY,Boolean.TRUE);\n  String invokeMessage=(String)channel.getAttribute(InvokeTelnetHandler.INVOKE_MESSAGE_KEY);\n  return invokeTelnetHandler.telnet(channel,invokeMessage);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public String telnet(Channel channel,String message){\n  if (message == null || message.length() == 0) {\n    return \"Please input the index of the method you want to invoke, eg: \\r\\n select 1\";\n  }\n  List<Method> methodList=(List<Method>)channel.getAttribute(InvokeTelnetHandler.INVOKE_METHOD_LIST_KEY);\n  if (CollectionUtils.isEmpty(methodList)) {\n    return \"Please use the invoke command first.\";\n  }\n  if (!StringUtils.isInteger(message) || Integer.parseInt(message) < 1 || Integer.parseInt(message) > methodList.size()) {\n    return \"Illegal index ,please input select 1~\" + methodList.size();\n  }\n  Method method=methodList.get(Integer.parseInt(message) - 1);\n  channel.setAttribute(SELECT_METHOD_KEY,method);\n  channel.setAttribute(SELECT_KEY,Boolean.TRUE);\n  String invokeMessage=(String)channel.getAttribute(InvokeTelnetHandler.INVOKE_MESSAGE_KEY);\n  return invokeTelnetHandler.telnet(channel,invokeMessage);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 125
      },
      "nodeContext" : "!StringUtils.isInteger(message) || Integer.parseInt(message) < 1 || Integer.parseInt(message) > methodList.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 51,
    "startColumnNumber" : 12,
    "endLineNumber" : 51,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}