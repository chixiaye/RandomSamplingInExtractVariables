{
  "id" : 137,
  "expression" : "fd.getDirectory()",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/tools/Archiver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fd.getDirectory()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 120,
      "startColumnNumber" : 23,
      "endLineNumber" : 120,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 120,
        "startColumnNumber" : 11,
        "endLineNumber" : 120,
        "endColumnNumber" : 40
      },
      "nodeContext" : "directory=fd.getDirectory()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String directory=fd.getDirectory();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2318,
        "startLineNumber" : 70,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Sketch sketch=editor.getSketch();\n  boolean success=false;\n  try {\n    success=sketch.save();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (!success) {\n    Base.showWarning(_(\"Couldn't archive sketch\"),_(\"Archiving the sketch has been canceled because\\nthe sketch couldn't save properly.\"),null);\n    return;\n  }\n  File location=sketch.getFolder();\n  String name=location.getName();\n  File parent=new File(location.getParent());\n  File newbie=null;\n  String namely=null;\n  int index=0;\n  do {\n    useDate=!name.startsWith(\"sketch_\");\n    if (useDate) {\n      String purty=dateFormat.format(new Date());\n      String stamp=purty + ((char)('a' + index));\n      namely=name + \"-\" + stamp;\n      newbie=new File(parent,namely + \".zip\");\n    }\n else {\n      String diggie=numberFormat.format(index + 1);\n      namely=name + \"-\" + diggie;\n      newbie=new File(parent,namely + \".zip\");\n    }\n    index++;\n  }\n while (newbie.exists());\n  FileDialog fd=new FileDialog(editor,_(\"Archive sketch as:\"),FileDialog.SAVE);\n  fd.setDirectory(parent.getAbsolutePath());\n  fd.setFile(newbie.getName());\n  fd.setVisible(true);\n  String directory=fd.getDirectory();\n  String filename=fd.getFile();\n  if (filename != null) {\n    newbie=new File(directory,filename);\n    try {\n      FileOutputStream zipOutputFile=new FileOutputStream(newbie);\n      ZipOutputStream zos=new ZipOutputStream(zipOutputFile);\n      buildZip(location,name,zos);\n      zos.flush();\n      zos.close();\n      editor.statusNotice(\"Created archive \" + newbie.getName() + \".\");\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n    }\n  }\n else {\n    editor.statusNotice(_(\"Archive sketch canceled.\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2336,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void run(){\n  Sketch sketch=editor.getSketch();\n  boolean success=false;\n  try {\n    success=sketch.save();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (!success) {\n    Base.showWarning(_(\"Couldn't archive sketch\"),_(\"Archiving the sketch has been canceled because\\nthe sketch couldn't save properly.\"),null);\n    return;\n  }\n  File location=sketch.getFolder();\n  String name=location.getName();\n  File parent=new File(location.getParent());\n  File newbie=null;\n  String namely=null;\n  int index=0;\n  do {\n    useDate=!name.startsWith(\"sketch_\");\n    if (useDate) {\n      String purty=dateFormat.format(new Date());\n      String stamp=purty + ((char)('a' + index));\n      namely=name + \"-\" + stamp;\n      newbie=new File(parent,namely + \".zip\");\n    }\n else {\n      String diggie=numberFormat.format(index + 1);\n      namely=name + \"-\" + diggie;\n      newbie=new File(parent,namely + \".zip\");\n    }\n    index++;\n  }\n while (newbie.exists());\n  FileDialog fd=new FileDialog(editor,_(\"Archive sketch as:\"),FileDialog.SAVE);\n  fd.setDirectory(parent.getAbsolutePath());\n  fd.setFile(newbie.getName());\n  fd.setVisible(true);\n  String directory=fd.getDirectory();\n  String filename=fd.getFile();\n  if (filename != null) {\n    newbie=new File(directory,filename);\n    try {\n      FileOutputStream zipOutputFile=new FileOutputStream(newbie);\n      ZipOutputStream zos=new ZipOutputStream(zipOutputFile);\n      buildZip(location,name,zos);\n      zos.flush();\n      zos.close();\n      editor.statusNotice(\"Created archive \" + newbie.getName() + \".\");\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n    }\n  }\n else {\n    editor.statusNotice(_(\"Archive sketch canceled.\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String directory=fd.getDirectory();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 120,
    "startColumnNumber" : 23,
    "endLineNumber" : 120,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}