{
  "id" : 19,
  "expression" : "\"SpellCheckingInspection\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-rcfile/src/main/java/com/facebook/presto/rcfile/text/TimestampEncoding.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"SpellCheckingInspection\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 37,
      "startColumnNumber" : 26,
      "endLineNumber" : 37,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 52
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 10
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\") DateTimeParser[] timestampWithoutTimeZoneParser={DateTimeFormat.forPattern(\"yyyy-M-d\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSSSS\").getParser()};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 931,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimeParser[] timestampWithoutTimeZoneParser={DateTimeFormat.forPattern(\"yyyy-M-d\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSSSS\").getParser()};\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimePrinter timestampWithoutTimeZonePrinter=DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSSSSSSSS\").getPrinter();\n  HIVE_TIMESTAMP_PARSER=new DateTimeFormatterBuilder().append(timestampWithoutTimeZonePrinter,timestampWithoutTimeZoneParser).toFormatter().withZoneUTC();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimeParser[] timestampWithoutTimeZoneParser={DateTimeFormat.forPattern(\"yyyy-M-d\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSSSS\").getParser()};\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimePrinter timestampWithoutTimeZonePrinter=DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSSSSSSSS\").getPrinter();\n  HIVE_TIMESTAMP_PARSER=new DateTimeFormatterBuilder().append(timestampWithoutTimeZonePrinter,timestampWithoutTimeZoneParser).toFormatter().withZoneUTC();\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 78,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 52
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"SpellCheckingInspection\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 46,
      "startColumnNumber" : 26,
      "endLineNumber" : 46,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 52
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 130
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\") DateTimePrinter timestampWithoutTimeZonePrinter=DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSSSSSSSS\").getPrinter();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 931,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimeParser[] timestampWithoutTimeZoneParser={DateTimeFormat.forPattern(\"yyyy-M-d\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSSSS\").getParser()};\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimePrinter timestampWithoutTimeZonePrinter=DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSSSSSSSS\").getPrinter();\n  HIVE_TIMESTAMP_PARSER=new DateTimeFormatterBuilder().append(timestampWithoutTimeZonePrinter,timestampWithoutTimeZoneParser).toFormatter().withZoneUTC();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimeParser[] timestampWithoutTimeZoneParser={DateTimeFormat.forPattern(\"yyyy-M-d\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSS\").getParser(),DateTimeFormat.forPattern(\"yyyy-M-d H:m:s.SSSSSSSSS\").getParser()};\n  @SuppressWarnings(\"SpellCheckingInspection\") DateTimePrinter timestampWithoutTimeZonePrinter=DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSSSSSSSS\").getPrinter();\n  HIVE_TIMESTAMP_PARSER=new DateTimeFormatterBuilder().append(timestampWithoutTimeZonePrinter,timestampWithoutTimeZoneParser).toFormatter().withZoneUTC();\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 78,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 52
      },
      "nodeContext" : "@SuppressWarnings(\"SpellCheckingInspection\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 37,
    "startColumnNumber" : 26,
    "endLineNumber" : 37,
    "endColumnNumber" : 51
  }, {
    "charLength" : 25,
    "startLineNumber" : 46,
    "startColumnNumber" : 26,
    "endLineNumber" : 46,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}