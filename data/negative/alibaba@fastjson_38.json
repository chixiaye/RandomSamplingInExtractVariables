{
  "id" : 38,
  "expression" : "array.size()",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/parser/str/StringTest_01_v6.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "array.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 41,
      "startColumnNumber" : 31,
      "endLineNumber" : 41,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(1,array.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Assert.assertEquals(1,array.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 27,
        "startColumnNumber" : 47,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char[] chars=new char[1024];\n  Arrays.fill(chars,'0');\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"[\\\"\");\n  for (int i=0; i < 16; ++i) {\n    buf.append(\"\\\\\\\\\");\n    buf.append(\"\\\\\\\"\");\n    buf.append(new String(chars));\n  }\n  buf.append(\"\\\"]\");\n  String text=buf.toString();\n  JSONArray array=(JSONArray)JSON.parse(text);\n  Assert.assertEquals(1,array.size());\n  String item=(String)array.get(0);\n  Assert.assertEquals(16 * 1024 + 32,item.length());\n  for (int i=0; i < 16; ++i) {\n    Assert.assertTrue(item.charAt(i * 1026) == '\\\\');\n    Assert.assertTrue(item.charAt(i * 1026 + 1) == '\\\"');\n    for (int j=0; j < 1024; ++j) {\n      Assert.assertTrue(item.charAt(i * 1026 + j + 2) == '0');\n    }\n  }\n  Assert.assertEquals(text,JSON.toJSONString(array));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_string() throws Exception {\n  char[] chars=new char[1024];\n  Arrays.fill(chars,'0');\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"[\\\"\");\n  for (int i=0; i < 16; ++i) {\n    buf.append(\"\\\\\\\\\");\n    buf.append(\"\\\\\\\"\");\n    buf.append(new String(chars));\n  }\n  buf.append(\"\\\"]\");\n  String text=buf.toString();\n  JSONArray array=(JSONArray)JSON.parse(text);\n  Assert.assertEquals(1,array.size());\n  String item=(String)array.get(0);\n  Assert.assertEquals(16 * 1024 + 32,item.length());\n  for (int i=0; i < 16; ++i) {\n    Assert.assertTrue(item.charAt(i * 1026) == '\\\\');\n    Assert.assertTrue(item.charAt(i * 1026 + 1) == '\\\"');\n    for (int j=0; j < 1024; ++j) {\n      Assert.assertTrue(item.charAt(i * 1026 + j + 2) == '0');\n    }\n  }\n  Assert.assertEquals(text,JSON.toJSONString(array));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Assert.assertEquals(1,array.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 41,
    "startColumnNumber" : 31,
    "endLineNumber" : 41,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}