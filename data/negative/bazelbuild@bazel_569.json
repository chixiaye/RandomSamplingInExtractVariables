{
  "id" : 569,
  "expression" : "backends",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "fc98b2d01c4fbaf8a529e23ab92a46abc4a053a4",
  "filePath" : "src/main/java/com/google/devtools/build/lib/rules/cpp/LibraryToLink.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "backends",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 133,
      "startColumnNumber" : 11,
      "endLineNumber" : 133,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 133,
        "startColumnNumber" : 11,
        "endLineNumber" : 133,
        "endColumnNumber" : 27
      },
      "nodeContext" : "backends != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 133,
        "startColumnNumber" : 11,
        "endLineNumber" : 133,
        "endColumnNumber" : 67
      },
      "nodeContext" : "backends != null ? Dict.immutableCopyOf(backends) : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return backends != null ? Dict.immutableCopyOf(backends) : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 130,
        "startColumnNumber" : 50,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CcModule.checkPrivateStarlarkificationAllowlist(thread);\n  ImmutableMap<Artifact,LtoBackendArtifacts> backends=getSharedNonLtoBackends();\n  return backends != null ? Dict.immutableCopyOf(backends) : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final Dict<Artifact,LtoBackendArtifacts> getSharedNonLtoBackendsForStarlark(StarlarkThread thread) throws EvalException {\n  CcModule.checkPrivateStarlarkificationAllowlist(thread);\n  ImmutableMap<Artifact,LtoBackendArtifacts> backends=getSharedNonLtoBackends();\n  return backends != null ? Dict.immutableCopyOf(backends) : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return backends != null ? Dict.immutableCopyOf(backends) : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.rules.cpp.ImmutableMap<com.google.devtools.build.lib.actions.Artifact,com.google.devtools.build.lib.rules.cpp.LtoBackendArtifacts>"
  }, {
    "nodeContext" : "backends",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 133,
      "startColumnNumber" : 51,
      "endLineNumber" : 133,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 133,
        "startColumnNumber" : 30,
        "endLineNumber" : 133,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Dict.immutableCopyOf(backends)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 133,
        "startColumnNumber" : 11,
        "endLineNumber" : 133,
        "endColumnNumber" : 67
      },
      "nodeContext" : "backends != null ? Dict.immutableCopyOf(backends) : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return backends != null ? Dict.immutableCopyOf(backends) : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 130,
        "startColumnNumber" : 50,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CcModule.checkPrivateStarlarkificationAllowlist(thread);\n  ImmutableMap<Artifact,LtoBackendArtifacts> backends=getSharedNonLtoBackends();\n  return backends != null ? Dict.immutableCopyOf(backends) : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final Dict<Artifact,LtoBackendArtifacts> getSharedNonLtoBackendsForStarlark(StarlarkThread thread) throws EvalException {\n  CcModule.checkPrivateStarlarkificationAllowlist(thread);\n  ImmutableMap<Artifact,LtoBackendArtifacts> backends=getSharedNonLtoBackends();\n  return backends != null ? Dict.immutableCopyOf(backends) : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return backends != null ? Dict.immutableCopyOf(backends) : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.rules.cpp.ImmutableMap<com.google.devtools.build.lib.actions.Artifact,com.google.devtools.build.lib.rules.cpp.LtoBackendArtifacts>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 133,
    "startColumnNumber" : 11,
    "endLineNumber" : 133,
    "endColumnNumber" : 19
  }, {
    "charLength" : 8,
    "startLineNumber" : 133,
    "startColumnNumber" : 51,
    "endLineNumber" : 133,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}