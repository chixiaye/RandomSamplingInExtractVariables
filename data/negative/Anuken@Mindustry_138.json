{
  "id" : 138,
  "expression" : "e",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/maps/Map.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 108,
      "startColumnNumber" : 12,
      "endLineNumber" : 108,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 31
      },
      "nodeContext" : "e.printStackTrace()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 32
      },
      "nodeContext" : "e.printStackTrace();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  e.printStackTrace();\n  return new Rules();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 106,
        "startColumnNumber" : 9,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  e.printStackTrace();\n  return new Rules();\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Rules result=JsonIO.read(Rules.class,base,tags.get(\"rules\",\"{}\").replace(\"teams:{2:{infiniteAmmo:true}},\",\"\"));\n  if (result.spawns.isEmpty())   result.spawns=Vars.waves.get();\n  return result;\n}\n catch (Exception e) {\n  e.printStackTrace();\n  return new Rules();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 99,
        "startColumnNumber" : 34,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Rules result=JsonIO.read(Rules.class,base,tags.get(\"rules\",\"{}\").replace(\"teams:{2:{infiniteAmmo:true}},\",\"\"));\n    if (result.spawns.isEmpty())     result.spawns=Vars.waves.get();\n    return result;\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    return new Rules();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Rules rules(Rules base){\n  try {\n    Rules result=JsonIO.read(Rules.class,base,tags.get(\"rules\",\"{}\").replace(\"teams:{2:{infiniteAmmo:true}},\",\"\"));\n    if (result.spawns.isEmpty())     result.spawns=Vars.waves.get();\n    return result;\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    return new Rules();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 32
      },
      "nodeContext" : "e.printStackTrace();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 108,
    "startColumnNumber" : 12,
    "endLineNumber" : 108,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}