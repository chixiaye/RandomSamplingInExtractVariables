{
  "id" : 137,
  "expression" : "requestBuilder",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 39,
      "startColumnNumber" : 6,
      "endLineNumber" : 39,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 76
      },
      "nodeContext" : "requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 77
      },
      "nodeContext" : "requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 38,
        "startColumnNumber" : 78,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> headerEntry : url.getHeaders().entrySet()) {\n  requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 36,
        "startColumnNumber" : 92,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Request.Builder requestBuilder=new Request.Builder().url(url.toStringUrl());\n  for (  Map.Entry<String,String> headerEntry : url.getHeaders().entrySet()) {\n    requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n  }\n  Request request=requestBuilder.build();\n  client.newCall(request).enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onFailure(    Request request,    IOException e){\n      if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp failed to obtain result\",e);\n      }\n      callback.onDataReady(null);\n    }\n    @Override public void onResponse(    Response response) throws IOException {\n      if (response.isSuccessful()) {\n        String contentLength=response.header(CONTENT_LENGTH_HEADER);\n        responseBody=response.body();\n        stream=ContentLengthInputStream.obtain(responseBody.byteStream(),contentLength);\n      }\n else       if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp got error response: \" + response.code() + \", \"+ response.message());\n      }\n      callback.onDataReady(stream);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void loadData(Priority priority,final DataCallback<? super InputStream> callback){\n  Request.Builder requestBuilder=new Request.Builder().url(url.toStringUrl());\n  for (  Map.Entry<String,String> headerEntry : url.getHeaders().entrySet()) {\n    requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n  }\n  Request request=requestBuilder.build();\n  client.newCall(request).enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onFailure(    Request request,    IOException e){\n      if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp failed to obtain result\",e);\n      }\n      callback.onDataReady(null);\n    }\n    @Override public void onResponse(    Response response) throws IOException {\n      if (response.isSuccessful()) {\n        String contentLength=response.header(CONTENT_LENGTH_HEADER);\n        responseBody=response.body();\n        stream=ContentLengthInputStream.obtain(responseBody.byteStream(),contentLength);\n      }\n else       if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp got error response: \" + response.code() + \", \"+ response.message());\n      }\n      callback.onDataReady(stream);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 77
      },
      "nodeContext" : "requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "Request.Builder"
  }, {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 41,
      "startColumnNumber" : 22,
      "endLineNumber" : 41,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 41,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "requestBuilder.build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "request=requestBuilder.build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Request request=requestBuilder.build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 36,
        "startColumnNumber" : 92,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Request.Builder requestBuilder=new Request.Builder().url(url.toStringUrl());\n  for (  Map.Entry<String,String> headerEntry : url.getHeaders().entrySet()) {\n    requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n  }\n  Request request=requestBuilder.build();\n  client.newCall(request).enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onFailure(    Request request,    IOException e){\n      if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp failed to obtain result\",e);\n      }\n      callback.onDataReady(null);\n    }\n    @Override public void onResponse(    Response response) throws IOException {\n      if (response.isSuccessful()) {\n        String contentLength=response.header(CONTENT_LENGTH_HEADER);\n        responseBody=response.body();\n        stream=ContentLengthInputStream.obtain(responseBody.byteStream(),contentLength);\n      }\n else       if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp got error response: \" + response.code() + \", \"+ response.message());\n      }\n      callback.onDataReady(stream);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void loadData(Priority priority,final DataCallback<? super InputStream> callback){\n  Request.Builder requestBuilder=new Request.Builder().url(url.toStringUrl());\n  for (  Map.Entry<String,String> headerEntry : url.getHeaders().entrySet()) {\n    requestBuilder.addHeader(headerEntry.getKey(),headerEntry.getValue());\n  }\n  Request request=requestBuilder.build();\n  client.newCall(request).enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onFailure(    Request request,    IOException e){\n      if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp failed to obtain result\",e);\n      }\n      callback.onDataReady(null);\n    }\n    @Override public void onResponse(    Response response) throws IOException {\n      if (response.isSuccessful()) {\n        String contentLength=response.header(CONTENT_LENGTH_HEADER);\n        responseBody=response.body();\n        stream=ContentLengthInputStream.obtain(responseBody.byteStream(),contentLength);\n      }\n else       if (Logs.isEnabled(Log.DEBUG)) {\n        Logs.log(Log.DEBUG,\"OkHttp got error response: \" + response.code() + \", \"+ response.message());\n      }\n      callback.onDataReady(stream);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Request request=requestBuilder.build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "Request.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 39,
    "startColumnNumber" : 6,
    "endLineNumber" : 39,
    "endColumnNumber" : 20
  }, {
    "charLength" : 14,
    "startLineNumber" : 41,
    "startColumnNumber" : 22,
    "endLineNumber" : 41,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}