{
  "id" : 375,
  "expression" : "ClassInfo",
  "projectName" : "skylot@jadx",
  "commitID" : "aec986447ed3c90acc54d888f155275d882a66b0",
  "filePath" : "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 277,
      "startColumnNumber" : 21,
      "endLineNumber" : 277,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 277,
        "startColumnNumber" : 21,
        "endLineNumber" : 277,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 277,
        "startColumnNumber" : 14,
        "endLineNumber" : 277,
        "endColumnNumber" : 78
      },
      "nodeContext" : "type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 277,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 275,
        "startColumnNumber" : 51,
        "endLineNumber" : 281,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int addr=handlerAddrArr[i];\n  ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n  tcBlock.addHandler(mth,addr,type);\n  addrs.add(addr);\n  handlersCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 275,
        "startColumnNumber" : 3,
        "endLineNumber" : 281,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < handlerAddrArr.length; i++) {\n  int addr=handlerAddrArr[i];\n  ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n  tcBlock.addHandler(mth,addr,type);\n  addrs.add(addr);\n  handlersCount++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 271,
        "startColumnNumber" : 43,
        "endLineNumber" : 288,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TryCatchBlock tcBlock=new TryCatchBlock();\n  catches.add(tcBlock);\n  int[] handlerAddrArr=handler.getAddresses();\n  for (int i=0; i < handlerAddrArr.length; i++) {\n    int addr=handlerAddrArr[i];\n    ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n    tcBlock.addHandler(mth,addr,type);\n    addrs.add(addr);\n    handlersCount++;\n  }\n  int addr=handler.getCatchAllAddress();\n  if (addr >= 0) {\n    tcBlock.addHandler(mth,addr,null);\n    addrs.add(addr);\n    handlersCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 271,
        "startColumnNumber" : 2,
        "endLineNumber" : 288,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (CatchHandler handler : catchBlocks) {\n  TryCatchBlock tcBlock=new TryCatchBlock();\n  catches.add(tcBlock);\n  int[] handlerAddrArr=handler.getAddresses();\n  for (int i=0; i < handlerAddrArr.length; i++) {\n    int addr=handlerAddrArr[i];\n    ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n    tcBlock.addHandler(mth,addr,type);\n    addrs.add(addr);\n    handlersCount++;\n  }\n  int addr=handler.getCatchAllAddress();\n  if (addr >= 0) {\n    tcBlock.addHandler(mth,addr,null);\n    addrs.add(addr);\n    handlersCount++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 260,
        "startColumnNumber" : 91,
        "endLineNumber" : 337,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CatchHandler[] catchBlocks=mthCode.getCatchHandlers();\n  Try[] tries=mthCode.getTries();\n  if (catchBlocks.length == 0 && tries.length == 0) {\n    return;\n  }\n  int handlersCount=0;\n  Set<Integer> addrs=new HashSet<>();\n  List<TryCatchBlock> catches=new ArrayList<>(catchBlocks.length);\n  for (  CatchHandler handler : catchBlocks) {\n    TryCatchBlock tcBlock=new TryCatchBlock();\n    catches.add(tcBlock);\n    int[] handlerAddrArr=handler.getAddresses();\n    for (int i=0; i < handlerAddrArr.length; i++) {\n      int addr=handlerAddrArr[i];\n      ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n      tcBlock.addHandler(mth,addr,type);\n      addrs.add(addr);\n      handlersCount++;\n    }\n    int addr=handler.getCatchAllAddress();\n    if (addr >= 0) {\n      tcBlock.addHandler(mth,addr,null);\n      addrs.add(addr);\n      handlersCount++;\n    }\n  }\n  if (handlersCount > 0 && handlersCount != addrs.size()) {\n    for (    TryCatchBlock ct1 : catches) {\n      for (      TryCatchBlock ct2 : catches) {\n        if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {\n          for (          ExceptionHandler h : ct1.getHandlers()) {\n            ct2.removeHandler(mth,h);\n            h.setTryBlock(ct1);\n          }\n        }\n      }\n    }\n  }\n  addrs.clear();\n  for (  TryCatchBlock ct : catches) {\n    for (    ExceptionHandler eh : ct.getHandlers()) {\n      int addr=eh.getHandleOffset();\n      ExcHandlerAttr ehAttr=new ExcHandlerAttr(ct,eh);\n      insnByOffset[addr].addAttr(ehAttr);\n    }\n  }\n  for (  Try aTry : tries) {\n    int catchNum=aTry.getCatchHandlerIndex();\n    TryCatchBlock catchBlock=catches.get(catchNum);\n    int offset=aTry.getStartAddress();\n    int end=offset + aTry.getInstructionCount() - 1;\n    InsnNode insn=insnByOffset[offset];\n    insn.add(AFlag.TRY_ENTER);\n    while (offset <= end && offset >= 0) {\n      insn=insnByOffset[offset];\n      catchBlock.addInsn(insn);\n      offset=InsnDecoder.getNextInsnOffset(insnByOffset,offset);\n    }\n    if (insnByOffset[end] != null) {\n      insnByOffset[end].add(AFlag.TRY_LEAVE);\n    }\n else {\n      insn.add(AFlag.TRY_LEAVE);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 260,
        "startColumnNumber" : 1,
        "endLineNumber" : 337,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void initTryCatches(MethodNode mth,Code mthCode,InsnNode[] insnByOffset){\n  CatchHandler[] catchBlocks=mthCode.getCatchHandlers();\n  Try[] tries=mthCode.getTries();\n  if (catchBlocks.length == 0 && tries.length == 0) {\n    return;\n  }\n  int handlersCount=0;\n  Set<Integer> addrs=new HashSet<>();\n  List<TryCatchBlock> catches=new ArrayList<>(catchBlocks.length);\n  for (  CatchHandler handler : catchBlocks) {\n    TryCatchBlock tcBlock=new TryCatchBlock();\n    catches.add(tcBlock);\n    int[] handlerAddrArr=handler.getAddresses();\n    for (int i=0; i < handlerAddrArr.length; i++) {\n      int addr=handlerAddrArr[i];\n      ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n      tcBlock.addHandler(mth,addr,type);\n      addrs.add(addr);\n      handlersCount++;\n    }\n    int addr=handler.getCatchAllAddress();\n    if (addr >= 0) {\n      tcBlock.addHandler(mth,addr,null);\n      addrs.add(addr);\n      handlersCount++;\n    }\n  }\n  if (handlersCount > 0 && handlersCount != addrs.size()) {\n    for (    TryCatchBlock ct1 : catches) {\n      for (      TryCatchBlock ct2 : catches) {\n        if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {\n          for (          ExceptionHandler h : ct1.getHandlers()) {\n            ct2.removeHandler(mth,h);\n            h.setTryBlock(ct1);\n          }\n        }\n      }\n    }\n  }\n  addrs.clear();\n  for (  TryCatchBlock ct : catches) {\n    for (    ExceptionHandler eh : ct.getHandlers()) {\n      int addr=eh.getHandleOffset();\n      ExcHandlerAttr ehAttr=new ExcHandlerAttr(ct,eh);\n      insnByOffset[addr].addAttr(ehAttr);\n    }\n  }\n  for (  Try aTry : tries) {\n    int catchNum=aTry.getCatchHandlerIndex();\n    TryCatchBlock catchBlock=catches.get(catchNum);\n    int offset=aTry.getStartAddress();\n    int end=offset + aTry.getInstructionCount() - 1;\n    InsnNode insn=insnByOffset[offset];\n    insn.add(AFlag.TRY_ENTER);\n    while (offset <= end && offset >= 0) {\n      insn=insnByOffset[offset];\n      catchBlock.addInsn(insn);\n      offset=InsnDecoder.getNextInsnOffset(insnByOffset,offset);\n    }\n    if (insnByOffset[end] != null) {\n      insnByOffset[end].add(AFlag.TRY_LEAVE);\n    }\n else {\n      insn.add(AFlag.TRY_LEAVE);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 401,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 277,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ClassInfo type=ClassInfo.fromDex(mth.dex(),handler.getTypeIndexes()[i]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.info.ClassInfo"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 277,
    "startColumnNumber" : 21,
    "endLineNumber" : 277,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}