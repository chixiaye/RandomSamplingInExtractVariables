{
  "id" : 291,
  "expression" : "preparedStatement",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/dao/src/test/java/org/thingsboard/server/dao/nosql/CassandraPartitionsCacheTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "preparedStatement",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 81,
      "startColumnNumber" : 54,
      "endLineNumber" : 81,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 72
      },
      "nodeContext" : "when(session.prepare(anyString())).thenReturn(preparedStatement)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 73
      },
      "nodeContext" : "when(session.prepare(anyString())).thenReturn(preparedStatement);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1447,
        "startLineNumber" : 70,
        "startColumnNumber" : 41,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitioning\",\"MONTHS\");\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitionsCacheSize\",100000);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"systemTtl\",0);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"setNullValuesEnabled\",false);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"environment\",environment);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"cluster\",cluster);\n  when(cluster.getDefaultReadConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getDefaultWriteConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getSession()).thenReturn(session);\n  when(session.prepare(anyString())).thenReturn(preparedStatement);\n  when(preparedStatement.bind()).thenReturn(boundStatement);\n  when(boundStatement.setString(anyInt(),anyString())).thenReturn(boundStatement);\n  when(boundStatement.setUuid(anyInt(),any(UUID.class))).thenReturn(boundStatement);\n  when(boundStatement.setLong(anyInt(),any(Long.class))).thenReturn(boundStatement);\n  willReturn(new TbResultSetFuture(SettableFuture.create())).given(cassandraBaseTimeseriesDao).executeAsyncWrite(any(),any());\n  doReturn(Futures.immediateFuture(0)).when(cassandraBaseTimeseriesDao).getFuture(any(),any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setUp() throws Exception {\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitioning\",\"MONTHS\");\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitionsCacheSize\",100000);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"systemTtl\",0);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"setNullValuesEnabled\",false);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"environment\",environment);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"cluster\",cluster);\n  when(cluster.getDefaultReadConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getDefaultWriteConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getSession()).thenReturn(session);\n  when(session.prepare(anyString())).thenReturn(preparedStatement);\n  when(preparedStatement.bind()).thenReturn(boundStatement);\n  when(boundStatement.setString(anyInt(),anyString())).thenReturn(boundStatement);\n  when(boundStatement.setUuid(anyInt(),any(UUID.class))).thenReturn(boundStatement);\n  when(boundStatement.setLong(anyInt(),any(Long.class))).thenReturn(boundStatement);\n  willReturn(new TbResultSetFuture(SettableFuture.create())).given(cassandraBaseTimeseriesDao).executeAsyncWrite(any(),any());\n  doReturn(Futures.immediateFuture(0)).when(cassandraBaseTimeseriesDao).getFuture(any(),any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 73
      },
      "nodeContext" : "when(session.prepare(anyString())).thenReturn(preparedStatement);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.dao.nosql.PreparedStatement"
  }, {
    "nodeContext" : "preparedStatement",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 83,
      "startColumnNumber" : 13,
      "endLineNumber" : 83,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 83,
        "startColumnNumber" : 13,
        "endLineNumber" : 83,
        "endColumnNumber" : 37
      },
      "nodeContext" : "preparedStatement.bind()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "when(preparedStatement.bind())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 65
      },
      "nodeContext" : "when(preparedStatement.bind()).thenReturn(boundStatement)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 66
      },
      "nodeContext" : "when(preparedStatement.bind()).thenReturn(boundStatement);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1447,
        "startLineNumber" : 70,
        "startColumnNumber" : 41,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitioning\",\"MONTHS\");\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitionsCacheSize\",100000);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"systemTtl\",0);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"setNullValuesEnabled\",false);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"environment\",environment);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"cluster\",cluster);\n  when(cluster.getDefaultReadConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getDefaultWriteConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getSession()).thenReturn(session);\n  when(session.prepare(anyString())).thenReturn(preparedStatement);\n  when(preparedStatement.bind()).thenReturn(boundStatement);\n  when(boundStatement.setString(anyInt(),anyString())).thenReturn(boundStatement);\n  when(boundStatement.setUuid(anyInt(),any(UUID.class))).thenReturn(boundStatement);\n  when(boundStatement.setLong(anyInt(),any(Long.class))).thenReturn(boundStatement);\n  willReturn(new TbResultSetFuture(SettableFuture.create())).given(cassandraBaseTimeseriesDao).executeAsyncWrite(any(),any());\n  doReturn(Futures.immediateFuture(0)).when(cassandraBaseTimeseriesDao).getFuture(any(),any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setUp() throws Exception {\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitioning\",\"MONTHS\");\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"partitionsCacheSize\",100000);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"systemTtl\",0);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"setNullValuesEnabled\",false);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"environment\",environment);\n  ReflectionTestUtils.setField(cassandraBaseTimeseriesDao,\"cluster\",cluster);\n  when(cluster.getDefaultReadConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getDefaultWriteConsistencyLevel()).thenReturn(ConsistencyLevel.ONE);\n  when(cluster.getSession()).thenReturn(session);\n  when(session.prepare(anyString())).thenReturn(preparedStatement);\n  when(preparedStatement.bind()).thenReturn(boundStatement);\n  when(boundStatement.setString(anyInt(),anyString())).thenReturn(boundStatement);\n  when(boundStatement.setUuid(anyInt(),any(UUID.class))).thenReturn(boundStatement);\n  when(boundStatement.setLong(anyInt(),any(Long.class))).thenReturn(boundStatement);\n  willReturn(new TbResultSetFuture(SettableFuture.create())).given(cassandraBaseTimeseriesDao).executeAsyncWrite(any(),any());\n  doReturn(Futures.immediateFuture(0)).when(cassandraBaseTimeseriesDao).getFuture(any(),any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 66
      },
      "nodeContext" : "when(preparedStatement.bind()).thenReturn(boundStatement);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.dao.nosql.PreparedStatement"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 81,
    "startColumnNumber" : 54,
    "endLineNumber" : 81,
    "endColumnNumber" : 71
  }, {
    "charLength" : 17,
    "startLineNumber" : 83,
    "startColumnNumber" : 13,
    "endLineNumber" : 83,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}