{
  "id" : 363,
  "expression" : "mFinalResult",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/test/java/com/facebook/datasource/DataSourcesTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mFinalResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 67,
      "startColumnNumber" : 45,
      "endLineNumber" : 67,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 58
      },
      "nodeContext" : "when(mDataSource.getResult()).thenReturn(mFinalResult)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(mDataSource.getResult()).thenReturn(mFinalResult);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 65,
        "startColumnNumber" : 94,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  when(mDataSource.isFinished()).thenReturn(true);\n  when(mDataSource.getResult()).thenReturn(mFinalResult);\n  doAnswer(new Answer<Void>(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      final Object[] args=invocation.getArguments();\n      DataSubscriber dataSubscriber=(DataSubscriber)args[0];\n      dataSubscriber.onNewResult(mDataSource);\n      return null;\n    }\n  }\n).when(mDataSource).subscribe(any(DataSubscriber.class),any(Executor.class));\n  final Object actual=DataSources.waitForFinalResult(mDataSource);\n  assertEquals(mFinalResult,actual);\n  verify(mCountDownLatch,times(1)).await();\n  verify(mCountDownLatch,times(1)).countDown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWaitForFinalResult_whenFinalResult_thenReturnFinalResult() throws Throwable {\n  when(mDataSource.isFinished()).thenReturn(true);\n  when(mDataSource.getResult()).thenReturn(mFinalResult);\n  doAnswer(new Answer<Void>(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      final Object[] args=invocation.getArguments();\n      DataSubscriber dataSubscriber=(DataSubscriber)args[0];\n      dataSubscriber.onNewResult(mDataSource);\n      return null;\n    }\n  }\n).when(mDataSource).subscribe(any(DataSubscriber.class),any(Executor.class));\n  final Object actual=DataSources.waitForFinalResult(mDataSource);\n  assertEquals(mFinalResult,actual);\n  verify(mCountDownLatch,times(1)).await();\n  verify(mCountDownLatch,times(1)).countDown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(mDataSource.getResult()).thenReturn(mFinalResult);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "mFinalResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 83,
      "startColumnNumber" : 17,
      "endLineNumber" : 83,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(mFinalResult,actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(mFinalResult,actual);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 65,
        "startColumnNumber" : 94,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  when(mDataSource.isFinished()).thenReturn(true);\n  when(mDataSource.getResult()).thenReturn(mFinalResult);\n  doAnswer(new Answer<Void>(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      final Object[] args=invocation.getArguments();\n      DataSubscriber dataSubscriber=(DataSubscriber)args[0];\n      dataSubscriber.onNewResult(mDataSource);\n      return null;\n    }\n  }\n).when(mDataSource).subscribe(any(DataSubscriber.class),any(Executor.class));\n  final Object actual=DataSources.waitForFinalResult(mDataSource);\n  assertEquals(mFinalResult,actual);\n  verify(mCountDownLatch,times(1)).await();\n  verify(mCountDownLatch,times(1)).countDown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWaitForFinalResult_whenFinalResult_thenReturnFinalResult() throws Throwable {\n  when(mDataSource.isFinished()).thenReturn(true);\n  when(mDataSource.getResult()).thenReturn(mFinalResult);\n  doAnswer(new Answer<Void>(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      final Object[] args=invocation.getArguments();\n      DataSubscriber dataSubscriber=(DataSubscriber)args[0];\n      dataSubscriber.onNewResult(mDataSource);\n      return null;\n    }\n  }\n).when(mDataSource).subscribe(any(DataSubscriber.class),any(Executor.class));\n  final Object actual=DataSources.waitForFinalResult(mDataSource);\n  assertEquals(mFinalResult,actual);\n  verify(mCountDownLatch,times(1)).await();\n  verify(mCountDownLatch,times(1)).countDown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(mFinalResult,actual);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 67,
    "startColumnNumber" : 45,
    "endLineNumber" : 67,
    "endColumnNumber" : 57
  }, {
    "charLength" : 12,
    "startLineNumber" : 83,
    "startColumnNumber" : 17,
    "endLineNumber" : 83,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}