{
  "id" : 315,
  "expression" : "false == META_ANNOTATIONS.contains(annotationType)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/annotation/CombinationAnnotationElement.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false == META_ANNOTATIONS.contains(annotationType)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 106,
      "startColumnNumber" : 7,
      "endLineNumber" : 106,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 106,
        "startColumnNumber" : 3,
        "endLineNumber" : 109,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (false == META_ANNOTATIONS.contains(annotationType)) {\n  declaredAnnotationMap.put(annotationType,annotation);\n  parseDeclared(annotationType.getDeclaredAnnotations());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 104,
        "startColumnNumber" : 44,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  annotationType=annotation.annotationType();\n  if (false == META_ANNOTATIONS.contains(annotationType)) {\n    declaredAnnotationMap.put(annotationType,annotation);\n    parseDeclared(annotationType.getDeclaredAnnotations());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Annotation annotation : annotations) {\n  annotationType=annotation.annotationType();\n  if (false == META_ANNOTATIONS.contains(annotationType)) {\n    declaredAnnotationMap.put(annotationType,annotation);\n    parseDeclared(annotationType.getDeclaredAnnotations());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 101,
        "startColumnNumber" : 54,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Class<? extends Annotation> annotationType;\n  for (  Annotation annotation : annotations) {\n    annotationType=annotation.annotationType();\n    if (false == META_ANNOTATIONS.contains(annotationType)) {\n      declaredAnnotationMap.put(annotationType,annotation);\n      parseDeclared(annotationType.getDeclaredAnnotations());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 96,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 进行递归解析注解，直到全部都是元注解为止\n * @param annotations Class, Method, Field等\n */\nprivate void parseDeclared(Annotation[] annotations){\n  Class<? extends Annotation> annotationType;\n  for (  Annotation annotation : annotations) {\n    annotationType=annotation.annotationType();\n    if (false == META_ANNOTATIONS.contains(annotationType)) {\n      declaredAnnotationMap.put(annotationType,annotation);\n      parseDeclared(annotationType.getDeclaredAnnotations());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 106,
        "startColumnNumber" : 3,
        "endLineNumber" : 109,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (false == META_ANNOTATIONS.contains(annotationType)) {\n  declaredAnnotationMap.put(annotationType,annotation);\n  parseDeclared(annotationType.getDeclaredAnnotations());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 106,
    "startColumnNumber" : 7,
    "endLineNumber" : 106,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}