{
  "id" : 217,
  "expression" : "\"druid.hll.sample.tsv\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniquesAggregationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"druid.hll.sample.tsv\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 179,
      "startColumnNumber" : 64,
      "endLineNumber" : 179,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 179,
        "startColumnNumber" : 19,
        "endLineNumber" : 179,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 179,
        "startColumnNumber" : 19,
        "endLineNumber" : 179,
        "endColumnNumber" : 97
      },
      "nodeContext" : "this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 179,
        "startColumnNumber" : 10,
        "endLineNumber" : 179,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 178,
        "startColumnNumber" : 32,
        "endLineNumber" : 186,
        "endColumnNumber" : 7
      },
      "nodeContext" : "helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 178,
        "startColumnNumber" : 26,
        "endLineNumber" : 186,
        "endColumnNumber" : 7
      },
      "nodeContext" : "seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 178,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 8
      },
      "nodeContext" : "Sequence<ResultRow> seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2409,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String metricSpec=\"[{\" + \"\\\"type\\\": \\\"hyperUnique\\\",\" + \"\\\"name\\\": \\\"index_hll\\\",\"+ \"\\\"fieldName\\\": \\\"preComputedHll\\\",\"+ \"\\\"isInputHyperUnique\\\": true\"+ \"}]\";\n  String parseSpec=\"{\" + \"\\\"type\\\" : \\\"string\\\",\" + \"\\\"parseSpec\\\" : {\"+ \"    \\\"format\\\" : \\\"tsv\\\",\"+ \"    \\\"timestampSpec\\\" : {\"+ \"        \\\"column\\\" : \\\"timestamp\\\",\"+ \"        \\\"format\\\" : \\\"auto\\\"\"+ \"},\"+ \"    \\\"dimensionsSpec\\\" : {\"+ \"        \\\"dimensions\\\": [],\"+ \"        \\\"dimensionExclusions\\\" : [],\"+ \"        \\\"spatialDimensions\\\" : []\"+ \"    },\"+ \"    \\\"columns\\\": [\\\"timestamp\\\", \\\"market\\\", \\\"preComputedHll\\\"]\"+ \"  }\"+ \"}\";\n  String query=\"{\" + \"\\\"queryType\\\": \\\"groupBy\\\",\" + \"\\\"dataSource\\\": \\\"test_datasource\\\",\"+ \"\\\"granularity\\\": \\\"ALL\\\",\"+ \"\\\"dimensions\\\": [],\"+ \"\\\"aggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUnique\\\", \\\"name\\\": \\\"index_hll\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"postAggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUniqueCardinality\\\", \\\"name\\\": \\\"index_unique_count\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"intervals\\\": [ \\\"1970/2050\\\" ]\"+ \"}\";\n  Sequence<ResultRow> seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query);\n  final ResultRow resultRow=seq.toList().get(0);\n  Assert.assertEquals(\"index_hll\",4.0,((Number)resultRow.get(0)).floatValue(),0.1);\n  Assert.assertEquals(\"index_unique_count\",4.0,((Number)resultRow.get(1)).floatValue(),0.1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2646,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (final AggregationTestHelper helper=AggregationTestHelper.createGroupByQueryAggregationTestHelper(Collections.singletonList(new AggregatorsModule()),config,tempFolder)){\n  String metricSpec=\"[{\" + \"\\\"type\\\": \\\"hyperUnique\\\",\" + \"\\\"name\\\": \\\"index_hll\\\",\"+ \"\\\"fieldName\\\": \\\"preComputedHll\\\",\"+ \"\\\"isInputHyperUnique\\\": true\"+ \"}]\";\n  String parseSpec=\"{\" + \"\\\"type\\\" : \\\"string\\\",\" + \"\\\"parseSpec\\\" : {\"+ \"    \\\"format\\\" : \\\"tsv\\\",\"+ \"    \\\"timestampSpec\\\" : {\"+ \"        \\\"column\\\" : \\\"timestamp\\\",\"+ \"        \\\"format\\\" : \\\"auto\\\"\"+ \"},\"+ \"    \\\"dimensionsSpec\\\" : {\"+ \"        \\\"dimensions\\\": [],\"+ \"        \\\"dimensionExclusions\\\" : [],\"+ \"        \\\"spatialDimensions\\\" : []\"+ \"    },\"+ \"    \\\"columns\\\": [\\\"timestamp\\\", \\\"market\\\", \\\"preComputedHll\\\"]\"+ \"  }\"+ \"}\";\n  String query=\"{\" + \"\\\"queryType\\\": \\\"groupBy\\\",\" + \"\\\"dataSource\\\": \\\"test_datasource\\\",\"+ \"\\\"granularity\\\": \\\"ALL\\\",\"+ \"\\\"dimensions\\\": [],\"+ \"\\\"aggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUnique\\\", \\\"name\\\": \\\"index_hll\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"postAggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUniqueCardinality\\\", \\\"name\\\": \\\"index_unique_count\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"intervals\\\": [ \\\"1970/2050\\\" ]\"+ \"}\";\n  Sequence<ResultRow> seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query);\n  final ResultRow resultRow=seq.toList().get(0);\n  Assert.assertEquals(\"index_hll\",4.0,((Number)resultRow.get(0)).floatValue(),0.1);\n  Assert.assertEquals(\"index_unique_count\",4.0,((Number)resultRow.get(1)).floatValue(),0.1);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2656,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 192,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (final AggregationTestHelper helper=AggregationTestHelper.createGroupByQueryAggregationTestHelper(Collections.singletonList(new AggregatorsModule()),config,tempFolder)){\n    String metricSpec=\"[{\" + \"\\\"type\\\": \\\"hyperUnique\\\",\" + \"\\\"name\\\": \\\"index_hll\\\",\"+ \"\\\"fieldName\\\": \\\"preComputedHll\\\",\"+ \"\\\"isInputHyperUnique\\\": true\"+ \"}]\";\n    String parseSpec=\"{\" + \"\\\"type\\\" : \\\"string\\\",\" + \"\\\"parseSpec\\\" : {\"+ \"    \\\"format\\\" : \\\"tsv\\\",\"+ \"    \\\"timestampSpec\\\" : {\"+ \"        \\\"column\\\" : \\\"timestamp\\\",\"+ \"        \\\"format\\\" : \\\"auto\\\"\"+ \"},\"+ \"    \\\"dimensionsSpec\\\" : {\"+ \"        \\\"dimensions\\\": [],\"+ \"        \\\"dimensionExclusions\\\" : [],\"+ \"        \\\"spatialDimensions\\\" : []\"+ \"    },\"+ \"    \\\"columns\\\": [\\\"timestamp\\\", \\\"market\\\", \\\"preComputedHll\\\"]\"+ \"  }\"+ \"}\";\n    String query=\"{\" + \"\\\"queryType\\\": \\\"groupBy\\\",\" + \"\\\"dataSource\\\": \\\"test_datasource\\\",\"+ \"\\\"granularity\\\": \\\"ALL\\\",\"+ \"\\\"dimensions\\\": [],\"+ \"\\\"aggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUnique\\\", \\\"name\\\": \\\"index_hll\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"postAggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUniqueCardinality\\\", \\\"name\\\": \\\"index_unique_count\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"intervals\\\": [ \\\"1970/2050\\\" ]\"+ \"}\";\n    Sequence<ResultRow> seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query);\n    final ResultRow resultRow=seq.toList().get(0);\n    Assert.assertEquals(\"index_hll\",4.0,((Number)resultRow.get(0)).floatValue(),0.1);\n    Assert.assertEquals(\"index_unique_count\",4.0,((Number)resultRow.get(1)).floatValue(),0.1);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2730,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 192,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testIngestAndQueryPrecomputedHll() throws Exception {\n  try (final AggregationTestHelper helper=AggregationTestHelper.createGroupByQueryAggregationTestHelper(Collections.singletonList(new AggregatorsModule()),config,tempFolder)){\n    String metricSpec=\"[{\" + \"\\\"type\\\": \\\"hyperUnique\\\",\" + \"\\\"name\\\": \\\"index_hll\\\",\"+ \"\\\"fieldName\\\": \\\"preComputedHll\\\",\"+ \"\\\"isInputHyperUnique\\\": true\"+ \"}]\";\n    String parseSpec=\"{\" + \"\\\"type\\\" : \\\"string\\\",\" + \"\\\"parseSpec\\\" : {\"+ \"    \\\"format\\\" : \\\"tsv\\\",\"+ \"    \\\"timestampSpec\\\" : {\"+ \"        \\\"column\\\" : \\\"timestamp\\\",\"+ \"        \\\"format\\\" : \\\"auto\\\"\"+ \"},\"+ \"    \\\"dimensionsSpec\\\" : {\"+ \"        \\\"dimensions\\\": [],\"+ \"        \\\"dimensionExclusions\\\" : [],\"+ \"        \\\"spatialDimensions\\\" : []\"+ \"    },\"+ \"    \\\"columns\\\": [\\\"timestamp\\\", \\\"market\\\", \\\"preComputedHll\\\"]\"+ \"  }\"+ \"}\";\n    String query=\"{\" + \"\\\"queryType\\\": \\\"groupBy\\\",\" + \"\\\"dataSource\\\": \\\"test_datasource\\\",\"+ \"\\\"granularity\\\": \\\"ALL\\\",\"+ \"\\\"dimensions\\\": [],\"+ \"\\\"aggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUnique\\\", \\\"name\\\": \\\"index_hll\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"postAggregations\\\": [\"+ \"  { \\\"type\\\": \\\"hyperUniqueCardinality\\\", \\\"name\\\": \\\"index_unique_count\\\", \\\"fieldName\\\": \\\"index_hll\\\" }\"+ \"],\"+ \"\\\"intervals\\\": [ \\\"1970/2050\\\" ]\"+ \"}\";\n    Sequence<ResultRow> seq=helper.createIndexAndRunQueryOnSegment(new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile()),parseSpec,metricSpec,0,Granularities.DAY,50000,query);\n    final ResultRow resultRow=seq.toList().get(0);\n    Assert.assertEquals(\"index_hll\",4.0,((Number)resultRow.get(0)).floatValue(),0.1);\n    Assert.assertEquals(\"index_unique_count\",4.0,((Number)resultRow.get(1)).floatValue(),0.1);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 179,
        "startColumnNumber" : 10,
        "endLineNumber" : 179,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new File(this.getClass().getClassLoader().getResource(\"druid.hll.sample.tsv\").getFile())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 179,
    "startColumnNumber" : 64,
    "endLineNumber" : 179,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}