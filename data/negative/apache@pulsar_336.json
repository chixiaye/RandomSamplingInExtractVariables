{
  "id" : 336,
  "expression" : "lengthFor(i) - elementString.length() + rightPadding",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-testclient/src/main/java/org/apache/pulsar/testclient/utils/FixedColumnLengthTableMaker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lengthFor(i) - elementString.length() + rightPadding",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 138,
      "startColumnNumber" : 25,
      "endLineNumber" : 138,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 87
      },
      "nodeContext" : "addSpace(lengthFor(i) - elementString.length() + rightPadding,builder)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 88
      },
      "nodeContext" : "addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 123,
        "startColumnNumber" : 45,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  addSpace(leftPadding,builder);\n  String elementString;\n  if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n    elementString=String.format(decimalFormatter,element);\n  }\n else {\n    elementString=Objects.toString(element,\"\");\n  }\n  if (elementString.length() > lengthFor(i)) {\n    elementString=elementString.substring(0,lengthFor(i));\n  }\n  builder.append(elementString);\n  addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n  if (i != numColumns - 1) {\n    builder.append(separator);\n  }\n  i+=1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1114,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (final Object element : row) {\n  addSpace(leftPadding,builder);\n  String elementString;\n  if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n    elementString=String.format(decimalFormatter,element);\n  }\n else {\n    elementString=Objects.toString(element,\"\");\n  }\n  if (elementString.length() > lengthFor(i)) {\n    elementString=elementString.substring(0,lengthFor(i));\n  }\n  builder.append(elementString);\n  addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n  if (i != numColumns - 1) {\n    builder.append(separator);\n  }\n  i+=1;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1571,
        "startLineNumber" : 120,
        "startColumnNumber" : 40,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  i=0;\n  builder.append(leftBorder);\n  for (  final Object element : row) {\n    addSpace(leftPadding,builder);\n    String elementString;\n    if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n      elementString=String.format(decimalFormatter,element);\n    }\n else {\n      elementString=Objects.toString(element,\"\");\n    }\n    if (elementString.length() > lengthFor(i)) {\n      elementString=elementString.substring(0,lengthFor(i));\n    }\n    builder.append(elementString);\n    addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n    if (i != numColumns - 1) {\n      builder.append(separator);\n    }\n    i+=1;\n  }\n  for (; i < numColumns; ++i) {\n    addSpace(leftPadding + rightPadding + lengthFor(i),builder);\n    if (i != numColumns - 1) {\n      builder.append(separator);\n    }\n  }\n  builder.append(rightBorder);\n  builder.append('\\n');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1603,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (final Object[] row : rows) {\n  i=0;\n  builder.append(leftBorder);\n  for (  final Object element : row) {\n    addSpace(leftPadding,builder);\n    String elementString;\n    if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n      elementString=String.format(decimalFormatter,element);\n    }\n else {\n      elementString=Objects.toString(element,\"\");\n    }\n    if (elementString.length() > lengthFor(i)) {\n      elementString=elementString.substring(0,lengthFor(i));\n    }\n    builder.append(elementString);\n    addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n    if (i != numColumns - 1) {\n      builder.append(separator);\n    }\n    i+=1;\n  }\n  for (; i < numColumns; ++i) {\n    addSpace(leftPadding + rightPadding + lengthFor(i),builder);\n    if (i != numColumns - 1) {\n      builder.append(separator);\n    }\n  }\n  builder.append(rightBorder);\n  builder.append('\\n');\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2428,
        "startLineNumber" : 104,
        "startColumnNumber" : 46,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringBuilder builder=new StringBuilder();\n  int numColumns=0;\n  for (  final Object[] row : rows) {\n    numColumns=Math.max(numColumns,row.length);\n  }\n  int totalLength=numColumns * (leftPadding + rightPadding + separator.length()) - separator.length() + leftBorder.length() + rightBorder.length();\n  for (int i=0; i < numColumns; ++i) {\n    totalLength+=lengthFor(i);\n  }\n  addHorizontalBorder(totalLength,builder,topBorder);\n  builder.append('\\n');\n  int i;\n  for (  final Object[] row : rows) {\n    i=0;\n    builder.append(leftBorder);\n    for (    final Object element : row) {\n      addSpace(leftPadding,builder);\n      String elementString;\n      if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n        elementString=String.format(decimalFormatter,element);\n      }\n else {\n        elementString=Objects.toString(element,\"\");\n      }\n      if (elementString.length() > lengthFor(i)) {\n        elementString=elementString.substring(0,lengthFor(i));\n      }\n      builder.append(elementString);\n      addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n      if (i != numColumns - 1) {\n        builder.append(separator);\n      }\n      i+=1;\n    }\n    for (; i < numColumns; ++i) {\n      addSpace(leftPadding + rightPadding + lengthFor(i),builder);\n      if (i != numColumns - 1) {\n        builder.append(separator);\n      }\n    }\n    builder.append(rightBorder);\n    builder.append('\\n');\n  }\n  addHorizontalBorder(totalLength,builder,bottomBorder);\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 265,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2661,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Make a table using the specified settings.\n * @param rows Rows to construct the table from.\n * @return A String version of the table.\n */\npublic String make(final Object[][] rows){\n  final StringBuilder builder=new StringBuilder();\n  int numColumns=0;\n  for (  final Object[] row : rows) {\n    numColumns=Math.max(numColumns,row.length);\n  }\n  int totalLength=numColumns * (leftPadding + rightPadding + separator.length()) - separator.length() + leftBorder.length() + rightBorder.length();\n  for (int i=0; i < numColumns; ++i) {\n    totalLength+=lengthFor(i);\n  }\n  addHorizontalBorder(totalLength,builder,topBorder);\n  builder.append('\\n');\n  int i;\n  for (  final Object[] row : rows) {\n    i=0;\n    builder.append(leftBorder);\n    for (    final Object element : row) {\n      addSpace(leftPadding,builder);\n      String elementString;\n      if ((element instanceof Float || element instanceof Double) && decimalFormatter != null) {\n        elementString=String.format(decimalFormatter,element);\n      }\n else {\n        elementString=Objects.toString(element,\"\");\n      }\n      if (elementString.length() > lengthFor(i)) {\n        elementString=elementString.substring(0,lengthFor(i));\n      }\n      builder.append(elementString);\n      addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n      if (i != numColumns - 1) {\n        builder.append(separator);\n      }\n      i+=1;\n    }\n    for (; i < numColumns; ++i) {\n      addSpace(leftPadding + rightPadding + lengthFor(i),builder);\n      if (i != numColumns - 1) {\n        builder.append(separator);\n      }\n    }\n    builder.append(rightBorder);\n    builder.append('\\n');\n  }\n  addHorizontalBorder(totalLength,builder,bottomBorder);\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 88
      },
      "nodeContext" : "addSpace(lengthFor(i) - elementString.length() + rightPadding,builder);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 138,
    "startColumnNumber" : 25,
    "endLineNumber" : 138,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}