{
  "id" : 369,
  "expression" : "Object.class",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/LocalResourceFetchProducerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Object.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 74,
      "startColumnNumber" : 17,
      "endLineNumber" : 74,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mock(Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 20
      },
      "nodeContext" : "new SettableProducerContext(mImageRequest,mRequestId,mProducerListener,mock(Object.class),ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 20
      },
      "nodeContext" : "mProducerContext=new SettableProducerContext(mImageRequest,mRequestId,mProducerListener,mock(Object.class),ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 21
      },
      "nodeContext" : "mProducerContext=new SettableProducerContext(mImageRequest,mRequestId,mProducerListener,mock(Object.class),ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1216,
        "startLineNumber" : 60,
        "startColumnNumber" : 39,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MockitoAnnotations.initMocks(this);\n  when(mResources.openRawResourceFd(eq(TEST_ID))).thenReturn(mAssetFileDescriptor);\n  when(mAssetFileDescriptor.getLength()).thenReturn((long)TEST_DATA_LENGTH);\n  mExecutor=new TestExecutorService(new FakeClock());\n  mLocalResourceFetchProducer=new LocalResourceFetchProducer(mExecutor,mPooledByteBufferFactory,mResources);\n  mProducerContext=new SettableProducerContext(mImageRequest,mRequestId,mProducerListener,mock(Object.class),ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  when(mImageRequest.getSourceUri()).thenReturn(Uri.parse(\"res:///\" + TEST_ID));\n  doAnswer(new Answer(){\n    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {\n      mCapturedEncodedImage=EncodedImage.cloneOrNull(((EncodedImage)invocation.getArguments()[0]));\n      return null;\n    }\n  }\n).when(mConsumer).onNewResult(notNull(EncodedImage.class),anyInt());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1263,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws Exception {\n  MockitoAnnotations.initMocks(this);\n  when(mResources.openRawResourceFd(eq(TEST_ID))).thenReturn(mAssetFileDescriptor);\n  when(mAssetFileDescriptor.getLength()).thenReturn((long)TEST_DATA_LENGTH);\n  mExecutor=new TestExecutorService(new FakeClock());\n  mLocalResourceFetchProducer=new LocalResourceFetchProducer(mExecutor,mPooledByteBufferFactory,mResources);\n  mProducerContext=new SettableProducerContext(mImageRequest,mRequestId,mProducerListener,mock(Object.class),ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  when(mImageRequest.getSourceUri()).thenReturn(Uri.parse(\"res:///\" + TEST_ID));\n  doAnswer(new Answer(){\n    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {\n      mCapturedEncodedImage=EncodedImage.cloneOrNull(((EncodedImage)invocation.getArguments()[0]));\n      return null;\n    }\n  }\n).when(mConsumer).onNewResult(notNull(EncodedImage.class),anyInt());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mock(Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 74,
    "startColumnNumber" : 17,
    "endLineNumber" : 74,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}