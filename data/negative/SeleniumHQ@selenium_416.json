{
  "id" : 416,
  "expression" : "session.getUri().toString()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "738dd0ee18a142d3fe69fc5f16889ac770188c93",
  "filePath" : "java/server/src/org/openqa/selenium/grid/sessionmap/jdbc/JdbcBackedSessionMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "session.getUri().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 131,
      "startColumnNumber" : 47,
      "endLineNumber" : 131,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 131,
        "endColumnNumber" : 75
      },
      "nodeContext" : "EventAttribute.setValue(session.getUri().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 130,
        "startColumnNumber" : 6,
        "endLineNumber" : 131,
        "endColumnNumber" : 76
      },
      "nodeContext" : "attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 130,
        "startColumnNumber" : 6,
        "endLineNumber" : 131,
        "endColumnNumber" : 77
      },
      "nodeContext" : "attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1647,
        "startLineNumber" : 122,
        "startColumnNumber" : 97,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  SESSION_ID.accept(span,session.getId());\n  SESSION_ID_EVENT.accept(attributeMap,session.getId());\n  CAPABILITIES.accept(span,session.getCapabilities());\n  CAPABILITIES_EVENT.accept(attributeMap,session.getCapabilities());\n  setCommonSpanAttributes(span);\n  setCommonEventAttributes(attributeMap);\n  attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()));\n  try (PreparedStatement statement=insertSessionStatement(session)){\n    String statementStr=statement.toString();\n    span.setAttribute(DATABASE_STATEMENT,statementStr);\n    span.setAttribute(DATABASE_OPERATION,\"insert\");\n    attributeMap.put(DATABASE_STATEMENT,EventAttribute.setValue(statementStr));\n    attributeMap.put(DATABASE_OPERATION,EventAttribute.setValue(\"insert\"));\n    int rowCount=statement.executeUpdate();\n    attributeMap.put(\"rows.added\",EventAttribute.setValue(rowCount));\n    span.addEvent(\"Inserted into the database\",attributeMap);\n    return rowCount >= 1;\n  }\n catch (  SQLException e) {\n    span.setAttribute(\"error\",true);\n    span.setStatus(Status.CANCELLED);\n    EXCEPTION.accept(attributeMap,e);\n    attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(\"Unable to add session information to the database: \" + e.getMessage()));\n    span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n    throw new JdbcException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Span span=tracer.getCurrentContext().createSpan(\"INSERT into  sessions_map (session_ids, session_uri, session_caps) values (?, ?, ?) \")){\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  SESSION_ID.accept(span,session.getId());\n  SESSION_ID_EVENT.accept(attributeMap,session.getId());\n  CAPABILITIES.accept(span,session.getCapabilities());\n  CAPABILITIES_EVENT.accept(attributeMap,session.getCapabilities());\n  setCommonSpanAttributes(span);\n  setCommonEventAttributes(attributeMap);\n  attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()));\n  try (PreparedStatement statement=insertSessionStatement(session)){\n    String statementStr=statement.toString();\n    span.setAttribute(DATABASE_STATEMENT,statementStr);\n    span.setAttribute(DATABASE_OPERATION,\"insert\");\n    attributeMap.put(DATABASE_STATEMENT,EventAttribute.setValue(statementStr));\n    attributeMap.put(DATABASE_OPERATION,EventAttribute.setValue(\"insert\"));\n    int rowCount=statement.executeUpdate();\n    attributeMap.put(\"rows.added\",EventAttribute.setValue(rowCount));\n    span.addEvent(\"Inserted into the database\",attributeMap);\n    return rowCount >= 1;\n  }\n catch (  SQLException e) {\n    span.setAttribute(\"error\",true);\n    span.setStatus(Status.CANCELLED);\n    EXCEPTION.accept(attributeMap,e);\n    attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(\"Unable to add session information to the database: \" + e.getMessage()));\n    span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n    throw new JdbcException(e);\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 118,
        "startColumnNumber" : 38,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"Session to add\",session);\n  try (Span span=tracer.getCurrentContext().createSpan(\"INSERT into  sessions_map (session_ids, session_uri, session_caps) values (?, ?, ?) \")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    SESSION_ID.accept(span,session.getId());\n    SESSION_ID_EVENT.accept(attributeMap,session.getId());\n    CAPABILITIES.accept(span,session.getCapabilities());\n    CAPABILITIES_EVENT.accept(attributeMap,session.getCapabilities());\n    setCommonSpanAttributes(span);\n    setCommonEventAttributes(attributeMap);\n    attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()));\n    try (PreparedStatement statement=insertSessionStatement(session)){\n      String statementStr=statement.toString();\n      span.setAttribute(DATABASE_STATEMENT,statementStr);\n      span.setAttribute(DATABASE_OPERATION,\"insert\");\n      attributeMap.put(DATABASE_STATEMENT,EventAttribute.setValue(statementStr));\n      attributeMap.put(DATABASE_OPERATION,EventAttribute.setValue(\"insert\"));\n      int rowCount=statement.executeUpdate();\n      attributeMap.put(\"rows.added\",EventAttribute.setValue(rowCount));\n      span.addEvent(\"Inserted into the database\",attributeMap);\n      return rowCount >= 1;\n    }\n catch (    SQLException e) {\n      span.setAttribute(\"error\",true);\n      span.setStatus(Status.CANCELLED);\n      EXCEPTION.accept(attributeMap,e);\n      attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(\"Unable to add session information to the database: \" + e.getMessage()));\n      span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n      throw new JdbcException(e);\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1907,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean add(Session session){\n  Require.nonNull(\"Session to add\",session);\n  try (Span span=tracer.getCurrentContext().createSpan(\"INSERT into  sessions_map (session_ids, session_uri, session_caps) values (?, ?, ?) \")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    SESSION_ID.accept(span,session.getId());\n    SESSION_ID_EVENT.accept(attributeMap,session.getId());\n    CAPABILITIES.accept(span,session.getCapabilities());\n    CAPABILITIES_EVENT.accept(attributeMap,session.getCapabilities());\n    setCommonSpanAttributes(span);\n    setCommonEventAttributes(attributeMap);\n    attributeMap.put(AttributeKey.SESSION_URI.getKey(),EventAttribute.setValue(session.getUri().toString()));\n    try (PreparedStatement statement=insertSessionStatement(session)){\n      String statementStr=statement.toString();\n      span.setAttribute(DATABASE_STATEMENT,statementStr);\n      span.setAttribute(DATABASE_OPERATION,\"insert\");\n      attributeMap.put(DATABASE_STATEMENT,EventAttribute.setValue(statementStr));\n      attributeMap.put(DATABASE_OPERATION,EventAttribute.setValue(\"insert\"));\n      int rowCount=statement.executeUpdate();\n      attributeMap.put(\"rows.added\",EventAttribute.setValue(rowCount));\n      span.addEvent(\"Inserted into the database\",attributeMap);\n      return rowCount >= 1;\n    }\n catch (    SQLException e) {\n      span.setAttribute(\"error\",true);\n      span.setStatus(Status.CANCELLED);\n      EXCEPTION.accept(attributeMap,e);\n      attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(\"Unable to add session information to the database: \" + e.getMessage()));\n      span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n      throw new JdbcException(e);\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 131,
        "endColumnNumber" : 75
      },
      "nodeContext" : "EventAttribute.setValue(session.getUri().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 131,
    "startColumnNumber" : 47,
    "endLineNumber" : 131,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}