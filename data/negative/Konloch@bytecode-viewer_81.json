{
  "id" : 81,
  "expression" : "file",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/impl/XAPKResourceImporter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 32,
      "startColumnNumber" : 46,
      "endLineNumber" : 32,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 32,
        "startColumnNumber" : 28,
        "endLineNumber" : 32,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new FileContainer(file)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 32,
        "startColumnNumber" : 16,
        "endLineNumber" : 32,
        "endColumnNumber" : 51
      },
      "nodeContext" : "container=new FileContainer(file)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 52
      },
      "nodeContext" : "FileContainer container=new FileContainer(file);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 52
      },
      "nodeContext" : "FileContainer container=new FileContainer(file);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 37,
      "startColumnNumber" : 65,
      "endLineNumber" : 37,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 37,
        "startColumnNumber" : 39,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new java.util.zip.ZipFile(file)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 37,
        "startColumnNumber" : 29,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "zipFile=new java.util.zip.ZipFile(file)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 37,
        "startColumnNumber" : 7,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    final ZipEntry entry=entries.nextElement();\n    final String fileName=entry.getName();\n    if (entry.isDirectory())     continue;\n    if (fileName.endsWith(\".apk\")) {\n      File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n      tempFile.getParentFile().mkdirs();\n      try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n        IOUtils.copy(in,out);\n      }\n       Import.APK.getImporter().open(tempFile);\n    }\n else {\n      byte[] bytes;\n      try (InputStream in=zipFile.getInputStream(entry)){\n        bytes=IOUtils.toByteArray(in);\n      }\n       allDirectoryFiles.put(fileName,bytes);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 159,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 37,
        "startColumnNumber" : 7,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 32,
    "startColumnNumber" : 46,
    "endLineNumber" : 32,
    "endColumnNumber" : 50
  }, {
    "charLength" : 4,
    "startLineNumber" : 37,
    "startColumnNumber" : 65,
    "endLineNumber" : 37,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}