{
  "id" : 122,
  "expression" : "parseTags(tag)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "22a6ee03ebe9326364c3c79318942dc0694189f3",
  "filePath" : "spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parseTags(tag)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 19,
      "endLineNumber" : 84,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 33
      },
      "nodeContext" : "tags=parseTags(tag)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 34
      },
      "nodeContext" : "List<Tag> tags=parseTags(tag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 81,
        "startColumnNumber" : 31,
        "endLineNumber" : 96,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.isTrue(tag == null || tag.stream().allMatch((t) -> t.contains(\":\")),\"Each tag parameter must be in the form key:value\");\n  List<Tag> tags=parseTags(tag);\n  List<Meter> meters=new ArrayList<>();\n  collectMeters(meters,this.registry,requiredMetricName,tags);\n  if (meters.isEmpty()) {\n    return null;\n  }\n  Map<Statistic,Double> samples=getSamples(meters);\n  Map<String,List<String>> availableTags=getAvailableTags(meters);\n  tags.forEach((t) -> availableTags.remove(t.getKey()));\n  return new MetricResponse(requiredMetricName,asList(samples,MetricResponse.Sample::new),asList(availableTags,MetricResponse.AvailableTag::new));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 79,
        "startColumnNumber" : 1,
        "endLineNumber" : 96,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@ReadOperation public MetricResponse metric(@Selector String requiredMetricName,@Nullable List<String> tag){\n  Assert.isTrue(tag == null || tag.stream().allMatch((t) -> t.contains(\":\")),\"Each tag parameter must be in the form key:value\");\n  List<Tag> tags=parseTags(tag);\n  List<Meter> meters=new ArrayList<>();\n  collectMeters(meters,this.registry,requiredMetricName,tags);\n  if (meters.isEmpty()) {\n    return null;\n  }\n  Map<Statistic,Double> samples=getSamples(meters);\n  Map<String,List<String>> availableTags=getAvailableTags(meters);\n  tags.forEach((t) -> availableTags.remove(t.getKey()));\n  return new MetricResponse(requiredMetricName,asList(samples,MetricResponse.Sample::new),asList(availableTags,MetricResponse.AvailableTag::new));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 34
      },
      "nodeContext" : "List<Tag> tags=parseTags(tag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.List<org.springframework.boot.actuate.metrics.Tag>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 19,
    "endLineNumber" : 84,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}