{
  "id" : 96,
  "expression" : "right - left",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/BitMatrix.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "right - left",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 198,
      "startColumnNumber" : 16,
      "endLineNumber" : 198,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 28
      },
      "nodeContext" : "width=right - left",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 29
      },
      "nodeContext" : "int width=right - left;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 160,
        "startColumnNumber" : 39,
        "endLineNumber" : 206,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int left=width;\n  int top=height;\n  int right=-1;\n  int bottom=-1;\n  for (int y=0; y < height; y++) {\n    for (int x32=0; x32 < rowSize; x32++) {\n      int theBits=bits[y * rowSize + x32];\n      if (theBits != 0) {\n        if (y < top) {\n          top=y;\n        }\n        if (y > bottom) {\n          bottom=y;\n        }\n        if (x32 * 32 < left) {\n          int bit=0;\n          while ((theBits << (31 - bit)) == 0) {\n            bit++;\n          }\n          if ((x32 * 32 + bit) < left) {\n            left=x32 * 32 + bit;\n          }\n        }\n        if (x32 * 32 + 31 > right) {\n          int bit=31;\n          while ((theBits >>> bit) == 0) {\n            bit--;\n          }\n          if ((x32 * 32 + bit) > right) {\n            right=x32 * 32 + bit;\n          }\n        }\n      }\n    }\n  }\n  int width=right - left;\n  int height=bottom - top;\n  if (width < 0 || height < 0) {\n    return null;\n  }\n  return new int[]{left,top,width,height};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1357,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 206,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This is useful in detecting the enclosing rectangle of a 'pure' barcode.\n * @return {left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white\n */\npublic int[] getEnclosingRectangle(){\n  int left=width;\n  int top=height;\n  int right=-1;\n  int bottom=-1;\n  for (int y=0; y < height; y++) {\n    for (int x32=0; x32 < rowSize; x32++) {\n      int theBits=bits[y * rowSize + x32];\n      if (theBits != 0) {\n        if (y < top) {\n          top=y;\n        }\n        if (y > bottom) {\n          bottom=y;\n        }\n        if (x32 * 32 < left) {\n          int bit=0;\n          while ((theBits << (31 - bit)) == 0) {\n            bit++;\n          }\n          if ((x32 * 32 + bit) < left) {\n            left=x32 * 32 + bit;\n          }\n        }\n        if (x32 * 32 + 31 > right) {\n          int bit=31;\n          while ((theBits >>> bit) == 0) {\n            bit--;\n          }\n          if ((x32 * 32 + bit) > right) {\n            right=x32 * 32 + bit;\n          }\n        }\n      }\n    }\n  }\n  int width=right - left;\n  int height=bottom - top;\n  if (width < 0 || height < 0) {\n    return null;\n  }\n  return new int[]{left,top,width,height};\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 29
      },
      "nodeContext" : "int width=right - left;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 198,
    "startColumnNumber" : 16,
    "endLineNumber" : 198,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}