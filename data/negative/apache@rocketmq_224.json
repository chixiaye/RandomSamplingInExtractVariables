{
  "id" : 224,
  "expression" : "line[6]",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/client/src/main/java/org/apache/rocketmq/client/trace/TraceDataEncoder.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "line[6]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 52,
      "startColumnNumber" : 29,
      "endLineNumber" : 52,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 37
      },
      "nodeContext" : "bean.setTags(line[6])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "bean.setTags(line[6]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1239,
        "startLineNumber" : 43,
        "startColumnNumber" : 54,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TraceContext pubContext=new TraceContext();\n  pubContext.setTraceType(TraceType.Pub);\n  pubContext.setTimeStamp(Long.parseLong(line[1]));\n  pubContext.setRegionId(line[2]);\n  pubContext.setGroupName(line[3]);\n  TraceBean bean=new TraceBean();\n  bean.setTopic(line[4]);\n  bean.setMsgId(line[5]);\n  bean.setTags(line[6]);\n  bean.setKeys(line[7]);\n  bean.setStoreHost(line[8]);\n  bean.setBodyLength(Integer.parseInt(line[9]));\n  pubContext.setCostTime(Integer.parseInt(line[10]));\n  bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n  if (line.length == 13) {\n    pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n  }\n else   if (line.length == 14) {\n    bean.setOffsetMsgId(line[12]);\n    pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n  }\n  pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  pubContext.getTraceBeans().add(bean);\n  resList.add(pubContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2995,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.Pub.name())) {\n  TraceContext pubContext=new TraceContext();\n  pubContext.setTraceType(TraceType.Pub);\n  pubContext.setTimeStamp(Long.parseLong(line[1]));\n  pubContext.setRegionId(line[2]);\n  pubContext.setGroupName(line[3]);\n  TraceBean bean=new TraceBean();\n  bean.setTopic(line[4]);\n  bean.setMsgId(line[5]);\n  bean.setTags(line[6]);\n  bean.setKeys(line[7]);\n  bean.setStoreHost(line[8]);\n  bean.setBodyLength(Integer.parseInt(line[9]));\n  pubContext.setCostTime(Integer.parseInt(line[10]));\n  bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n  if (line.length == 13) {\n    pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n  }\n else   if (line.length == 14) {\n    bean.setOffsetMsgId(line[12]);\n    pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n  }\n  pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  pubContext.getTraceBeans().add(bean);\n  resList.add(pubContext);\n}\n else if (line[0].equals(TraceType.SubBefore.name())) {\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n else if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 421,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3110,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 438,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3145,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String context : contextList) {\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 444,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3445,
        "startLineNumber" : 35,
        "startColumnNumber" : 82,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 490,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3643,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Resolving traceContext list From trace data String\n * @param traceData\n * @return\n */\npublic static List<TraceContext> decoderFromTraceDataString(String traceData){\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 504,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "bean.setTags(line[6]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "line[6]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 77,
      "startColumnNumber" : 52,
      "endLineNumber" : 77,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 77,
        "startColumnNumber" : 35,
        "endLineNumber" : 77,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Integer.parseInt(line[6])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 61
      },
      "nodeContext" : "bean.setRetryTimes(Integer.parseInt(line[6]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bean.setRetryTimes(Integer.parseInt(line[6]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 68,
        "startColumnNumber" : 67,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.SubBefore.name())) {\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n else if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 229,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2995,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.Pub.name())) {\n  TraceContext pubContext=new TraceContext();\n  pubContext.setTraceType(TraceType.Pub);\n  pubContext.setTimeStamp(Long.parseLong(line[1]));\n  pubContext.setRegionId(line[2]);\n  pubContext.setGroupName(line[3]);\n  TraceBean bean=new TraceBean();\n  bean.setTopic(line[4]);\n  bean.setMsgId(line[5]);\n  bean.setTags(line[6]);\n  bean.setKeys(line[7]);\n  bean.setStoreHost(line[8]);\n  bean.setBodyLength(Integer.parseInt(line[9]));\n  pubContext.setCostTime(Integer.parseInt(line[10]));\n  bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n  if (line.length == 13) {\n    pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n  }\n else   if (line.length == 14) {\n    bean.setOffsetMsgId(line[12]);\n    pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n  }\n  pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  pubContext.getTraceBeans().add(bean);\n  resList.add(pubContext);\n}\n else if (line[0].equals(TraceType.SubBefore.name())) {\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n else if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 421,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3110,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 438,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3145,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String context : contextList) {\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 444,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3445,
        "startLineNumber" : 35,
        "startColumnNumber" : 82,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 490,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3643,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Resolving traceContext list From trace data String\n * @param traceData\n * @return\n */\npublic static List<TraceContext> decoderFromTraceDataString(String traceData){\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 504,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bean.setRetryTimes(Integer.parseInt(line[6]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "line[6]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 95,
      "startColumnNumber" : 68,
      "endLineNumber" : 95,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 95,
        "startColumnNumber" : 51,
        "endLineNumber" : 95,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Integer.parseInt(line[6])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 77
      },
      "nodeContext" : "subAfterContext.setContextCode(Integer.parseInt(line[6]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 78
      },
      "nodeContext" : "subAfterContext.setContextCode(Integer.parseInt(line[6]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 93,
        "startColumnNumber" : 38,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  subAfterContext.setContextCode(Integer.parseInt(line[6]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (line.length >= 7) {\n  subAfterContext.setContextCode(Integer.parseInt(line[6]));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 82,
        "startColumnNumber" : 66,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 82,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.SubBefore.name())) {\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n else if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 229,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2995,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line[0].equals(TraceType.Pub.name())) {\n  TraceContext pubContext=new TraceContext();\n  pubContext.setTraceType(TraceType.Pub);\n  pubContext.setTimeStamp(Long.parseLong(line[1]));\n  pubContext.setRegionId(line[2]);\n  pubContext.setGroupName(line[3]);\n  TraceBean bean=new TraceBean();\n  bean.setTopic(line[4]);\n  bean.setMsgId(line[5]);\n  bean.setTags(line[6]);\n  bean.setKeys(line[7]);\n  bean.setStoreHost(line[8]);\n  bean.setBodyLength(Integer.parseInt(line[9]));\n  pubContext.setCostTime(Integer.parseInt(line[10]));\n  bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n  if (line.length == 13) {\n    pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n  }\n else   if (line.length == 14) {\n    bean.setOffsetMsgId(line[12]);\n    pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n  }\n  pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  pubContext.getTraceBeans().add(bean);\n  resList.add(pubContext);\n}\n else if (line[0].equals(TraceType.SubBefore.name())) {\n  TraceContext subBeforeContext=new TraceContext();\n  subBeforeContext.setTraceType(TraceType.SubBefore);\n  subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n  subBeforeContext.setRegionId(line[2]);\n  subBeforeContext.setGroupName(line[3]);\n  subBeforeContext.setRequestId(line[4]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[5]);\n  bean.setRetryTimes(Integer.parseInt(line[6]));\n  bean.setKeys(line[7]);\n  subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subBeforeContext.getTraceBeans().add(bean);\n  resList.add(subBeforeContext);\n}\n else if (line[0].equals(TraceType.SubAfter.name())) {\n  TraceContext subAfterContext=new TraceContext();\n  subAfterContext.setTraceType(TraceType.SubAfter);\n  subAfterContext.setRequestId(line[1]);\n  TraceBean bean=new TraceBean();\n  bean.setMsgId(line[2]);\n  bean.setKeys(line[5]);\n  subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n  subAfterContext.getTraceBeans().add(bean);\n  subAfterContext.setCostTime(Integer.parseInt(line[3]));\n  subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n  if (line.length >= 7) {\n    subAfterContext.setContextCode(Integer.parseInt(line[6]));\n  }\n  resList.add(subAfterContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 421,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3110,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 438,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3145,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String context : contextList) {\n  String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n  if (line[0].equals(TraceType.Pub.name())) {\n    TraceContext pubContext=new TraceContext();\n    pubContext.setTraceType(TraceType.Pub);\n    pubContext.setTimeStamp(Long.parseLong(line[1]));\n    pubContext.setRegionId(line[2]);\n    pubContext.setGroupName(line[3]);\n    TraceBean bean=new TraceBean();\n    bean.setTopic(line[4]);\n    bean.setMsgId(line[5]);\n    bean.setTags(line[6]);\n    bean.setKeys(line[7]);\n    bean.setStoreHost(line[8]);\n    bean.setBodyLength(Integer.parseInt(line[9]));\n    pubContext.setCostTime(Integer.parseInt(line[10]));\n    bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n    if (line.length == 13) {\n      pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n    }\n else     if (line.length == 14) {\n      bean.setOffsetMsgId(line[12]);\n      pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n    }\n    pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    pubContext.getTraceBeans().add(bean);\n    resList.add(pubContext);\n  }\n else   if (line[0].equals(TraceType.SubBefore.name())) {\n    TraceContext subBeforeContext=new TraceContext();\n    subBeforeContext.setTraceType(TraceType.SubBefore);\n    subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n    subBeforeContext.setRegionId(line[2]);\n    subBeforeContext.setGroupName(line[3]);\n    subBeforeContext.setRequestId(line[4]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[5]);\n    bean.setRetryTimes(Integer.parseInt(line[6]));\n    bean.setKeys(line[7]);\n    subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subBeforeContext.getTraceBeans().add(bean);\n    resList.add(subBeforeContext);\n  }\n else   if (line[0].equals(TraceType.SubAfter.name())) {\n    TraceContext subAfterContext=new TraceContext();\n    subAfterContext.setTraceType(TraceType.SubAfter);\n    subAfterContext.setRequestId(line[1]);\n    TraceBean bean=new TraceBean();\n    bean.setMsgId(line[2]);\n    bean.setKeys(line[5]);\n    subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n    subAfterContext.getTraceBeans().add(bean);\n    subAfterContext.setCostTime(Integer.parseInt(line[3]));\n    subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n    if (line.length >= 7) {\n      subAfterContext.setContextCode(Integer.parseInt(line[6]));\n    }\n    resList.add(subAfterContext);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 444,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3445,
        "startLineNumber" : 35,
        "startColumnNumber" : 82,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 490,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3643,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Resolving traceContext list From trace data String\n * @param traceData\n * @return\n */\npublic static List<TraceContext> decoderFromTraceDataString(String traceData){\n  List<TraceContext> resList=new ArrayList<TraceContext>();\n  if (traceData == null || traceData.length() <= 0) {\n    return resList;\n  }\n  String[] contextList=traceData.split(String.valueOf(TraceConstants.FIELD_SPLITOR));\n  for (  String context : contextList) {\n    String[] line=context.split(String.valueOf(TraceConstants.CONTENT_SPLITOR));\n    if (line[0].equals(TraceType.Pub.name())) {\n      TraceContext pubContext=new TraceContext();\n      pubContext.setTraceType(TraceType.Pub);\n      pubContext.setTimeStamp(Long.parseLong(line[1]));\n      pubContext.setRegionId(line[2]);\n      pubContext.setGroupName(line[3]);\n      TraceBean bean=new TraceBean();\n      bean.setTopic(line[4]);\n      bean.setMsgId(line[5]);\n      bean.setTags(line[6]);\n      bean.setKeys(line[7]);\n      bean.setStoreHost(line[8]);\n      bean.setBodyLength(Integer.parseInt(line[9]));\n      pubContext.setCostTime(Integer.parseInt(line[10]));\n      bean.setMsgType(MessageType.values()[Integer.parseInt(line[11])]);\n      if (line.length == 13) {\n        pubContext.setSuccess(Boolean.parseBoolean(line[12]));\n      }\n else       if (line.length == 14) {\n        bean.setOffsetMsgId(line[12]);\n        pubContext.setSuccess(Boolean.parseBoolean(line[13]));\n      }\n      pubContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      pubContext.getTraceBeans().add(bean);\n      resList.add(pubContext);\n    }\n else     if (line[0].equals(TraceType.SubBefore.name())) {\n      TraceContext subBeforeContext=new TraceContext();\n      subBeforeContext.setTraceType(TraceType.SubBefore);\n      subBeforeContext.setTimeStamp(Long.parseLong(line[1]));\n      subBeforeContext.setRegionId(line[2]);\n      subBeforeContext.setGroupName(line[3]);\n      subBeforeContext.setRequestId(line[4]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[5]);\n      bean.setRetryTimes(Integer.parseInt(line[6]));\n      bean.setKeys(line[7]);\n      subBeforeContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subBeforeContext.getTraceBeans().add(bean);\n      resList.add(subBeforeContext);\n    }\n else     if (line[0].equals(TraceType.SubAfter.name())) {\n      TraceContext subAfterContext=new TraceContext();\n      subAfterContext.setTraceType(TraceType.SubAfter);\n      subAfterContext.setRequestId(line[1]);\n      TraceBean bean=new TraceBean();\n      bean.setMsgId(line[2]);\n      bean.setKeys(line[5]);\n      subAfterContext.setTraceBeans(new ArrayList<TraceBean>(1));\n      subAfterContext.getTraceBeans().add(bean);\n      subAfterContext.setCostTime(Integer.parseInt(line[3]));\n      subAfterContext.setSuccess(Boolean.parseBoolean(line[4]));\n      if (line.length >= 7) {\n        subAfterContext.setContextCode(Integer.parseInt(line[6]));\n      }\n      resList.add(subAfterContext);\n    }\n  }\n  return resList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 504,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 78
      },
      "nodeContext" : "subAfterContext.setContextCode(Integer.parseInt(line[6]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 52,
    "startColumnNumber" : 29,
    "endLineNumber" : 52,
    "endColumnNumber" : 36
  }, {
    "charLength" : 7,
    "startLineNumber" : 77,
    "startColumnNumber" : 52,
    "endLineNumber" : 77,
    "endColumnNumber" : 59
  }, {
    "charLength" : 7,
    "startLineNumber" : 95,
    "startColumnNumber" : 68,
    "endLineNumber" : 95,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}