{
  "id" : 495,
  "expression" : "reader.readLine()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-filesystems/flink-s3-fs-base/src/test/java/org/apache/flink/fs/s3/common/MinioTestContainerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "reader.readLine()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 86,
      "startColumnNumber" : 19,
      "endLineNumber" : 86,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertThat(reader.readLine())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(reader.readLine()).isEqualTo(content)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(reader.readLine()).isEqualTo(content);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 74,
        "startColumnNumber" : 51,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String bucketName=\"other-bucket\";\n  getClient().createBucket(bucketName);\n  final String objectId=\"test-object\";\n  final String content=\"test content\";\n  getClient().putObject(bucketName,objectId,content);\n  final BufferedReader reader=new BufferedReader(new InputStreamReader(getClient().getObject(bucketName,objectId).getObjectContent()));\n  assertThat(reader.readLine()).isEqualTo(content);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPutObject() throws IOException {\n  final String bucketName=\"other-bucket\";\n  getClient().createBucket(bucketName);\n  final String objectId=\"test-object\";\n  final String content=\"test content\";\n  getClient().putObject(bucketName,objectId,content);\n  final BufferedReader reader=new BufferedReader(new InputStreamReader(getClient().getObject(bucketName,objectId).getObjectContent()));\n  assertThat(reader.readLine()).isEqualTo(content);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(reader.readLine()).isEqualTo(content);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 86,
    "startColumnNumber" : 19,
    "endLineNumber" : 86,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}