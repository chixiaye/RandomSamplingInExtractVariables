{
  "id" : 324,
  "expression" : "logger",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/jmx/ManagedUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 68,
      "startColumnNumber" : 30,
      "endLineNumber" : 68,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 68,
        "startColumnNumber" : 30,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "logger.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 68,
        "startColumnNumber" : 11,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "hdm.addLoggerMBean(logger.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 68,
        "startColumnNumber" : 11,
        "endLineNumber" : 68,
        "endColumnNumber" : 48
      },
      "nodeContext" : "hdm.addLoggerMBean(logger.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 66,
        "startColumnNumber" : 41,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger=(Logger)enumer.nextElement();\n  hdm.addLoggerMBean(logger.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (enumer.hasMoreElements()) {\n  logger=(Logger)enumer.nextElement();\n  hdm.addLoggerMBean(logger.getName());\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 43,
        "startColumnNumber" : 64,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Boolean.getBoolean(\"zookeeper.jmx.log4j.disable\") == true) {\n    return;\n  }\n  MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();\n  HierarchyDynamicMBean hdm=new HierarchyDynamicMBean();\n  ObjectName mbo=new ObjectName(\"log4j:hiearchy=default\");\n  mbs.registerMBean(hdm,mbo);\n  Logger rootLogger=Logger.getRootLogger();\n  hdm.addLoggerMBean(rootLogger.getName());\n  LoggerRepository r=LogManager.getLoggerRepository();\n  Enumeration enumer=r.getCurrentLoggers();\n  Logger logger=null;\n  while (enumer.hasMoreElements()) {\n    logger=(Logger)enumer.nextElement();\n    hdm.addLoggerMBean(logger.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1354,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register the log4j JMX mbeans. Set environment variable \"zookeeper.jmx.log4j.disable\" to true to disable registration.\n * @see http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html\n * @throws JMException if registration fails\n */\npublic static void registerLog4jMBeans() throws JMException {\n  if (Boolean.getBoolean(\"zookeeper.jmx.log4j.disable\") == true) {\n    return;\n  }\n  MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();\n  HierarchyDynamicMBean hdm=new HierarchyDynamicMBean();\n  ObjectName mbo=new ObjectName(\"log4j:hiearchy=default\");\n  mbs.registerMBean(hdm,mbo);\n  Logger rootLogger=Logger.getRootLogger();\n  hdm.addLoggerMBean(rootLogger.getName());\n  LoggerRepository r=LogManager.getLoggerRepository();\n  Enumeration enumer=r.getCurrentLoggers();\n  Logger logger=null;\n  while (enumer.hasMoreElements()) {\n    logger=(Logger)enumer.nextElement();\n    hdm.addLoggerMBean(logger.getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 68,
        "startColumnNumber" : 11,
        "endLineNumber" : 68,
        "endColumnNumber" : 48
      },
      "nodeContext" : "hdm.addLoggerMBean(logger.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.jmx.Logger"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 68,
    "startColumnNumber" : 30,
    "endLineNumber" : 68,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}