{
  "id" : 22,
  "expression" : "\"3\"",
  "projectName" : "crossoverJie@JCSprout",
  "commitID" : "397ee3763e12279fd83d26d02da20955d5bcc7cf",
  "filePath" : "/src/test/java/com/crossoverjie/algorithm/TwoStackQueueTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"3\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 14,
      "startColumnNumber" : 33,
      "endLineNumber" : 14,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 37
      },
      "nodeContext" : "twoStackQueue.appendTail(\"3\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 39
      },
      "nodeContext" : "twoStackQueue.appendTail(\"3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 10,
        "startColumnNumber" : 23,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TwoStackQueue<String> twoStackQueue=new TwoStackQueue<String>();\n  twoStackQueue.appendTail(\"1\");\n  twoStackQueue.appendTail(\"2\");\n  twoStackQueue.appendTail(\"3\");\n  twoStackQueue.appendTail(\"4\");\n  twoStackQueue.appendTail(\"5\");\n  int size=twoStackQueue.getSize();\n  for (int i=0; i < size; i++) {\n    LOGGER.info(twoStackQueue.deleteHead());\n  }\n  LOGGER.info(\"========第二次添加=========\");\n  twoStackQueue.appendTail(\"6\");\n  size=twoStackQueue.getSize();\n  for (int i=0; i < size; i++) {\n    LOGGER.info(twoStackQueue.deleteHead());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void queue(){\n  TwoStackQueue<String> twoStackQueue=new TwoStackQueue<String>();\n  twoStackQueue.appendTail(\"1\");\n  twoStackQueue.appendTail(\"2\");\n  twoStackQueue.appendTail(\"3\");\n  twoStackQueue.appendTail(\"4\");\n  twoStackQueue.appendTail(\"5\");\n  int size=twoStackQueue.getSize();\n  for (int i=0; i < size; i++) {\n    LOGGER.info(twoStackQueue.deleteHead());\n  }\n  LOGGER.info(\"========第二次添加=========\");\n  twoStackQueue.appendTail(\"6\");\n  size=twoStackQueue.getSize();\n  for (int i=0; i < size; i++) {\n    LOGGER.info(twoStackQueue.deleteHead());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 39
      },
      "nodeContext" : "twoStackQueue.appendTail(\"3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 14,
    "startColumnNumber" : 33,
    "endLineNumber" : 14,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}