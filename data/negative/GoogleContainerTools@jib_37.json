{
  "id" : 37,
  "expression" : "buildConfiguration",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a516426b2072bd7a96747eb50322f25e856edc51",
  "filePath" : "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/BuildConfigurationTest.java",
  "occurrences" : 11,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 167,
      "startColumnNumber" : 22,
      "endLineNumber" : 167,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 167,
        "startColumnNumber" : 22,
        "endLineNumber" : 167,
        "endColumnNumber" : 75
      },
      "nodeContext" : "buildConfiguration.getBaseImageCredentialHelperName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 168,
      "startColumnNumber" : 22,
      "endLineNumber" : 168,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 168,
        "startColumnNumber" : 22,
        "endLineNumber" : 168,
        "endColumnNumber" : 74
      },
      "nodeContext" : "buildConfiguration.getKnownBaseRegistryCredentials()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 169,
      "startColumnNumber" : 22,
      "endLineNumber" : 169,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 169,
        "startColumnNumber" : 22,
        "endLineNumber" : 169,
        "endColumnNumber" : 77
      },
      "nodeContext" : "buildConfiguration.getTargetImageCredentialHelperName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 170,
      "startColumnNumber" : 22,
      "endLineNumber" : 170,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 170,
        "startColumnNumber" : 22,
        "endLineNumber" : 170,
        "endColumnNumber" : 76
      },
      "nodeContext" : "buildConfiguration.getKnownTargetRegistryCredentials()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 171,
      "startColumnNumber" : 51,
      "endLineNumber" : 171,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 171,
        "startColumnNumber" : 51,
        "endLineNumber" : 171,
        "endColumnNumber" : 87
      },
      "nodeContext" : "buildConfiguration.getTargetFormat()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 172,
      "startColumnNumber" : 22,
      "endLineNumber" : 172,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 172,
        "startColumnNumber" : 22,
        "endLineNumber" : 172,
        "endColumnNumber" : 81
      },
      "nodeContext" : "buildConfiguration.getApplicationLayersCacheConfiguration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 173,
      "startColumnNumber" : 22,
      "endLineNumber" : 173,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 173,
        "startColumnNumber" : 22,
        "endLineNumber" : 173,
        "endColumnNumber" : 79
      },
      "nodeContext" : "buildConfiguration.getBaseImageLayersCacheConfiguration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 174,
      "startColumnNumber" : 22,
      "endLineNumber" : 174,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 174,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 68
      },
      "nodeContext" : "buildConfiguration.getContainerConfiguration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 174,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getContainerConfiguration())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 174,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getContainerConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 174,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertNull(buildConfiguration.getContainerConfiguration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 175,
      "startColumnNumber" : 24,
      "endLineNumber" : 175,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 175,
        "startColumnNumber" : 24,
        "endLineNumber" : 175,
        "endColumnNumber" : 60
      },
      "nodeContext" : "buildConfiguration.getTargetFormat()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 176,
      "startColumnNumber" : 23,
      "endLineNumber" : 176,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 176,
        "startColumnNumber" : 23,
        "endLineNumber" : 176,
        "endColumnNumber" : 70
      },
      "nodeContext" : "buildConfiguration.getAllowInsecureRegistries()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 176,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 176,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 176,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  }, {
    "nodeContext" : "buildConfiguration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 177,
      "startColumnNumber" : 49,
      "endLineNumber" : 177,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 177,
        "startColumnNumber" : 49,
        "endLineNumber" : 177,
        "endColumnNumber" : 92
      },
      "nodeContext" : "buildConfiguration.getLayerConfigurations()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(targetImageConfiguration).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.configuration.BuildConfiguration"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 167,
    "startColumnNumber" : 22,
    "endLineNumber" : 167,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 168,
    "startColumnNumber" : 22,
    "endLineNumber" : 168,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 169,
    "startColumnNumber" : 22,
    "endLineNumber" : 169,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 170,
    "startColumnNumber" : 22,
    "endLineNumber" : 170,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 171,
    "startColumnNumber" : 51,
    "endLineNumber" : 171,
    "endColumnNumber" : 69
  }, {
    "charLength" : 18,
    "startLineNumber" : 172,
    "startColumnNumber" : 22,
    "endLineNumber" : 172,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 173,
    "startColumnNumber" : 22,
    "endLineNumber" : 173,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 174,
    "startColumnNumber" : 22,
    "endLineNumber" : 174,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 175,
    "startColumnNumber" : 24,
    "endLineNumber" : 175,
    "endColumnNumber" : 42
  }, {
    "charLength" : 18,
    "startLineNumber" : 176,
    "startColumnNumber" : 23,
    "endLineNumber" : 176,
    "endColumnNumber" : 41
  }, {
    "charLength" : 18,
    "startLineNumber" : 177,
    "startColumnNumber" : 49,
    "endLineNumber" : 177,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  } ]
}