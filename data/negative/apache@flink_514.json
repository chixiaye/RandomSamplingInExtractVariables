{
  "id" : 514,
  "expression" : "33L",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-tests/src/test/java/org/apache/flink/test/state/SavepointStateBackendSwitchTestBase.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "33L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 186,
      "startColumnNumber" : 21,
      "endLineNumber" : 186,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mapState.put(33L,33L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3360,
        "startLineNumber" : 173,
        "startColumnNumber" : 29,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3816,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void takeSavepoint(CheckpointableKeyedStateBackend<String> keyedBackend,File pathToWrite,MapStateDescriptor<Long,Long> stateDescr,ValueStateDescriptor<Long> valueStateDescriptor,ListStateDescriptor<Long> listStateDescriptor,Integer namespace1,Integer namespace2,Integer namespace3,Integer namespace4) throws Exception {\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "33L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 186,
      "startColumnNumber" : 26,
      "endLineNumber" : 186,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mapState.put(33L,33L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3360,
        "startLineNumber" : 173,
        "startColumnNumber" : 29,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3816,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void takeSavepoint(CheckpointableKeyedStateBackend<String> keyedBackend,File pathToWrite,MapStateDescriptor<Long,Long> stateDescr,ValueStateDescriptor<Long> valueStateDescriptor,ListStateDescriptor<Long> listStateDescriptor,Integer namespace1,Integer namespace2,Integer namespace3,Integer namespace4) throws Exception {\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "33L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 205,
      "startColumnNumber" : 21,
      "endLineNumber" : 205,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mapState.put(33L,33L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3360,
        "startLineNumber" : 173,
        "startColumnNumber" : 29,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3816,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void takeSavepoint(CheckpointableKeyedStateBackend<String> keyedBackend,File pathToWrite,MapStateDescriptor<Long,Long> stateDescr,ValueStateDescriptor<Long> valueStateDescriptor,ListStateDescriptor<Long> listStateDescriptor,Integer namespace1,Integer namespace2,Integer namespace3,Integer namespace4) throws Exception {\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "33L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 205,
      "startColumnNumber" : 26,
      "endLineNumber" : 205,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 30
      },
      "nodeContext" : "mapState.put(33L,33L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3360,
        "startLineNumber" : 173,
        "startColumnNumber" : 29,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3816,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void takeSavepoint(CheckpointableKeyedStateBackend<String> keyedBackend,File pathToWrite,MapStateDescriptor<Long,Long> stateDescr,ValueStateDescriptor<Long> valueStateDescriptor,ListStateDescriptor<Long> listStateDescriptor,Integer namespace1,Integer namespace2,Integer namespace3,Integer namespace4) throws Exception {\n  InternalMapState<String,Integer,Long,Long> mapState=keyedBackend.createInternalState(IntSerializer.INSTANCE,stateDescr);\n  InternalValueState<String,Integer,Long> valueState=keyedBackend.createInternalState(IntSerializer.INSTANCE,valueStateDescriptor);\n  InternalListState<String,Integer,Long> listState=keyedBackend.createInternalState(IntSerializer.INSTANCE,listStateDescriptor);\n  keyedBackend.setCurrentKey(\"abc\");\n  mapState.setCurrentNamespace(namespace1);\n  mapState.put(33L,33L);\n  mapState.put(55L,55L);\n  mapState.setCurrentNamespace(namespace2);\n  mapState.put(22L,22L);\n  mapState.put(11L,11L);\n  listState.setCurrentNamespace(namespace2);\n  listState.add(4L);\n  listState.add(5L);\n  listState.add(6L);\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(44L,44L);\n  keyedBackend.setCurrentKey(\"mno\");\n  mapState.setCurrentNamespace(namespace3);\n  mapState.put(11L,11L);\n  mapState.put(22L,22L);\n  mapState.put(33L,33L);\n  mapState.put(44L,44L);\n  mapState.put(55L,55L);\n  valueState.setCurrentNamespace(namespace3);\n  valueState.update(1239L);\n  listState.setCurrentNamespace(namespace3);\n  listState.add(1L);\n  listState.add(2L);\n  listState.add(3L);\n  mapState.setCurrentNamespace(namespace4);\n  mapState.put(1L,1L);\n  Iterator<Map.Entry<Long,Long>> iterator=mapState.iterator();\n  while (iterator.hasNext()) {\n    iterator.next();\n    iterator.remove();\n  }\n  KeyGroupedInternalPriorityQueue<TimerHeapInternalTimer<String,Integer>> priorityQueue=keyedBackend.create(\"event-time\",new TimerSerializer<>(keyedBackend.getKeySerializer(),IntSerializer.INSTANCE));\n  priorityQueue.add(new TimerHeapInternalTimer<>(1234L,\"mno\",namespace3));\n  priorityQueue.add(new TimerHeapInternalTimer<>(2345L,\"mno\",namespace2));\n  priorityQueue.add(new TimerHeapInternalTimer<>(3456L,\"mno\",namespace3));\n  SnapshotStrategyRunner<KeyedStateHandle,? extends FullSnapshotResources<?>> savepointRunner=StreamOperatorStateHandler.prepareCanonicalSavepoint(keyedBackend,new CloseableRegistry());\n  RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot=savepointRunner.snapshot(0L,0L,new MemCheckpointStreamFactory(4 * 1024 * 1024),new CheckpointOptions(SavepointType.savepoint(SavepointFormatType.CANONICAL),CheckpointStorageLocationReference.getDefault()));\n  snapshot.run();\n  try (BufferedOutputStream bis=new BufferedOutputStream(new FileOutputStream(pathToWrite))){\n    InstantiationUtil.serializeObject(bis,snapshot.get());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mapState.put(33L,33L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 186,
    "startColumnNumber" : 21,
    "endLineNumber" : 186,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 186,
    "startColumnNumber" : 26,
    "endLineNumber" : 186,
    "endColumnNumber" : 29
  }, {
    "charLength" : 3,
    "startLineNumber" : 205,
    "startColumnNumber" : 21,
    "endLineNumber" : 205,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 205,
    "startColumnNumber" : 26,
    "endLineNumber" : 205,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  } ]
}