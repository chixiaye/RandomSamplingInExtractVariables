{
  "id" : 23,
  "expression" : "(Long)orig",
  "projectName" : "apache@kafka",
  "commitID" : "a5bb45c11ad7a68856d14c86184bc3488770aa43",
  "filePath" : "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/TimestampConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Long)orig",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 157,
      "startColumnNumber" : 32,
      "endLineNumber" : 157,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 157,
        "startColumnNumber" : 21,
        "endLineNumber" : 157,
        "endColumnNumber" : 43
      },
      "nodeContext" : "unixTime=(Long)orig",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Long unixTime=(Long)orig;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 154,
        "startColumnNumber" : 58,
        "endLineNumber" : 169,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!(orig instanceof Long))   throw new DataException(\"Expected Unix timestamp to be a Long, but found \" + orig.getClass());\n  Long unixTime=(Long)orig;\nswitch (config.unixPrecision) {\ncase UNIX_PRECISION_SECONDS:    return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.SECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_MICROS:  return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.MICROSECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_NANOS:return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.NANOSECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_MILLIS:default:return Timestamp.toLogical(Timestamp.SCHEMA,unixTime);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Date toRaw(Config config,Object orig){\n  if (!(orig instanceof Long))   throw new DataException(\"Expected Unix timestamp to be a Long, but found \" + orig.getClass());\n  Long unixTime=(Long)orig;\nswitch (config.unixPrecision) {\ncase UNIX_PRECISION_SECONDS:    return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.SECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_MICROS:  return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.MICROSECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_NANOS:return Timestamp.toLogical(Timestamp.SCHEMA,TimeUnit.NANOSECONDS.toMillis(unixTime));\ncase UNIX_PRECISION_MILLIS:default:return Timestamp.toLogical(Timestamp.SCHEMA,unixTime);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Long unixTime=(Long)orig;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 157,
    "startColumnNumber" : 32,
    "endLineNumber" : 157,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}