{
  "id" : 346,
  "expression" : "difference",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/SliderStrategy.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "difference",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 63,
      "startColumnNumber" : 32,
      "endLineNumber" : 63,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "difference >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 63,
        "startColumnNumber" : 25,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 61,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public int progressOf(final double value){\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "difference >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "difference",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 63,
      "startColumnNumber" : 60,
      "endLineNumber" : 63,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 63,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 81
      },
      "nodeContext" : "difference / rightGap",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 50,
        "endLineNumber" : 63,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Math.sqrt(difference / rightGap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 63,
        "startColumnNumber" : 25,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 61,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public int progressOf(final double value){\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 50,
        "endLineNumber" : 63,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Math.sqrt(difference / rightGap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "difference",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 64,
      "startColumnNumber" : 42,
      "endLineNumber" : 64,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 62
      },
      "nodeContext" : "difference / leftGap",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 64,
        "startColumnNumber" : 33,
        "endLineNumber" : 64,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Math.abs(difference / leftGap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 64,
        "startColumnNumber" : 23,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "-Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 63,
        "startColumnNumber" : 25,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 61,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public int progressOf(final double value){\n  final double difference=value - center;\n  final double root=difference >= 0 ? Math.sqrt(difference / rightGap) : -Math.sqrt(Math.abs(difference / leftGap));\n  final double offset=Math.round(root * centerProgress);\n  return (int)(centerProgress + offset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "-Math.sqrt(Math.abs(difference / leftGap))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 63,
    "startColumnNumber" : 32,
    "endLineNumber" : 63,
    "endColumnNumber" : 42
  }, {
    "charLength" : 10,
    "startLineNumber" : 63,
    "startColumnNumber" : 60,
    "endLineNumber" : 63,
    "endColumnNumber" : 70
  }, {
    "charLength" : 10,
    "startLineNumber" : 64,
    "startColumnNumber" : 42,
    "endLineNumber" : 64,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}