{
  "id" : 54,
  "expression" : "sorter",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/sorting/SortingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sorter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 64,
      "startColumnNumber" : 8,
      "endLineNumber" : 64,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "sorter.sort(copy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sorter.sort(copy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 67,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  InplaceSort sorter=algorithm.getSortingAlgorithm();\n  int[] values=TestUtils.randomIntegerArray(size,0,51);\n  int[] copy=values.clone();\n  Arrays.sort(values);\n  sorter.sort(copy);\n  assertThat(values).isEqualTo(copy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (SortingAlgorithm algorithm : sortingAlgorithms) {\n  InplaceSort sorter=algorithm.getSortingAlgorithm();\n  int[] values=TestUtils.randomIntegerArray(size,0,51);\n  int[] copy=values.clone();\n  Arrays.sort(values);\n  sorter.sort(copy);\n  assertThat(values).isEqualTo(copy);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 57,
        "startColumnNumber" : 44,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  SortingAlgorithm algorithm : sortingAlgorithms) {\n    InplaceSort sorter=algorithm.getSortingAlgorithm();\n    int[] values=TestUtils.randomIntegerArray(size,0,51);\n    int[] copy=values.clone();\n    Arrays.sort(values);\n    sorter.sort(copy);\n    assertThat(values).isEqualTo(copy);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int size=0; size < 1000; size++) {\n  for (  SortingAlgorithm algorithm : sortingAlgorithms) {\n    InplaceSort sorter=algorithm.getSortingAlgorithm();\n    int[] values=TestUtils.randomIntegerArray(size,0,51);\n    int[] copy=values.clone();\n    Arrays.sort(values);\n    sorter.sort(copy);\n    assertThat(values).isEqualTo(copy);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 56,
        "startColumnNumber" : 66,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int size=0; size < 1000; size++) {\n    for (    SortingAlgorithm algorithm : sortingAlgorithms) {\n      InplaceSort sorter=algorithm.getSortingAlgorithm();\n      int[] values=TestUtils.randomIntegerArray(size,0,51);\n      int[] copy=values.clone();\n      Arrays.sort(values);\n      sorter.sort(copy);\n      assertThat(values).isEqualTo(copy);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void verifySortingAlgorithms_smallPositiveIntegersOnly(){\n  for (int size=0; size < 1000; size++) {\n    for (    SortingAlgorithm algorithm : sortingAlgorithms) {\n      InplaceSort sorter=algorithm.getSortingAlgorithm();\n      int[] values=TestUtils.randomIntegerArray(size,0,51);\n      int[] copy=values.clone();\n      Arrays.sort(values);\n      sorter.sort(copy);\n      assertThat(values).isEqualTo(copy);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sorter.sort(copy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.sorting.InplaceSort"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 64,
    "startColumnNumber" : 8,
    "endLineNumber" : 64,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}