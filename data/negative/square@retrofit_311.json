{
  "id" : 311,
  "expression" : "!MIME_TYPE.equalsIgnoreCase(body.mimeType())",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!MIME_TYPE.equalsIgnoreCase(body.mimeType())",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 39,
      "startColumnNumber" : 8,
      "endLineNumber" : 39,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!MIME_TYPE.equalsIgnoreCase(body.mimeType())) {\n  throw new ConversionException(\"Expected a proto but was: \" + body.mimeType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 30,
        "startColumnNumber" : 90,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(type instanceof Class<?>)) {\n    throw new IllegalArgumentException(\"Expected a raw Class<?> but was \" + type);\n  }\n  Class<?> c=(Class<?>)type;\n  if (!Message.class.isAssignableFrom(c)) {\n    throw new IllegalArgumentException(\"Expected a proto message but was \" + c.getName());\n  }\n  if (!MIME_TYPE.equalsIgnoreCase(body.mimeType())) {\n    throw new ConversionException(\"Expected a proto but was: \" + body.mimeType());\n  }\n  InputStream in=null;\n  try {\n    in=body.in();\n    return wire.parseFrom(in,(Class<Message>)c);\n  }\n catch (  IOException e) {\n    throw new ConversionException(e);\n  }\n finally {\n    if (in != null) {\n      try {\n        in.close();\n      }\n catch (      IOException ignored) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public Object fromBody(TypedInput body,Type type) throws ConversionException {\n  if (!(type instanceof Class<?>)) {\n    throw new IllegalArgumentException(\"Expected a raw Class<?> but was \" + type);\n  }\n  Class<?> c=(Class<?>)type;\n  if (!Message.class.isAssignableFrom(c)) {\n    throw new IllegalArgumentException(\"Expected a proto message but was \" + c.getName());\n  }\n  if (!MIME_TYPE.equalsIgnoreCase(body.mimeType())) {\n    throw new ConversionException(\"Expected a proto but was: \" + body.mimeType());\n  }\n  InputStream in=null;\n  try {\n    in=body.in();\n    return wire.parseFrom(in,(Class<Message>)c);\n  }\n catch (  IOException e) {\n    throw new ConversionException(e);\n  }\n finally {\n    if (in != null) {\n      try {\n        in.close();\n      }\n catch (      IOException ignored) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!MIME_TYPE.equalsIgnoreCase(body.mimeType())) {\n  throw new ConversionException(\"Expected a proto but was: \" + body.mimeType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 39,
    "startColumnNumber" : 8,
    "endLineNumber" : 39,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}