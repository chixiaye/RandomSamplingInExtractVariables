{
  "id" : 18,
  "expression" : "parameterizedType.getActualTypeArguments().length",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/util/ReflectionUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parameterizedType.getActualTypeArguments().length",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 188,
      "startColumnNumber" : 37,
      "endLineNumber" : 188,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 188,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new FullTypeInfo[parameterizedType.getActualTypeArguments().length]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 187,
        "startColumnNumber" : 27,
        "endLineNumber" : 188,
        "endColumnNumber" : 87
      },
      "nodeContext" : "templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 187,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 88
      },
      "nodeContext" : "FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 184,
        "startColumnNumber" : 47,
        "endLineNumber" : 196,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n  for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n    templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n  }\n  return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof ParameterizedType) {\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n  for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n    templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n  }\n  return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n}\n else {\n  return new FullTypeInfo((Class<?>)type,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 183,
        "startColumnNumber" : 62,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n    for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n      templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n    }\n    return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n  }\n else {\n    return new FullTypeInfo((Class<?>)type,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Extract the full type information from the given type.\n * @param type to be analyzed\n * @return Full type information describing the given type\n */\npublic static FullTypeInfo getFullTemplateType(Type type){\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n    for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n      templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n    }\n    return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n  }\n else {\n    return new FullTypeInfo((Class<?>)type,null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 188,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new FullTypeInfo[parameterizedType.getActualTypeArguments().length]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "parameterizedType.getActualTypeArguments().length",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 190,
      "startColumnNumber" : 32,
      "endLineNumber" : 190,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 190,
        "startColumnNumber" : 28,
        "endLineNumber" : 190,
        "endColumnNumber" : 81
      },
      "nodeContext" : "i < parameterizedType.getActualTypeArguments().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 190,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n  templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 184,
        "startColumnNumber" : 47,
        "endLineNumber" : 196,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n  for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n    templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n  }\n  return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof ParameterizedType) {\n  ParameterizedType parameterizedType=(ParameterizedType)type;\n  FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n  for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n    templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n  }\n  return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n}\n else {\n  return new FullTypeInfo((Class<?>)type,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 183,
        "startColumnNumber" : 62,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n    for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n      templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n    }\n    return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n  }\n else {\n    return new FullTypeInfo((Class<?>)type,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Extract the full type information from the given type.\n * @param type to be analyzed\n * @return Full type information describing the given type\n */\npublic static FullTypeInfo getFullTemplateType(Type type){\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    FullTypeInfo[] templateTypeInfos=new FullTypeInfo[parameterizedType.getActualTypeArguments().length];\n    for (int i=0; i < parameterizedType.getActualTypeArguments().length; i++) {\n      templateTypeInfos[i]=getFullTemplateType(parameterizedType.getActualTypeArguments()[i]);\n    }\n    return new FullTypeInfo((Class<?>)parameterizedType.getRawType(),templateTypeInfos);\n  }\n else {\n    return new FullTypeInfo((Class<?>)type,null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 190,
        "startColumnNumber" : 28,
        "endLineNumber" : 190,
        "endColumnNumber" : 81
      },
      "nodeContext" : "i < parameterizedType.getActualTypeArguments().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 188,
    "startColumnNumber" : 37,
    "endLineNumber" : 188,
    "endColumnNumber" : 86
  }, {
    "charLength" : 49,
    "startLineNumber" : 190,
    "startColumnNumber" : 32,
    "endLineNumber" : 190,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}