{
  "id" : 96,
  "expression" : "1",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/type/ByteTypeHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 19,
      "startColumnNumber" : 34,
      "endLineNumber" : 19,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 54
      },
      "nodeContext" : "TYPE_HANDLER.setParameter(ps,1,(byte)100,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 55
      },
      "nodeContext" : "TYPE_HANDLER.setParameter(ps,1,(byte)100,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 13,
        "startColumnNumber" : 23,
        "endLineNumber" : 21,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  mockery.checking(new Expectations(){\n{\n      one(ps).setByte(with(any(int.class)),with(any(byte.class)));\n    }\n  }\n);\n  TYPE_HANDLER.setParameter(ps,1,(byte)100,null);\n  mockery.assertIsSatisfied();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldSetParameter() throws Exception {\n  mockery.checking(new Expectations(){\n{\n      one(ps).setByte(with(any(int.class)),with(any(byte.class)));\n    }\n  }\n);\n  TYPE_HANDLER.setParameter(ps,1,(byte)100,null);\n  mockery.assertIsSatisfied();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 55
      },
      "nodeContext" : "TYPE_HANDLER.setParameter(ps,1,(byte)100,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 19,
    "startColumnNumber" : 34,
    "endLineNumber" : 19,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}