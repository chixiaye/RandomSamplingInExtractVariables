{
  "id" : 208,
  "expression" : "\"Hello world\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "fece0dc4b8bcbb870c5a524719a30a93529deb7f",
  "filePath" : "core-java-io/src/test/java/com/baeldung/filechannel/FileChannelUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Hello world\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 64,
      "startColumnNumber" : 25,
      "endLineNumber" : 64,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"Hello world\",fileContent)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"Hello world\",fileContent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 50,
        "startColumnNumber" : 53,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ByteArrayOutputStream out=new ByteArrayOutputStream();FileInputStream fin=new FileInputStream(\"src/test/resources/test_read.in\");FileChannel channel=fin.getChannel()){\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 46,
        "startColumnNumber" : 103,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (ByteArrayOutputStream out=new ByteArrayOutputStream();FileInputStream fin=new FileInputStream(\"src/test/resources/test_read.in\");FileChannel channel=fin.getChannel()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFile_whenReadWithFileChannelUsingFileInputStream_thenCorrect() throws IOException {\n  try (ByteArrayOutputStream out=new ByteArrayOutputStream();FileInputStream fin=new FileInputStream(\"src/test/resources/test_read.in\");FileChannel channel=fin.getChannel()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"Hello world\",fileContent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 64,
    "startColumnNumber" : 25,
    "endLineNumber" : 64,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}