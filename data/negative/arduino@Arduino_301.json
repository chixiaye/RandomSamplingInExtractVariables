{
  "id" : 301,
  "expression" : "DEFAULT_INDEX_FILE_NAME.equals(name)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DEFAULT_INDEX_FILE_NAME.equals(name)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 81,
      "startColumnNumber" : 16,
      "endLineNumber" : 81,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 81,
        "endColumnNumber" : 52
      },
      "nodeContext" : "!DEFAULT_INDEX_FILE_NAME.equals(name)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 81,
        "endColumnNumber" : 115
      },
      "nodeContext" : "!DEFAULT_INDEX_FILE_NAME.equals(name) && name.startsWith(\"package_\") && name.endsWith(\"_index.json\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 116
      },
      "nodeContext" : "return !DEFAULT_INDEX_FILE_NAME.equals(name) && name.startsWith(\"package_\") && name.endsWith(\"_index.json\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 80,
        "startColumnNumber" : 52,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return !DEFAULT_INDEX_FILE_NAME.equals(name) && name.startsWith(\"package_\") && name.endsWith(\"_index.json\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public boolean accept(File file,String name){\n  return !DEFAULT_INDEX_FILE_NAME.equals(name) && name.startsWith(\"package_\") && name.endsWith(\"_index.json\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 116
      },
      "nodeContext" : "return !DEFAULT_INDEX_FILE_NAME.equals(name) && name.startsWith(\"package_\") && name.endsWith(\"_index.json\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 81,
    "startColumnNumber" : 16,
    "endLineNumber" : 81,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}