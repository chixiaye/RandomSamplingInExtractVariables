{
  "id" : 935,
  "expression" : "oldMeta",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java",
  "occurrences" : 35,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 209,
      "startColumnNumber" : 12,
      "endLineNumber" : 209,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 27
      },
      "nodeContext" : "oldMeta == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 46
      },
      "nodeContext" : "oldMeta == null && newMeta == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta == null && newMeta == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 46
      },
      "nodeContext" : "oldMeta == null && newMeta == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 213,
      "startColumnNumber" : 12,
      "endLineNumber" : 213,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 27
      },
      "nodeContext" : "oldMeta != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 46
      },
      "nodeContext" : "oldMeta != null && newMeta != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 46
      },
      "nodeContext" : "oldMeta != null && newMeta != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 214,
      "startColumnNumber" : 32,
      "endLineNumber" : 214,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 214,
        "startColumnNumber" : 32,
        "endLineNumber" : 214,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.getPackageName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 214,
        "startColumnNumber" : 17,
        "endLineNumber" : 214,
        "endColumnNumber" : 83
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 214,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n  announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 214,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 215,
      "startColumnNumber" : 75,
      "endLineNumber" : 215,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 215,
        "startColumnNumber" : 75,
        "endLineNumber" : 215,
        "endColumnNumber" : 99
      },
      "nodeContext" : "oldMeta.getPackageName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 215,
        "startColumnNumber" : 43,
        "endLineNumber" : 216,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 215,
        "startColumnNumber" : 16,
        "endLineNumber" : 216,
        "endColumnNumber" : 63
      },
      "nodeContext" : "announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 215,
        "startColumnNumber" : 16,
        "endLineNumber" : 216,
        "endColumnNumber" : 64
      },
      "nodeContext" : "announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 214,
        "startColumnNumber" : 85,
        "endLineNumber" : 217,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n  announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 215,
        "startColumnNumber" : 75,
        "endLineNumber" : 215,
        "endColumnNumber" : 99
      },
      "nodeContext" : "oldMeta.getPackageName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 218,
      "startColumnNumber" : 32,
      "endLineNumber" : 218,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 218,
        "startColumnNumber" : 32,
        "endLineNumber" : 218,
        "endColumnNumber" : 50
      },
      "nodeContext" : "oldMeta.getLabel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 218,
        "startColumnNumber" : 17,
        "endLineNumber" : 218,
        "endColumnNumber" : 71
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 218,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 71
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 218,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n  announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 218,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 71
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 219,
      "startColumnNumber" : 72,
      "endLineNumber" : 219,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 219,
        "startColumnNumber" : 72,
        "endLineNumber" : 219,
        "endColumnNumber" : 90
      },
      "nodeContext" : "oldMeta.getLabel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 219,
        "startColumnNumber" : 43,
        "endLineNumber" : 220,
        "endColumnNumber" : 56
      },
      "nodeContext" : "\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 220,
        "endColumnNumber" : 57
      },
      "nodeContext" : "announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 220,
        "endColumnNumber" : 58
      },
      "nodeContext" : "announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 218,
        "startColumnNumber" : 73,
        "endLineNumber" : 221,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 218,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n  announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 219,
        "startColumnNumber" : 72,
        "endLineNumber" : 219,
        "endColumnNumber" : 90
      },
      "nodeContext" : "oldMeta.getLabel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 222,
      "startColumnNumber" : 32,
      "endLineNumber" : 222,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 222,
        "startColumnNumber" : 32,
        "endLineNumber" : 222,
        "endColumnNumber" : 49
      },
      "nodeContext" : "oldMeta.getIcon()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 222,
        "startColumnNumber" : 17,
        "endLineNumber" : 222,
        "endColumnNumber" : 69
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 222,
        "startColumnNumber" : 16,
        "endLineNumber" : 222,
        "endColumnNumber" : 69
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n  announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 222,
        "startColumnNumber" : 16,
        "endLineNumber" : 222,
        "endColumnNumber" : 69
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 223,
      "startColumnNumber" : 79,
      "endLineNumber" : 223,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 79,
        "endLineNumber" : 223,
        "endColumnNumber" : 96
      },
      "nodeContext" : "oldMeta.getIcon()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 223,
        "startColumnNumber" : 43,
        "endLineNumber" : 224,
        "endColumnNumber" : 55
      },
      "nodeContext" : "\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 223,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 56
      },
      "nodeContext" : "announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 223,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 57
      },
      "nodeContext" : "announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 222,
        "startColumnNumber" : 71,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n  announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 79,
        "endLineNumber" : 223,
        "endColumnNumber" : 96
      },
      "nodeContext" : "oldMeta.getIcon()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 226,
      "startColumnNumber" : 32,
      "endLineNumber" : 226,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 226,
        "startColumnNumber" : 32,
        "endLineNumber" : 226,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.getVersionName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 226,
        "startColumnNumber" : 17,
        "endLineNumber" : 226,
        "endColumnNumber" : 83
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 226,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 226,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n  Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 226,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 227,
      "startColumnNumber" : 63,
      "endLineNumber" : 227,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 227,
        "startColumnNumber" : 63,
        "endLineNumber" : 227,
        "endColumnNumber" : 87
      },
      "nodeContext" : "oldMeta.getVersionName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 227,
        "startColumnNumber" : 25,
        "endLineNumber" : 228,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 226,
        "startColumnNumber" : 85,
        "endLineNumber" : 229,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 226,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n  Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 227,
        "startColumnNumber" : 63,
        "endLineNumber" : 227,
        "endColumnNumber" : 87
      },
      "nodeContext" : "oldMeta.getVersionName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 230,
      "startColumnNumber" : 40,
      "endLineNumber" : 230,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 230,
        "startColumnNumber" : 40,
        "endLineNumber" : 230,
        "endColumnNumber" : 64
      },
      "nodeContext" : "oldMeta.getVersionCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 230,
        "startColumnNumber" : 23,
        "endLineNumber" : 230,
        "endColumnNumber" : 64
      },
      "nodeContext" : "oldVersionCode=oldMeta.getVersionCode()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 230,
        "startColumnNumber" : 12,
        "endLineNumber" : 230,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final Long oldVersionCode=oldMeta.getVersionCode();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 230,
        "startColumnNumber" : 12,
        "endLineNumber" : 230,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final Long oldVersionCode=oldMeta.getVersionCode();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 241,
      "startColumnNumber" : 32,
      "endLineNumber" : 241,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 241,
        "startColumnNumber" : 32,
        "endLineNumber" : 241,
        "endColumnNumber" : 60
      },
      "nodeContext" : "oldMeta.getInstallLocation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 241,
        "startColumnNumber" : 17,
        "endLineNumber" : 241,
        "endColumnNumber" : 91
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 241,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 91
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 241,
        "startColumnNumber" : 12,
        "endLineNumber" : 244,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n  announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 241,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 91
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 242,
      "startColumnNumber" : 79,
      "endLineNumber" : 242,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 242,
        "startColumnNumber" : 79,
        "endLineNumber" : 242,
        "endColumnNumber" : 107
      },
      "nodeContext" : "oldMeta.getInstallLocation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 242,
        "startColumnNumber" : 43,
        "endLineNumber" : 243,
        "endColumnNumber" : 66
      },
      "nodeContext" : "\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 242,
        "startColumnNumber" : 16,
        "endLineNumber" : 243,
        "endColumnNumber" : 67
      },
      "nodeContext" : "announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 242,
        "startColumnNumber" : 16,
        "endLineNumber" : 243,
        "endColumnNumber" : 68
      },
      "nodeContext" : "announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 241,
        "startColumnNumber" : 93,
        "endLineNumber" : 244,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 241,
        "startColumnNumber" : 12,
        "endLineNumber" : 244,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n  announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 242,
        "startColumnNumber" : 79,
        "endLineNumber" : 242,
        "endColumnNumber" : 107
      },
      "nodeContext" : "oldMeta.getInstallLocation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 245,
      "startColumnNumber" : 32,
      "endLineNumber" : 245,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 245,
        "startColumnNumber" : 32,
        "endLineNumber" : 245,
        "endColumnNumber" : 58
      },
      "nodeContext" : "oldMeta.getMinSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 245,
        "startColumnNumber" : 17,
        "endLineNumber" : 245,
        "endColumnNumber" : 87
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 87
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 245,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n  announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 87
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 246,
      "startColumnNumber" : 76,
      "endLineNumber" : 246,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 246,
        "startColumnNumber" : 76,
        "endLineNumber" : 246,
        "endColumnNumber" : 102
      },
      "nodeContext" : "oldMeta.getMinSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 246,
        "startColumnNumber" : 43,
        "endLineNumber" : 247,
        "endColumnNumber" : 64
      },
      "nodeContext" : "\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 246,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 65
      },
      "nodeContext" : "announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 246,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 66
      },
      "nodeContext" : "announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 245,
        "startColumnNumber" : 89,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 245,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n  announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 246,
        "startColumnNumber" : 76,
        "endLineNumber" : 246,
        "endColumnNumber" : 102
      },
      "nodeContext" : "oldMeta.getMinSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 249,
      "startColumnNumber" : 32,
      "endLineNumber" : 249,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 249,
        "endColumnNumber" : 61
      },
      "nodeContext" : "oldMeta.getTargetSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 249,
        "startColumnNumber" : 17,
        "endLineNumber" : 249,
        "endColumnNumber" : 93
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 249,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n  announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 249,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 250,
      "startColumnNumber" : 79,
      "endLineNumber" : 250,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 250,
        "startColumnNumber" : 79,
        "endLineNumber" : 250,
        "endColumnNumber" : 108
      },
      "nodeContext" : "oldMeta.getTargetSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 250,
        "startColumnNumber" : 43,
        "endLineNumber" : 251,
        "endColumnNumber" : 67
      },
      "nodeContext" : "\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 251,
        "endColumnNumber" : 68
      },
      "nodeContext" : "announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 251,
        "endColumnNumber" : 69
      },
      "nodeContext" : "announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 249,
        "startColumnNumber" : 95,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n  announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 250,
        "startColumnNumber" : 79,
        "endLineNumber" : 250,
        "endColumnNumber" : 108
      },
      "nodeContext" : "oldMeta.getTargetSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 253,
      "startColumnNumber" : 32,
      "endLineNumber" : 253,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 253,
        "startColumnNumber" : 32,
        "endLineNumber" : 253,
        "endColumnNumber" : 58
      },
      "nodeContext" : "oldMeta.getMaxSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 253,
        "startColumnNumber" : 17,
        "endLineNumber" : 253,
        "endColumnNumber" : 87
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 253,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 87
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n  announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 253,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 87
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 254,
      "startColumnNumber" : 76,
      "endLineNumber" : 254,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 254,
        "startColumnNumber" : 76,
        "endLineNumber" : 254,
        "endColumnNumber" : 102
      },
      "nodeContext" : "oldMeta.getMaxSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 254,
        "startColumnNumber" : 43,
        "endLineNumber" : 255,
        "endColumnNumber" : 64
      },
      "nodeContext" : "\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 254,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 65
      },
      "nodeContext" : "announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 254,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 66
      },
      "nodeContext" : "announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 253,
        "startColumnNumber" : 89,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n  announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 254,
        "startColumnNumber" : 76,
        "endLineNumber" : 254,
        "endColumnNumber" : 102
      },
      "nodeContext" : "oldMeta.getMaxSdkVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 257,
      "startColumnNumber" : 32,
      "endLineNumber" : 257,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 257,
        "startColumnNumber" : 32,
        "endLineNumber" : 257,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.getGlEsVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 257,
        "startColumnNumber" : 17,
        "endLineNumber" : 257,
        "endColumnNumber" : 104
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 257,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 104
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 257,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n  announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 257,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 104
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 259,
      "startColumnNumber" : 58,
      "endLineNumber" : 259,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 259,
        "startColumnNumber" : 58,
        "endLineNumber" : 259,
        "endColumnNumber" : 82
      },
      "nodeContext" : "oldMeta.getGlEsVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 259,
        "startColumnNumber" : 26,
        "endLineNumber" : 259,
        "endColumnNumber" : 83
      },
      "nodeContext" : "GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 258,
        "startColumnNumber" : 43,
        "endLineNumber" : 260,
        "endColumnNumber" : 95
      },
      "nodeContext" : "\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 96
      },
      "nodeContext" : "announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 97
      },
      "nodeContext" : "announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 257,
        "startColumnNumber" : 106,
        "endLineNumber" : 261,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 257,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n  announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 259,
        "startColumnNumber" : 26,
        "endLineNumber" : 259,
        "endColumnNumber" : 83
      },
      "nodeContext" : "GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 262,
      "startColumnNumber" : 32,
      "endLineNumber" : 262,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 262,
        "startColumnNumber" : 32,
        "endLineNumber" : 262,
        "endColumnNumber" : 54
      },
      "nodeContext" : "oldMeta.isAnyDensity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 262,
        "startColumnNumber" : 17,
        "endLineNumber" : 262,
        "endColumnNumber" : 79
      },
      "nodeContext" : "nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 262,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 79
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n  announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 262,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 79
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 263,
      "startColumnNumber" : 84,
      "endLineNumber" : 263,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 263,
        "startColumnNumber" : 84,
        "endLineNumber" : 263,
        "endColumnNumber" : 106
      },
      "nodeContext" : "oldMeta.isAnyDensity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 263,
        "startColumnNumber" : 43,
        "endLineNumber" : 264,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 263,
        "startColumnNumber" : 16,
        "endLineNumber" : 264,
        "endColumnNumber" : 61
      },
      "nodeContext" : "announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 263,
        "startColumnNumber" : 16,
        "endLineNumber" : 264,
        "endColumnNumber" : 62
      },
      "nodeContext" : "announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 262,
        "startColumnNumber" : 81,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n  announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 263,
        "startColumnNumber" : 84,
        "endLineNumber" : 263,
        "endColumnNumber" : 106
      },
      "nodeContext" : "oldMeta.isAnyDensity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 266,
      "startColumnNumber" : 32,
      "endLineNumber" : 266,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 266,
        "startColumnNumber" : 32,
        "endLineNumber" : 266,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.isSmallScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 266,
        "startColumnNumber" : 17,
        "endLineNumber" : 266,
        "endColumnNumber" : 83
      },
      "nodeContext" : "nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 266,
        "startColumnNumber" : 16,
        "endLineNumber" : 266,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 266,
        "startColumnNumber" : 12,
        "endLineNumber" : 269,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n  announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 266,
        "startColumnNumber" : 16,
        "endLineNumber" : 266,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 267,
      "startColumnNumber" : 86,
      "endLineNumber" : 267,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 267,
        "startColumnNumber" : 86,
        "endLineNumber" : 267,
        "endColumnNumber" : 110
      },
      "nodeContext" : "oldMeta.isSmallScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 267,
        "startColumnNumber" : 43,
        "endLineNumber" : 268,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 267,
        "startColumnNumber" : 16,
        "endLineNumber" : 268,
        "endColumnNumber" : 63
      },
      "nodeContext" : "announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 267,
        "startColumnNumber" : 16,
        "endLineNumber" : 268,
        "endColumnNumber" : 64
      },
      "nodeContext" : "announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 266,
        "startColumnNumber" : 85,
        "endLineNumber" : 269,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 266,
        "startColumnNumber" : 12,
        "endLineNumber" : 269,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n  announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 267,
        "startColumnNumber" : 86,
        "endLineNumber" : 267,
        "endColumnNumber" : 110
      },
      "nodeContext" : "oldMeta.isSmallScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 270,
      "startColumnNumber" : 32,
      "endLineNumber" : 270,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 270,
        "startColumnNumber" : 32,
        "endLineNumber" : 270,
        "endColumnNumber" : 57
      },
      "nodeContext" : "oldMeta.isNormalScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 270,
        "startColumnNumber" : 17,
        "endLineNumber" : 270,
        "endColumnNumber" : 85
      },
      "nodeContext" : "nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 270,
        "startColumnNumber" : 16,
        "endLineNumber" : 270,
        "endColumnNumber" : 85
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 270,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n  announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 270,
        "startColumnNumber" : 16,
        "endLineNumber" : 270,
        "endColumnNumber" : 85
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 271,
      "startColumnNumber" : 87,
      "endLineNumber" : 271,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 271,
        "startColumnNumber" : 87,
        "endLineNumber" : 271,
        "endColumnNumber" : 112
      },
      "nodeContext" : "oldMeta.isNormalScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 271,
        "startColumnNumber" : 43,
        "endLineNumber" : 272,
        "endColumnNumber" : 63
      },
      "nodeContext" : "\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 272,
        "endColumnNumber" : 64
      },
      "nodeContext" : "announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 272,
        "endColumnNumber" : 65
      },
      "nodeContext" : "announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 270,
        "startColumnNumber" : 87,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 270,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n  announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 271,
        "startColumnNumber" : 87,
        "endLineNumber" : 271,
        "endColumnNumber" : 112
      },
      "nodeContext" : "oldMeta.isNormalScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 274,
      "startColumnNumber" : 32,
      "endLineNumber" : 274,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 274,
        "startColumnNumber" : 32,
        "endLineNumber" : 274,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.isLargeScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 274,
        "startColumnNumber" : 17,
        "endLineNumber" : 274,
        "endColumnNumber" : 83
      },
      "nodeContext" : "nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 274,
        "startColumnNumber" : 16,
        "endLineNumber" : 274,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 274,
        "startColumnNumber" : 12,
        "endLineNumber" : 277,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n  announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 274,
        "startColumnNumber" : 16,
        "endLineNumber" : 274,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 275,
      "startColumnNumber" : 86,
      "endLineNumber" : 275,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 275,
        "startColumnNumber" : 86,
        "endLineNumber" : 275,
        "endColumnNumber" : 110
      },
      "nodeContext" : "oldMeta.isLargeScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 275,
        "startColumnNumber" : 43,
        "endLineNumber" : 276,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 275,
        "startColumnNumber" : 16,
        "endLineNumber" : 276,
        "endColumnNumber" : 63
      },
      "nodeContext" : "announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 275,
        "startColumnNumber" : 16,
        "endLineNumber" : 276,
        "endColumnNumber" : 64
      },
      "nodeContext" : "announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 274,
        "startColumnNumber" : 85,
        "endLineNumber" : 277,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 274,
        "startColumnNumber" : 12,
        "endLineNumber" : 277,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n  announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 275,
        "startColumnNumber" : 86,
        "endLineNumber" : 275,
        "endColumnNumber" : 110
      },
      "nodeContext" : "oldMeta.isLargeScreens()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 278,
      "startColumnNumber" : 32,
      "endLineNumber" : 278,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 278,
        "startColumnNumber" : 32,
        "endLineNumber" : 278,
        "endColumnNumber" : 60
      },
      "nodeContext" : "oldMeta.getUsesPermissions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 278,
        "startColumnNumber" : 17,
        "endLineNumber" : 278,
        "endColumnNumber" : 115
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 278,
        "endColumnNumber" : 115
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 281,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n  announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 278,
        "endColumnNumber" : 115
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 280,
      "startColumnNumber" : 42,
      "endLineNumber" : 280,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 280,
        "startColumnNumber" : 42,
        "endLineNumber" : 280,
        "endColumnNumber" : 70
      },
      "nodeContext" : "oldMeta.getUsesPermissions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 280,
        "startColumnNumber" : 26,
        "endLineNumber" : 280,
        "endColumnNumber" : 101
      },
      "nodeContext" : "describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 279,
        "startColumnNumber" : 43,
        "endLineNumber" : 280,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 279,
        "startColumnNumber" : 16,
        "endLineNumber" : 280,
        "endColumnNumber" : 102
      },
      "nodeContext" : "announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 279,
        "startColumnNumber" : 16,
        "endLineNumber" : 280,
        "endColumnNumber" : 103
      },
      "nodeContext" : "announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 278,
        "startColumnNumber" : 117,
        "endLineNumber" : 281,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 281,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n  announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 280,
        "startColumnNumber" : 26,
        "endLineNumber" : 280,
        "endColumnNumber" : 101
      },
      "nodeContext" : "describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 282,
      "startColumnNumber" : 32,
      "endLineNumber" : 282,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 282,
        "startColumnNumber" : 32,
        "endLineNumber" : 282,
        "endColumnNumber" : 57
      },
      "nodeContext" : "oldMeta.getUsesFeatures()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 282,
        "startColumnNumber" : 17,
        "endLineNumber" : 282,
        "endColumnNumber" : 105
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 282,
        "startColumnNumber" : 16,
        "endLineNumber" : 282,
        "endColumnNumber" : 105
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 282,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n  announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 282,
        "startColumnNumber" : 16,
        "endLineNumber" : 282,
        "endColumnNumber" : 105
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 284,
      "startColumnNumber" : 42,
      "endLineNumber" : 284,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 284,
        "startColumnNumber" : 42,
        "endLineNumber" : 284,
        "endColumnNumber" : 67
      },
      "nodeContext" : "oldMeta.getUsesFeatures()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 284,
        "startColumnNumber" : 26,
        "endLineNumber" : 284,
        "endColumnNumber" : 118
      },
      "nodeContext" : "describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 283,
        "startColumnNumber" : 43,
        "endLineNumber" : 284,
        "endColumnNumber" : 118
      },
      "nodeContext" : "\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 284,
        "endColumnNumber" : 119
      },
      "nodeContext" : "announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 284,
        "endColumnNumber" : 120
      },
      "nodeContext" : "announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 282,
        "startColumnNumber" : 107,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 282,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n  announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 284,
        "startColumnNumber" : 26,
        "endLineNumber" : 284,
        "endColumnNumber" : 118
      },
      "nodeContext" : "describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 286,
      "startColumnNumber" : 32,
      "endLineNumber" : 286,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 286,
        "startColumnNumber" : 32,
        "endLineNumber" : 286,
        "endColumnNumber" : 56
      },
      "nodeContext" : "oldMeta.getPermissions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 286,
        "startColumnNumber" : 17,
        "endLineNumber" : 286,
        "endColumnNumber" : 102
      },
      "nodeContext" : "nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 286,
        "startColumnNumber" : 16,
        "endLineNumber" : 286,
        "endColumnNumber" : 102
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 286,
        "startColumnNumber" : 12,
        "endLineNumber" : 289,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n  announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 286,
        "startColumnNumber" : 16,
        "endLineNumber" : 286,
        "endColumnNumber" : 102
      },
      "nodeContext" : "!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  }, {
    "nodeContext" : "oldMeta",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 288,
      "startColumnNumber" : 42,
      "endLineNumber" : 288,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 288,
        "startColumnNumber" : 42,
        "endLineNumber" : 288,
        "endColumnNumber" : 66
      },
      "nodeContext" : "oldMeta.getPermissions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 288,
        "startColumnNumber" : 26,
        "endLineNumber" : 288,
        "endColumnNumber" : 115
      },
      "nodeContext" : "describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 287,
        "startColumnNumber" : 43,
        "endLineNumber" : 288,
        "endColumnNumber" : 115
      },
      "nodeContext" : "\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 287,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 116
      },
      "nodeContext" : "announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 287,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 117
      },
      "nodeContext" : "announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 286,
        "startColumnNumber" : 104,
        "endLineNumber" : 289,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 286,
        "startColumnNumber" : 12,
        "endLineNumber" : 289,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n  announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 288,
        "startColumnNumber" : 26,
        "endLineNumber" : 288,
        "endColumnNumber" : 115
      },
      "nodeContext" : "describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.decoder.ApkMeta"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 209,
    "startColumnNumber" : 12,
    "endLineNumber" : 209,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 213,
    "startColumnNumber" : 12,
    "endLineNumber" : 213,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 214,
    "startColumnNumber" : 32,
    "endLineNumber" : 214,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 215,
    "startColumnNumber" : 75,
    "endLineNumber" : 215,
    "endColumnNumber" : 82
  }, {
    "charLength" : 7,
    "startLineNumber" : 218,
    "startColumnNumber" : 32,
    "endLineNumber" : 218,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 219,
    "startColumnNumber" : 72,
    "endLineNumber" : 219,
    "endColumnNumber" : 79
  }, {
    "charLength" : 7,
    "startLineNumber" : 222,
    "startColumnNumber" : 32,
    "endLineNumber" : 222,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 223,
    "startColumnNumber" : 79,
    "endLineNumber" : 223,
    "endColumnNumber" : 86
  }, {
    "charLength" : 7,
    "startLineNumber" : 226,
    "startColumnNumber" : 32,
    "endLineNumber" : 226,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 227,
    "startColumnNumber" : 63,
    "endLineNumber" : 227,
    "endColumnNumber" : 70
  }, {
    "charLength" : 7,
    "startLineNumber" : 230,
    "startColumnNumber" : 40,
    "endLineNumber" : 230,
    "endColumnNumber" : 47
  }, {
    "charLength" : 7,
    "startLineNumber" : 241,
    "startColumnNumber" : 32,
    "endLineNumber" : 241,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 242,
    "startColumnNumber" : 79,
    "endLineNumber" : 242,
    "endColumnNumber" : 86
  }, {
    "charLength" : 7,
    "startLineNumber" : 245,
    "startColumnNumber" : 32,
    "endLineNumber" : 245,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 246,
    "startColumnNumber" : 76,
    "endLineNumber" : 246,
    "endColumnNumber" : 83
  }, {
    "charLength" : 7,
    "startLineNumber" : 249,
    "startColumnNumber" : 32,
    "endLineNumber" : 249,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 250,
    "startColumnNumber" : 79,
    "endLineNumber" : 250,
    "endColumnNumber" : 86
  }, {
    "charLength" : 7,
    "startLineNumber" : 253,
    "startColumnNumber" : 32,
    "endLineNumber" : 253,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 254,
    "startColumnNumber" : 76,
    "endLineNumber" : 254,
    "endColumnNumber" : 83
  }, {
    "charLength" : 7,
    "startLineNumber" : 257,
    "startColumnNumber" : 32,
    "endLineNumber" : 257,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 259,
    "startColumnNumber" : 58,
    "endLineNumber" : 259,
    "endColumnNumber" : 65
  }, {
    "charLength" : 7,
    "startLineNumber" : 262,
    "startColumnNumber" : 32,
    "endLineNumber" : 262,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 263,
    "startColumnNumber" : 84,
    "endLineNumber" : 263,
    "endColumnNumber" : 91
  }, {
    "charLength" : 7,
    "startLineNumber" : 266,
    "startColumnNumber" : 32,
    "endLineNumber" : 266,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 267,
    "startColumnNumber" : 86,
    "endLineNumber" : 267,
    "endColumnNumber" : 93
  }, {
    "charLength" : 7,
    "startLineNumber" : 270,
    "startColumnNumber" : 32,
    "endLineNumber" : 270,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 271,
    "startColumnNumber" : 87,
    "endLineNumber" : 271,
    "endColumnNumber" : 94
  }, {
    "charLength" : 7,
    "startLineNumber" : 274,
    "startColumnNumber" : 32,
    "endLineNumber" : 274,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 275,
    "startColumnNumber" : 86,
    "endLineNumber" : 275,
    "endColumnNumber" : 93
  }, {
    "charLength" : 7,
    "startLineNumber" : 278,
    "startColumnNumber" : 32,
    "endLineNumber" : 278,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 280,
    "startColumnNumber" : 42,
    "endLineNumber" : 280,
    "endColumnNumber" : 49
  }, {
    "charLength" : 7,
    "startLineNumber" : 282,
    "startColumnNumber" : 32,
    "endLineNumber" : 282,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 284,
    "startColumnNumber" : 42,
    "endLineNumber" : 284,
    "endColumnNumber" : 49
  }, {
    "charLength" : 7,
    "startLineNumber" : 286,
    "startColumnNumber" : 32,
    "endLineNumber" : 286,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 288,
    "startColumnNumber" : 42,
    "endLineNumber" : 288,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 28,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 29,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 30,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 31,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 32,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 33,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 34,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 28,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 29,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 30,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 31,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 32,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 34,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 28,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 29,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 30,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 31,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 32,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 33,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 34,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 22,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 24,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 25,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 26,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 27,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 27,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 27,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 28,
    "layout" : 3
  }, {
    "firstKey" : 27,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 28,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 28,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 28,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 28,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 29,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 29,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 30,
    "layout" : 3
  }, {
    "firstKey" : 29,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 30,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 30,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 30,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 30,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 30,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 31,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 31,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 31,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 32,
    "layout" : 3
  }, {
    "firstKey" : 31,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 31,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 32,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 32,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 32,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 32,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 33,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 33,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 33,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 33,
    "secondKey" : 34,
    "layout" : 3
  }, {
    "firstKey" : 34,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 34,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 34,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 34,
    "secondKey" : 33,
    "layout" : 6
  } ]
}