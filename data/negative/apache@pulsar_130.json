{
  "id" : 130,
  "expression" : "pemObj instanceof X9ECParameters",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client-messagecrypto-bc/src/main/java/org/apache/pulsar/client/impl/crypto/MessageCryptoBc.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pemObj instanceof X9ECParameters",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 204,
      "startColumnNumber" : 23,
      "endLineNumber" : 204,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 204,
        "startColumnNumber" : 19,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (pemObj instanceof X9ECParameters) {\n  ecParam=(X9ECParameters)pemObj;\n  pemObj=pemReader.readObject();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 190,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (pemObj instanceof ASN1ObjectIdentifier) {\n  ASN1ObjectIdentifier ecOID=(ASN1ObjectIdentifier)pemObj;\n  ecParam=ECNamedCurveTable.getByOID(ecOID);\n  if (ecParam == null) {\n    throw new PEMException(\"Unable to find EC Parameter for the given curve oid: \" + ((ASN1ObjectIdentifier)pemObj).getId());\n  }\n  pemObj=pemReader.readObject();\n}\n else if (pemObj instanceof X9ECParameters) {\n  ecParam=(X9ECParameters)pemObj;\n  pemObj=pemReader.readObject();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 184,
        "startColumnNumber" : 61,
        "endLineNumber" : 223,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Object pemObj=pemReader.readObject();\n  JcaPEMKeyConverter pemConverter=new JcaPEMKeyConverter();\n  SubjectPublicKeyInfo keyInfo=null;\n  X9ECParameters ecParam=null;\n  if (pemObj instanceof ASN1ObjectIdentifier) {\n    ASN1ObjectIdentifier ecOID=(ASN1ObjectIdentifier)pemObj;\n    ecParam=ECNamedCurveTable.getByOID(ecOID);\n    if (ecParam == null) {\n      throw new PEMException(\"Unable to find EC Parameter for the given curve oid: \" + ((ASN1ObjectIdentifier)pemObj).getId());\n    }\n    pemObj=pemReader.readObject();\n  }\n else   if (pemObj instanceof X9ECParameters) {\n    ecParam=(X9ECParameters)pemObj;\n    pemObj=pemReader.readObject();\n  }\n  if (pemObj instanceof X509CertificateHolder) {\n    keyInfo=((X509CertificateHolder)pemObj).getSubjectPublicKeyInfo();\n  }\n else {\n    keyInfo=(SubjectPublicKeyInfo)pemObj;\n  }\n  publicKey=pemConverter.getPublicKey(keyInfo);\n  if (ecParam != null && ECDSA.equals(publicKey.getAlgorithm())) {\n    ECParameterSpec ecSpec=new ECParameterSpec(ecParam.getCurve(),ecParam.getG(),ecParam.getN(),ecParam.getH(),ecParam.getSeed());\n    KeyFactory keyFactory=KeyFactory.getInstance(ECDSA,BouncyCastleProvider.PROVIDER_NAME);\n    ECPublicKeySpec keySpec=new ECPublicKeySpec(((BCECPublicKey)publicKey).getQ(),ecSpec);\n    publicKey=keyFactory.generatePublic(keySpec);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2111,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (PEMParser pemReader=new PEMParser(keyReader)){\n  Object pemObj=pemReader.readObject();\n  JcaPEMKeyConverter pemConverter=new JcaPEMKeyConverter();\n  SubjectPublicKeyInfo keyInfo=null;\n  X9ECParameters ecParam=null;\n  if (pemObj instanceof ASN1ObjectIdentifier) {\n    ASN1ObjectIdentifier ecOID=(ASN1ObjectIdentifier)pemObj;\n    ecParam=ECNamedCurveTable.getByOID(ecOID);\n    if (ecParam == null) {\n      throw new PEMException(\"Unable to find EC Parameter for the given curve oid: \" + ((ASN1ObjectIdentifier)pemObj).getId());\n    }\n    pemObj=pemReader.readObject();\n  }\n else   if (pemObj instanceof X9ECParameters) {\n    ecParam=(X9ECParameters)pemObj;\n    pemObj=pemReader.readObject();\n  }\n  if (pemObj instanceof X509CertificateHolder) {\n    keyInfo=((X509CertificateHolder)pemObj).getSubjectPublicKeyInfo();\n  }\n else {\n    keyInfo=(SubjectPublicKeyInfo)pemObj;\n  }\n  publicKey=pemConverter.getPublicKey(keyInfo);\n  if (ecParam != null && ECDSA.equals(publicKey.getAlgorithm())) {\n    ECParameterSpec ecSpec=new ECParameterSpec(ecParam.getCurve(),ecParam.getG(),ecParam.getN(),ecParam.getH(),ecParam.getSeed());\n    KeyFactory keyFactory=KeyFactory.getInstance(ECDSA,BouncyCastleProvider.PROVIDER_NAME);\n    ECPublicKeySpec keySpec=new ECPublicKeySpec(((BCECPublicKey)publicKey).getQ(),ecSpec);\n    publicKey=keyFactory.generatePublic(keySpec);\n  }\n}\n catch (IOException|NoSuchAlgorithmException|NoSuchProviderException|InvalidKeySpecException e) {\n  throw new Exception(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 223,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2257,
        "startLineNumber" : 180,
        "startColumnNumber" : 70,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Reader keyReader=new StringReader(new String(keyBytes));\n  PublicKey publicKey=null;\n  try (PEMParser pemReader=new PEMParser(keyReader)){\n    Object pemObj=pemReader.readObject();\n    JcaPEMKeyConverter pemConverter=new JcaPEMKeyConverter();\n    SubjectPublicKeyInfo keyInfo=null;\n    X9ECParameters ecParam=null;\n    if (pemObj instanceof ASN1ObjectIdentifier) {\n      ASN1ObjectIdentifier ecOID=(ASN1ObjectIdentifier)pemObj;\n      ecParam=ECNamedCurveTable.getByOID(ecOID);\n      if (ecParam == null) {\n        throw new PEMException(\"Unable to find EC Parameter for the given curve oid: \" + ((ASN1ObjectIdentifier)pemObj).getId());\n      }\n      pemObj=pemReader.readObject();\n    }\n else     if (pemObj instanceof X9ECParameters) {\n      ecParam=(X9ECParameters)pemObj;\n      pemObj=pemReader.readObject();\n    }\n    if (pemObj instanceof X509CertificateHolder) {\n      keyInfo=((X509CertificateHolder)pemObj).getSubjectPublicKeyInfo();\n    }\n else {\n      keyInfo=(SubjectPublicKeyInfo)pemObj;\n    }\n    publicKey=pemConverter.getPublicKey(keyInfo);\n    if (ecParam != null && ECDSA.equals(publicKey.getAlgorithm())) {\n      ECParameterSpec ecSpec=new ECParameterSpec(ecParam.getCurve(),ecParam.getG(),ecParam.getN(),ecParam.getH(),ecParam.getSeed());\n      KeyFactory keyFactory=KeyFactory.getInstance(ECDSA,BouncyCastleProvider.PROVIDER_NAME);\n      ECPublicKeySpec keySpec=new ECPublicKeySpec(((BCECPublicKey)publicKey).getQ(),ecSpec);\n      publicKey=keyFactory.generatePublic(keySpec);\n    }\n  }\n catch (  IOException|NoSuchAlgorithmException|NoSuchProviderException|InvalidKeySpecException e) {\n    throw new Exception(e);\n  }\n  return publicKey;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 244,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PublicKey loadPublicKey(byte[] keyBytes) throws Exception {\n  Reader keyReader=new StringReader(new String(keyBytes));\n  PublicKey publicKey=null;\n  try (PEMParser pemReader=new PEMParser(keyReader)){\n    Object pemObj=pemReader.readObject();\n    JcaPEMKeyConverter pemConverter=new JcaPEMKeyConverter();\n    SubjectPublicKeyInfo keyInfo=null;\n    X9ECParameters ecParam=null;\n    if (pemObj instanceof ASN1ObjectIdentifier) {\n      ASN1ObjectIdentifier ecOID=(ASN1ObjectIdentifier)pemObj;\n      ecParam=ECNamedCurveTable.getByOID(ecOID);\n      if (ecParam == null) {\n        throw new PEMException(\"Unable to find EC Parameter for the given curve oid: \" + ((ASN1ObjectIdentifier)pemObj).getId());\n      }\n      pemObj=pemReader.readObject();\n    }\n else     if (pemObj instanceof X9ECParameters) {\n      ecParam=(X9ECParameters)pemObj;\n      pemObj=pemReader.readObject();\n    }\n    if (pemObj instanceof X509CertificateHolder) {\n      keyInfo=((X509CertificateHolder)pemObj).getSubjectPublicKeyInfo();\n    }\n else {\n      keyInfo=(SubjectPublicKeyInfo)pemObj;\n    }\n    publicKey=pemConverter.getPublicKey(keyInfo);\n    if (ecParam != null && ECDSA.equals(publicKey.getAlgorithm())) {\n      ECParameterSpec ecSpec=new ECParameterSpec(ecParam.getCurve(),ecParam.getG(),ecParam.getN(),ecParam.getH(),ecParam.getSeed());\n      KeyFactory keyFactory=KeyFactory.getInstance(ECDSA,BouncyCastleProvider.PROVIDER_NAME);\n      ECPublicKeySpec keySpec=new ECPublicKeySpec(((BCECPublicKey)publicKey).getQ(),ecSpec);\n      publicKey=keyFactory.generatePublic(keySpec);\n    }\n  }\n catch (  IOException|NoSuchAlgorithmException|NoSuchProviderException|InvalidKeySpecException e) {\n    throw new Exception(e);\n  }\n  return publicKey;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 256,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 204,
        "startColumnNumber" : 19,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (pemObj instanceof X9ECParameters) {\n  ecParam=(X9ECParameters)pemObj;\n  pemObj=pemReader.readObject();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 204,
    "startColumnNumber" : 23,
    "endLineNumber" : 204,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}