{
  "id" : 231,
  "expression" : "!b",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/flowable/FlowableZipIterable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!b",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 63,
      "startColumnNumber" : 12,
      "endLineNumber" : 63,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!b) {\n  EmptySubscription.complete(t);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 39,
        "startColumnNumber" : 57,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Iterator<U> it;\n  try {\n    it=other.iterator();\n  }\n catch (  Throwable e) {\n    EmptySubscription.error(e,t);\n    return;\n  }\n  if (it == null) {\n    EmptySubscription.error(new NullPointerException(\"The iterator returned by other is null\"),t);\n    return;\n  }\n  boolean b;\n  try {\n    b=it.hasNext();\n  }\n catch (  Throwable e) {\n    EmptySubscription.error(e,t);\n    return;\n  }\n  if (!b) {\n    EmptySubscription.complete(t);\n    return;\n  }\n  source.subscribe(new ZipIterableSubscriber<T,U,V>(t,it,zipper));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void subscribeActual(Subscriber<? super V> t){\n  Iterator<U> it;\n  try {\n    it=other.iterator();\n  }\n catch (  Throwable e) {\n    EmptySubscription.error(e,t);\n    return;\n  }\n  if (it == null) {\n    EmptySubscription.error(new NullPointerException(\"The iterator returned by other is null\"),t);\n    return;\n  }\n  boolean b;\n  try {\n    b=it.hasNext();\n  }\n catch (  Throwable e) {\n    EmptySubscription.error(e,t);\n    return;\n  }\n  if (!b) {\n    EmptySubscription.complete(t);\n    return;\n  }\n  source.subscribe(new ZipIterableSubscriber<T,U,V>(t,it,zipper));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!b) {\n  EmptySubscription.complete(t);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 63,
    "startColumnNumber" : 12,
    "endLineNumber" : 63,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}