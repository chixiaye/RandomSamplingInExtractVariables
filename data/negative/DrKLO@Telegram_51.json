{
  "id" : 51,
  "expression" : "message.obj.videoEditedInfo",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "message.obj.videoEditedInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 3955,
      "startColumnNumber" : 28,
      "endLineNumber" : 3955,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 3955,
        "startColumnNumber" : 28,
        "endLineNumber" : 3955,
        "endColumnNumber" : 63
      },
      "nodeContext" : "message.obj.videoEditedInfo != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3955,
        "startColumnNumber" : 28,
        "endLineNumber" : 3955,
        "endColumnNumber" : 108
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 3955,
        "startColumnNumber" : 24,
        "endLineNumber" : 3959,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n  getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n}\n else {\n  getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 3948,
        "startColumnNumber" : 44,
        "endLineNumber" : 3961,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1395,
        "startLineNumber" : 3948,
        "startColumnNumber" : 20,
        "endLineNumber" : 3966,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (media.file == null) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n else {\n  String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 3941,
        "startColumnNumber" : 49,
        "endLineNumber" : 3967,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3163,
        "startLineNumber" : 3941,
        "startColumnNumber" : 16,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (message.sendRequest != null) {\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n else {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 357,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4657,
        "startLineNumber" : 3920,
        "startColumnNumber" : 19,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 534,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5258,
        "startLineNumber" : 3911,
        "startColumnNumber" : 12,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  MediaController.getInstance().scheduleVideoConvert(message.obj);\n  putToUploadingMessages(message.obj);\n}\n else {\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 611,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5282,
        "startLineNumber" : 3910,
        "startColumnNumber" : 38,
        "endLineNumber" : 3990,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 612,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17448,
        "startLineNumber" : 3910,
        "startColumnNumber" : 15,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1942,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19262,
        "startLineNumber" : 3881,
        "startColumnNumber" : 8,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 0) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n          file=new File(location);\n        }\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n          getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2141,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 19278,
        "startLineNumber" : 3880,
        "startColumnNumber" : 84,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2142,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 19358,
        "startLineNumber" : 3880,
        "startColumnNumber" : 4,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performSendDelayedMessage(final DelayedMessage message,int index){\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2154,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3955,
        "startColumnNumber" : 28,
        "endLineNumber" : 3955,
        "endColumnNumber" : 108
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.telegram.messenger.VideoEditedInfo"
  }, {
    "nodeContext" : "message.obj.videoEditedInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 3955,
      "startColumnNumber" : 67,
      "endLineNumber" : 3955,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 3955,
        "startColumnNumber" : 67,
        "endLineNumber" : 3955,
        "endColumnNumber" : 108
      },
      "nodeContext" : "message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3955,
        "startColumnNumber" : 28,
        "endLineNumber" : 3955,
        "endColumnNumber" : 108
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 3955,
        "startColumnNumber" : 24,
        "endLineNumber" : 3959,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n  getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n}\n else {\n  getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 3948,
        "startColumnNumber" : 44,
        "endLineNumber" : 3961,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1395,
        "startLineNumber" : 3948,
        "startColumnNumber" : 20,
        "endLineNumber" : 3966,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (media.file == null) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n else {\n  String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 3941,
        "startColumnNumber" : 49,
        "endLineNumber" : 3967,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3163,
        "startLineNumber" : 3941,
        "startColumnNumber" : 16,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (message.sendRequest != null) {\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n else {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 357,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4657,
        "startLineNumber" : 3920,
        "startColumnNumber" : 19,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 534,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5258,
        "startLineNumber" : 3911,
        "startColumnNumber" : 12,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  MediaController.getInstance().scheduleVideoConvert(message.obj);\n  putToUploadingMessages(message.obj);\n}\n else {\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 611,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5282,
        "startLineNumber" : 3910,
        "startColumnNumber" : 38,
        "endLineNumber" : 3990,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 612,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17448,
        "startLineNumber" : 3910,
        "startColumnNumber" : 15,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1942,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19262,
        "startLineNumber" : 3881,
        "startColumnNumber" : 8,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 0) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n          file=new File(location);\n        }\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n          getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2141,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 19278,
        "startLineNumber" : 3880,
        "startColumnNumber" : 84,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2142,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 19358,
        "startLineNumber" : 3880,
        "startColumnNumber" : 4,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performSendDelayedMessage(final DelayedMessage message,int index){\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2154,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3955,
        "startColumnNumber" : 28,
        "endLineNumber" : 3955,
        "endColumnNumber" : 108
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.telegram.messenger.VideoEditedInfo"
  }, {
    "nodeContext" : "message.obj.videoEditedInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 3982,
      "startColumnNumber" : 24,
      "endLineNumber" : 3982,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 3982,
        "startColumnNumber" : 24,
        "endLineNumber" : 3982,
        "endColumnNumber" : 59
      },
      "nodeContext" : "message.obj.videoEditedInfo != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3982,
        "startColumnNumber" : 24,
        "endLineNumber" : 3982,
        "endColumnNumber" : 104
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 3982,
        "startColumnNumber" : 20,
        "endLineNumber" : 3986,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n  getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n}\n else {\n  getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 3967,
        "startColumnNumber" : 23,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3163,
        "startLineNumber" : 3941,
        "startColumnNumber" : 16,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (message.sendRequest != null) {\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n else {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 357,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4657,
        "startLineNumber" : 3920,
        "startColumnNumber" : 19,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 534,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5258,
        "startLineNumber" : 3911,
        "startColumnNumber" : 12,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  MediaController.getInstance().scheduleVideoConvert(message.obj);\n  putToUploadingMessages(message.obj);\n}\n else {\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 611,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5282,
        "startLineNumber" : 3910,
        "startColumnNumber" : 38,
        "endLineNumber" : 3990,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 612,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17448,
        "startLineNumber" : 3910,
        "startColumnNumber" : 15,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1942,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19262,
        "startLineNumber" : 3881,
        "startColumnNumber" : 8,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 0) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n          file=new File(location);\n        }\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n          getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2141,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 19278,
        "startLineNumber" : 3880,
        "startColumnNumber" : 84,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2142,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 19358,
        "startLineNumber" : 3880,
        "startColumnNumber" : 4,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performSendDelayedMessage(final DelayedMessage message,int index){\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2154,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3982,
        "startColumnNumber" : 24,
        "endLineNumber" : 3982,
        "endColumnNumber" : 104
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.telegram.messenger.VideoEditedInfo"
  }, {
    "nodeContext" : "message.obj.videoEditedInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 3982,
      "startColumnNumber" : 63,
      "endLineNumber" : 3982,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 3982,
        "startColumnNumber" : 63,
        "endLineNumber" : 3982,
        "endColumnNumber" : 104
      },
      "nodeContext" : "message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3982,
        "startColumnNumber" : 24,
        "endLineNumber" : 3982,
        "endColumnNumber" : 104
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 3982,
        "startColumnNumber" : 20,
        "endLineNumber" : 3986,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n  getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n}\n else {\n  getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 3967,
        "startColumnNumber" : 23,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3163,
        "startLineNumber" : 3941,
        "startColumnNumber" : 16,
        "endLineNumber" : 3988,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (message.sendRequest != null) {\n  TLRPC.InputMedia media;\n  if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n    media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n  }\n else {\n    media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n  }\n  if (media.file == null) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n else {\n    String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n    putToUploadingMessages(message.obj);\n  }\n}\n else {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n    File file=new File(location);\n    if (!file.exists()) {\n      putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n      getFileLoader().loadFile(document,message.parentObject,2,0);\n      return;\n    }\n  }\n  putToDelayedMessages(location,message);\n  if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n    getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n  }\n else {\n    getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n  }\n  putToUploadingMessages(message.obj);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 357,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4657,
        "startLineNumber" : 3920,
        "startColumnNumber" : 19,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 534,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5258,
        "startLineNumber" : 3911,
        "startColumnNumber" : 12,
        "endLineNumber" : 3989,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n  String location=message.obj.messageOwner.attachPath;\n  TLRPC.Document document=message.obj.getDocument();\n  if (location == null) {\n    location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n  }\n  putToDelayedMessages(location,message);\n  MediaController.getInstance().scheduleVideoConvert(message.obj);\n  putToUploadingMessages(message.obj);\n}\n else {\n  if (message.videoEditedInfo != null) {\n    if (message.videoEditedInfo.file != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      media.file=message.videoEditedInfo.file;\n      message.videoEditedInfo.file=null;\n    }\n else     if (message.videoEditedInfo.encryptedFile != null) {\n      TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n      decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n      decryptedMessage.media.key=message.videoEditedInfo.key;\n      decryptedMessage.media.iv=message.videoEditedInfo.iv;\n      getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n      message.videoEditedInfo.encryptedFile=null;\n      return;\n    }\n  }\n  if (message.sendRequest != null) {\n    TLRPC.InputMedia media;\n    if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n      media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n    }\n else {\n      media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n    }\n    if (media.file == null) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n else {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n      File file=new File(location);\n      if (!file.exists()) {\n        putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n        getFileLoader().loadFile(document,message.parentObject,2,0);\n        return;\n      }\n    }\n    putToDelayedMessages(location,message);\n    if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n      getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n    }\n else {\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n    }\n    putToUploadingMessages(message.obj);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 611,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5282,
        "startLineNumber" : 3910,
        "startColumnNumber" : 38,
        "endLineNumber" : 3990,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 612,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17448,
        "startLineNumber" : 3910,
        "startColumnNumber" : 15,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1942,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19262,
        "startLineNumber" : 3881,
        "startColumnNumber" : 8,
        "endLineNumber" : 4163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.type == 0) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      String location=FileLoader.getPathToAttach(message.photoSize).toString();\n      if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n          file=new File(location);\n        }\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n          getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 1) {\n  if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n    String location=message.obj.messageOwner.attachPath;\n    TLRPC.Document document=message.obj.getDocument();\n    if (location == null) {\n      location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n    }\n    putToDelayedMessages(location,message);\n    MediaController.getInstance().scheduleVideoConvert(message.obj);\n    putToUploadingMessages(message.obj);\n  }\n else {\n    if (message.videoEditedInfo != null) {\n      if (message.videoEditedInfo.file != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        media.file=message.videoEditedInfo.file;\n        message.videoEditedInfo.file=null;\n      }\n else       if (message.videoEditedInfo.encryptedFile != null) {\n        TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n        decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n        decryptedMessage.media.key=message.videoEditedInfo.key;\n        decryptedMessage.media.iv=message.videoEditedInfo.iv;\n        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n        message.videoEditedInfo.encryptedFile=null;\n        return;\n      }\n    }\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n        getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n      }\n else {\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n      }\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 2) {\n  if (message.httpLocation != null) {\n    putToDelayedMessages(message.httpLocation,message);\n    ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n  }\n else {\n    if (message.sendRequest != null) {\n      TLRPC.InputMedia media;\n      if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n        media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n      }\n else {\n        media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n      }\n      if (media.file == null) {\n        String location=message.obj.messageOwner.attachPath;\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n else       if (media.thumb == null && message.photoSize != null) {\n        String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n else {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n        File file=new File(location);\n        if (!file.exists()) {\n          putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n          getFileLoader().loadFile(document,message.parentObject,2,0);\n          return;\n        }\n      }\n      putToDelayedMessages(location,message);\n      getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n      putToUploadingMessages(message.obj);\n    }\n  }\n}\n else if (message.type == 3) {\n  String location=message.obj.messageOwner.attachPath;\n  putToDelayedMessages(location,message);\n  getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n  putToUploadingMessages(message.obj);\n}\n else if (message.type == 4) {\n  boolean add=index < 0;\n  if (message.performMediaUpload) {\n    if (index < 0) {\n      index=message.messageObjects.size() - 1;\n    }\n    MessageObject messageObject=message.messageObjects.get(index);\n    if (messageObject.getDocument() != null) {\n      if (message.videoEditedInfo != null) {\n        String location=messageObject.messageOwner.attachPath;\n        TLRPC.Document document=messageObject.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(messageObject,location);\n        message.extraHashMap.put(location + \"_i\",messageObject);\n        if (message.photoSize != null && message.photoSize.location != null) {\n          message.extraHashMap.put(location + \"_t\",message.photoSize);\n        }\n        MediaController.getInstance().scheduleVideoConvert(messageObject);\n        message.obj=messageObject;\n        putToUploadingMessages(messageObject);\n      }\n else {\n        TLRPC.Document document=messageObject.getDocument();\n        String documentLocation=messageObject.messageOwner.attachPath;\n        if (documentLocation == null) {\n          documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          TLRPC.InputMedia media=request.multi_media.get(index).media;\n          if (media.file == null) {\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,media);\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n else           if (message.photoSize != null) {\n            String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n            putToDelayedMessages(location,message);\n            message.extraHashMap.put(location + \"_o\",documentLocation);\n            message.extraHashMap.put(messageObject,location);\n            message.extraHashMap.put(location,media);\n            getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n            putToUploadingMessages(messageObject);\n          }\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          putToDelayedMessages(documentLocation,message);\n          message.extraHashMap.put(messageObject,documentLocation);\n          message.extraHashMap.put(documentLocation,request.files.get(index));\n          message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n          }\n          if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(messageObject);\n        }\n      }\n      message.videoEditedInfo=null;\n      message.photoSize=null;\n    }\n else {\n      if (message.httpLocation != null) {\n        putToDelayedMessages(message.httpLocation,message);\n        message.extraHashMap.put(messageObject,message.httpLocation);\n        message.extraHashMap.put(message.httpLocation,messageObject);\n        ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n        message.httpLocation=null;\n      }\n else {\n        TLObject inputMedia;\n        if (message.sendRequest != null) {\n          TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n          inputMedia=request.multi_media.get(index).media;\n        }\n else {\n          TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n          inputMedia=request.files.get(index);\n        }\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        message.extraHashMap.put(location,inputMedia);\n        message.extraHashMap.put(messageObject,location);\n        getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(messageObject);\n        message.photoSize=null;\n      }\n    }\n    message.performMediaUpload=false;\n  }\n else   if (!message.messageObjects.isEmpty()) {\n    putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n  }\n  sendReadyToSendGroup(message,add,true);\n}\n else if (message.type == 5) {\n  String key=\"stickerset_\" + message.obj.getId();\n  TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n  req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n  getConnectionsManager().sendRequest(req,(response,error) -> {\n    AndroidUtilities.runOnUIThread(() -> {\n      boolean found=false;\n      if (response != null) {\n        TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n        getMediaDataController().storeTempStickerSet(set);\n        TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n        attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n        attributeSticker.stickerset.short_name=set.set.short_name;\n        found=true;\n      }\n      ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n      if (arrayList != null && !arrayList.isEmpty()) {\n        if (found) {\n          getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n        }\n        getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n      }\n    }\n);\n  }\n);\n  putToDelayedMessages(key,message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2141,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 19278,
        "startLineNumber" : 3880,
        "startColumnNumber" : 84,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2142,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 19358,
        "startLineNumber" : 3880,
        "startColumnNumber" : 4,
        "endLineNumber" : 4164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performSendDelayedMessage(final DelayedMessage message,int index){\n  if (message.type == 0) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n else {\n        String location=FileLoader.getPathToAttach(message.photoSize).toString();\n        if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            location=FileLoader.getPathToAttach(message.photoSize,true).toString();\n            file=new File(location);\n          }\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize),message);\n            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize,message.locationParent),message.parentObject,\"jpg\",2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,true,ConnectionsManager.FileTypePhoto);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 1) {\n    if (message.videoEditedInfo != null && message.videoEditedInfo.needConvert()) {\n      String location=message.obj.messageOwner.attachPath;\n      TLRPC.Document document=message.obj.getDocument();\n      if (location == null) {\n        location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n      }\n      putToDelayedMessages(location,message);\n      MediaController.getInstance().scheduleVideoConvert(message.obj);\n      putToUploadingMessages(message.obj);\n    }\n else {\n      if (message.videoEditedInfo != null) {\n        if (message.videoEditedInfo.file != null) {\n          TLRPC.InputMedia media;\n          if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n            media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n          }\n else {\n            media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n          }\n          media.file=message.videoEditedInfo.file;\n          message.videoEditedInfo.file=null;\n        }\n else         if (message.videoEditedInfo.encryptedFile != null) {\n          TLRPC.TL_decryptedMessage decryptedMessage=(TLRPC.TL_decryptedMessage)message.sendEncryptedRequest;\n          decryptedMessage.media.size=(int)message.videoEditedInfo.estimatedSize;\n          decryptedMessage.media.key=message.videoEditedInfo.key;\n          decryptedMessage.media.iv=message.videoEditedInfo.iv;\n          getSecretChatHelper().performSendEncryptedRequest(decryptedMessage,message.obj.messageOwner,message.encryptedChat,message.videoEditedInfo.encryptedFile,message.originalPath,message.obj);\n          message.videoEditedInfo.encryptedFile=null;\n          return;\n        }\n      }\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          TLRPC.Document document=message.obj.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n            getFileLoader().uploadFile(location,false,false,document.size,ConnectionsManager.FileTypeVideo);\n          }\n else {\n            getFileLoader().uploadFile(location,false,false,ConnectionsManager.FileTypeVideo);\n          }\n          putToUploadingMessages(message.obj);\n        }\n else {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (location == null) {\n          location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n        }\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {\n          getFileLoader().uploadFile(location,true,false,document.size,ConnectionsManager.FileTypeVideo);\n        }\n else {\n          getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeVideo);\n        }\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 2) {\n    if (message.httpLocation != null) {\n      putToDelayedMessages(message.httpLocation,message);\n      ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"gif\",currentAccount);\n    }\n else {\n      if (message.sendRequest != null) {\n        TLRPC.InputMedia media;\n        if (message.sendRequest instanceof TLRPC.TL_messages_sendMedia) {\n          media=((TLRPC.TL_messages_sendMedia)message.sendRequest).media;\n        }\n else {\n          media=((TLRPC.TL_messages_editMessage)message.sendRequest).media;\n        }\n        if (media.file == null) {\n          String location=message.obj.messageOwner.attachPath;\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,message.sendRequest == null,false,ConnectionsManager.FileTypeFile);\n          putToUploadingMessages(message.obj);\n        }\n else         if (media.thumb == null && message.photoSize != null) {\n          String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n          putToDelayedMessages(location,message);\n          getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(message.obj);\n        }\n      }\n else {\n        String location=message.obj.messageOwner.attachPath;\n        TLRPC.Document document=message.obj.getDocument();\n        if (message.sendEncryptedRequest != null && document.dc_id != 0) {\n          File file=new File(location);\n          if (!file.exists()) {\n            putToDelayedMessages(FileLoader.getAttachFileName(document),message);\n            getFileLoader().loadFile(document,message.parentObject,2,0);\n            return;\n          }\n        }\n        putToDelayedMessages(location,message);\n        getFileLoader().uploadFile(location,true,false,ConnectionsManager.FileTypeFile);\n        putToUploadingMessages(message.obj);\n      }\n    }\n  }\n else   if (message.type == 3) {\n    String location=message.obj.messageOwner.attachPath;\n    putToDelayedMessages(location,message);\n    getFileLoader().uploadFile(location,message.sendRequest == null,true,ConnectionsManager.FileTypeAudio);\n    putToUploadingMessages(message.obj);\n  }\n else   if (message.type == 4) {\n    boolean add=index < 0;\n    if (message.performMediaUpload) {\n      if (index < 0) {\n        index=message.messageObjects.size() - 1;\n      }\n      MessageObject messageObject=message.messageObjects.get(index);\n      if (messageObject.getDocument() != null) {\n        if (message.videoEditedInfo != null) {\n          String location=messageObject.messageOwner.attachPath;\n          TLRPC.Document document=messageObject.getDocument();\n          if (location == null) {\n            location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(messageObject,location);\n          message.extraHashMap.put(location + \"_i\",messageObject);\n          if (message.photoSize != null && message.photoSize.location != null) {\n            message.extraHashMap.put(location + \"_t\",message.photoSize);\n          }\n          MediaController.getInstance().scheduleVideoConvert(messageObject);\n          message.obj=messageObject;\n          putToUploadingMessages(messageObject);\n        }\n else {\n          TLRPC.Document document=messageObject.getDocument();\n          String documentLocation=messageObject.messageOwner.attachPath;\n          if (documentLocation == null) {\n            documentLocation=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + document.id+ \".mp4\";\n          }\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            TLRPC.InputMedia media=request.multi_media.get(index).media;\n            if (media.file == null) {\n              putToDelayedMessages(documentLocation,message);\n              message.extraHashMap.put(messageObject,documentLocation);\n              message.extraHashMap.put(documentLocation,media);\n              message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n              if (message.photoSize != null && message.photoSize.location != null) {\n                message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n              }\n              if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n                getFileLoader().uploadFile(documentLocation,false,false,document.size,ConnectionsManager.FileTypeVideo);\n              }\n else {\n                getFileLoader().uploadFile(documentLocation,false,false,ConnectionsManager.FileTypeVideo);\n              }\n              putToUploadingMessages(messageObject);\n            }\n else             if (message.photoSize != null) {\n              String location=FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + \"/\" + message.photoSize.location.volume_id+ \"_\"+ message.photoSize.location.local_id+ \".jpg\";\n              putToDelayedMessages(location,message);\n              message.extraHashMap.put(location + \"_o\",documentLocation);\n              message.extraHashMap.put(messageObject,location);\n              message.extraHashMap.put(location,media);\n              getFileLoader().uploadFile(location,false,true,ConnectionsManager.FileTypePhoto);\n              putToUploadingMessages(messageObject);\n            }\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            putToDelayedMessages(documentLocation,message);\n            message.extraHashMap.put(messageObject,documentLocation);\n            message.extraHashMap.put(documentLocation,request.files.get(index));\n            message.extraHashMap.put(documentLocation + \"_i\",messageObject);\n            if (message.photoSize != null && message.photoSize.location != null) {\n              message.extraHashMap.put(documentLocation + \"_t\",message.photoSize);\n            }\n            if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {\n              getFileLoader().uploadFile(documentLocation,true,false,document.size,ConnectionsManager.FileTypeVideo);\n            }\n else {\n              getFileLoader().uploadFile(documentLocation,true,false,ConnectionsManager.FileTypeVideo);\n            }\n            putToUploadingMessages(messageObject);\n          }\n        }\n        message.videoEditedInfo=null;\n        message.photoSize=null;\n      }\n else {\n        if (message.httpLocation != null) {\n          putToDelayedMessages(message.httpLocation,message);\n          message.extraHashMap.put(messageObject,message.httpLocation);\n          message.extraHashMap.put(message.httpLocation,messageObject);\n          ImageLoader.getInstance().loadHttpFile(message.httpLocation,\"file\",currentAccount);\n          message.httpLocation=null;\n        }\n else {\n          TLObject inputMedia;\n          if (message.sendRequest != null) {\n            TLRPC.TL_messages_sendMultiMedia request=(TLRPC.TL_messages_sendMultiMedia)message.sendRequest;\n            inputMedia=request.multi_media.get(index).media;\n          }\n else {\n            TLRPC.TL_messages_sendEncryptedMultiMedia request=(TLRPC.TL_messages_sendEncryptedMultiMedia)message.sendEncryptedRequest;\n            inputMedia=request.files.get(index);\n          }\n          String location=FileLoader.getPathToAttach(message.photoSize).toString();\n          putToDelayedMessages(location,message);\n          message.extraHashMap.put(location,inputMedia);\n          message.extraHashMap.put(messageObject,location);\n          getFileLoader().uploadFile(location,message.sendEncryptedRequest != null,true,ConnectionsManager.FileTypePhoto);\n          putToUploadingMessages(messageObject);\n          message.photoSize=null;\n        }\n      }\n      message.performMediaUpload=false;\n    }\n else     if (!message.messageObjects.isEmpty()) {\n      putToSendingMessages(message.messageObjects.get(message.messageObjects.size() - 1).messageOwner,message.finalGroupMessage != 0);\n    }\n    sendReadyToSendGroup(message,add,true);\n  }\n else   if (message.type == 5) {\n    String key=\"stickerset_\" + message.obj.getId();\n    TLRPC.TL_messages_getStickerSet req=new TLRPC.TL_messages_getStickerSet();\n    req.stickerset=(TLRPC.InputStickerSet)message.parentObject;\n    getConnectionsManager().sendRequest(req,(response,error) -> {\n      AndroidUtilities.runOnUIThread(() -> {\n        boolean found=false;\n        if (response != null) {\n          TLRPC.TL_messages_stickerSet set=(TLRPC.TL_messages_stickerSet)response;\n          getMediaDataController().storeTempStickerSet(set);\n          TLRPC.TL_documentAttributeSticker_layer55 attributeSticker=(TLRPC.TL_documentAttributeSticker_layer55)message.locationParent;\n          attributeSticker.stickerset=new TLRPC.TL_inputStickerSetShortName();\n          attributeSticker.stickerset.short_name=set.set.short_name;\n          found=true;\n        }\n        ArrayList<DelayedMessage> arrayList=delayedMessages.remove(key);\n        if (arrayList != null && !arrayList.isEmpty()) {\n          if (found) {\n            getMessagesStorage().replaceMessageIfExists(arrayList.get(0).obj.messageOwner,null,null,false);\n          }\n          getSecretChatHelper().performSendEncryptedRequest((TLRPC.DecryptedMessage)message.sendEncryptedRequest,message.obj.messageOwner,message.encryptedChat,null,null,message.obj);\n        }\n      }\n);\n    }\n);\n    putToDelayedMessages(key,message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2154,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 3982,
        "startColumnNumber" : 24,
        "endLineNumber" : 3982,
        "endColumnNumber" : 104
      },
      "nodeContext" : "message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.telegram.messenger.VideoEditedInfo"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 3955,
    "startColumnNumber" : 28,
    "endLineNumber" : 3955,
    "endColumnNumber" : 55
  }, {
    "charLength" : 27,
    "startLineNumber" : 3955,
    "startColumnNumber" : 67,
    "endLineNumber" : 3955,
    "endColumnNumber" : 94
  }, {
    "charLength" : 27,
    "startLineNumber" : 3982,
    "startColumnNumber" : 24,
    "endLineNumber" : 3982,
    "endColumnNumber" : 51
  }, {
    "charLength" : 27,
    "startLineNumber" : 3982,
    "startColumnNumber" : 63,
    "endLineNumber" : 3982,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}