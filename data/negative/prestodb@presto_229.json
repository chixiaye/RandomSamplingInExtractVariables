{
  "id" : 229,
  "expression" : "dictionarySourceId",
  "projectName" : "prestodb@presto",
  "commitID" : "4871cee5b33d556d18e399bb86ca45b3266dc633",
  "filePath" : "presto-common/src/main/java/com/facebook/presto/common/block/DictionaryBlock.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dictionarySourceId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 461,
      "startColumnNumber" : 99,
      "endLineNumber" : 461,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 461,
        "startColumnNumber" : 33,
        "endLineNumber" : 461,
        "endColumnNumber" : 118
      },
      "nodeContext" : "new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 461,
        "startColumnNumber" : 24,
        "endLineNumber" : 461,
        "endColumnNumber" : 118
      },
      "nodeContext" : "result=new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 461,
        "startColumnNumber" : 8,
        "endLineNumber" : 461,
        "endColumnNumber" : 119
      },
      "nodeContext" : "DictionaryBlock result=new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 444,
        "startColumnNumber" : 4,
        "endLineNumber" : 468,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArrayRange(positions,offset,length);\n  int[] newIds=new int[length];\n  boolean isCompact=length >= dictionary.getPositionCount() && isCompact();\n  boolean[] usedIds=isCompact ? new boolean[dictionary.getPositionCount()] : null;\n  int uniqueIds=0;\n  for (int i=0; i < length; i++) {\n    int id=getId(positions[offset + i]);\n    newIds[i]=id;\n    if (usedIds != null) {\n      uniqueIds+=usedIds[id] ? 0 : 1;\n      usedIds[id]=true;\n    }\n  }\n  isCompact&=(usedIds != null && usedIds.length == uniqueIds);\n  DictionaryBlock result=new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId);\n  if (usedIds != null && !isCompact) {\n    result.uniqueIds=uniqueIds;\n    result.sizeInBytes=dictionary.getPositionsSizeInBytes(usedIds,uniqueIds) + (Integer.BYTES * (long)length);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 442,
        "startColumnNumber" : 4,
        "endLineNumber" : 468,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Block getPositions(int[] positions,int offset,int length){\n  checkArrayRange(positions,offset,length);\n  int[] newIds=new int[length];\n  boolean isCompact=length >= dictionary.getPositionCount() && isCompact();\n  boolean[] usedIds=isCompact ? new boolean[dictionary.getPositionCount()] : null;\n  int uniqueIds=0;\n  for (int i=0; i < length; i++) {\n    int id=getId(positions[offset + i]);\n    newIds[i]=id;\n    if (usedIds != null) {\n      uniqueIds+=usedIds[id] ? 0 : 1;\n      usedIds[id]=true;\n    }\n  }\n  isCompact&=(usedIds != null && usedIds.length == uniqueIds);\n  DictionaryBlock result=new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId);\n  if (usedIds != null && !isCompact) {\n    result.uniqueIds=uniqueIds;\n    result.sizeInBytes=dictionary.getPositionsSizeInBytes(usedIds,uniqueIds) + (Integer.BYTES * (long)length);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 461,
        "startColumnNumber" : 8,
        "endLineNumber" : 461,
        "endColumnNumber" : 119
      },
      "nodeContext" : "DictionaryBlock result=new DictionaryBlock(newIds.length,dictionary,newIds,isCompact,dictionarySourceId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.common.block.DictionaryId"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 461,
    "startColumnNumber" : 99,
    "endLineNumber" : 461,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ ]
}