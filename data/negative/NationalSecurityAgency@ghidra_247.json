{
  "id" : 247,
  "expression" : "new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry)",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/FunctionGraph/src/main/java/ghidra/graph/viewer/FGViewUpdater.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 716,
      "startColumnNumber" : 3,
      "endLineNumber" : 716,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 715,
        "startColumnNumber" : 11,
        "endLineNumber" : 716,
        "endColumnNumber" : 78
      },
      "nodeContext" : "newVertex=new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 715,
        "startColumnNumber" : 2,
        "endLineNumber" : 716,
        "endColumnNumber" : 79
      },
      "nodeContext" : "FGVertex newVertex=new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3678,
        "startLineNumber" : 677,
        "startColumnNumber" : 82,
        "endLineNumber" : 773,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (childVertex instanceof GroupedFunctionGraphVertex) {\n    return;\n  }\n  stopAllAnimation();\n  FGView view=controller.getView();\n  VisualizationServer<FGVertex,FGEdge> primaryViewer=view.getPrimaryGraphViewer();\n  Layout<FGVertex,FGEdge> graphLayout=primaryViewer.getGraphLayout();\n  Graph<FGVertex,FGEdge> graph=graphLayout.getGraph();\n  Collection<FGEdge> parentChildEdges=graph.getInEdges(childVertex);\n  FGEdge parentChildEdge=parentChildEdges.iterator().next();\n  FGVertex parentVertex=parentChildEdge.getStart();\n  if (parentVertex instanceof GroupedFunctionGraphVertex) {\n    return;\n  }\n  AddressSet newAddresses=new AddressSet();\n  newAddresses.add(parentVertex.getAddresses());\n  newAddresses.add(childVertex.getAddresses());\n  FlowType flowType=parentVertex.getFlowType();\n  boolean isEntry=parentVertex.isEntry();\n  FGVertex newVertex=new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry);\n  FGVertexType parentVertexType=parentVertex.getVertexType();\n  FGVertexType childVertexType=childVertex.getVertexType();\n  if (parentVertexType.isEntry() && childVertexType.isExit()) {\n    newVertex.setVertexType(FGVertexType.SINGLETON);\n  }\n else   if (parentVertexType.isEntry()) {\n    newVertex.setVertexType(FGVertexType.ENTRY);\n  }\n else   if (childVertexType.isExit()) {\n    newVertex.setVertexType(FGVertexType.EXIT);\n  }\n else {\n    newVertex.setVertexType(parentVertexType);\n  }\n  graph.addVertex(newVertex);\n  Collection<FGEdge> parentInEdges=graph.getInEdges(parentVertex);\n  parentInEdges=new ArrayList<>(parentInEdges);\n  for (  FGEdge edge : parentInEdges) {\n    FGVertex oldStartVertex=edge.getStart();\n    graph.addEdge(edge.cloneEdge(oldStartVertex,newVertex),oldStartVertex,newVertex);\n  }\n  Collection<FGEdge> childOutEdges=graph.getOutEdges(childVertex);\n  childOutEdges=new ArrayList<>(childOutEdges);\n  for (  FGEdge edge : childOutEdges) {\n    FGVertex oldDestinationVertex=edge.getEnd();\n    graph.addEdge(edge.cloneEdge(newVertex,oldDestinationVertex),newVertex,oldDestinationVertex);\n  }\n  MergeVertexFunctionGraphJob job=new MergeVertexFunctionGraphJob(controller,primaryViewer,newVertex,parentVertex,childVertex,isAnimationEnabled());\n  scheduleViewChangeJob(job);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3759,
        "startLineNumber" : 677,
        "startColumnNumber" : 1,
        "endLineNumber" : 773,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void mergeVertexWithParent(FGController controller,FGVertex childVertex){\n  if (childVertex instanceof GroupedFunctionGraphVertex) {\n    return;\n  }\n  stopAllAnimation();\n  FGView view=controller.getView();\n  VisualizationServer<FGVertex,FGEdge> primaryViewer=view.getPrimaryGraphViewer();\n  Layout<FGVertex,FGEdge> graphLayout=primaryViewer.getGraphLayout();\n  Graph<FGVertex,FGEdge> graph=graphLayout.getGraph();\n  Collection<FGEdge> parentChildEdges=graph.getInEdges(childVertex);\n  FGEdge parentChildEdge=parentChildEdges.iterator().next();\n  FGVertex parentVertex=parentChildEdge.getStart();\n  if (parentVertex instanceof GroupedFunctionGraphVertex) {\n    return;\n  }\n  AddressSet newAddresses=new AddressSet();\n  newAddresses.add(parentVertex.getAddresses());\n  newAddresses.add(childVertex.getAddresses());\n  FlowType flowType=parentVertex.getFlowType();\n  boolean isEntry=parentVertex.isEntry();\n  FGVertex newVertex=new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry);\n  FGVertexType parentVertexType=parentVertex.getVertexType();\n  FGVertexType childVertexType=childVertex.getVertexType();\n  if (parentVertexType.isEntry() && childVertexType.isExit()) {\n    newVertex.setVertexType(FGVertexType.SINGLETON);\n  }\n else   if (parentVertexType.isEntry()) {\n    newVertex.setVertexType(FGVertexType.ENTRY);\n  }\n else   if (childVertexType.isExit()) {\n    newVertex.setVertexType(FGVertexType.EXIT);\n  }\n else {\n    newVertex.setVertexType(parentVertexType);\n  }\n  graph.addVertex(newVertex);\n  Collection<FGEdge> parentInEdges=graph.getInEdges(parentVertex);\n  parentInEdges=new ArrayList<>(parentInEdges);\n  for (  FGEdge edge : parentInEdges) {\n    FGVertex oldStartVertex=edge.getStart();\n    graph.addEdge(edge.cloneEdge(oldStartVertex,newVertex),oldStartVertex,newVertex);\n  }\n  Collection<FGEdge> childOutEdges=graph.getOutEdges(childVertex);\n  childOutEdges=new ArrayList<>(childOutEdges);\n  for (  FGEdge edge : childOutEdges) {\n    FGVertex oldDestinationVertex=edge.getEnd();\n    graph.addEdge(edge.cloneEdge(newVertex,oldDestinationVertex),newVertex,oldDestinationVertex);\n  }\n  MergeVertexFunctionGraphJob job=new MergeVertexFunctionGraphJob(controller,primaryViewer,newVertex,parentVertex,childVertex,isAnimationEnabled());\n  scheduleViewChangeJob(job);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 334,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 715,
        "startColumnNumber" : 11,
        "endLineNumber" : 716,
        "endColumnNumber" : 78
      },
      "nodeContext" : "newVertex=new ListingFunctionGraphVertex(controller,newAddresses,flowType,isEntry)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "ghidra.app.plugin.core.functiongraph.graph.vertex.ListingFunctionGraphVertex"
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 716,
    "startColumnNumber" : 3,
    "endLineNumber" : 716,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}