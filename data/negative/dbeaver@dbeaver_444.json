{
  "id" : 444,
  "expression" : "buf.append(settings.getQuoteString()).append(token)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.base/src/org/jkiss/dbeaver/ui/editors/text/handlers/MorphDelimitedListHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf.append(settings.getQuoteString()).append(token)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 125,
      "startColumnNumber" : 16,
      "endLineNumber" : 125,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 101
      },
      "nodeContext" : "buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 102
      },
      "nodeContext" : "buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 124,
        "startColumnNumber" : 65,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n  lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n  buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n  lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n}\n else {\n  buf.append(token);\n  lastLineFeed+=token.length();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2041,
        "startLineNumber" : 99,
        "startColumnNumber" : 48,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String token=tokens.get(i);\n  int leadingSpaces=0, trailingSpaces=0;\n{\n    boolean inIdentifier=false;\n    for (int k=0; k < token.length(); k++) {\n      char ch=token.charAt(k);\n      if (Character.isWhitespace(ch)) {\n        if (inIdentifier) {\n          trailingSpaces++;\n        }\n else {\n          buf.append(ch);\n          leadingSpaces++;\n        }\n      }\n else {\n        if (trailingSpaces > 0) {\n          trailingSpaces=0;\n        }\n        inIdentifier=true;\n      }\n    }\n  }\n  if (leadingSpaces > 0 || trailingSpaces > 0) {\n    token=token.substring(leadingSpaces,token.length() - trailingSpaces);\n  }\n  if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n    buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n    lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n  }\n else {\n    buf.append(token);\n    lastLineFeed+=token.length();\n  }\n  if (i < tokens.size() - 1) {\n    buf.append(settings.getTargetDelimiter());\n    lastLineFeed+=settings.getTargetDelimiter().length();\n    if (settings.wrapLine > 0) {\n      int nextTokenLength=tokens.get(i + 1).length();\n      if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n        nextTokenLength+=settings.getQuoteString().length() * 2;\n      }\n      if (lastLineFeed + nextTokenLength > settings.wrapLine) {\n        buf.append(\"\\n\");\n        lastLineFeed=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 232,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2081,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < tokens.size(); i++) {\n  String token=tokens.get(i);\n  int leadingSpaces=0, trailingSpaces=0;\n{\n    boolean inIdentifier=false;\n    for (int k=0; k < token.length(); k++) {\n      char ch=token.charAt(k);\n      if (Character.isWhitespace(ch)) {\n        if (inIdentifier) {\n          trailingSpaces++;\n        }\n else {\n          buf.append(ch);\n          leadingSpaces++;\n        }\n      }\n else {\n        if (trailingSpaces > 0) {\n          trailingSpaces=0;\n        }\n        inIdentifier=true;\n      }\n    }\n  }\n  if (leadingSpaces > 0 || trailingSpaces > 0) {\n    token=token.substring(leadingSpaces,token.length() - trailingSpaces);\n  }\n  if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n    buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n    lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n  }\n else {\n    buf.append(token);\n    lastLineFeed+=token.length();\n  }\n  if (i < tokens.size() - 1) {\n    buf.append(settings.getTargetDelimiter());\n    lastLineFeed+=settings.getTargetDelimiter().length();\n    if (settings.wrapLine > 0) {\n      int nextTokenLength=tokens.get(i + 1).length();\n      if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n        nextTokenLength+=settings.getQuoteString().length() * 2;\n      }\n      if (lastLineFeed + nextTokenLength > settings.wrapLine) {\n        buf.append(\"\\n\");\n        lastLineFeed=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 245,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3125,
        "startLineNumber" : 75,
        "startColumnNumber" : 61,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConfigDialog configDialog=new ConfigDialog(activeShell);\n  if (configDialog.open() != IDialogConstants.OK_ID) {\n    return null;\n  }\n  List<String> tokens=new ArrayList<>();\n  MorphDelimitedListSettings settings=configDialog.morphSettings;\n  String sourceDelimiter=settings.getSourceDelimiter();\n  if (sourceDelimiter.contains(\"\\n\") && !sourceDelimiter.contains(\"\\r\")) {\n    sourceDelimiter+=\"\\r\";\n  }\n  StringTokenizer st=new StringTokenizer(text,sourceDelimiter);\n  while (st.hasMoreTokens()) {\n    tokens.add(st.nextToken());\n  }\n  StringBuilder buf=new StringBuilder();\n  if (!CommonUtils.isEmpty(settings.getLeadingText())) {\n    buf.append(settings.getLeadingText());\n  }\n  int lastLineFeed=0;\n  for (int i=0; i < tokens.size(); i++) {\n    String token=tokens.get(i);\n    int leadingSpaces=0, trailingSpaces=0;\n{\n      boolean inIdentifier=false;\n      for (int k=0; k < token.length(); k++) {\n        char ch=token.charAt(k);\n        if (Character.isWhitespace(ch)) {\n          if (inIdentifier) {\n            trailingSpaces++;\n          }\n else {\n            buf.append(ch);\n            leadingSpaces++;\n          }\n        }\n else {\n          if (trailingSpaces > 0) {\n            trailingSpaces=0;\n          }\n          inIdentifier=true;\n        }\n      }\n    }\n    if (leadingSpaces > 0 || trailingSpaces > 0) {\n      token=token.substring(leadingSpaces,token.length() - trailingSpaces);\n    }\n    if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n      buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n      lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n    }\n else {\n      buf.append(token);\n      lastLineFeed+=token.length();\n    }\n    if (i < tokens.size() - 1) {\n      buf.append(settings.getTargetDelimiter());\n      lastLineFeed+=settings.getTargetDelimiter().length();\n      if (settings.wrapLine > 0) {\n        int nextTokenLength=tokens.get(i + 1).length();\n        if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n          nextTokenLength+=settings.getQuoteString().length() * 2;\n        }\n        if (lastLineFeed + nextTokenLength > settings.wrapLine) {\n          buf.append(\"\\n\");\n          lastLineFeed=0;\n        }\n      }\n    }\n  }\n  if (!CommonUtils.isEmpty(settings.getTrailingText())) {\n    buf.append(settings.getTrailingText());\n  }\n  return buf.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 381,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3182,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String morphText(Shell activeShell,String text){\n  ConfigDialog configDialog=new ConfigDialog(activeShell);\n  if (configDialog.open() != IDialogConstants.OK_ID) {\n    return null;\n  }\n  List<String> tokens=new ArrayList<>();\n  MorphDelimitedListSettings settings=configDialog.morphSettings;\n  String sourceDelimiter=settings.getSourceDelimiter();\n  if (sourceDelimiter.contains(\"\\n\") && !sourceDelimiter.contains(\"\\r\")) {\n    sourceDelimiter+=\"\\r\";\n  }\n  StringTokenizer st=new StringTokenizer(text,sourceDelimiter);\n  while (st.hasMoreTokens()) {\n    tokens.add(st.nextToken());\n  }\n  StringBuilder buf=new StringBuilder();\n  if (!CommonUtils.isEmpty(settings.getLeadingText())) {\n    buf.append(settings.getLeadingText());\n  }\n  int lastLineFeed=0;\n  for (int i=0; i < tokens.size(); i++) {\n    String token=tokens.get(i);\n    int leadingSpaces=0, trailingSpaces=0;\n{\n      boolean inIdentifier=false;\n      for (int k=0; k < token.length(); k++) {\n        char ch=token.charAt(k);\n        if (Character.isWhitespace(ch)) {\n          if (inIdentifier) {\n            trailingSpaces++;\n          }\n else {\n            buf.append(ch);\n            leadingSpaces++;\n          }\n        }\n else {\n          if (trailingSpaces > 0) {\n            trailingSpaces=0;\n          }\n          inIdentifier=true;\n        }\n      }\n    }\n    if (leadingSpaces > 0 || trailingSpaces > 0) {\n      token=token.substring(leadingSpaces,token.length() - trailingSpaces);\n    }\n    if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n      buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n      lastLineFeed+=settings.getQuoteString().length() * 2 + token.length();\n    }\n else {\n      buf.append(token);\n      lastLineFeed+=token.length();\n    }\n    if (i < tokens.size() - 1) {\n      buf.append(settings.getTargetDelimiter());\n      lastLineFeed+=settings.getTargetDelimiter().length();\n      if (settings.wrapLine > 0) {\n        int nextTokenLength=tokens.get(i + 1).length();\n        if (!CommonUtils.isEmpty(settings.getQuoteString())) {\n          nextTokenLength+=settings.getQuoteString().length() * 2;\n        }\n        if (lastLineFeed + nextTokenLength > settings.wrapLine) {\n          buf.append(\"\\n\");\n          lastLineFeed=0;\n        }\n      }\n    }\n  }\n  if (!CommonUtils.isEmpty(settings.getTrailingText())) {\n    buf.append(settings.getTrailingText());\n  }\n  return buf.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 394,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 102
      },
      "nodeContext" : "buf.append(settings.getQuoteString()).append(token).append(settings.getQuoteString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 125,
    "startColumnNumber" : 16,
    "endLineNumber" : 125,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}