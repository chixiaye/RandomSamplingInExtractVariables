{
  "id" : 7,
  "expression" : "\"Expecting bigint for column %s, found %s\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ChecksumResult.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Expecting bigint for column %s, found %s\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 79,
      "startColumnNumber" : 53,
      "endLineNumber" : 79,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 129
      },
      "nodeContext" : "checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 130
      },
      "nodeContext" : "checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 78,
        "startColumnNumber" : 64,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,checksum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 78,
        "startColumnNumber" : 17,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (metaData.getColumnType(i) == Types.BIGINT) {\n  checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,checksum);\n}\n else {\n  checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (metaData.getColumnType(i) == Types.DOUBLE) {\n  checkState(checksum instanceof Double,\"Expecting double for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,checksum);\n}\n else if (metaData.getColumnType(i) == Types.BIGINT) {\n  checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,checksum);\n}\n else {\n  checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n  checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 66,
        "startColumnNumber" : 61,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String columnName=metaData.getColumnName(i);\n  Object checksum=resultSet.getObject(i);\n  if (checksum == null) {\n    checksums.put(columnName,null);\n    continue;\n  }\n  if (metaData.getColumnType(i) == Types.DOUBLE) {\n    checkState(checksum instanceof Double,\"Expecting double for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,checksum);\n  }\n else   if (metaData.getColumnType(i) == Types.BIGINT) {\n    checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,checksum);\n  }\n else {\n    checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=2; i <= metaData.getColumnCount(); i++) {\n  String columnName=metaData.getColumnName(i);\n  Object checksum=resultSet.getObject(i);\n  if (checksum == null) {\n    checksums.put(columnName,null);\n    continue;\n  }\n  if (metaData.getColumnType(i) == Types.DOUBLE) {\n    checkState(checksum instanceof Double,\"Expecting double for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,checksum);\n  }\n else   if (metaData.getColumnType(i) == Types.BIGINT) {\n    checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,checksum);\n  }\n else {\n    checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n    checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long rowCount=resultSet.getLong(1);\n  ResultSetMetaData metaData=resultSet.getMetaData();\n  Map<String,Object> checksums=new HashMap<>(metaData.getColumnCount());\n  for (int i=2; i <= metaData.getColumnCount(); i++) {\n    String columnName=metaData.getColumnName(i);\n    Object checksum=resultSet.getObject(i);\n    if (checksum == null) {\n      checksums.put(columnName,null);\n      continue;\n    }\n    if (metaData.getColumnType(i) == Types.DOUBLE) {\n      checkState(checksum instanceof Double,\"Expecting double for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,checksum);\n    }\n else     if (metaData.getColumnType(i) == Types.BIGINT) {\n      checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,checksum);\n    }\n else {\n      checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n    }\n  }\n  return Optional.of(new ChecksumResult(rowCount,checksums));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1460,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Optional<ChecksumResult> fromResultSet(ResultSet resultSet) throws SQLException {\n  long rowCount=resultSet.getLong(1);\n  ResultSetMetaData metaData=resultSet.getMetaData();\n  Map<String,Object> checksums=new HashMap<>(metaData.getColumnCount());\n  for (int i=2; i <= metaData.getColumnCount(); i++) {\n    String columnName=metaData.getColumnName(i);\n    Object checksum=resultSet.getObject(i);\n    if (checksum == null) {\n      checksums.put(columnName,null);\n      continue;\n    }\n    if (metaData.getColumnType(i) == Types.DOUBLE) {\n      checkState(checksum instanceof Double,\"Expecting double for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,checksum);\n    }\n else     if (metaData.getColumnType(i) == Types.BIGINT) {\n      checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,checksum);\n    }\n else {\n      checkState(checksum instanceof byte[],\"Expecting binary for column %s, found %s\",columnName,checksum.getClass());\n      checksums.put(columnName,new SqlVarbinary((byte[])checksum));\n    }\n  }\n  return Optional.of(new ChecksumResult(rowCount,checksums));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 130
      },
      "nodeContext" : "checkState(checksum instanceof Long,\"Expecting bigint for column %s, found %s\",columnName,checksum.getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 79,
    "startColumnNumber" : 53,
    "endLineNumber" : 79,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}