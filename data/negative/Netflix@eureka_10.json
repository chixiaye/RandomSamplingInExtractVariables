{
  "id" : 10,
  "expression" : "Source.class",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-write-server/src/test/java/com/netflix/eureka2/server/channel/ReceiverReplicationChannelTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Source.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 122,
      "startColumnNumber" : 60,
      "endLineNumber" : 122,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 122,
        "startColumnNumber" : 56,
        "endLineNumber" : 122,
        "endColumnNumber" : 73
      },
      "nodeContext" : "any(Source.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 122,
        "startColumnNumber" : 13,
        "endLineNumber" : 122,
        "endColumnNumber" : 74
      },
      "nodeContext" : "registry.register(any(InstanceInfo.class),any(Source.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 75
      },
      "nodeContext" : "when(registry.register(any(InstanceInfo.class),any(Source.class)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 110
      },
      "nodeContext" : "when(registry.register(any(InstanceInfo.class),any(Source.class))).thenReturn(Observable.just(false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 111
      },
      "nodeContext" : "when(registry.register(any(InstanceInfo.class),any(Source.class))).thenReturn(Observable.just(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 116,
        "startColumnNumber" : 69,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  handshakeAndRegister(APP_INFO);\n  InstanceInfo infoUpdate=new InstanceInfo.Builder().withInstanceInfo(APP_INFO).withApp(\"myNewName\").build();\n  when(registry.register(any(InstanceInfo.class),any(Source.class))).thenReturn(Observable.just(false));\n  incomingSubject.onNext(new RegisterCopy(infoUpdate));\n  verify(registry,times(2)).register(infoCaptor.capture(),sourceCaptor.capture());\n  List<InstanceInfo> capturedInfos=new ArrayList<>();\n  for (  InstanceInfo captured : infoCaptor.getAllValues()) {\n    capturedInfos.add(new InstanceInfo.Builder().withInstanceInfo(captured).build());\n  }\n  assertThat(capturedInfos,contains(APP_INFO,infoUpdate));\n  verifyInstanceAndSourceCaptures(infoUpdate,SENDER_ID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHandlesRegisterThatIsAnUpdate() throws Exception {\n  handshakeAndRegister(APP_INFO);\n  InstanceInfo infoUpdate=new InstanceInfo.Builder().withInstanceInfo(APP_INFO).withApp(\"myNewName\").build();\n  when(registry.register(any(InstanceInfo.class),any(Source.class))).thenReturn(Observable.just(false));\n  incomingSubject.onNext(new RegisterCopy(infoUpdate));\n  verify(registry,times(2)).register(infoCaptor.capture(),sourceCaptor.capture());\n  List<InstanceInfo> capturedInfos=new ArrayList<>();\n  for (  InstanceInfo captured : infoCaptor.getAllValues()) {\n    capturedInfos.add(new InstanceInfo.Builder().withInstanceInfo(captured).build());\n  }\n  assertThat(capturedInfos,contains(APP_INFO,infoUpdate));\n  verifyInstanceAndSourceCaptures(infoUpdate,SENDER_ID);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 111
      },
      "nodeContext" : "when(registry.register(any(InstanceInfo.class),any(Source.class))).thenReturn(Observable.just(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.netflix.eureka2.registry.Source>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 122,
    "startColumnNumber" : 60,
    "endLineNumber" : 122,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}