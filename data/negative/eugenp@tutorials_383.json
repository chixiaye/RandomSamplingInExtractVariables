{
  "id" : 383,
  "expression" : "\"book SecondResult\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/rxjava-operators/src/test/java/com/baeldung/rxjava/operators/RxFlatmapAndSwitchmapUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"book SecondResult\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 39,
      "startColumnNumber" : 30,
      "endLineNumber" : 39,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 36,
        "startColumnNumber" : 33,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(actualOutput,hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(actualOutput,hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 18,
        "startColumnNumber" : 75,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> actualOutput=new ArrayList<>();\n  final TestScheduler scheduler=new TestScheduler();\n  final List<String> keywordToSearch=Arrays.asList(\"b\",\"bo\",\"boo\",\"book\",\"books\");\n  Observable.fromIterable(keywordToSearch).flatMap(s -> Observable.just(s + \" FirstResult\",s + \" SecondResult\").delay(10,TimeUnit.SECONDS,scheduler)).toList().doOnSuccess(s -> actualOutput.addAll(s)).subscribe();\n  scheduler.advanceTimeBy(1,TimeUnit.MINUTES);\n  assertThat(actualOutput,hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenObservable_whenFlatmap_shouldAssertAllItemsReturned(){\n  List<String> actualOutput=new ArrayList<>();\n  final TestScheduler scheduler=new TestScheduler();\n  final List<String> keywordToSearch=Arrays.asList(\"b\",\"bo\",\"boo\",\"book\",\"books\");\n  Observable.fromIterable(keywordToSearch).flatMap(s -> Observable.just(s + \" FirstResult\",s + \" SecondResult\").delay(10,TimeUnit.SECONDS,scheduler)).toList().doOnSuccess(s -> actualOutput.addAll(s)).subscribe();\n  scheduler.advanceTimeBy(1,TimeUnit.MINUTES);\n  assertThat(actualOutput,hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 36,
        "startColumnNumber" : 33,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "hasItems(\"b FirstResult\",\"b SecondResult\",\"boo FirstResult\",\"boo SecondResult\",\"bo FirstResult\",\"bo SecondResult\",\"book FirstResult\",\"book SecondResult\",\"books FirstResult\",\"books SecondResult\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 39,
    "startColumnNumber" : 30,
    "endLineNumber" : 39,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}