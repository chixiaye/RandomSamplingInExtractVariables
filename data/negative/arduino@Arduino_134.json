{
  "id" : 134,
  "expression" : "\"Forcing reset using 1200bps open/close on port {0}\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "24b32422e24e3dbffbb25a16a6ab3d8d533a3b5d",
  "filePath" : "arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Forcing reset using 1200bps open/close on port {0}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 121,
      "startColumnNumber" : 28,
      "endLineNumber" : 121,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 121,
        "startColumnNumber" : 26,
        "endLineNumber" : 121,
        "endColumnNumber" : 81
      },
      "nodeContext" : "_(\"Forcing reset using 1200bps open/close on port {0}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 121,
        "startColumnNumber" : 14,
        "endLineNumber" : 121,
        "endColumnNumber" : 94
      },
      "nodeContext" : "I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 95
      },
      "nodeContext" : "System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 96
      },
      "nodeContext" : "System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 119,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (verbose) System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 118,
        "startColumnNumber" : 41,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (verbose)   System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n  Serial.touchForCDCReset(uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (before.contains(uploadPort)) {\n  if (verbose)   System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n  Serial.touchForCDCReset(uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 115,
        "startColumnNumber" : 10,
        "endLineNumber" : 132,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  List<String> before=Serial.list();\n  if (before.contains(uploadPort)) {\n    if (verbose)     System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n    Serial.touchForCDCReset(uploadPort);\n  }\n  Thread.sleep(400);\n  if (waitForUploadPort) {\n    uploadPort=waitForUploadPort(uploadPort,before);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  List<String> before=Serial.list();\n  if (before.contains(uploadPort)) {\n    if (verbose)     System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n    Serial.touchForCDCReset(uploadPort);\n  }\n  Thread.sleep(400);\n  if (waitForUploadPort) {\n    uploadPort=waitForUploadPort(uploadPort,before);\n  }\n}\n catch (SerialException e) {\n  throw new RunnerException(e);\n}\ncatch (InterruptedException e) {\n  throw new RunnerException(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doTouch) {\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 121,
        "startColumnNumber" : 14,
        "endLineNumber" : 121,
        "endColumnNumber" : 94
      },
      "nodeContext" : "I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 121,
    "startColumnNumber" : 28,
    "endLineNumber" : 121,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}