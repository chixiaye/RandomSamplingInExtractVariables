{
  "id" : 213,
  "expression" : "5",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/BellmanFordAdjacencyList.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 22,
      "endLineNumber" : 84,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 27
      },
      "nodeContext" : "addEdge(graph,1,5,4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,1,5,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 75,
        "startColumnNumber" : 41,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,1,5,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 19,
      "endLineNumber" : 86,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 27
      },
      "nodeContext" : "addEdge(graph,5,6,5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,6,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 75,
        "startColumnNumber" : 41,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,6,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 25,
      "endLineNumber" : 86,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 27
      },
      "nodeContext" : "addEdge(graph,5,6,5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,6,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 75,
        "startColumnNumber" : 41,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,6,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 88,
      "startColumnNumber" : 19,
      "endLineNumber" : 88,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 27
      },
      "nodeContext" : "addEdge(graph,5,7,3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,7,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 75,
        "startColumnNumber" : 41,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int E=10, V=9, start=0;\n  List<Edge>[] graph=createGraph(V);\n  addEdge(graph,0,1,1);\n  addEdge(graph,1,2,1);\n  addEdge(graph,2,4,1);\n  addEdge(graph,4,3,-3);\n  addEdge(graph,3,2,1);\n  addEdge(graph,1,5,4);\n  addEdge(graph,1,6,4);\n  addEdge(graph,5,6,5);\n  addEdge(graph,6,7,4);\n  addEdge(graph,5,7,3);\n  double[] d=bellmanFord(graph,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 28
      },
      "nodeContext" : "addEdge(graph,5,7,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 22,
    "endLineNumber" : 84,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 19,
    "endLineNumber" : 86,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 25,
    "endLineNumber" : 86,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 88,
    "startColumnNumber" : 19,
    "endLineNumber" : 88,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}