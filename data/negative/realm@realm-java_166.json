{
  "id" : 166,
  "expression" : "999999999",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/internal/JNINativeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "999999999",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 44,
      "startColumnNumber" : 83,
      "endLineNumber" : 44,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 44,
        "startColumnNumber" : 37,
        "endLineNumber" : 44,
        "endColumnNumber" : 93
      },
      "nodeContext" : "TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 43,
        "startColumnNumber" : 37,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999));\n  assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp((Long.MAX_VALUE / 1000) + 1,0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void clampMaxTimestamps(){\n  assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999));\n  assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp((Long.MAX_VALUE / 1000) + 1,0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,TestUtil.getDateFromTimestamp(Long.MAX_VALUE,999999999));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 44,
    "startColumnNumber" : 83,
    "endLineNumber" : 44,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}