{
  "id" : 386,
  "expression" : "c",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/fibonacciheap/FibonacciHeapTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 117,
      "startColumnNumber" : 4,
      "endLineNumber" : 117,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "c.add(50)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(50);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(50);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  }, {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 118,
      "startColumnNumber" : 4,
      "endLineNumber" : 118,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 15
      },
      "nodeContext" : "c.add(100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 15
      },
      "nodeContext" : "c.add(100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  }, {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 119,
      "startColumnNumber" : 4,
      "endLineNumber" : 119,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "c.add(20)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(20);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(20);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  }, {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 120,
      "startColumnNumber" : 4,
      "endLineNumber" : 120,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "c.add(21)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(21);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 14
      },
      "nodeContext" : "c.add(21);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  }, {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 122,
      "startColumnNumber" : 17,
      "endLineNumber" : 122,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 19
      },
      "nodeContext" : "queue.addAll(c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 20
      },
      "nodeContext" : "queue.addAll(c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 20
      },
      "nodeContext" : "queue.addAll(c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  }, {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 125,
      "startColumnNumber" : 33,
      "endLineNumber" : 125,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 125,
        "startColumnNumber" : 15,
        "endLineNumber" : 125,
        "endColumnNumber" : 35
      },
      "nodeContext" : "queue.containsAll(c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(queue.containsAll(c))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(queue.containsAll(c)).isEqualTo(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(queue.containsAll(c)).isEqualTo(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addAllAndContinsItem(){\n  Collection<Integer> c=new ArrayList<Integer>();\n  c.add(50);\n  c.add(100);\n  c.add(20);\n  c.add(21);\n  queue.addAll(c);\n  assertThat(queue.isEmpty()).isEqualTo(false);\n  assertThat(queue.containsAll(c)).isEqualTo(true);\n  assertThat(queue.contains(100)).isEqualTo(true);\n  assertThat(queue.contains(21)).isEqualTo(true);\n  assertThat(queue.contains(50)).isEqualTo(true);\n  assertThat(queue.contains(20)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(queue.containsAll(c)).isEqualTo(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 117,
    "startColumnNumber" : 4,
    "endLineNumber" : 117,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 118,
    "startColumnNumber" : 4,
    "endLineNumber" : 118,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 119,
    "startColumnNumber" : 4,
    "endLineNumber" : 119,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 120,
    "startColumnNumber" : 4,
    "endLineNumber" : 120,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 122,
    "startColumnNumber" : 17,
    "endLineNumber" : 122,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 125,
    "startColumnNumber" : 33,
    "endLineNumber" : 125,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}