{
  "id" : 476,
  "expression" : "map",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/filters/PropertyFilter_double.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 96,
      "startColumnNumber" : 8,
      "endLineNumber" : 96,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 37
      },
      "nodeContext" : "map.put(\"name\",\"chennp2008\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"name\",\"chennp2008\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 80,
        "startColumnNumber" : 42,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      if (\"name\".equals(name)) {\n        return true;\n      }\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"chennp2008\");\n  serializer.write(map);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"name\\\":\\\"chennp2008\\\"}\",text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_3() throws Exception {\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      if (\"name\".equals(name)) {\n        return true;\n      }\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"chennp2008\");\n  serializer.write(map);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"name\\\":\\\"chennp2008\\\"}\",text);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"name\",\"chennp2008\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 97,
      "startColumnNumber" : 25,
      "endLineNumber" : 97,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 29
      },
      "nodeContext" : "serializer.write(map)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 30
      },
      "nodeContext" : "serializer.write(map);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 80,
        "startColumnNumber" : 42,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      if (\"name\".equals(name)) {\n        return true;\n      }\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"chennp2008\");\n  serializer.write(map);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"name\\\":\\\"chennp2008\\\"}\",text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_3() throws Exception {\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      if (\"name\".equals(name)) {\n        return true;\n      }\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"chennp2008\");\n  serializer.write(map);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"name\\\":\\\"chennp2008\\\"}\",text);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 30
      },
      "nodeContext" : "serializer.write(map);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 96,
    "startColumnNumber" : 8,
    "endLineNumber" : 96,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 97,
    "startColumnNumber" : 25,
    "endLineNumber" : 97,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}