{
  "id" : 256,
  "expression" : "wavesPassed",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "86c2fe880585bab8824356d7ed2e11a41df2b5e0",
  "filePath" : "core/src/mindustry/game/Universe.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "wavesPassed",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 149,
      "startColumnNumber" : 158,
      "endLineNumber" : 149,
      "endColumnNumber" : 169
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 149,
        "startColumnNumber" : 50,
        "endLineNumber" : 149,
        "endColumnNumber" : 170
      },
      "nodeContext" : "SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 149,
        "startColumnNumber" : 39,
        "endLineNumber" : 149,
        "endColumnNumber" : 175
      },
      "nodeContext" : "attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 149,
        "startColumnNumber" : 30,
        "endLineNumber" : 149,
        "endColumnNumber" : 175
      },
      "nodeContext" : "damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 176
      },
      "nodeContext" : "float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 141,
        "startColumnNumber" : 47,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1826,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!sector.isBeingPlayed()) {\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2897,
        "startLineNumber" : 136,
        "startColumnNumber" : 36,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 311,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2917,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sector.hasSave()) {\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2949,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2984,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Sector sector : planet.sectors) {\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 324,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 134,
        "startColumnNumber" : 46,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 325,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Planet planet : content.planets()) {\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 333,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 357,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3303,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Runs possible events. Resets event counter. \n */\npublic void runTurn(){\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 176
      },
      "nodeContext" : "float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "wavesPassed",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 152,
      "startColumnNumber" : 50,
      "endLineNumber" : 152,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 152,
        "startColumnNumber" : 28,
        "endLineNumber" : 152,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sector.setWavesPassed(wavesPassed)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 152,
        "startColumnNumber" : 28,
        "endLineNumber" : 152,
        "endColumnNumber" : 63
      },
      "nodeContext" : "sector.setWavesPassed(wavesPassed);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 151,
        "startColumnNumber" : 36,
        "endLineNumber" : 153,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  sector.setWavesPassed(wavesPassed);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 151,
        "startColumnNumber" : 24,
        "endLineNumber" : 153,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (attacked) {\n  sector.setWavesPassed(wavesPassed);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 141,
        "startColumnNumber" : 47,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1826,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!sector.isBeingPlayed()) {\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2897,
        "startLineNumber" : 136,
        "startColumnNumber" : 36,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 311,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2917,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sector.hasSave()) {\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2949,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2984,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Sector sector : planet.sectors) {\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 324,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 134,
        "startColumnNumber" : 46,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 325,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Planet planet : content.planets()) {\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 333,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 357,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3303,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Runs possible events. Resets event counter. \n */\npublic void runTurn(){\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 152,
        "startColumnNumber" : 28,
        "endLineNumber" : 152,
        "endColumnNumber" : 63
      },
      "nodeContext" : "sector.setWavesPassed(wavesPassed);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "wavesPassed",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 169,
      "startColumnNumber" : 45,
      "endLineNumber" : 169,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 169,
        "startColumnNumber" : 45,
        "endLineNumber" : 169,
        "endColumnNumber" : 60
      },
      "nodeContext" : "wavesPassed > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 60
      },
      "nodeContext" : "attacked && wavesPassed > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 133
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 169,
        "startColumnNumber" : 30,
        "endLineNumber" : 175,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n  sector.setUnderAttack(false);\n  Events.fire(new SectorCaptureEvent(state.rules.sector));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 158,
        "startColumnNumber" : 24,
        "endLineNumber" : 175,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (attacked && damage >= 0.999f) {\n  Events.fire(new SectorLoseEvent(sector));\n  sector.save.delete();\n  sector.setExtraItems(new ItemSeq());\n  sector.save=null;\n  sector.setDamage(0f);\n}\n else if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n  sector.setUnderAttack(false);\n  Events.fire(new SectorCaptureEvent(state.rules.sector));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 141,
        "startColumnNumber" : 47,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1826,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!sector.isBeingPlayed()) {\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2897,
        "startLineNumber" : 136,
        "startColumnNumber" : 36,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 311,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2917,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sector.hasSave()) {\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2949,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2984,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Sector sector : planet.sectors) {\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 324,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 134,
        "startColumnNumber" : 46,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 325,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Planet planet : content.planets()) {\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 333,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 357,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3303,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Runs possible events. Resets event counter. \n */\npublic void runTurn(){\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "wavesPassed",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 169,
      "startColumnNumber" : 88,
      "endLineNumber" : 169,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 169,
        "startColumnNumber" : 64,
        "endLineNumber" : 169,
        "endColumnNumber" : 99
      },
      "nodeContext" : "sector.save.meta.wave + wavesPassed",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 169,
        "startColumnNumber" : 64,
        "endLineNumber" : 169,
        "endColumnNumber" : 133
      },
      "nodeContext" : "sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 133
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 169,
        "startColumnNumber" : 30,
        "endLineNumber" : 175,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n  sector.setUnderAttack(false);\n  Events.fire(new SectorCaptureEvent(state.rules.sector));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 158,
        "startColumnNumber" : 24,
        "endLineNumber" : 175,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (attacked && damage >= 0.999f) {\n  Events.fire(new SectorLoseEvent(sector));\n  sector.save.delete();\n  sector.setExtraItems(new ItemSeq());\n  sector.save=null;\n  sector.setDamage(0f);\n}\n else if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n  sector.setUnderAttack(false);\n  Events.fire(new SectorCaptureEvent(state.rules.sector));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 141,
        "startColumnNumber" : 47,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1826,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!sector.isBeingPlayed()) {\n  int secPassed=sector.getSecondsPassed() + actuallyPassed;\n  sector.setSecondsPassed(secPassed);\n  boolean attacked=sector.isUnderAttack();\n  int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n  float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n  if (attacked) {\n    sector.setWavesPassed(wavesPassed);\n  }\n  sector.setDamage(damage);\n  if (attacked && damage >= 0.999f) {\n    Events.fire(new SectorLoseEvent(sector));\n    sector.save.delete();\n    sector.setExtraItems(new ItemSeq());\n    sector.save=null;\n    sector.setDamage(0f);\n  }\n else   if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n    sector.setUnderAttack(false);\n    Events.fire(new SectorCaptureEvent(state.rules.sector));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2897,
        "startLineNumber" : 136,
        "startColumnNumber" : 36,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 311,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2917,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sector.hasSave()) {\n  int spent=(int)(sector.getTimeSpent() / 60);\n  int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n  if (!sector.isBeingPlayed()) {\n    int secPassed=sector.getSecondsPassed() + actuallyPassed;\n    sector.setSecondsPassed(secPassed);\n    boolean attacked=sector.isUnderAttack();\n    int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n    float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n    if (attacked) {\n      sector.setWavesPassed(wavesPassed);\n    }\n    sector.setDamage(damage);\n    if (attacked && damage >= 0.999f) {\n      Events.fire(new SectorLoseEvent(sector));\n      sector.save.delete();\n      sector.setExtraItems(new ItemSeq());\n      sector.save=null;\n      sector.setDamage(0f);\n    }\n else     if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n      sector.setUnderAttack(false);\n      Events.fire(new SectorCaptureEvent(state.rules.sector));\n    }\n  }\n  if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n    Sector to=sector.save.meta.secinfo.destination;\n    if (to.save != null) {\n      ItemSeq items=new ItemSeq();\n      sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n      to.addItems(items);\n    }\n  }\n  sector.setTimeSpent(0f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2949,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2984,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Sector sector : planet.sectors) {\n  if (sector.hasSave()) {\n    int spent=(int)(sector.getTimeSpent() / 60);\n    int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n    if (!sector.isBeingPlayed()) {\n      int secPassed=sector.getSecondsPassed() + actuallyPassed;\n      sector.setSecondsPassed(secPassed);\n      boolean attacked=sector.isUnderAttack();\n      int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n      float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n      if (attacked) {\n        sector.setWavesPassed(wavesPassed);\n      }\n      sector.setDamage(damage);\n      if (attacked && damage >= 0.999f) {\n        Events.fire(new SectorLoseEvent(sector));\n        sector.save.delete();\n        sector.setExtraItems(new ItemSeq());\n        sector.save=null;\n        sector.setDamage(0f);\n      }\n else       if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n        sector.setUnderAttack(false);\n        Events.fire(new SectorCaptureEvent(state.rules.sector));\n      }\n    }\n    if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n      Sector to=sector.save.meta.secinfo.destination;\n      if (to.save != null) {\n        ItemSeq items=new ItemSeq();\n        sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n        to.addItems(items);\n      }\n    }\n    sector.setTimeSpent(0f);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 324,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 134,
        "startColumnNumber" : 46,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 325,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Planet planet : content.planets()) {\n  for (  Sector sector : planet.sectors) {\n    if (sector.hasSave()) {\n      int spent=(int)(sector.getTimeSpent() / 60);\n      int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n      if (!sector.isBeingPlayed()) {\n        int secPassed=sector.getSecondsPassed() + actuallyPassed;\n        sector.setSecondsPassed(secPassed);\n        boolean attacked=sector.isUnderAttack();\n        int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n        float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n        if (attacked) {\n          sector.setWavesPassed(wavesPassed);\n        }\n        sector.setDamage(damage);\n        if (attacked && damage >= 0.999f) {\n          Events.fire(new SectorLoseEvent(sector));\n          sector.save.delete();\n          sector.setExtraItems(new ItemSeq());\n          sector.save=null;\n          sector.setDamage(0f);\n        }\n else         if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n          sector.setUnderAttack(false);\n          Events.fire(new SectorCaptureEvent(state.rules.sector));\n        }\n      }\n      if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n        Sector to=sector.save.meta.secinfo.destination;\n        if (to.save != null) {\n          ItemSeq items=new ItemSeq();\n          sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n          to.addItems(items);\n        }\n      }\n      sector.setTimeSpent(0f);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 333,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 357,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3303,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Runs possible events. Resets event counter. \n */\npublic void runTurn(){\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 169,
        "startColumnNumber" : 33,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 149,
    "startColumnNumber" : 158,
    "endLineNumber" : 149,
    "endColumnNumber" : 169
  }, {
    "charLength" : 11,
    "startLineNumber" : 152,
    "startColumnNumber" : 50,
    "endLineNumber" : 152,
    "endColumnNumber" : 61
  }, {
    "charLength" : 11,
    "startLineNumber" : 169,
    "startColumnNumber" : 45,
    "endLineNumber" : 169,
    "endColumnNumber" : 56
  }, {
    "charLength" : 11,
    "startLineNumber" : 169,
    "startColumnNumber" : 88,
    "endLineNumber" : 169,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}