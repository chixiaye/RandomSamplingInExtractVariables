{
  "id" : 378,
  "expression" : "Math.round(releaseCount * 1.0 / testCount)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-boot-modules/spring-boot/src/test/java/com/baeldung/kong/KongLoadBalanceLiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.round(releaseCount * 1.0 / testCount)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Math.round(releaseCount * 1.0 / testCount) == 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertTrue(Math.round(releaseCount * 1.0 / testCount) == 4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertTrue(Math.round(releaseCount * 1.0 / testCount) == 4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 43,
        "startColumnNumber" : 89,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UpstreamObject upstream=new UpstreamObject(\"stock.api.service\");\n  ResponseEntity<String> addUpstreamResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams\",new HttpEntity<>(upstream),String.class);\n  assertTrue(HttpStatus.CREATED == addUpstreamResp.getStatusCode() || HttpStatus.CONFLICT == addUpstreamResp.getStatusCode());\n  TargetObject testTarget=new TargetObject(\"localhost:8080\",10);\n  ResponseEntity<String> addTargetResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams/stock.api.service/targets\",new HttpEntity<>(testTarget),String.class);\n  assertTrue(HttpStatus.CREATED == addTargetResp.getStatusCode() || HttpStatus.CONFLICT == addTargetResp.getStatusCode());\n  TargetObject releaseTarget=new TargetObject(\"localhost:9090\",40);\n  addTargetResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams/stock.api.service/targets\",new HttpEntity<>(releaseTarget),String.class);\n  assertTrue(HttpStatus.CREATED == addTargetResp.getStatusCode() || HttpStatus.CONFLICT == addTargetResp.getStatusCode());\n  APIObject stockAPI=new APIObject(\"balanced-stock-api\",\"balanced.stock.api\",\"http://stock.api.service\",\"/\");\n  HttpEntity<APIObject> apiEntity=new HttpEntity<>(stockAPI);\n  ResponseEntity<String> addAPIResp=restTemplate.postForEntity(\"http://localhost:8001/apis\",apiEntity,String.class);\n  assertTrue(HttpStatus.CREATED == addAPIResp.getStatusCode() || HttpStatus.CONFLICT == addAPIResp.getStatusCode());\n  HttpHeaders headers=new HttpHeaders();\n  headers.set(\"Host\",\"balanced.stock.api\");\n  for (int i=0; i < 1000; i++) {\n    RequestEntity<String> requestEntity=new RequestEntity<>(headers,HttpMethod.GET,new URI(\"http://localhost:8000/springbootapp/stock/btc\"));\n    ResponseEntity<String> stockPriceResp=restTemplate.exchange(requestEntity,String.class);\n    assertEquals(\"10000\",stockPriceResp.getBody());\n  }\n  int releaseCount=restTemplate.getForObject(\"http://localhost:9090/springbootapp/stock/reqcount\",Integer.class);\n  int testCount=restTemplate.getForObject(\"http://localhost:8080/springbootapp/stock/reqcount\",Integer.class);\n  assertTrue(Math.round(releaseCount * 1.0 / testCount) == 4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenKongAdminAPI_whenAddAPI_thenAPIAccessibleViaKong() throws Exception {\n  UpstreamObject upstream=new UpstreamObject(\"stock.api.service\");\n  ResponseEntity<String> addUpstreamResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams\",new HttpEntity<>(upstream),String.class);\n  assertTrue(HttpStatus.CREATED == addUpstreamResp.getStatusCode() || HttpStatus.CONFLICT == addUpstreamResp.getStatusCode());\n  TargetObject testTarget=new TargetObject(\"localhost:8080\",10);\n  ResponseEntity<String> addTargetResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams/stock.api.service/targets\",new HttpEntity<>(testTarget),String.class);\n  assertTrue(HttpStatus.CREATED == addTargetResp.getStatusCode() || HttpStatus.CONFLICT == addTargetResp.getStatusCode());\n  TargetObject releaseTarget=new TargetObject(\"localhost:9090\",40);\n  addTargetResp=restTemplate.postForEntity(\"http://localhost:8001/upstreams/stock.api.service/targets\",new HttpEntity<>(releaseTarget),String.class);\n  assertTrue(HttpStatus.CREATED == addTargetResp.getStatusCode() || HttpStatus.CONFLICT == addTargetResp.getStatusCode());\n  APIObject stockAPI=new APIObject(\"balanced-stock-api\",\"balanced.stock.api\",\"http://stock.api.service\",\"/\");\n  HttpEntity<APIObject> apiEntity=new HttpEntity<>(stockAPI);\n  ResponseEntity<String> addAPIResp=restTemplate.postForEntity(\"http://localhost:8001/apis\",apiEntity,String.class);\n  assertTrue(HttpStatus.CREATED == addAPIResp.getStatusCode() || HttpStatus.CONFLICT == addAPIResp.getStatusCode());\n  HttpHeaders headers=new HttpHeaders();\n  headers.set(\"Host\",\"balanced.stock.api\");\n  for (int i=0; i < 1000; i++) {\n    RequestEntity<String> requestEntity=new RequestEntity<>(headers,HttpMethod.GET,new URI(\"http://localhost:8000/springbootapp/stock/btc\"));\n    ResponseEntity<String> stockPriceResp=restTemplate.exchange(requestEntity,String.class);\n    assertEquals(\"10000\",stockPriceResp.getBody());\n  }\n  int releaseCount=restTemplate.getForObject(\"http://localhost:9090/springbootapp/stock/reqcount\",Integer.class);\n  int testCount=restTemplate.getForObject(\"http://localhost:8080/springbootapp/stock/reqcount\",Integer.class);\n  assertTrue(Math.round(releaseCount * 1.0 / testCount) == 4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertTrue(Math.round(releaseCount * 1.0 / testCount) == 4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}