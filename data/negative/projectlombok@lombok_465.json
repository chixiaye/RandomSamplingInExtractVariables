{
  "id" : 465,
  "expression" : "v == null",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/core/AnnotationValues.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "v == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 176,
      "startColumnNumber" : 8,
      "endLineNumber" : 176,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (v == null) {\n  Object defaultValue=method.getDefaultValue();\n  if (defaultValue != null)   return defaultValue;\n  throw makeNoDefaultFail(v,method);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1742,
        "startLineNumber" : 174,
        "startColumnNumber" : 85,
        "endLineNumber" : 226,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  AnnotationValue v=values.get(method.getName());\n  if (v == null) {\n    Object defaultValue=method.getDefaultValue();\n    if (defaultValue != null)     return defaultValue;\n    throw makeNoDefaultFail(v,method);\n  }\n  boolean isArray=false;\n  Class<?> expected=method.getReturnType();\n  Object array=null;\n  if (expected.isArray()) {\n    isArray=true;\n    expected=expected.getComponentType();\n    array=Array.newInstance(expected,v.valueGuesses.size());\n  }\n  if (!isArray && v.valueGuesses.size() > 1) {\n    throw new AnnotationValueDecodeFail(v,\"Expected a single value, but \" + method.getName() + \" has an array of values\",-1);\n  }\n  if (v.valueGuesses.size() == 0 && !isArray) {\n    Object defaultValue=method.getDefaultValue();\n    if (defaultValue == null)     throw makeNoDefaultFail(v,method);\n    return defaultValue;\n  }\n  int idx=0;\n  for (  Object guess : v.valueGuesses) {\n    Object result=guess == null ? null : guessToType(guess,expected,v,idx);\n    if (!isArray) {\n      if (result == null) {\n        Object defaultValue=method.getDefaultValue();\n        if (defaultValue == null)         throw makeNoDefaultFail(v,method);\n        return defaultValue;\n      }\n      return result;\n    }\n    if (result == null) {\n      if (v.valueGuesses.size() == 1) {\n        Object defaultValue=method.getDefaultValue();\n        if (defaultValue == null)         throw makeNoDefaultFail(v,method);\n        return defaultValue;\n      }\n      throw new AnnotationValueDecodeFail(v,\"I can't make sense of this annotation value. Try using a fully qualified literal.\",idx);\n    }\n    Array.set(array,idx++,result);\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 250,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1824,
        "startLineNumber" : 174,
        "startColumnNumber" : 3,
        "endLineNumber" : 226,
        "endColumnNumber" : 4
      },
      "nodeContext" : "public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  AnnotationValue v=values.get(method.getName());\n  if (v == null) {\n    Object defaultValue=method.getDefaultValue();\n    if (defaultValue != null)     return defaultValue;\n    throw makeNoDefaultFail(v,method);\n  }\n  boolean isArray=false;\n  Class<?> expected=method.getReturnType();\n  Object array=null;\n  if (expected.isArray()) {\n    isArray=true;\n    expected=expected.getComponentType();\n    array=Array.newInstance(expected,v.valueGuesses.size());\n  }\n  if (!isArray && v.valueGuesses.size() > 1) {\n    throw new AnnotationValueDecodeFail(v,\"Expected a single value, but \" + method.getName() + \" has an array of values\",-1);\n  }\n  if (v.valueGuesses.size() == 0 && !isArray) {\n    Object defaultValue=method.getDefaultValue();\n    if (defaultValue == null)     throw makeNoDefaultFail(v,method);\n    return defaultValue;\n  }\n  int idx=0;\n  for (  Object guess : v.valueGuesses) {\n    Object result=guess == null ? null : guessToType(guess,expected,v,idx);\n    if (!isArray) {\n      if (result == null) {\n        Object defaultValue=method.getDefaultValue();\n        if (defaultValue == null)         throw makeNoDefaultFail(v,method);\n        return defaultValue;\n      }\n      return result;\n    }\n    if (result == null) {\n      if (v.valueGuesses.size() == 1) {\n        Object defaultValue=method.getDefaultValue();\n        if (defaultValue == null)         throw makeNoDefaultFail(v,method);\n        return defaultValue;\n      }\n      throw new AnnotationValueDecodeFail(v,\"I can't make sense of this annotation value. Try using a fully qualified literal.\",idx);\n    }\n    Array.set(array,idx++,result);\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 271,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (v == null) {\n  Object defaultValue=method.getDefaultValue();\n  if (defaultValue != null)   return defaultValue;\n  throw makeNoDefaultFail(v,method);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 176,
    "startColumnNumber" : 8,
    "endLineNumber" : 176,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}