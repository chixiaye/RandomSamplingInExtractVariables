{
  "id" : 219,
  "expression" : "Array.get(actuals,i)",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/internal/test/ExtraTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Array.get(actuals,i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 65,
      "startColumnNumber" : 31,
      "endLineNumber" : 65,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 65,
        "startColumnNumber" : 23,
        "endLineNumber" : 65,
        "endColumnNumber" : 52
      },
      "nodeContext" : "actual=Array.get(actuals,i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Object actual=Array.get(actuals,i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 63,
        "startColumnNumber" : 53,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object expected=Array.get(expecteds,i);\n  Object actual=Array.get(actuals,i);\n  if (isArray(expected) && isArray(actual)) {\n    try {\n      arrayEquals(message,expected,actual);\n    }\n catch (    ArrayComparisonFailure e) {\n      e.addDimension(i);\n      throw e;\n    }\n  }\n else   try {\n    assertElementsEqual(expected,actual);\n  }\n catch (  AssertionError e) {\n    throw new ArrayComparisonFailure(header,e,i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < expectedsLength; ++i) {\n  Object expected=Array.get(expecteds,i);\n  Object actual=Array.get(actuals,i);\n  if (isArray(expected) && isArray(actual)) {\n    try {\n      arrayEquals(message,expected,actual);\n    }\n catch (    ArrayComparisonFailure e) {\n      e.addDimension(i);\n      throw e;\n    }\n  }\n else   try {\n    assertElementsEqual(expected,actual);\n  }\n catch (  AssertionError e) {\n    throw new ArrayComparisonFailure(header,e,i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (expecteds == actuals)   return;\n  String header=message == null ? \"\" : message + \": \";\n  int expectedsLength=assertArraysAreSameLength(expecteds,actuals,header);\n  for (int i=0; i < expectedsLength; ++i) {\n    Object expected=Array.get(expecteds,i);\n    Object actual=Array.get(actuals,i);\n    if (isArray(expected) && isArray(actual)) {\n      try {\n        arrayEquals(message,expected,actual);\n      }\n catch (      ArrayComparisonFailure e) {\n        e.addDimension(i);\n        throw e;\n      }\n    }\n else     try {\n      assertElementsEqual(expected,actual);\n    }\n catch (    AssertionError e) {\n      throw new ArrayComparisonFailure(header,e,i);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void arrayEquals(String message,Object expecteds,Object actuals) throws ArrayComparisonFailure {\n  if (expecteds == actuals)   return;\n  String header=message == null ? \"\" : message + \": \";\n  int expectedsLength=assertArraysAreSameLength(expecteds,actuals,header);\n  for (int i=0; i < expectedsLength; ++i) {\n    Object expected=Array.get(expecteds,i);\n    Object actual=Array.get(actuals,i);\n    if (isArray(expected) && isArray(actual)) {\n      try {\n        arrayEquals(message,expected,actual);\n      }\n catch (      ArrayComparisonFailure e) {\n        e.addDimension(i);\n        throw e;\n      }\n    }\n else     try {\n      assertElementsEqual(expected,actual);\n    }\n catch (    AssertionError e) {\n      throw new ArrayComparisonFailure(header,e,i);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Object actual=Array.get(actuals,i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 65,
    "startColumnNumber" : 31,
    "endLineNumber" : 65,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}