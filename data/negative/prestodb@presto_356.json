{
  "id" : 356,
  "expression" : "node.getId()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/PruneOrderByInAggregation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node.getId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 83,
      "startColumnNumber" : 16,
      "endLineNumber" : 83,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 81,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 42
      },
      "nodeContext" : "new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 30,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 34,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1651,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!node.hasOrderings()) {\n    return Result.empty();\n  }\n  boolean anyRewritten=false;\n  ImmutableMap.Builder<VariableReferenceExpression,Aggregation> aggregations=ImmutableMap.builder();\n  for (  Map.Entry<VariableReferenceExpression,Aggregation> entry : node.getAggregations().entrySet()) {\n    Aggregation aggregation=entry.getValue();\n    if (!aggregation.getOrderBy().isPresent()) {\n      aggregations.put(entry);\n    }\n else     if (functionAndTypeManager.getAggregateFunctionImplementation(aggregation.getFunctionHandle()).isOrderSensitive()) {\n      aggregations.put(entry);\n    }\n else {\n      anyRewritten=true;\n      aggregations.put(entry.getKey(),new Aggregation(aggregation.getCall(),aggregation.getFilter(),Optional.empty(),aggregation.isDistinct(),aggregation.getMask()));\n    }\n  }\n  if (!anyRewritten) {\n    return Result.empty();\n  }\n  return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Result apply(AggregationNode node,Captures captures,Context context){\n  if (!node.hasOrderings()) {\n    return Result.empty();\n  }\n  boolean anyRewritten=false;\n  ImmutableMap.Builder<VariableReferenceExpression,Aggregation> aggregations=ImmutableMap.builder();\n  for (  Map.Entry<VariableReferenceExpression,Aggregation> entry : node.getAggregations().entrySet()) {\n    Aggregation aggregation=entry.getValue();\n    if (!aggregation.getOrderBy().isPresent()) {\n      aggregations.put(entry);\n    }\n else     if (functionAndTypeManager.getAggregateFunctionImplementation(aggregation.getFunctionHandle()).isOrderSensitive()) {\n      aggregations.put(entry);\n    }\n else {\n      anyRewritten=true;\n      aggregations.put(entry.getKey(),new Aggregation(aggregation.getCall(),aggregation.getFilter(),Optional.empty(),aggregation.isDistinct(),aggregation.getMask()));\n    }\n  }\n  if (!anyRewritten) {\n    return Result.empty();\n  }\n  return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 81,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 42
      },
      "nodeContext" : "new AggregationNode(node.getSourceLocation(),node.getId(),node.getSource(),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 30,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.spi.plan.PlanNodeId"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 83,
    "startColumnNumber" : 16,
    "endLineNumber" : 83,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}