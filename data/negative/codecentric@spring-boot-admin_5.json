{
  "id" : 5,
  "expression" : "\"\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/discovery/EurekaServiceInstanceConverterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 36,
      "startColumnNumber" : 64,
      "endLineNumber" : 36,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 67
      },
      "nodeContext" : "when(instanceInfo.getSecureHealthCheckUrl()).thenReturn(\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(instanceInfo.getSecureHealthCheckUrl()).thenReturn(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1025,
        "startLineNumber" : 34,
        "startColumnNumber" : 33,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InstanceInfo instanceInfo=mock(InstanceInfo.class);\n  when(instanceInfo.getSecureHealthCheckUrl()).thenReturn(\"\");\n  when(instanceInfo.getHealthCheckUrl()).thenReturn(\"http://localhost:80/mgmt/ping\");\n  EurekaServiceInstance service=mock(EurekaServiceInstance.class);\n  when(service.getInstanceInfo()).thenReturn(instanceInfo);\n  when(service.getUri()).thenReturn(URI.create(\"http://localhost:80\"));\n  when(service.getServiceId()).thenReturn(\"test\");\n  when(service.getMetadata()).thenReturn(singletonMap(\"management.context-path\",\"/mgmt\"));\n  Registration registration=new EurekaServiceInstanceConverter().convert(service);\n  assertThat(registration.getName()).isEqualTo(\"test\");\n  assertThat(registration.getServiceUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getManagementUrl()).isEqualTo(\"http://localhost:80/mgmt\");\n  assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/mgmt/ping\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1064,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void convert_secure(){\n  InstanceInfo instanceInfo=mock(InstanceInfo.class);\n  when(instanceInfo.getSecureHealthCheckUrl()).thenReturn(\"\");\n  when(instanceInfo.getHealthCheckUrl()).thenReturn(\"http://localhost:80/mgmt/ping\");\n  EurekaServiceInstance service=mock(EurekaServiceInstance.class);\n  when(service.getInstanceInfo()).thenReturn(instanceInfo);\n  when(service.getUri()).thenReturn(URI.create(\"http://localhost:80\"));\n  when(service.getServiceId()).thenReturn(\"test\");\n  when(service.getMetadata()).thenReturn(singletonMap(\"management.context-path\",\"/mgmt\"));\n  Registration registration=new EurekaServiceInstanceConverter().convert(service);\n  assertThat(registration.getName()).isEqualTo(\"test\");\n  assertThat(registration.getServiceUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getManagementUrl()).isEqualTo(\"http://localhost:80/mgmt\");\n  assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/mgmt/ping\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(instanceInfo.getSecureHealthCheckUrl()).thenReturn(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 36,
    "startColumnNumber" : 64,
    "endLineNumber" : 36,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}