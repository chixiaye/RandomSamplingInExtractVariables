{
  "id" : 391,
  "expression" : "\"studentCheck.js\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-thymeleaf/src/test/java/com/baeldung/thymeleaf/security/csrf/CsrfEnabledIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"studentCheck.js\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 69,
      "startColumnNumber" : 115,
      "endLineNumber" : 69,
      "endColumnNumber" : 132
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 69,
        "startColumnNumber" : 103,
        "endLineNumber" : 69,
        "endColumnNumber" : 133
      },
      "nodeContext" : "view().name(\"studentCheck.js\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 134
      },
      "nodeContext" : "mockMvc.perform(get(\"/js\").with(testUser()).with(csrf())).andExpect(status().isOk()).andExpect(view().name(\"studentCheck.js\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 135
      },
      "nodeContext" : "mockMvc.perform(get(\"/js\").with(testUser()).with(csrf())).andExpect(status().isOk()).andExpect(view().name(\"studentCheck.js\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 68,
        "startColumnNumber" : 50,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockMvc.perform(get(\"/js\").with(testUser()).with(csrf())).andExpect(status().isOk()).andExpect(view().name(\"studentCheck.js\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void jsInliningTest() throws Exception {\n  mockMvc.perform(get(\"/js\").with(testUser()).with(csrf())).andExpect(status().isOk()).andExpect(view().name(\"studentCheck.js\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 135
      },
      "nodeContext" : "mockMvc.perform(get(\"/js\").with(testUser()).with(csrf())).andExpect(status().isOk()).andExpect(view().name(\"studentCheck.js\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 69,
    "startColumnNumber" : 115,
    "endLineNumber" : 69,
    "endColumnNumber" : 132
  } ],
  "layoutRelationDataList" : [ ]
}