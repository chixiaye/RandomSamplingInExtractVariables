{
  "id" : 174,
  "expression" : "null != targetDir",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-extra/src/main/java/cn/hutool/extra/compress/extractor/StreamExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null != targetDir",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 107,
      "startColumnNumber" : 16,
      "endLineNumber" : 107,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 107,
        "endColumnNumber" : 95
      },
      "nodeContext" : "null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Assert.isTrue(null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory()),\"target must be dir.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Assert.isTrue(null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory()),\"target must be dir.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 106,
        "startColumnNumber" : 94,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.isTrue(null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory()),\"target must be dir.\");\n  final ArchiveInputStream in=this.in;\n  ArchiveEntry entry;\n  File outItemFile;\n  while (null != (entry=in.getNextEntry())) {\n    if (false == in.canReadEntryData(entry)) {\n      continue;\n    }\n    outItemFile=FileUtil.file(targetDir,entry.getName());\n    if (entry.isDirectory()) {\n      outItemFile.mkdirs();\n    }\n else {\n      FileUtil.writeFromStream(in,outItemFile);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 99,
        "startColumnNumber" : 1,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 释放（解压）到指定目录\n * @param targetDir 目标目录\n * @param filter    解压文件过滤器，用于指定需要释放的文件，null表示不过滤。当{@link Filter#accept(Object)}为true时释放。\n * @throws IOException IO异常\n */\nprivate void extractInternal(File targetDir,Filter<ArchiveEntry> filter) throws IOException {\n  Assert.isTrue(null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory()),\"target must be dir.\");\n  final ArchiveInputStream in=this.in;\n  ArchiveEntry entry;\n  File outItemFile;\n  while (null != (entry=in.getNextEntry())) {\n    if (false == in.canReadEntryData(entry)) {\n      continue;\n    }\n    outItemFile=FileUtil.file(targetDir,entry.getName());\n    if (entry.isDirectory()) {\n      outItemFile.mkdirs();\n    }\n else {\n      FileUtil.writeFromStream(in,outItemFile);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Assert.isTrue(null != targetDir && ((false == targetDir.exists()) || targetDir.isDirectory()),\"target must be dir.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 107,
    "startColumnNumber" : 16,
    "endLineNumber" : 107,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}