{
  "id" : 410,
  "expression" : "m",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/LoadBalancer.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 100,
      "startColumnNumber" : 19,
      "endLineNumber" : 100,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 100,
        "startColumnNumber" : 19,
        "endLineNumber" : 100,
        "endColumnNumber" : 27
      },
      "nodeContext" : "m.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.AssertStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 100,
        "startColumnNumber" : 19,
        "endLineNumber" : 100,
        "endColumnNumber" : 44
      },
      "nodeContext" : "m.size() == ws.works.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assert m.size() == ws.works.size();\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assert m.size() == ws.works.size();\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.Mapping"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 102,
      "startColumnNumber" : 31,
      "endLineNumber" : 102,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assignGreedily(m,task,hashes,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 28
      },
      "nodeContext" : "if (assignGreedily(m,task,hashes,0)) {\n  assert m.isCompletelyValid();\n  return m;\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assignGreedily(m,task,hashes,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.Mapping"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 103,
      "startColumnNumber" : 23,
      "endLineNumber" : 103,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.AssertStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 103,
        "endColumnNumber" : 44
      },
      "nodeContext" : "m.isCompletelyValid()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assert m.isCompletelyValid();\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 102,
        "startColumnNumber" : 49,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assert m.isCompletelyValid();\n  return m;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 28
      },
      "nodeContext" : "if (assignGreedily(m,task,hashes,0)) {\n  assert m.isCompletelyValid();\n  return m;\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assert m.isCompletelyValid();\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.Mapping"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 104,
      "startColumnNumber" : 23,
      "endLineNumber" : 104,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return m;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 102,
        "startColumnNumber" : 49,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assert m.isCompletelyValid();\n  return m;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 28
      },
      "nodeContext" : "if (assignGreedily(m,task,hashes,0)) {\n  assert m.isCompletelyValid();\n  return m;\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return m;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.Mapping"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 100,
    "startColumnNumber" : 19,
    "endLineNumber" : 100,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 102,
    "startColumnNumber" : 31,
    "endLineNumber" : 102,
    "endColumnNumber" : 32
  }, {
    "charLength" : 1,
    "startLineNumber" : 103,
    "startColumnNumber" : 23,
    "endLineNumber" : 103,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 104,
    "startColumnNumber" : 23,
    "endLineNumber" : 104,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}