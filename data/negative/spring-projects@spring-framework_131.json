{
  "id" : 131,
  "expression" : "\"Converter, ConverterFactory, or GenericConverter interfaces\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/core/convert/support/ConversionServiceFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Converter, ConverterFactory, or GenericConverter interfaces\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 62,
      "startColumnNumber" : 7,
      "endLineNumber" : 62,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 62,
        "endColumnNumber" : 68
      },
      "nodeContext" : "\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 61,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 61,
        "startColumnNumber" : 5,
        "endLineNumber" : 62,
        "endColumnNumber" : 70
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 60,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 57,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (converter instanceof ConverterFactory<?,?>) {\n  registry.addConverterFactory((ConverterFactory<?,?>)converter);\n}\n else {\n  throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 54,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (converter instanceof Converter<?,?>) {\n  registry.addConverter((Converter<?,?>)converter);\n}\n else if (converter instanceof ConverterFactory<?,?>) {\n  registry.addConverterFactory((ConverterFactory<?,?>)converter);\n}\n else {\n  throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (converter instanceof GenericConverter) {\n  registry.addConverter((GenericConverter)converter);\n}\n else if (converter instanceof Converter<?,?>) {\n  registry.addConverter((Converter<?,?>)converter);\n}\n else if (converter instanceof ConverterFactory<?,?>) {\n  registry.addConverterFactory((ConverterFactory<?,?>)converter);\n}\n else {\n  throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 50,
        "startColumnNumber" : 39,
        "endLineNumber" : 64,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (converter instanceof GenericConverter) {\n    registry.addConverter((GenericConverter)converter);\n  }\n else   if (converter instanceof Converter<?,?>) {\n    registry.addConverter((Converter<?,?>)converter);\n  }\n else   if (converter instanceof ConverterFactory<?,?>) {\n    registry.addConverterFactory((ConverterFactory<?,?>)converter);\n  }\n else {\n    throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 50,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (Object converter : converters) {\n  if (converter instanceof GenericConverter) {\n    registry.addConverter((GenericConverter)converter);\n  }\n else   if (converter instanceof Converter<?,?>) {\n    registry.addConverter((Converter<?,?>)converter);\n  }\n else   if (converter instanceof ConverterFactory<?,?>) {\n    registry.addConverterFactory((ConverterFactory<?,?>)converter);\n  }\n else {\n    throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 49,
        "startColumnNumber" : 26,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  Object converter : converters) {\n    if (converter instanceof GenericConverter) {\n      registry.addConverter((GenericConverter)converter);\n    }\n else     if (converter instanceof Converter<?,?>) {\n      registry.addConverter((Converter<?,?>)converter);\n    }\n else     if (converter instanceof ConverterFactory<?,?>) {\n      registry.addConverterFactory((ConverterFactory<?,?>)converter);\n    }\n else {\n      throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (converters != null) {\n  for (  Object converter : converters) {\n    if (converter instanceof GenericConverter) {\n      registry.addConverter((GenericConverter)converter);\n    }\n else     if (converter instanceof Converter<?,?>) {\n      registry.addConverter((Converter<?,?>)converter);\n    }\n else     if (converter instanceof ConverterFactory<?,?>) {\n      registry.addConverterFactory((ConverterFactory<?,?>)converter);\n    }\n else {\n      throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 48,
        "startColumnNumber" : 96,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (converters != null) {\n    for (    Object converter : converters) {\n      if (converter instanceof GenericConverter) {\n        registry.addConverter((GenericConverter)converter);\n      }\n else       if (converter instanceof Converter<?,?>) {\n        registry.addConverter((Converter<?,?>)converter);\n      }\n else       if (converter instanceof ConverterFactory<?,?>) {\n        registry.addConverterFactory((ConverterFactory<?,?>)converter);\n      }\n else {\n        throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 991,
        "startLineNumber" : 42,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Register the given Converter objects with the given target ConverterRegistry.\n * @param converters the converter objects: implementing {@link Converter}, {@link ConverterFactory}, or  {@link GenericConverter}\n * @param registry the target registry\n */\npublic static void registerConverters(@Nullable Set<?> converters,ConverterRegistry registry){\n  if (converters != null) {\n    for (    Object converter : converters) {\n      if (converter instanceof GenericConverter) {\n        registry.addConverter((GenericConverter)converter);\n      }\n else       if (converter instanceof Converter<?,?>) {\n        registry.addConverter((Converter<?,?>)converter);\n      }\n else       if (converter instanceof ConverterFactory<?,?>) {\n        registry.addConverterFactory((ConverterFactory<?,?>)converter);\n      }\n else {\n        throw new IllegalArgumentException(\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 62,
        "endColumnNumber" : 68
      },
      "nodeContext" : "\"Each converter object must implement one of the \" + \"Converter, ConverterFactory, or GenericConverter interfaces\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 62,
    "startColumnNumber" : 7,
    "endLineNumber" : 62,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}