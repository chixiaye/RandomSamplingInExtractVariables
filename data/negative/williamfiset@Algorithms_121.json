{
  "id" : 121,
  "expression" : "(int)Math.sqrt(n)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/EulerTotientFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)Math.sqrt(n)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 62,
      "startColumnNumber" : 16,
      "endLineNumber" : 62,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 34
      },
      "nodeContext" : "limit=(int)Math.sqrt(n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int limit=(int)Math.sqrt(n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (n < 2)   return false;\n  if (n == 2 || n == 3)   return true;\n  if (n % 2 == 0 || n % 3 == 0)   return false;\n  int limit=(int)Math.sqrt(n);\n  for (int i=5; i <= limit; i+=6)   if (n % i == 0 || n % (i + 2) == 0)   return false;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static boolean isPrime(long n){\n  if (n < 2)   return false;\n  if (n == 2 || n == 3)   return true;\n  if (n % 2 == 0 || n % 3 == 0)   return false;\n  int limit=(int)Math.sqrt(n);\n  for (int i=5; i <= limit; i+=6)   if (n % i == 0 || n % (i + 2) == 0)   return false;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int limit=(int)Math.sqrt(n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 62,
    "startColumnNumber" : 16,
    "endLineNumber" : 62,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}