{
  "id" : 134,
  "expression" : "identifier",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/spi/VerticleFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "identifier",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 89,
      "startColumnNumber" : 24,
      "endLineNumber" : 89,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resolution.complete(identifier)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 36
      },
      "nodeContext" : "resolution.complete(identifier);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 88,
        "startColumnNumber" : 131,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  resolution.complete(identifier);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Some verticle factories can \"resolve\" the identifer to another identifier which is then used to look up the real verticle factory. An Example is the Vert.x service factory which takes an identifier of form `service:com.mycompany.clever-db-service\" then looks for a JSON file which it loads to get the real identifier (main verticle).\n * @param identifier  The identifier\n * @param deploymentOptions  The deployment options - these can be changed inside the resolve method (e.g. to add an extra classpath)\n * @param classLoader  The classloader\n * @param resolution  A future which will receive the result of the resolution.\n */\ndefault void resolve(String identifier,DeploymentOptions deploymentOptions,ClassLoader classLoader,Future<String> resolution){\n  resolution.complete(identifier);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 36
      },
      "nodeContext" : "resolution.complete(identifier);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 89,
    "startColumnNumber" : 24,
    "endLineNumber" : 89,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}