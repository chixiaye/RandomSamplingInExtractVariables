{
  "id" : 256,
  "expression" : "new TestVote(i,v.id)",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/FLETest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TestVote(i,v.id)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 165,
      "startColumnNumber" : 43,
      "endLineNumber" : 165,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 165,
        "startColumnNumber" : 36,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "hs.add(new TestVote(i,v.id))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 165,
        "startColumnNumber" : 36,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "hs.add(new TestVote(i,v.id));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1203,
        "startLineNumber" : 161,
        "startColumnNumber" : 53,
        "endLineNumber" : 181,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  if (voteMap.get(lc) == null)   voteMap.put(lc,new HashSet<TestVote>());\n  HashSet<TestVote> hs=voteMap.get(lc);\n  hs.add(new TestVote(i,v.id));\n  if (countVotes(hs,v.id) > (count / 2)) {\n    leader=i;\n    LOG.info(\"Got majority: \" + i);\n  }\n else {\n    voteMap.wait(3000);\n    LOG.info(\"Notified or expired: \" + i);\n    hs=voteMap.get(lc);\n    if (countVotes(hs,v.id) > (count / 2)) {\n      leader=i;\n      LOG.info(\"Got majority: \" + i);\n    }\n else {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 181,
        "endColumnNumber" : 33
      },
      "nodeContext" : "synchronized (voteMap) {\n  if (voteMap.get(lc) == null)   voteMap.put(lc,new HashSet<TestVote>());\n  HashSet<TestVote> hs=voteMap.get(lc);\n  hs.add(new TestVote(i,v.id));\n  if (countVotes(hs,v.id) > (count / 2)) {\n    leader=i;\n    LOG.info(\"Got majority: \" + i);\n  }\n else {\n    voteMap.wait(3000);\n    LOG.info(\"Notified or expired: \" + i);\n    hs=voteMap.get(lc);\n    if (countVotes(hs,v.id) > (count / 2)) {\n      leader=i;\n      LOG.info(\"Got majority: \" + i);\n    }\n else {\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1752,
        "startLineNumber" : 160,
        "startColumnNumber" : 35,
        "endLineNumber" : 192,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\nsynchronized (voteMap) {\n    if (voteMap.get(lc) == null)     voteMap.put(lc,new HashSet<TestVote>());\n    HashSet<TestVote> hs=voteMap.get(lc);\n    hs.add(new TestVote(i,v.id));\n    if (countVotes(hs,v.id) > (count / 2)) {\n      leader=i;\n      LOG.info(\"Got majority: \" + i);\n    }\n else {\n      voteMap.wait(3000);\n      LOG.info(\"Notified or expired: \" + i);\n      hs=voteMap.get(lc);\n      if (countVotes(hs,v.id) > (count / 2)) {\n        leader=i;\n        LOG.info(\"Got majority: \" + i);\n      }\n else {\n      }\n    }\n  }\n  FLETest.this.notifyAll();\n  if (leader == i) {\nsynchronized (finalObj) {\n      successCount++;\n      if (successCount > (count / 2))       finalObj.notify();\n    }\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2366,
        "startLineNumber" : 148,
        "startColumnNumber" : 28,
        "endLineNumber" : 192,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (leaderDies) {\n  LOG.info(\"Leader \" + i + \" dying\");\n  leaderDies=false;\n  ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n  leader=-1;\n  LOG.info(\"Leader \" + i + \" dead\");\n  FLETest.this.notifyAll();\n  break;\n}\n else {\nsynchronized (voteMap) {\n    if (voteMap.get(lc) == null)     voteMap.put(lc,new HashSet<TestVote>());\n    HashSet<TestVote> hs=voteMap.get(lc);\n    hs.add(new TestVote(i,v.id));\n    if (countVotes(hs,v.id) > (count / 2)) {\n      leader=i;\n      LOG.info(\"Got majority: \" + i);\n    }\n else {\n      voteMap.wait(3000);\n      LOG.info(\"Notified or expired: \" + i);\n      hs=voteMap.get(lc);\n      if (countVotes(hs,v.id) > (count / 2)) {\n        leader=i;\n        LOG.info(\"Got majority: \" + i);\n      }\n else {\n      }\n    }\n  }\n  FLETest.this.notifyAll();\n  if (leader == i) {\nsynchronized (finalObj) {\n      successCount++;\n      if (successCount > (count / 2))       finalObj.notify();\n    }\n    break;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 2422,
        "startLineNumber" : 147,
        "startColumnNumber" : 51,
        "endLineNumber" : 193,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (leaderDies) {\n    LOG.info(\"Leader \" + i + \" dying\");\n    leaderDies=false;\n    ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n    leader=-1;\n    LOG.info(\"Leader \" + i + \" dead\");\n    FLETest.this.notifyAll();\n    break;\n  }\n else {\nsynchronized (voteMap) {\n      if (voteMap.get(lc) == null)       voteMap.put(lc,new HashSet<TestVote>());\n      HashSet<TestVote> hs=voteMap.get(lc);\n      hs.add(new TestVote(i,v.id));\n      if (countVotes(hs,v.id) > (count / 2)) {\n        leader=i;\n        LOG.info(\"Got majority: \" + i);\n      }\n else {\n        voteMap.wait(3000);\n        LOG.info(\"Notified or expired: \" + i);\n        hs=voteMap.get(lc);\n        if (countVotes(hs,v.id) > (count / 2)) {\n          leader=i;\n          LOG.info(\"Got majority: \" + i);\n        }\n else {\n        }\n      }\n    }\n    FLETest.this.notifyAll();\n    if (leader == i) {\nsynchronized (finalObj) {\n        successCount++;\n        if (successCount > (count / 2))         finalObj.notify();\n      }\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2449,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 193,
        "endColumnNumber" : 25
      },
      "nodeContext" : "synchronized (FLETest.this) {\n  if (leaderDies) {\n    LOG.info(\"Leader \" + i + \" dying\");\n    leaderDies=false;\n    ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n    leader=-1;\n    LOG.info(\"Leader \" + i + \" dead\");\n    FLETest.this.notifyAll();\n    break;\n  }\n else {\nsynchronized (voteMap) {\n      if (voteMap.get(lc) == null)       voteMap.put(lc,new HashSet<TestVote>());\n      HashSet<TestVote> hs=voteMap.get(lc);\n      hs.add(new TestVote(i,v.id));\n      if (countVotes(hs,v.id) > (count / 2)) {\n        leader=i;\n        LOG.info(\"Got majority: \" + i);\n      }\n else {\n        voteMap.wait(3000);\n        LOG.info(\"Notified or expired: \" + i);\n        hs=voteMap.get(lc);\n        if (countVotes(hs,v.id) > (count / 2)) {\n          leader=i;\n          LOG.info(\"Got majority: \" + i);\n        }\n else {\n        }\n      }\n    }\n    FLETest.this.notifyAll();\n    if (leader == i) {\nsynchronized (finalObj) {\n        successCount++;\n        if (successCount > (count / 2))         finalObj.notify();\n      }\n      break;\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 190,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2866,
        "startLineNumber" : 140,
        "startColumnNumber" : 44,
        "endLineNumber" : 194,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n    if (leaderDies) {\n      LOG.info(\"Leader \" + i + \" dying\");\n      leaderDies=false;\n      ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n      leader=-1;\n      LOG.info(\"Leader \" + i + \" dead\");\n      FLETest.this.notifyAll();\n      break;\n    }\n else {\nsynchronized (voteMap) {\n        if (voteMap.get(lc) == null)         voteMap.put(lc,new HashSet<TestVote>());\n        HashSet<TestVote> hs=voteMap.get(lc);\n        hs.add(new TestVote(i,v.id));\n        if (countVotes(hs,v.id) > (count / 2)) {\n          leader=i;\n          LOG.info(\"Got majority: \" + i);\n        }\n else {\n          voteMap.wait(3000);\n          LOG.info(\"Notified or expired: \" + i);\n          hs=voteMap.get(lc);\n          if (countVotes(hs,v.id) > (count / 2)) {\n            leader=i;\n            LOG.info(\"Got majority: \" + i);\n          }\n else {\n          }\n        }\n      }\n      FLETest.this.notifyAll();\n      if (leader == i) {\nsynchronized (finalObj) {\n          successCount++;\n          if (successCount > (count / 2))           finalObj.notify();\n        }\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5979,
        "startLineNumber" : 140,
        "startColumnNumber" : 20,
        "endLineNumber" : 247,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (v.id == ((long)i)) {\n  LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n    if (leaderDies) {\n      LOG.info(\"Leader \" + i + \" dying\");\n      leaderDies=false;\n      ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n      leader=-1;\n      LOG.info(\"Leader \" + i + \" dead\");\n      FLETest.this.notifyAll();\n      break;\n    }\n else {\nsynchronized (voteMap) {\n        if (voteMap.get(lc) == null)         voteMap.put(lc,new HashSet<TestVote>());\n        HashSet<TestVote> hs=voteMap.get(lc);\n        hs.add(new TestVote(i,v.id));\n        if (countVotes(hs,v.id) > (count / 2)) {\n          leader=i;\n          LOG.info(\"Got majority: \" + i);\n        }\n else {\n          voteMap.wait(3000);\n          LOG.info(\"Notified or expired: \" + i);\n          hs=voteMap.get(lc);\n          if (countVotes(hs,v.id) > (count / 2)) {\n            leader=i;\n            LOG.info(\"Got majority: \" + i);\n          }\n else {\n          }\n        }\n      }\n      FLETest.this.notifyAll();\n      if (leader == i) {\nsynchronized (finalObj) {\n          successCount++;\n          if (successCount > (count / 2))           finalObj.notify();\n        }\n        break;\n      }\n    }\n  }\n}\n else {\n  LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n    LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n    if (voteMap.get(lc) == null)     voteMap.put(lc,new HashSet<TestVote>());\n    HashSet<TestVote> hs=voteMap.get(lc);\n    hs.add(new TestVote(i,votes[i].id));\n    if (countVotes(hs,votes[i].id) > (count / 2)) {\n      LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n      voteMap.notify();\n    }\n  }\nsynchronized (FLETest.this) {\n    if (leader != votes[i].id)     FLETest.this.wait(3000);\n    LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n      if (leader == votes[i].id) {\nsynchronized (finalObj) {\n          successCount++;\n          if (successCount > (count / 2))           finalObj.notify();\n        }\n        break;\n      }\n else {\n        HashSet<TestVote> hs=voteMap.get(lc);\n        TestVote toRemove=null;\n        for (        TestVote tv : hs) {\n          if (v.id == i) {\n            toRemove=tv;\n            break;\n          }\n        }\n        hs.remove(toRemove);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 426,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 7231,
        "startLineNumber" : 117,
        "startColumnNumber" : 28,
        "endLineNumber" : 253,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  peer.setPeerState(ServerState.LOOKING);\n  LOG.info(\"Going to call leader election again.\");\n  v=peer.getElectionAlg().lookForLeader();\n  if (v == null) {\n    LOG.info(\"Thread \" + i + \" got a null vote\");\n    break;\n  }\n  peer.setCurrentVote(v);\n  LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n  votes[i]=v;\n  int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n  if (v.id == ((long)i)) {\n    LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n      if (leaderDies) {\n        LOG.info(\"Leader \" + i + \" dying\");\n        leaderDies=false;\n        ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n        leader=-1;\n        LOG.info(\"Leader \" + i + \" dead\");\n        FLETest.this.notifyAll();\n        break;\n      }\n else {\nsynchronized (voteMap) {\n          if (voteMap.get(lc) == null)           voteMap.put(lc,new HashSet<TestVote>());\n          HashSet<TestVote> hs=voteMap.get(lc);\n          hs.add(new TestVote(i,v.id));\n          if (countVotes(hs,v.id) > (count / 2)) {\n            leader=i;\n            LOG.info(\"Got majority: \" + i);\n          }\n else {\n            voteMap.wait(3000);\n            LOG.info(\"Notified or expired: \" + i);\n            hs=voteMap.get(lc);\n            if (countVotes(hs,v.id) > (count / 2)) {\n              leader=i;\n              LOG.info(\"Got majority: \" + i);\n            }\n else {\n            }\n          }\n        }\n        FLETest.this.notifyAll();\n        if (leader == i) {\nsynchronized (finalObj) {\n            successCount++;\n            if (successCount > (count / 2))             finalObj.notify();\n          }\n          break;\n        }\n      }\n    }\n  }\n else {\n    LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n      LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n      if (voteMap.get(lc) == null)       voteMap.put(lc,new HashSet<TestVote>());\n      HashSet<TestVote> hs=voteMap.get(lc);\n      hs.add(new TestVote(i,votes[i].id));\n      if (countVotes(hs,votes[i].id) > (count / 2)) {\n        LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n        voteMap.notify();\n      }\n    }\nsynchronized (FLETest.this) {\n      if (leader != votes[i].id)       FLETest.this.wait(3000);\n      LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n        if (leader == votes[i].id) {\nsynchronized (finalObj) {\n            successCount++;\n            if (successCount > (count / 2))             finalObj.notify();\n          }\n          break;\n        }\n else {\n          HashSet<TestVote> hs=voteMap.get(lc);\n          TestVote toRemove=null;\n          for (          TestVote tv : hs) {\n            if (v.id == i) {\n              toRemove=tv;\n              break;\n            }\n          }\n          hs.remove(toRemove);\n        }\n      }\n    }\n  }\n  Thread.sleep(rand.nextInt(500));\n  peer.setCurrentVote(new Vote(peer.getId(),0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 517,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7243,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  peer.setPeerState(ServerState.LOOKING);\n  LOG.info(\"Going to call leader election again.\");\n  v=peer.getElectionAlg().lookForLeader();\n  if (v == null) {\n    LOG.info(\"Thread \" + i + \" got a null vote\");\n    break;\n  }\n  peer.setCurrentVote(v);\n  LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n  votes[i]=v;\n  int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n  if (v.id == ((long)i)) {\n    LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n      if (leaderDies) {\n        LOG.info(\"Leader \" + i + \" dying\");\n        leaderDies=false;\n        ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n        leader=-1;\n        LOG.info(\"Leader \" + i + \" dead\");\n        FLETest.this.notifyAll();\n        break;\n      }\n else {\nsynchronized (voteMap) {\n          if (voteMap.get(lc) == null)           voteMap.put(lc,new HashSet<TestVote>());\n          HashSet<TestVote> hs=voteMap.get(lc);\n          hs.add(new TestVote(i,v.id));\n          if (countVotes(hs,v.id) > (count / 2)) {\n            leader=i;\n            LOG.info(\"Got majority: \" + i);\n          }\n else {\n            voteMap.wait(3000);\n            LOG.info(\"Notified or expired: \" + i);\n            hs=voteMap.get(lc);\n            if (countVotes(hs,v.id) > (count / 2)) {\n              leader=i;\n              LOG.info(\"Got majority: \" + i);\n            }\n else {\n            }\n          }\n        }\n        FLETest.this.notifyAll();\n        if (leader == i) {\nsynchronized (finalObj) {\n            successCount++;\n            if (successCount > (count / 2))             finalObj.notify();\n          }\n          break;\n        }\n      }\n    }\n  }\n else {\n    LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n      LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n      if (voteMap.get(lc) == null)       voteMap.put(lc,new HashSet<TestVote>());\n      HashSet<TestVote> hs=voteMap.get(lc);\n      hs.add(new TestVote(i,votes[i].id));\n      if (countVotes(hs,votes[i].id) > (count / 2)) {\n        LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n        voteMap.notify();\n      }\n    }\nsynchronized (FLETest.this) {\n      if (leader != votes[i].id)       FLETest.this.wait(3000);\n      LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n        if (leader == votes[i].id) {\nsynchronized (finalObj) {\n            successCount++;\n            if (successCount > (count / 2))             finalObj.notify();\n          }\n          break;\n        }\n else {\n          HashSet<TestVote> hs=voteMap.get(lc);\n          TestVote toRemove=null;\n          for (          TestVote tv : hs) {\n            if (v.id == i) {\n              toRemove=tv;\n              break;\n            }\n          }\n          hs.remove(toRemove);\n        }\n      }\n    }\n  }\n  Thread.sleep(rand.nextInt(500));\n  peer.setCurrentVote(new Vote(peer.getId(),0));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 519,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 7364,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Vote v=null;\n  while (true) {\n    peer.setPeerState(ServerState.LOOKING);\n    LOG.info(\"Going to call leader election again.\");\n    v=peer.getElectionAlg().lookForLeader();\n    if (v == null) {\n      LOG.info(\"Thread \" + i + \" got a null vote\");\n      break;\n    }\n    peer.setCurrentVote(v);\n    LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n    votes[i]=v;\n    int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n    if (v.id == ((long)i)) {\n      LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n        if (leaderDies) {\n          LOG.info(\"Leader \" + i + \" dying\");\n          leaderDies=false;\n          ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n          leader=-1;\n          LOG.info(\"Leader \" + i + \" dead\");\n          FLETest.this.notifyAll();\n          break;\n        }\n else {\nsynchronized (voteMap) {\n            if (voteMap.get(lc) == null)             voteMap.put(lc,new HashSet<TestVote>());\n            HashSet<TestVote> hs=voteMap.get(lc);\n            hs.add(new TestVote(i,v.id));\n            if (countVotes(hs,v.id) > (count / 2)) {\n              leader=i;\n              LOG.info(\"Got majority: \" + i);\n            }\n else {\n              voteMap.wait(3000);\n              LOG.info(\"Notified or expired: \" + i);\n              hs=voteMap.get(lc);\n              if (countVotes(hs,v.id) > (count / 2)) {\n                leader=i;\n                LOG.info(\"Got majority: \" + i);\n              }\n else {\n              }\n            }\n          }\n          FLETest.this.notifyAll();\n          if (leader == i) {\nsynchronized (finalObj) {\n              successCount++;\n              if (successCount > (count / 2))               finalObj.notify();\n            }\n            break;\n          }\n        }\n      }\n    }\n else {\n      LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n        LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n        if (voteMap.get(lc) == null)         voteMap.put(lc,new HashSet<TestVote>());\n        HashSet<TestVote> hs=voteMap.get(lc);\n        hs.add(new TestVote(i,votes[i].id));\n        if (countVotes(hs,votes[i].id) > (count / 2)) {\n          LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n          voteMap.notify();\n        }\n      }\nsynchronized (FLETest.this) {\n        if (leader != votes[i].id)         FLETest.this.wait(3000);\n        LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n          if (leader == votes[i].id) {\nsynchronized (finalObj) {\n              successCount++;\n              if (successCount > (count / 2))               finalObj.notify();\n            }\n            break;\n          }\n else {\n            HashSet<TestVote> hs=voteMap.get(lc);\n            TestVote toRemove=null;\n            for (            TestVote tv : hs) {\n              if (v.id == i) {\n                toRemove=tv;\n                break;\n              }\n            }\n            hs.remove(toRemove);\n          }\n        }\n      }\n    }\n    Thread.sleep(rand.nextInt(500));\n    peer.setCurrentVote(new Vote(peer.getId(),0));\n  }\n  LOG.debug(\"Thread \" + i + \" votes \"+ v);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 535,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7452,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 257,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Vote v=null;\n  while (true) {\n    peer.setPeerState(ServerState.LOOKING);\n    LOG.info(\"Going to call leader election again.\");\n    v=peer.getElectionAlg().lookForLeader();\n    if (v == null) {\n      LOG.info(\"Thread \" + i + \" got a null vote\");\n      break;\n    }\n    peer.setCurrentVote(v);\n    LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n    votes[i]=v;\n    int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n    if (v.id == ((long)i)) {\n      LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n        if (leaderDies) {\n          LOG.info(\"Leader \" + i + \" dying\");\n          leaderDies=false;\n          ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n          leader=-1;\n          LOG.info(\"Leader \" + i + \" dead\");\n          FLETest.this.notifyAll();\n          break;\n        }\n else {\nsynchronized (voteMap) {\n            if (voteMap.get(lc) == null)             voteMap.put(lc,new HashSet<TestVote>());\n            HashSet<TestVote> hs=voteMap.get(lc);\n            hs.add(new TestVote(i,v.id));\n            if (countVotes(hs,v.id) > (count / 2)) {\n              leader=i;\n              LOG.info(\"Got majority: \" + i);\n            }\n else {\n              voteMap.wait(3000);\n              LOG.info(\"Notified or expired: \" + i);\n              hs=voteMap.get(lc);\n              if (countVotes(hs,v.id) > (count / 2)) {\n                leader=i;\n                LOG.info(\"Got majority: \" + i);\n              }\n else {\n              }\n            }\n          }\n          FLETest.this.notifyAll();\n          if (leader == i) {\nsynchronized (finalObj) {\n              successCount++;\n              if (successCount > (count / 2))               finalObj.notify();\n            }\n            break;\n          }\n        }\n      }\n    }\n else {\n      LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n        LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n        if (voteMap.get(lc) == null)         voteMap.put(lc,new HashSet<TestVote>());\n        HashSet<TestVote> hs=voteMap.get(lc);\n        hs.add(new TestVote(i,votes[i].id));\n        if (countVotes(hs,votes[i].id) > (count / 2)) {\n          LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n          voteMap.notify();\n        }\n      }\nsynchronized (FLETest.this) {\n        if (leader != votes[i].id)         FLETest.this.wait(3000);\n        LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n          if (leader == votes[i].id) {\nsynchronized (finalObj) {\n              successCount++;\n              if (successCount > (count / 2))               finalObj.notify();\n            }\n            break;\n          }\n else {\n            HashSet<TestVote> hs=voteMap.get(lc);\n            TestVote toRemove=null;\n            for (            TestVote tv : hs) {\n              if (v.id == i) {\n                toRemove=tv;\n                break;\n              }\n            }\n            hs.remove(toRemove);\n          }\n        }\n      }\n    }\n    Thread.sleep(rand.nextInt(500));\n    peer.setCurrentVote(new Vote(peer.getId(),0));\n  }\n  LOG.debug(\"Thread \" + i + \" votes \"+ v);\n}\n catch (InterruptedException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 546,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7476,
        "startLineNumber" : 114,
        "startColumnNumber" : 26,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Vote v=null;\n    while (true) {\n      peer.setPeerState(ServerState.LOOKING);\n      LOG.info(\"Going to call leader election again.\");\n      v=peer.getElectionAlg().lookForLeader();\n      if (v == null) {\n        LOG.info(\"Thread \" + i + \" got a null vote\");\n        break;\n      }\n      peer.setCurrentVote(v);\n      LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n      votes[i]=v;\n      int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n      if (v.id == ((long)i)) {\n        LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n          if (leaderDies) {\n            LOG.info(\"Leader \" + i + \" dying\");\n            leaderDies=false;\n            ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n            leader=-1;\n            LOG.info(\"Leader \" + i + \" dead\");\n            FLETest.this.notifyAll();\n            break;\n          }\n else {\nsynchronized (voteMap) {\n              if (voteMap.get(lc) == null)               voteMap.put(lc,new HashSet<TestVote>());\n              HashSet<TestVote> hs=voteMap.get(lc);\n              hs.add(new TestVote(i,v.id));\n              if (countVotes(hs,v.id) > (count / 2)) {\n                leader=i;\n                LOG.info(\"Got majority: \" + i);\n              }\n else {\n                voteMap.wait(3000);\n                LOG.info(\"Notified or expired: \" + i);\n                hs=voteMap.get(lc);\n                if (countVotes(hs,v.id) > (count / 2)) {\n                  leader=i;\n                  LOG.info(\"Got majority: \" + i);\n                }\n else {\n                }\n              }\n            }\n            FLETest.this.notifyAll();\n            if (leader == i) {\nsynchronized (finalObj) {\n                successCount++;\n                if (successCount > (count / 2))                 finalObj.notify();\n              }\n              break;\n            }\n          }\n        }\n      }\n else {\n        LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n          LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n          if (voteMap.get(lc) == null)           voteMap.put(lc,new HashSet<TestVote>());\n          HashSet<TestVote> hs=voteMap.get(lc);\n          hs.add(new TestVote(i,votes[i].id));\n          if (countVotes(hs,votes[i].id) > (count / 2)) {\n            LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n            voteMap.notify();\n          }\n        }\nsynchronized (FLETest.this) {\n          if (leader != votes[i].id)           FLETest.this.wait(3000);\n          LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n            if (leader == votes[i].id) {\nsynchronized (finalObj) {\n                successCount++;\n                if (successCount > (count / 2))                 finalObj.notify();\n              }\n              break;\n            }\n else {\n              HashSet<TestVote> hs=voteMap.get(lc);\n              TestVote toRemove=null;\n              for (              TestVote tv : hs) {\n                if (v.id == i) {\n                  toRemove=tv;\n                  break;\n                }\n              }\n              hs.remove(toRemove);\n            }\n          }\n        }\n      }\n      Thread.sleep(rand.nextInt(500));\n      peer.setCurrentVote(new Vote(peer.getId(),0));\n    }\n    LOG.debug(\"Thread \" + i + \" votes \"+ v);\n  }\n catch (  InterruptedException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 547,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7494,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void run(){\n  try {\n    Vote v=null;\n    while (true) {\n      peer.setPeerState(ServerState.LOOKING);\n      LOG.info(\"Going to call leader election again.\");\n      v=peer.getElectionAlg().lookForLeader();\n      if (v == null) {\n        LOG.info(\"Thread \" + i + \" got a null vote\");\n        break;\n      }\n      peer.setCurrentVote(v);\n      LOG.info(\"Finished election: \" + i + \", \"+ v.id);\n      votes[i]=v;\n      int lc=(int)((FastLeaderElection)peer.getElectionAlg()).getLogicalClock();\n      if (v.id == ((long)i)) {\n        LOG.info(\"I'm the leader: \" + i);\nsynchronized (FLETest.this) {\n          if (leaderDies) {\n            LOG.info(\"Leader \" + i + \" dying\");\n            leaderDies=false;\n            ((FastLeaderElection)peer.getElectionAlg()).shutdown();\n            leader=-1;\n            LOG.info(\"Leader \" + i + \" dead\");\n            FLETest.this.notifyAll();\n            break;\n          }\n else {\nsynchronized (voteMap) {\n              if (voteMap.get(lc) == null)               voteMap.put(lc,new HashSet<TestVote>());\n              HashSet<TestVote> hs=voteMap.get(lc);\n              hs.add(new TestVote(i,v.id));\n              if (countVotes(hs,v.id) > (count / 2)) {\n                leader=i;\n                LOG.info(\"Got majority: \" + i);\n              }\n else {\n                voteMap.wait(3000);\n                LOG.info(\"Notified or expired: \" + i);\n                hs=voteMap.get(lc);\n                if (countVotes(hs,v.id) > (count / 2)) {\n                  leader=i;\n                  LOG.info(\"Got majority: \" + i);\n                }\n else {\n                }\n              }\n            }\n            FLETest.this.notifyAll();\n            if (leader == i) {\nsynchronized (finalObj) {\n                successCount++;\n                if (successCount > (count / 2))                 finalObj.notify();\n              }\n              break;\n            }\n          }\n        }\n      }\n else {\n        LOG.info(\"Logical clock \" + ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\nsynchronized (voteMap) {\n          LOG.info(\"Voting on \" + votes[i].id + \", round \"+ ((FastLeaderElection)peer.getElectionAlg()).getLogicalClock());\n          if (voteMap.get(lc) == null)           voteMap.put(lc,new HashSet<TestVote>());\n          HashSet<TestVote> hs=voteMap.get(lc);\n          hs.add(new TestVote(i,votes[i].id));\n          if (countVotes(hs,votes[i].id) > (count / 2)) {\n            LOG.info(\"Logical clock: \" + lc + \", \"+ votes[i].id);\n            voteMap.notify();\n          }\n        }\nsynchronized (FLETest.this) {\n          if (leader != votes[i].id)           FLETest.this.wait(3000);\n          LOG.info(\"The leader: \" + leader + \" and my vote \"+ votes[i].id);\nsynchronized (voteMap) {\n            if (leader == votes[i].id) {\nsynchronized (finalObj) {\n                successCount++;\n                if (successCount > (count / 2))                 finalObj.notify();\n              }\n              break;\n            }\n else {\n              HashSet<TestVote> hs=voteMap.get(lc);\n              TestVote toRemove=null;\n              for (              TestVote tv : hs) {\n                if (v.id == i) {\n                  toRemove=tv;\n                  break;\n                }\n              }\n              hs.remove(toRemove);\n            }\n          }\n        }\n      }\n      Thread.sleep(rand.nextInt(500));\n      peer.setCurrentVote(new Vote(peer.getId(),0));\n    }\n    LOG.debug(\"Thread \" + i + \" votes \"+ v);\n  }\n catch (  InterruptedException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 551,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 165,
        "startColumnNumber" : 36,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "hs.add(new TestVote(i,v.id));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "org.apache.zookeeper.test.FLETest.TestVote"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 165,
    "startColumnNumber" : 43,
    "endLineNumber" : 165,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}