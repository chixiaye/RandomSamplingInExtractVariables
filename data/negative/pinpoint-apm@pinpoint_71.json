{
  "id" : 71,
  "expression" : "new String(\"[\")",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/util/ArrayUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String(\"[\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 32,
      "startColumnNumber" : 18,
      "endLineNumber" : 32,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 32,
        "startColumnNumber" : 9,
        "endLineNumber" : 32,
        "endColumnNumber" : 33
      },
      "nodeContext" : "answer=new String(\"[\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String answer=new String(\"[\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 9,
        "startColumnNumber" : 32,
        "endLineNumber" : 67,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.assertTrue(ArrayUtils.dropToString(null).equals(\"null\"));\n  byte[] bytes_zero=new byte[0];\n  Assert.assertEquals(\"[]\",ArrayUtils.dropToString(bytes_zero));\n  byte[] bytes_short=new byte[4];\n  for (int i=0; i < 4; i++) {\n    bytes_short[i]='A';\n  }\n  Assert.assertEquals(\"[65, 65, 65, 65]\",ArrayUtils.dropToString(bytes_short));\n  byte[] bytes=new byte[256];\n  for (int i=0; i < 4; i++) {\n    bytes[i]='A';\n  }\n  for (int i=4; i < 256; i++) {\n    bytes[i]='B';\n  }\n  String answer=new String(\"[\");\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 16; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"...(240)]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes,16));\n  answer=\"[\";\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 255; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"66]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes,256));\n  answer=\"[\";\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 32; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"...(224)]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 8,
        "startColumnNumber" : 1,
        "endLineNumber" : 67,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testDropToString(){\n  Assert.assertTrue(ArrayUtils.dropToString(null).equals(\"null\"));\n  byte[] bytes_zero=new byte[0];\n  Assert.assertEquals(\"[]\",ArrayUtils.dropToString(bytes_zero));\n  byte[] bytes_short=new byte[4];\n  for (int i=0; i < 4; i++) {\n    bytes_short[i]='A';\n  }\n  Assert.assertEquals(\"[65, 65, 65, 65]\",ArrayUtils.dropToString(bytes_short));\n  byte[] bytes=new byte[256];\n  for (int i=0; i < 4; i++) {\n    bytes[i]='A';\n  }\n  for (int i=4; i < 256; i++) {\n    bytes[i]='B';\n  }\n  String answer=new String(\"[\");\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 16; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"...(240)]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes,16));\n  answer=\"[\";\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 255; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"66]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes,256));\n  answer=\"[\";\n  for (int i=0; i < 4; i++) {\n    answer=answer + \"65, \";\n  }\n  for (int i=4; i < 32; i++) {\n    answer=answer + \"66, \";\n  }\n  answer=answer + \"...(224)]\";\n  Assert.assertEquals(answer,ArrayUtils.dropToString(bytes));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String answer=new String(\"[\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 32,
    "startColumnNumber" : 18,
    "endLineNumber" : 32,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}