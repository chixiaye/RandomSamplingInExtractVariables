{
  "id" : 460,
  "expression" : "next[i][k]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/FloydWarshallSolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "next[i][k]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 72,
      "startColumnNumber" : 25,
      "endLineNumber" : 72,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 35
      },
      "nodeContext" : "next[i][j]=next[i][k]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "next[i][j]=next[i][k];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 70,
        "startColumnNumber" : 46,
        "endLineNumber" : 73,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  dp[i][j]=dp[i][k] + dp[k][j];\n  next[i][j]=next[i][k];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 73,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (dp[i][k] + dp[k][j] < dp[i][j]) {\n  dp[i][j]=dp[i][k] + dp[k][j];\n  next[i][j]=next[i][k];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 69,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (dp[i][k] + dp[k][j] < dp[i][j]) {\n    dp[i][j]=dp[i][k] + dp[k][j];\n    next[i][j]=next[i][k];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < n; j++) {\n  if (dp[i][k] + dp[k][j] < dp[i][j]) {\n    dp[i][j]=dp[i][k] + dp[k][j];\n    next[i][j]=next[i][k];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 68,
        "startColumnNumber" : 34,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (int j=0; j < n; j++) {\n    if (dp[i][k] + dp[k][j] < dp[i][j]) {\n      dp[i][j]=dp[i][k] + dp[k][j];\n      next[i][j]=next[i][k];\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  for (int j=0; j < n; j++) {\n    if (dp[i][k] + dp[k][j] < dp[i][j]) {\n      dp[i][j]=dp[i][k] + dp[k][j];\n      next[i][j]=next[i][k];\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 73,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 67,
        "startColumnNumber" : 32,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      if (dp[i][k] + dp[k][j] < dp[i][j]) {\n        dp[i][j]=dp[i][k] + dp[k][j];\n        next[i][j]=next[i][k];\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int k=0; k < n; k++) {\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      if (dp[i][k] + dp[k][j] < dp[i][j]) {\n        dp[i][j]=dp[i][k] + dp[k][j];\n        next[i][j]=next[i][k];\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 85,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return;\n  for (int k=0; k < n; k++) {\n    for (int i=0; i < n; i++) {\n      for (int j=0; j < n; j++) {\n        if (dp[i][k] + dp[k][j] < dp[i][j]) {\n          dp[i][j]=dp[i][k] + dp[k][j];\n          next[i][j]=next[i][k];\n        }\n      }\n    }\n  }\n  for (int k=0; k < n; k++)   for (int i=0; i < n; i++)   for (int j=0; j < n; j++)   if (dp[i][k] + dp[k][j] < dp[i][j]) {\n    dp[i][j]=NEGATIVE_INFINITY;\n    next[i][j]=REACHES_NEGATIVE_CYCLE;\n  }\n  solved=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  if (solved)   return;\n  for (int k=0; k < n; k++) {\n    for (int i=0; i < n; i++) {\n      for (int j=0; j < n; j++) {\n        if (dp[i][k] + dp[k][j] < dp[i][j]) {\n          dp[i][j]=dp[i][k] + dp[k][j];\n          next[i][j]=next[i][k];\n        }\n      }\n    }\n  }\n  for (int k=0; k < n; k++)   for (int i=0; i < n; i++)   for (int j=0; j < n; j++)   if (dp[i][k] + dp[k][j] < dp[i][j]) {\n    dp[i][j]=NEGATIVE_INFINITY;\n    next[i][j]=REACHES_NEGATIVE_CYCLE;\n  }\n  solved=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "next[i][j]=next[i][k];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 72,
    "startColumnNumber" : 25,
    "endLineNumber" : 72,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}