{
  "id" : 422,
  "expression" : "32",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/util/OkHttpUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "32",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 23,
      "startColumnNumber" : 67,
      "endLineNumber" : 23,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 23,
        "startColumnNumber" : 40,
        "endLineNumber" : 23,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ByteUnit.KILOBYTES.toBytes(32)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 23,
        "startColumnNumber" : 34,
        "endLineNumber" : 23,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(int)ByteUnit.KILOBYTES.toBytes(32)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 23,
        "startColumnNumber" : 25,
        "endLineNumber" : 23,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new byte[(int)ByteUnit.KILOBYTES.toBytes(32)]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 23,
        "startColumnNumber" : 11,
        "endLineNumber" : 23,
        "endColumnNumber" : 71
      },
      "nodeContext" : "buffer=new byte[(int)ByteUnit.KILOBYTES.toBytes(32)]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 72
      },
      "nodeContext" : "byte[] buffer=new byte[(int)ByteUnit.KILOBYTES.toBytes(32)];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 20,
        "startColumnNumber" : 103,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  byte[] buffer=new byte[(int)ByteUnit.KILOBYTES.toBytes(32)];\n  int readLength=0;\n  int totalLength=0;\n  while ((readLength=bodyStream.read(buffer)) >= 0) {\n    if (totalLength + readLength > sizeLimit) {\n      throw new IOException(\"Exceeded maximum size during read!\");\n    }\n    outputStream.write(buffer,0,readLength);\n    totalLength+=readLength;\n  }\n  return outputStream.toByteArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static byte[] readAsBytes(@NonNull InputStream bodyStream,long sizeLimit) throws IOException {\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  byte[] buffer=new byte[(int)ByteUnit.KILOBYTES.toBytes(32)];\n  int readLength=0;\n  int totalLength=0;\n  while ((readLength=bodyStream.read(buffer)) >= 0) {\n    if (totalLength + readLength > sizeLimit) {\n      throw new IOException(\"Exceeded maximum size during read!\");\n    }\n    outputStream.write(buffer,0,readLength);\n    totalLength+=readLength;\n  }\n  return outputStream.toByteArray();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 72
      },
      "nodeContext" : "byte[] buffer=new byte[(int)ByteUnit.KILOBYTES.toBytes(32)];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 23,
    "startColumnNumber" : 67,
    "endLineNumber" : 23,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}