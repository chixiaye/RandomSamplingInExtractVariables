{
  "id" : 454,
  "expression" : "i * 1L",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/ConsulDubboServiceConsumerBootstrap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i * 1L",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 47,
      "startColumnNumber" : 51,
      "endLineNumber" : 47,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 47,
        "startColumnNumber" : 31,
        "endLineNumber" : 47,
        "endColumnNumber" : 58
      },
      "nodeContext" : "userService.getUser(i * 1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 59
      },
      "nodeContext" : "System.out.println(userService.getUser(i * 1L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "System.out.println(userService.getUser(i * 1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 44,
        "startColumnNumber" : 36,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Thread.sleep(2000L);\n  System.out.println(echoService.echo(\"Hello,World\"));\n  System.out.println(userService.getUser(i * 1L));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  Thread.sleep(2000L);\n  System.out.println(echoService.echo(\"Hello,World\"));\n  System.out.println(userService.getUser(i * 1L));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 30,
        "startColumnNumber" : 60,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DubboBootstrap bootstrap=DubboBootstrap.getInstance().application(\"consul-dubbo-consumer\",app -> app.metadata(DEFAULT_METADATA_STORAGE_TYPE)).registry(\"zookeeper\",builder -> builder.address(\"consul://127.0.0.1:8500?registry-type=service&subscribed-services=consul-dubbo-provider\").useAsConfigCenter(true).useAsMetadataCenter(true)).reference(\"echo\",builder -> builder.interfaceClass(EchoService.class).protocol(\"dubbo\")).reference(\"user\",builder -> builder.interfaceClass(UserService.class).protocol(\"rest\")).start();\n  EchoService echoService=bootstrap.getCache().get(EchoService.class);\n  UserService userService=bootstrap.getCache().get(UserService.class);\n  for (int i=0; i < 5; i++) {\n    Thread.sleep(2000L);\n    System.out.println(echoService.echo(\"Hello,World\"));\n    System.out.println(userService.getUser(i * 1L));\n  }\n  bootstrap.stop();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  DubboBootstrap bootstrap=DubboBootstrap.getInstance().application(\"consul-dubbo-consumer\",app -> app.metadata(DEFAULT_METADATA_STORAGE_TYPE)).registry(\"zookeeper\",builder -> builder.address(\"consul://127.0.0.1:8500?registry-type=service&subscribed-services=consul-dubbo-provider\").useAsConfigCenter(true).useAsMetadataCenter(true)).reference(\"echo\",builder -> builder.interfaceClass(EchoService.class).protocol(\"dubbo\")).reference(\"user\",builder -> builder.interfaceClass(UserService.class).protocol(\"rest\")).start();\n  EchoService echoService=bootstrap.getCache().get(EchoService.class);\n  UserService userService=bootstrap.getCache().get(UserService.class);\n  for (int i=0; i < 5; i++) {\n    Thread.sleep(2000L);\n    System.out.println(echoService.echo(\"Hello,World\"));\n    System.out.println(userService.getUser(i * 1L));\n  }\n  bootstrap.stop();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "System.out.println(userService.getUser(i * 1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 47,
    "startColumnNumber" : 51,
    "endLineNumber" : 47,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}