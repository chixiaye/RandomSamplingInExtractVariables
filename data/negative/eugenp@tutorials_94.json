{
  "id" : 94,
  "expression" : "ERROR_CREATE_INSTANCE",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-core-2/src/main/java/com/baeldung/customannotation/DataAccessFieldCallback.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ERROR_CREATE_INSTANCE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 82,
      "startColumnNumber" : 29,
      "endLineNumber" : 82,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 83
      },
      "nodeContext" : "logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 81,
        "startColumnNumber" : 40,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 81,
        "startColumnNumber" : 14,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (final Exception e) {\n  logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  final Constructor<?> ctr=genericClass.getConstructor(Class.class);\n  toRegister=ctr.newInstance(paramClass);\n}\n catch (final Exception e) {\n  logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 74,
        "startColumnNumber" : 69,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.info(\"Creating new DataAccess bean named '{}'.\",beanName);\n  Object toRegister=null;\n  try {\n    final Constructor<?> ctr=genericClass.getConstructor(Class.class);\n    toRegister=ctr.newInstance(paramClass);\n  }\n catch (  final Exception e) {\n    logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n    throw new RuntimeException(e);\n  }\n  daoInstance=configurableListableBeanFactory.initializeBean(toRegister,beanName);\n  configurableListableBeanFactory.autowireBeanProperties(daoInstance,AUTOWIRE_MODE,true);\n  configurableListableBeanFactory.registerSingleton(beanName,daoInstance);\n  logger.info(\"Bean named '{}' created successfully.\",beanName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1093,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!configurableListableBeanFactory.containsBean(beanName)) {\n  logger.info(\"Creating new DataAccess bean named '{}'.\",beanName);\n  Object toRegister=null;\n  try {\n    final Constructor<?> ctr=genericClass.getConstructor(Class.class);\n    toRegister=ctr.newInstance(paramClass);\n  }\n catch (  final Exception e) {\n    logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n    throw new RuntimeException(e);\n  }\n  daoInstance=configurableListableBeanFactory.initializeBean(toRegister,beanName);\n  configurableListableBeanFactory.autowireBeanProperties(daoInstance,AUTOWIRE_MODE,true);\n  configurableListableBeanFactory.registerSingleton(beanName,daoInstance);\n  logger.info(\"Bean named '{}' created successfully.\",beanName);\n}\n else {\n  daoInstance=configurableListableBeanFactory.getBean(beanName);\n  logger.info(\"Bean named '{}' already exist used as current bean reference.\",beanName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 72,
        "startColumnNumber" : 119,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object daoInstance=null;\n  if (!configurableListableBeanFactory.containsBean(beanName)) {\n    logger.info(\"Creating new DataAccess bean named '{}'.\",beanName);\n    Object toRegister=null;\n    try {\n      final Constructor<?> ctr=genericClass.getConstructor(Class.class);\n      toRegister=ctr.newInstance(paramClass);\n    }\n catch (    final Exception e) {\n      logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n      throw new RuntimeException(e);\n    }\n    daoInstance=configurableListableBeanFactory.initializeBean(toRegister,beanName);\n    configurableListableBeanFactory.autowireBeanProperties(daoInstance,AUTOWIRE_MODE,true);\n    configurableListableBeanFactory.registerSingleton(beanName,daoInstance);\n    logger.info(\"Bean named '{}' created successfully.\",beanName);\n  }\n else {\n    daoInstance=configurableListableBeanFactory.getBean(beanName);\n    logger.info(\"Bean named '{}' already exist used as current bean reference.\",beanName);\n  }\n  return daoInstance;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public final Object getBeanInstance(final String beanName,final Class<?> genericClass,final Class<?> paramClass){\n  Object daoInstance=null;\n  if (!configurableListableBeanFactory.containsBean(beanName)) {\n    logger.info(\"Creating new DataAccess bean named '{}'.\",beanName);\n    Object toRegister=null;\n    try {\n      final Constructor<?> ctr=genericClass.getConstructor(Class.class);\n      toRegister=ctr.newInstance(paramClass);\n    }\n catch (    final Exception e) {\n      logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n      throw new RuntimeException(e);\n    }\n    daoInstance=configurableListableBeanFactory.initializeBean(toRegister,beanName);\n    configurableListableBeanFactory.autowireBeanProperties(daoInstance,AUTOWIRE_MODE,true);\n    configurableListableBeanFactory.registerSingleton(beanName,daoInstance);\n    logger.info(\"Bean named '{}' created successfully.\",beanName);\n  }\n else {\n    daoInstance=configurableListableBeanFactory.getBean(beanName);\n    logger.info(\"Bean named '{}' already exist used as current bean reference.\",beanName);\n  }\n  return daoInstance;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 83
      },
      "nodeContext" : "logger.error(ERROR_CREATE_INSTANCE,genericClass.getTypeName(),e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 82,
    "startColumnNumber" : 29,
    "endLineNumber" : 82,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}