{
  "id" : 374,
  "expression" : "i",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-poi/src/main/java/cn/hutool/poi/excel/RowUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 36,
      "endLineNumber" : 75,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 75,
        "startColumnNumber" : 36,
        "endLineNumber" : 75,
        "endColumnNumber" : 44
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=startCellNumInclude; i < size; i++) {\n  cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n  isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n  cellValues.add(cellValue);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 62,
        "startColumnNumber" : 116,
        "endLineNumber" : 86,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == row) {\n    return new ArrayList<>(0);\n  }\n  final short rowLength=row.getLastCellNum();\n  if (rowLength < 0) {\n    return ListUtil.empty();\n  }\n  final int size=Math.min(endCellNumInclude + 1,rowLength);\n  final List<Object> cellValues=new ArrayList<>(size);\n  Object cellValue;\n  boolean isAllNull=true;\n  for (int i=startCellNumInclude; i < size; i++) {\n    cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n    isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n    cellValues.add(cellValue);\n  }\n  if (isAllNull) {\n    return ListUtil.empty();\n  }\n  return cellValues;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 86,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 读取一行\n * @param row                 行\n * @param startCellNumInclude 起始单元格号，0开始（包含）\n * @param endCellNumInclude   结束单元格号，0开始（包含）\n * @param cellEditor          单元格编辑器\n * @return 单元格值列表\n */\npublic static List<Object> readRow(Row row,int startCellNumInclude,int endCellNumInclude,CellEditor cellEditor){\n  if (null == row) {\n    return new ArrayList<>(0);\n  }\n  final short rowLength=row.getLastCellNum();\n  if (rowLength < 0) {\n    return ListUtil.empty();\n  }\n  final int size=Math.min(endCellNumInclude + 1,rowLength);\n  final List<Object> cellValues=new ArrayList<>(size);\n  Object cellValue;\n  boolean isAllNull=true;\n  for (int i=startCellNumInclude; i < size; i++) {\n    cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n    isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n    cellValues.add(cellValue);\n  }\n  if (isAllNull) {\n    return ListUtil.empty();\n  }\n  return cellValues;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 75,
        "startColumnNumber" : 36,
        "endLineNumber" : 75,
        "endColumnNumber" : 44
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 76,
      "startColumnNumber" : 59,
      "endLineNumber" : 76,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 76,
        "startColumnNumber" : 37,
        "endLineNumber" : 76,
        "endColumnNumber" : 61
      },
      "nodeContext" : "CellUtil.getCell(row,i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 76,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 74
      },
      "nodeContext" : "CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 74
      },
      "nodeContext" : "cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 75
      },
      "nodeContext" : "cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 75,
        "startColumnNumber" : 51,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n  isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n  cellValues.add(cellValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=startCellNumInclude; i < size; i++) {\n  cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n  isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n  cellValues.add(cellValue);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 62,
        "startColumnNumber" : 116,
        "endLineNumber" : 86,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == row) {\n    return new ArrayList<>(0);\n  }\n  final short rowLength=row.getLastCellNum();\n  if (rowLength < 0) {\n    return ListUtil.empty();\n  }\n  final int size=Math.min(endCellNumInclude + 1,rowLength);\n  final List<Object> cellValues=new ArrayList<>(size);\n  Object cellValue;\n  boolean isAllNull=true;\n  for (int i=startCellNumInclude; i < size; i++) {\n    cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n    isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n    cellValues.add(cellValue);\n  }\n  if (isAllNull) {\n    return ListUtil.empty();\n  }\n  return cellValues;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 86,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 读取一行\n * @param row                 行\n * @param startCellNumInclude 起始单元格号，0开始（包含）\n * @param endCellNumInclude   结束单元格号，0开始（包含）\n * @param cellEditor          单元格编辑器\n * @return 单元格值列表\n */\npublic static List<Object> readRow(Row row,int startCellNumInclude,int endCellNumInclude,CellEditor cellEditor){\n  if (null == row) {\n    return new ArrayList<>(0);\n  }\n  final short rowLength=row.getLastCellNum();\n  if (rowLength < 0) {\n    return ListUtil.empty();\n  }\n  final int size=Math.min(endCellNumInclude + 1,rowLength);\n  final List<Object> cellValues=new ArrayList<>(size);\n  Object cellValue;\n  boolean isAllNull=true;\n  for (int i=startCellNumInclude; i < size; i++) {\n    cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n    isAllNull&=StrUtil.isEmptyIfStr(cellValue);\n    cellValues.add(cellValue);\n  }\n  if (isAllNull) {\n    return ListUtil.empty();\n  }\n  return cellValues;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 75
      },
      "nodeContext" : "cellValue=CellUtil.getCellValue(CellUtil.getCell(row,i),cellEditor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 36,
    "endLineNumber" : 75,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 76,
    "startColumnNumber" : 59,
    "endLineNumber" : 76,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}