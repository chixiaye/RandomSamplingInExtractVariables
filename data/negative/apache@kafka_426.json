{
  "id" : 426,
  "expression" : "future",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/requests/DescribeClientQuotasResponse.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "future",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 78
      },
      "nodeContext" : "future.completeExceptionally(error.exception(data.errorMessage()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 79
      },
      "nodeContext" : "future.completeExceptionally(error.exception(data.errorMessage()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 46,
        "startColumnNumber" : 34,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  future.completeExceptionally(error.exception(data.errorMessage()));\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (error != Errors.NONE) {\n  future.completeExceptionally(error.exception(data.errorMessage()));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 44,
        "startColumnNumber" : 94,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Errors error=Errors.forCode(data.errorCode());\n  if (error != Errors.NONE) {\n    future.completeExceptionally(error.exception(data.errorMessage()));\n    return;\n  }\n  Map<ClientQuotaEntity,Map<String,Double>> result=new HashMap<>(data.entries().size());\n  for (  EntryData entries : data.entries()) {\n    Map<String,String> entity=new HashMap<>(entries.entity().size());\n    for (    EntityData entityData : entries.entity()) {\n      entity.put(entityData.entityType(),entityData.entityName());\n    }\n    Map<String,Double> values=new HashMap<>(entries.values().size());\n    for (    ValueData valueData : entries.values()) {\n      values.put(valueData.key(),valueData.value());\n    }\n    result.put(new ClientQuotaEntity(entity),values);\n  }\n  future.complete(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void complete(KafkaFutureImpl<Map<ClientQuotaEntity,Map<String,Double>>> future){\n  Errors error=Errors.forCode(data.errorCode());\n  if (error != Errors.NONE) {\n    future.completeExceptionally(error.exception(data.errorMessage()));\n    return;\n  }\n  Map<ClientQuotaEntity,Map<String,Double>> result=new HashMap<>(data.entries().size());\n  for (  EntryData entries : data.entries()) {\n    Map<String,String> entity=new HashMap<>(entries.entity().size());\n    for (    EntityData entityData : entries.entity()) {\n      entity.put(entityData.entityType(),entityData.entityName());\n    }\n    Map<String,Double> values=new HashMap<>(entries.values().size());\n    for (    ValueData valueData : entries.values()) {\n      values.put(valueData.key(),valueData.value());\n    }\n    result.put(new ClientQuotaEntity(entity),values);\n  }\n  future.complete(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 79
      },
      "nodeContext" : "future.completeExceptionally(error.exception(data.errorMessage()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.internals.KafkaFutureImpl<java.util.Map<org.apache.kafka.common.quota.ClientQuotaEntity,java.util.Map<java.lang.String,java.lang.Double>>>"
  }, {
    "nodeContext" : "future",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 65,
      "startColumnNumber" : 8,
      "endLineNumber" : 65,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 31
      },
      "nodeContext" : "future.complete(result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 32
      },
      "nodeContext" : "future.complete(result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 44,
        "startColumnNumber" : 94,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Errors error=Errors.forCode(data.errorCode());\n  if (error != Errors.NONE) {\n    future.completeExceptionally(error.exception(data.errorMessage()));\n    return;\n  }\n  Map<ClientQuotaEntity,Map<String,Double>> result=new HashMap<>(data.entries().size());\n  for (  EntryData entries : data.entries()) {\n    Map<String,String> entity=new HashMap<>(entries.entity().size());\n    for (    EntityData entityData : entries.entity()) {\n      entity.put(entityData.entityType(),entityData.entityName());\n    }\n    Map<String,Double> values=new HashMap<>(entries.values().size());\n    for (    ValueData valueData : entries.values()) {\n      values.put(valueData.key(),valueData.value());\n    }\n    result.put(new ClientQuotaEntity(entity),values);\n  }\n  future.complete(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void complete(KafkaFutureImpl<Map<ClientQuotaEntity,Map<String,Double>>> future){\n  Errors error=Errors.forCode(data.errorCode());\n  if (error != Errors.NONE) {\n    future.completeExceptionally(error.exception(data.errorMessage()));\n    return;\n  }\n  Map<ClientQuotaEntity,Map<String,Double>> result=new HashMap<>(data.entries().size());\n  for (  EntryData entries : data.entries()) {\n    Map<String,String> entity=new HashMap<>(entries.entity().size());\n    for (    EntityData entityData : entries.entity()) {\n      entity.put(entityData.entityType(),entityData.entityName());\n    }\n    Map<String,Double> values=new HashMap<>(entries.values().size());\n    for (    ValueData valueData : entries.values()) {\n      values.put(valueData.key(),valueData.value());\n    }\n    result.put(new ClientQuotaEntity(entity),values);\n  }\n  future.complete(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 32
      },
      "nodeContext" : "future.complete(result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.internals.KafkaFutureImpl<java.util.Map<org.apache.kafka.common.quota.ClientQuotaEntity,java.util.Map<java.lang.String,java.lang.Double>>>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 65,
    "startColumnNumber" : 8,
    "endLineNumber" : 65,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}