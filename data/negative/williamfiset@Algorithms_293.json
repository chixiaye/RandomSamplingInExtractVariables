{
  "id" : 293,
  "expression" : "right",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/sorting/Heapsort.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "right",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 45,
      "startColumnNumber" : 10,
      "endLineNumber" : 45,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 45,
        "startColumnNumber" : 10,
        "endLineNumber" : 45,
        "endColumnNumber" : 19
      },
      "nodeContext" : "right < n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 45,
        "startColumnNumber" : 10,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "right < n && ar[right] > ar[largest]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 39,
        "startColumnNumber" : 17,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void sink(int[] ar,int n,int i){\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "right",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 45,
      "startColumnNumber" : 26,
      "endLineNumber" : 45,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 45,
        "startColumnNumber" : 23,
        "endLineNumber" : 45,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ar[right]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 45,
        "startColumnNumber" : 23,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "ar[right] > ar[largest]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 45,
        "startColumnNumber" : 10,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "right < n && ar[right] > ar[largest]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 39,
        "startColumnNumber" : 17,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void sink(int[] ar,int n,int i){\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "right",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 45,
      "startColumnNumber" : 58,
      "endLineNumber" : 45,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 45,
        "startColumnNumber" : 48,
        "endLineNumber" : 45,
        "endColumnNumber" : 63
      },
      "nodeContext" : "largest=right",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 45,
        "startColumnNumber" : 48,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "largest=right;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 39,
        "startColumnNumber" : 17,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int left=2 * i + 1;\n  int right=2 * i + 2;\n  int largest=i;\n  if (right < n && ar[right] > ar[largest])   largest=right;\n  if (left < n && ar[left] > ar[largest])   largest=left;\n  if (largest != i) {\n    swap(ar,largest,i);\n    i=largest;\n  }\n else   break;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void sink(int[] ar,int n,int i){\n  while (true) {\n    int left=2 * i + 1;\n    int right=2 * i + 2;\n    int largest=i;\n    if (right < n && ar[right] > ar[largest])     largest=right;\n    if (left < n && ar[left] > ar[largest])     largest=left;\n    if (largest != i) {\n      swap(ar,largest,i);\n      i=largest;\n    }\n else     break;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (right < n && ar[right] > ar[largest]) largest=right;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 45,
    "startColumnNumber" : 10,
    "endLineNumber" : 45,
    "endColumnNumber" : 15
  }, {
    "charLength" : 5,
    "startLineNumber" : 45,
    "startColumnNumber" : 26,
    "endLineNumber" : 45,
    "endColumnNumber" : 31
  }, {
    "charLength" : 5,
    "startLineNumber" : 45,
    "startColumnNumber" : 58,
    "endLineNumber" : 45,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}