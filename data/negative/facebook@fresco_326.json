{
  "id" : 326,
  "expression" : "i",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-base/src/main/java/com/facebook/imageutils/StreamProcessor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 20,
      "endLineNumber" : 28,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 28,
        "startColumnNumber" : 20,
        "endLineNumber" : 28,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < numBytes",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < numBytes; i++) {\n  int b=is.read();\n  if (b == -1) {\n    throw new IOException(\"no more bytes\");\n  }\n  if (isLittleEndian) {\n    value|=(b & 0xFF) << (i * 8);\n  }\n else {\n    value=(value << 8) | (b & 0xFF);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 26,
        "startColumnNumber" : 25,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int value=0;\n  for (int i=0; i < numBytes; i++) {\n    int b=is.read();\n    if (b == -1) {\n      throw new IOException(\"no more bytes\");\n    }\n    if (isLittleEndian) {\n      value|=(b & 0xFF) << (i * 8);\n    }\n else {\n      value=(value << 8) | (b & 0xFF);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Consumes up to 4 bytes and returns them as int (taking into account endianess). Throws exception if specified number of bytes cannot be consumed.\n * @param is the input stream to read bytes from\n * @param numBytes the number of bytes to read\n * @param isLittleEndian whether the bytes should be interpreted in little or big endian format\n * @return packed int read from input stream and constructed according to endianness\n */\npublic static int readPackedInt(InputStream is,int numBytes,boolean isLittleEndian) throws IOException {\n  int value=0;\n  for (int i=0; i < numBytes; i++) {\n    int b=is.read();\n    if (b == -1) {\n      throw new IOException(\"no more bytes\");\n    }\n    if (isLittleEndian) {\n      value|=(b & 0xFF) << (i * 8);\n    }\n else {\n      value=(value << 8) | (b & 0xFF);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 28,
        "startColumnNumber" : 20,
        "endLineNumber" : 28,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < numBytes",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 34,
      "startColumnNumber" : 32,
      "endLineNumber" : 34,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 34,
        "startColumnNumber" : 32,
        "endLineNumber" : 34,
        "endColumnNumber" : 37
      },
      "nodeContext" : "i * 8",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 34,
        "startColumnNumber" : 31,
        "endLineNumber" : 34,
        "endColumnNumber" : 38
      },
      "nodeContext" : "(i * 8)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 34,
        "startColumnNumber" : 17,
        "endLineNumber" : 34,
        "endColumnNumber" : 38
      },
      "nodeContext" : "(b & 0xFF) << (i * 8)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 38
      },
      "nodeContext" : "value|=(b & 0xFF) << (i * 8)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 39
      },
      "nodeContext" : "value|=(b & 0xFF) << (i * 8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 33,
        "startColumnNumber" : 26,
        "endLineNumber" : 35,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  value|=(b & 0xFF) << (i * 8);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 33,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (isLittleEndian) {\n  value|=(b & 0xFF) << (i * 8);\n}\n else {\n  value=(value << 8) | (b & 0xFF);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 28,
        "startColumnNumber" : 39,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int b=is.read();\n  if (b == -1) {\n    throw new IOException(\"no more bytes\");\n  }\n  if (isLittleEndian) {\n    value|=(b & 0xFF) << (i * 8);\n  }\n else {\n    value=(value << 8) | (b & 0xFF);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < numBytes; i++) {\n  int b=is.read();\n  if (b == -1) {\n    throw new IOException(\"no more bytes\");\n  }\n  if (isLittleEndian) {\n    value|=(b & 0xFF) << (i * 8);\n  }\n else {\n    value=(value << 8) | (b & 0xFF);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 26,
        "startColumnNumber" : 25,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int value=0;\n  for (int i=0; i < numBytes; i++) {\n    int b=is.read();\n    if (b == -1) {\n      throw new IOException(\"no more bytes\");\n    }\n    if (isLittleEndian) {\n      value|=(b & 0xFF) << (i * 8);\n    }\n else {\n      value=(value << 8) | (b & 0xFF);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Consumes up to 4 bytes and returns them as int (taking into account endianess). Throws exception if specified number of bytes cannot be consumed.\n * @param is the input stream to read bytes from\n * @param numBytes the number of bytes to read\n * @param isLittleEndian whether the bytes should be interpreted in little or big endian format\n * @return packed int read from input stream and constructed according to endianness\n */\npublic static int readPackedInt(InputStream is,int numBytes,boolean isLittleEndian) throws IOException {\n  int value=0;\n  for (int i=0; i < numBytes; i++) {\n    int b=is.read();\n    if (b == -1) {\n      throw new IOException(\"no more bytes\");\n    }\n    if (isLittleEndian) {\n      value|=(b & 0xFF) << (i * 8);\n    }\n else {\n      value=(value << 8) | (b & 0xFF);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 39
      },
      "nodeContext" : "value|=(b & 0xFF) << (i * 8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 20,
    "endLineNumber" : 28,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 34,
    "startColumnNumber" : 32,
    "endLineNumber" : 34,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  } ]
}