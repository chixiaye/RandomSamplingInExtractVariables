{
  "id" : 119,
  "expression" : "Math.min(startItem + pageSize,list.size())",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-thymeleaf/src/main/java/com/baeldung/thymeleaf/model/Page.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.min(startItem + pageSize,list.size())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 41,
      "startColumnNumber" : 22,
      "endLineNumber" : 41,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 65
      },
      "nodeContext" : "toIndex=Math.min(startItem + pageSize,list.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int toIndex=Math.min(startItem + pageSize,list.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 16,
        "startColumnNumber" : 61,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (list.isEmpty()) {\n    this.list=list;\n  }\n  if (pageSize <= 0 || pageSize > list.size() || currentPage <= 0) {\n    throw new IllegalArgumentException(\"invalid page size or current page!\");\n  }\n  this.pageSize=pageSize;\n  this.currentPage=currentPage;\n  if (list.size() % pageSize == 0) {\n    this.totalPages=list.size() / pageSize;\n  }\n else {\n    this.totalPages=list.size() / pageSize + 1;\n  }\n  int startItem=(currentPage - 1) * pageSize;\n  if (list.size() < startItem) {\n    this.list=Collections.emptyList();\n  }\n  int toIndex=Math.min(startItem + pageSize,list.size());\n  this.list=list.subList(startItem,toIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Page(List<T> list,int pageSize,int currentPage){\n  if (list.isEmpty()) {\n    this.list=list;\n  }\n  if (pageSize <= 0 || pageSize > list.size() || currentPage <= 0) {\n    throw new IllegalArgumentException(\"invalid page size or current page!\");\n  }\n  this.pageSize=pageSize;\n  this.currentPage=currentPage;\n  if (list.size() % pageSize == 0) {\n    this.totalPages=list.size() / pageSize;\n  }\n else {\n    this.totalPages=list.size() / pageSize + 1;\n  }\n  int startItem=(currentPage - 1) * pageSize;\n  if (list.size() < startItem) {\n    this.list=Collections.emptyList();\n  }\n  int toIndex=Math.min(startItem + pageSize,list.size());\n  this.list=list.subList(startItem,toIndex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int toIndex=Math.min(startItem + pageSize,list.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 41,
    "startColumnNumber" : 22,
    "endLineNumber" : 41,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}