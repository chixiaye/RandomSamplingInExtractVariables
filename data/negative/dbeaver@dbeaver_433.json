{
  "id" : 433,
  "expression" : "tableName",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/edit/SQLiteTableColumnManager.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tableName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 81,
      "startColumnNumber" : 86,
      "endLineNumber" : 81,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 95
      },
      "nodeContext" : "\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 10
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 11
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2058,
        "startLineNumber" : 48,
        "startColumnNumber" : 217,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2285,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void addObjectDeleteActions(DBRProgressMonitor monitor,DBCExecutionContext executionContext,List<DBEPersistAction> actions,ObjectDeleteCommand command,Map<String,Object> options) throws DBException {\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 95
      },
      "nodeContext" : "\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tableName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 85,
      "startColumnNumber" : 30,
      "endLineNumber" : 85,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 47
      },
      "nodeContext" : "\"\\nDROP TABLE \" + tableName + \";\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 10
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 11
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2058,
        "startLineNumber" : 48,
        "startColumnNumber" : 217,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2285,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void addObjectDeleteActions(DBRProgressMonitor monitor,DBCExecutionContext executionContext,List<DBEPersistAction> actions,ObjectDeleteCommand command,Map<String,Object> options) throws DBException {\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 47
      },
      "nodeContext" : "\"\\nDROP TABLE \" + tableName + \";\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tableName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 93,
      "startColumnNumber" : 29,
      "endLineNumber" : 93,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 111
      },
      "nodeContext" : "\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 10
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 11
      },
      "nodeContext" : "actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2058,
        "startLineNumber" : 48,
        "startColumnNumber" : 217,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2285,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void addObjectDeleteActions(DBRProgressMonitor monitor,DBCExecutionContext executionContext,List<DBEPersistAction> actions,ObjectDeleteCommand command,Map<String,Object> options) throws DBException {\n  final GenericTableColumn column=command.getObject();\n  final GenericTableBase table=column.getTable();\n  final String tableName=DBUtils.getQuotedIdentifier(table);\n  final String tableColumns;\n  final String tableDDL;\n  final List<? extends GenericTableColumn> attributes=table.getAttributes(monitor);\n  if (CommonUtils.isEmpty(attributes)) {\n    throw new DBException(\"Table has no attributes\");\n  }\n  try {\n    if (attributes.contains(column)) {\n      table.removeAttribute(column);\n    }\n    tableColumns=attributes.stream().filter(DBPPersistedObject::isPersisted).map(DBUtils::getQuotedIdentifier).collect(Collectors.joining(\",\\n  \"));\n    tableDDL=DBStructUtils.generateTableDDL(monitor,table,Collections.emptyMap(),false);\n  }\n  finally {\n    if (attributes.contains(column)) {\n      table.addAttribute(column);\n    }\n  }\n  actions.add(new SQLDatabasePersistActionComment(table.getDataSource(),\"Drop column \" + DBUtils.getQuotedIdentifier(column)));\n  actions.add(new SQLDatabasePersistAction(\"Create temporary table from original table\",\"CREATE TEMPORARY TABLE temp AS\\nSELECT\\n  \" + tableColumns + \"\\nFROM \"+ tableName));\n  actions.add(new SQLDatabasePersistAction(\"Drop original table\",\"\\nDROP TABLE \" + tableName + \";\\n\"));\n  actions.add(new SQLDatabasePersistAction(\"Create new table\",tableDDL));\n  actions.add(new SQLDatabasePersistAction(\"Insert values from temporary table to new table\",\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"));\n  actions.add(new SQLDatabasePersistAction(\"Drop temporary table\",\"\\nDROP TABLE temp\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 111
      },
      "nodeContext" : "\"INSERT INTO \" + tableName + \"\\n (\"+ tableColumns+ \")\\nSELECT\\n  \"+ tableColumns+ \"\\nFROM temp\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 81,
    "startColumnNumber" : 86,
    "endLineNumber" : 81,
    "endColumnNumber" : 95
  }, {
    "charLength" : 9,
    "startLineNumber" : 85,
    "startColumnNumber" : 30,
    "endLineNumber" : 85,
    "endColumnNumber" : 39
  }, {
    "charLength" : 9,
    "startLineNumber" : 93,
    "startColumnNumber" : 29,
    "endLineNumber" : 93,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}