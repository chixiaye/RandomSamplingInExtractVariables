{
  "id" : 318,
  "expression" : "new File(lib.getInstalledFolder(),\"keywords.txt\")",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/PdeKeywords.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(lib.getInstalledFolder(),\"keywords.txt\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 66,
      "startColumnNumber" : 26,
      "endLineNumber" : 66,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 76
      },
      "nodeContext" : "keywords=new File(lib.getInstalledFolder(),\"keywords.txt\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 77
      },
      "nodeContext" : "File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 65,
        "startColumnNumber" : 59,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n  if (keywords.exists())   getKeywords(new FileInputStream(keywords));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ContributedLibrary lib : Base.getLibraries()) {\n  File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n  if (keywords.exists())   getKeywords(new FileInputStream(keywords));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  keywordColoring=new KeywordMap(false);\n  keywordToReference=new Hashtable();\n  getKeywords(Base.getLibStream(\"keywords.txt\"));\n  for (  ContributedLibrary lib : Base.getLibraries()) {\n    File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n    if (keywords.exists())     getKeywords(new FileInputStream(keywords));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  keywordColoring=new KeywordMap(false);\n  keywordToReference=new Hashtable();\n  getKeywords(Base.getLibStream(\"keywords.txt\"));\n  for (  ContributedLibrary lib : Base.getLibraries()) {\n    File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n    if (keywords.exists())     getKeywords(new FileInputStream(keywords));\n  }\n}\n catch (Exception e) {\n  Base.showError(\"Problem loading keywords\",\"Could not load keywords.txt,\\n\" + \"please re-install Arduino.\",e);\n  System.exit(1);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    keywordColoring=new KeywordMap(false);\n    keywordToReference=new Hashtable();\n    getKeywords(Base.getLibStream(\"keywords.txt\"));\n    for (    ContributedLibrary lib : Base.getLibraries()) {\n      File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n      if (keywords.exists())       getKeywords(new FileInputStream(keywords));\n    }\n  }\n catch (  Exception e) {\n    Base.showError(\"Problem loading keywords\",\"Could not load keywords.txt,\\n\" + \"please re-install Arduino.\",e);\n    System.exit(1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (keywordColoring == null) {\n  try {\n    keywordColoring=new KeywordMap(false);\n    keywordToReference=new Hashtable();\n    getKeywords(Base.getLibStream(\"keywords.txt\"));\n    for (    ContributedLibrary lib : Base.getLibraries()) {\n      File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n      if (keywords.exists())       getKeywords(new FileInputStream(keywords));\n    }\n  }\n catch (  Exception e) {\n    Base.showError(\"Problem loading keywords\",\"Could not load keywords.txt,\\n\" + \"please re-install Arduino.\",e);\n    System.exit(1);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 59,
        "startColumnNumber" : 41,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (keywordColoring == null) {\n    try {\n      keywordColoring=new KeywordMap(false);\n      keywordToReference=new Hashtable();\n      getKeywords(Base.getLibStream(\"keywords.txt\"));\n      for (      ContributedLibrary lib : Base.getLibraries()) {\n        File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n        if (keywords.exists())         getKeywords(new FileInputStream(keywords));\n      }\n    }\n catch (    Exception e) {\n      Base.showError(\"Problem loading keywords\",\"Could not load keywords.txt,\\n\" + \"please re-install Arduino.\",e);\n      System.exit(1);\n    }\n  }\n  return keywordColoring;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 974,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Handles loading of keywords file. <P> Uses getKeywords()  method because that's part of the TokenMarker classes. <P> It is recommended that a # sign be used for comments inside keywords.txt.\n */\nstatic public KeywordMap getKeywords(){\n  if (keywordColoring == null) {\n    try {\n      keywordColoring=new KeywordMap(false);\n      keywordToReference=new Hashtable();\n      getKeywords(Base.getLibStream(\"keywords.txt\"));\n      for (      ContributedLibrary lib : Base.getLibraries()) {\n        File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n        if (keywords.exists())         getKeywords(new FileInputStream(keywords));\n      }\n    }\n catch (    Exception e) {\n      Base.showError(\"Problem loading keywords\",\"Could not load keywords.txt,\\n\" + \"please re-install Arduino.\",e);\n      System.exit(1);\n    }\n  }\n  return keywordColoring;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 77
      },
      "nodeContext" : "File keywords=new File(lib.getInstalledFolder(),\"keywords.txt\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 66,
    "startColumnNumber" : 26,
    "endLineNumber" : 66,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}