{
  "id" : 331,
  "expression" : "file.isFile()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/spring/MybatisMapperRefresh.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file.isFile()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 153,
      "startColumnNumber" : 36,
      "endLineNumber" : 153,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 153,
        "startColumnNumber" : 36,
        "endLineNumber" : 153,
        "endColumnNumber" : 85
      },
      "nodeContext" : "file.isFile() && file.lastModified() > beforeTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 153,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (file.isFile() && file.lastModified() > beforeTime) {\n  globalConfig.setRefresh(true);\n  List<Resource> removeList=jarMapper.get(filePath);\n  if (removeList != null && !removeList.isEmpty()) {\n    for (    Resource resource : removeList) {\n      runnable.refresh(resource);\n    }\n  }\n else {\n    runnable.refresh(new FileSystemResource(file));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 151,
        "startColumnNumber" : 60,
        "endLineNumber" : 164,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  File file=new File(filePath);\n  if (file.isFile() && file.lastModified() > beforeTime) {\n    globalConfig.setRefresh(true);\n    List<Resource> removeList=jarMapper.get(filePath);\n    if (removeList != null && !removeList.isEmpty()) {\n      for (      Resource resource : removeList) {\n        runnable.refresh(resource);\n      }\n    }\n else {\n      runnable.refresh(new FileSystemResource(file));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 151,
        "startColumnNumber" : 28,
        "endLineNumber" : 164,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (String filePath : fileSet) {\n  File file=new File(filePath);\n  if (file.isFile() && file.lastModified() > beforeTime) {\n    globalConfig.setRefresh(true);\n    List<Resource> removeList=jarMapper.get(filePath);\n    if (removeList != null && !removeList.isEmpty()) {\n      for (      Resource resource : removeList) {\n        runnable.refresh(resource);\n      }\n    }\n else {\n      runnable.refresh(new FileSystemResource(file));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 150,
        "startColumnNumber" : 28,
        "endLineNumber" : 169,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  for (  String filePath : fileSet) {\n    File file=new File(filePath);\n    if (file.isFile() && file.lastModified() > beforeTime) {\n      globalConfig.setRefresh(true);\n      List<Resource> removeList=jarMapper.get(filePath);\n      if (removeList != null && !removeList.isEmpty()) {\n        for (        Resource resource : removeList) {\n          runnable.refresh(resource);\n        }\n      }\n else {\n        runnable.refresh(new FileSystemResource(file));\n      }\n    }\n  }\n  if (globalConfig.isRefresh()) {\n    beforeTime=SystemClock.now();\n  }\n  globalConfig.setRefresh(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 150,
        "startColumnNumber" : 24,
        "endLineNumber" : 171,
        "endColumnNumber" : 25
      },
      "nodeContext" : "try {\n  for (  String filePath : fileSet) {\n    File file=new File(filePath);\n    if (file.isFile() && file.lastModified() > beforeTime) {\n      globalConfig.setRefresh(true);\n      List<Resource> removeList=jarMapper.get(filePath);\n      if (removeList != null && !removeList.isEmpty()) {\n        for (        Resource resource : removeList) {\n          runnable.refresh(resource);\n        }\n      }\n else {\n        runnable.refresh(new FileSystemResource(file));\n      }\n    }\n  }\n  if (globalConfig.isRefresh()) {\n    beforeTime=SystemClock.now();\n  }\n  globalConfig.setRefresh(true);\n}\n catch (Exception exception) {\n  exception.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 1557,
        "startLineNumber" : 149,
        "startColumnNumber" : 23,
        "endLineNumber" : 178,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  try {\n    for (    String filePath : fileSet) {\n      File file=new File(filePath);\n      if (file.isFile() && file.lastModified() > beforeTime) {\n        globalConfig.setRefresh(true);\n        List<Resource> removeList=jarMapper.get(filePath);\n        if (removeList != null && !removeList.isEmpty()) {\n          for (          Resource resource : removeList) {\n            runnable.refresh(resource);\n          }\n        }\n else {\n          runnable.refresh(new FileSystemResource(file));\n        }\n      }\n    }\n    if (globalConfig.isRefresh()) {\n      beforeTime=SystemClock.now();\n    }\n    globalConfig.setRefresh(true);\n  }\n catch (  Exception exception) {\n    exception.printStackTrace();\n  }\n  try {\n    Thread.sleep(sleepSeconds * 1000);\n  }\n catch (  InterruptedException interruptedException) {\n    interruptedException.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1574,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 178,
        "endColumnNumber" : 35
      },
      "nodeContext" : "do {\n  try {\n    for (    String filePath : fileSet) {\n      File file=new File(filePath);\n      if (file.isFile() && file.lastModified() > beforeTime) {\n        globalConfig.setRefresh(true);\n        List<Resource> removeList=jarMapper.get(filePath);\n        if (removeList != null && !removeList.isEmpty()) {\n          for (          Resource resource : removeList) {\n            runnable.refresh(resource);\n          }\n        }\n else {\n          runnable.refresh(new FileSystemResource(file));\n        }\n      }\n    }\n    if (globalConfig.isRefresh()) {\n      beforeTime=SystemClock.now();\n    }\n    globalConfig.setRefresh(true);\n  }\n catch (  Exception exception) {\n    exception.printStackTrace();\n  }\n  try {\n    Thread.sleep(sleepSeconds * 1000);\n  }\n catch (  InterruptedException interruptedException) {\n    interruptedException.printStackTrace();\n  }\n}\n while (true);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 125,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3386,
        "startLineNumber" : 118,
        "startColumnNumber" : 34,
        "endLineNumber" : 179,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (fileSet == null) {\n    fileSet=new HashSet<>();\n    if (mapperLocations != null) {\n      for (      Resource mapperLocation : mapperLocations) {\n        try {\n          if (ResourceUtils.isJarURL(mapperLocation.getURL())) {\n            String key=new UrlResource(ResourceUtils.extractJarFileURL(mapperLocation.getURL())).getFile().getPath();\n            fileSet.add(key);\n            if (jarMapper.get(key) != null) {\n              jarMapper.get(key).add(mapperLocation);\n            }\n else {\n              List<Resource> resourcesList=new ArrayList<>();\n              resourcesList.add(mapperLocation);\n              jarMapper.put(key,resourcesList);\n            }\n          }\n else {\n            fileSet.add(mapperLocation.getFile().getPath());\n          }\n        }\n catch (        IOException ioException) {\n          ioException.printStackTrace();\n        }\n      }\n    }\n  }\n  try {\n    Thread.sleep(delaySeconds * 1000);\n  }\n catch (  InterruptedException interruptedException) {\n    interruptedException.printStackTrace();\n  }\n  do {\n    try {\n      for (      String filePath : fileSet) {\n        File file=new File(filePath);\n        if (file.isFile() && file.lastModified() > beforeTime) {\n          globalConfig.setRefresh(true);\n          List<Resource> removeList=jarMapper.get(filePath);\n          if (removeList != null && !removeList.isEmpty()) {\n            for (            Resource resource : removeList) {\n              runnable.refresh(resource);\n            }\n          }\n else {\n            runnable.refresh(new FileSystemResource(file));\n          }\n        }\n      }\n      if (globalConfig.isRefresh()) {\n        beforeTime=SystemClock.now();\n      }\n      globalConfig.setRefresh(true);\n    }\n catch (    Exception exception) {\n      exception.printStackTrace();\n    }\n    try {\n      Thread.sleep(sleepSeconds * 1000);\n    }\n catch (    InterruptedException interruptedException) {\n      interruptedException.printStackTrace();\n    }\n  }\n while (true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3430,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  if (fileSet == null) {\n    fileSet=new HashSet<>();\n    if (mapperLocations != null) {\n      for (      Resource mapperLocation : mapperLocations) {\n        try {\n          if (ResourceUtils.isJarURL(mapperLocation.getURL())) {\n            String key=new UrlResource(ResourceUtils.extractJarFileURL(mapperLocation.getURL())).getFile().getPath();\n            fileSet.add(key);\n            if (jarMapper.get(key) != null) {\n              jarMapper.get(key).add(mapperLocation);\n            }\n else {\n              List<Resource> resourcesList=new ArrayList<>();\n              resourcesList.add(mapperLocation);\n              jarMapper.put(key,resourcesList);\n            }\n          }\n else {\n            fileSet.add(mapperLocation.getFile().getPath());\n          }\n        }\n catch (        IOException ioException) {\n          ioException.printStackTrace();\n        }\n      }\n    }\n  }\n  try {\n    Thread.sleep(delaySeconds * 1000);\n  }\n catch (  InterruptedException interruptedException) {\n    interruptedException.printStackTrace();\n  }\n  do {\n    try {\n      for (      String filePath : fileSet) {\n        File file=new File(filePath);\n        if (file.isFile() && file.lastModified() > beforeTime) {\n          globalConfig.setRefresh(true);\n          List<Resource> removeList=jarMapper.get(filePath);\n          if (removeList != null && !removeList.isEmpty()) {\n            for (            Resource resource : removeList) {\n              runnable.refresh(resource);\n            }\n          }\n else {\n            runnable.refresh(new FileSystemResource(file));\n          }\n        }\n      }\n      if (globalConfig.isRefresh()) {\n        beforeTime=SystemClock.now();\n      }\n      globalConfig.setRefresh(true);\n    }\n catch (    Exception exception) {\n      exception.printStackTrace();\n    }\n    try {\n      Thread.sleep(sleepSeconds * 1000);\n    }\n catch (    InterruptedException interruptedException) {\n      interruptedException.printStackTrace();\n    }\n  }\n while (true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 153,
        "startColumnNumber" : 36,
        "endLineNumber" : 153,
        "endColumnNumber" : 85
      },
      "nodeContext" : "file.isFile() && file.lastModified() > beforeTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 153,
    "startColumnNumber" : 36,
    "endLineNumber" : 153,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}