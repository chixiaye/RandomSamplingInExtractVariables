{
  "id" : 13,
  "expression" : "context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/ui/context/support/UiApplicationContextUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 92,
      "startLineNumber" : 60,
      "startColumnNumber" : 7,
      "endLineNumber" : 60,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 67,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n  HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n  if (hts.getParentThemeSource() == null) {\n    hts.setParentThemeSource((ThemeSource)context.getParent());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ThemeSource themeSource=context.getBean(THEME_SOURCE_BEAN_NAME,ThemeSource.class);\n  if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n    HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n    if (hts.getParentThemeSource() == null) {\n      hts.setParentThemeSource((ThemeSource)context.getParent());\n    }\n  }\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Using ThemeSource [\" + themeSource + \"]\");\n  }\n  return themeSource;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1390,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (context.containsLocalBean(THEME_SOURCE_BEAN_NAME)) {\n  ThemeSource themeSource=context.getBean(THEME_SOURCE_BEAN_NAME,ThemeSource.class);\n  if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n    HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n    if (hts.getParentThemeSource() == null) {\n      hts.setParentThemeSource((ThemeSource)context.getParent());\n    }\n  }\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Using ThemeSource [\" + themeSource + \"]\");\n  }\n  return themeSource;\n}\n else {\n  HierarchicalThemeSource themeSource=null;\n  if (context.getParent() instanceof ThemeSource) {\n    themeSource=new DelegatingThemeSource();\n    themeSource.setParentThemeSource((ThemeSource)context.getParent());\n  }\n else {\n    themeSource=new ResourceBundleThemeSource();\n  }\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Unable to locate ThemeSource with name '\" + THEME_SOURCE_BEAN_NAME + \"': using default [\"+ themeSource+ \"]\");\n  }\n  return themeSource;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 56,
        "startColumnNumber" : 71,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (context.containsLocalBean(THEME_SOURCE_BEAN_NAME)) {\n    ThemeSource themeSource=context.getBean(THEME_SOURCE_BEAN_NAME,ThemeSource.class);\n    if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n      HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n      if (hts.getParentThemeSource() == null) {\n        hts.setParentThemeSource((ThemeSource)context.getParent());\n      }\n    }\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Using ThemeSource [\" + themeSource + \"]\");\n    }\n    return themeSource;\n  }\n else {\n    HierarchicalThemeSource themeSource=null;\n    if (context.getParent() instanceof ThemeSource) {\n      themeSource=new DelegatingThemeSource();\n      themeSource.setParentThemeSource((ThemeSource)context.getParent());\n    }\n else {\n      themeSource=new ResourceBundleThemeSource();\n    }\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Unable to locate ThemeSource with name '\" + THEME_SOURCE_BEAN_NAME + \"': using default [\"+ themeSource+ \"]\");\n    }\n    return themeSource;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1821,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Initialize the ThemeSource for the given application context, autodetecting a bean with the name \"themeSource\". If no such bean is found, a default (empty) ThemeSource will be used.\n * @param context current application context\n * @return the initialized theme source (will never be {@code null})\n * @see #THEME_SOURCE_BEAN_NAME\n */\npublic static ThemeSource initThemeSource(ApplicationContext context){\n  if (context.containsLocalBean(THEME_SOURCE_BEAN_NAME)) {\n    ThemeSource themeSource=context.getBean(THEME_SOURCE_BEAN_NAME,ThemeSource.class);\n    if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n      HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n      if (hts.getParentThemeSource() == null) {\n        hts.setParentThemeSource((ThemeSource)context.getParent());\n      }\n    }\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Using ThemeSource [\" + themeSource + \"]\");\n    }\n    return themeSource;\n  }\n else {\n    HierarchicalThemeSource themeSource=null;\n    if (context.getParent() instanceof ThemeSource) {\n      themeSource=new DelegatingThemeSource();\n      themeSource.setParentThemeSource((ThemeSource)context.getParent());\n    }\n else {\n      themeSource=new ResourceBundleThemeSource();\n    }\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Unable to locate ThemeSource with name '\" + THEME_SOURCE_BEAN_NAME + \"': using default [\"+ themeSource+ \"]\");\n    }\n    return themeSource;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 67,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (context.getParent() instanceof ThemeSource && themeSource instanceof HierarchicalThemeSource) {\n  HierarchicalThemeSource hts=(HierarchicalThemeSource)themeSource;\n  if (hts.getParentThemeSource() == null) {\n    hts.setParentThemeSource((ThemeSource)context.getParent());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 92,
    "startLineNumber" : 60,
    "startColumnNumber" : 7,
    "endLineNumber" : 60,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}