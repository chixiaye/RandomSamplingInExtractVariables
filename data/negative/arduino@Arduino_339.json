{
  "id" : 339,
  "expression" : "(bytesRead=from.read(buffer))",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/Base.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(bytesRead=from.read(buffer))",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 2484,
      "startColumnNumber" : 11,
      "endLineNumber" : 2484,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 2484,
        "startColumnNumber" : 11,
        "endLineNumber" : 2484,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(bytesRead=from.read(buffer)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 2484,
        "startColumnNumber" : 4,
        "endLineNumber" : 2486,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((bytesRead=from.read(buffer)) != -1) {\n  to.write(buffer,0,bytesRead);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 2477,
        "startColumnNumber" : 66,
        "endLineNumber" : 2494,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InputStream from=new BufferedInputStream(new FileInputStream(sourceFile));\n  OutputStream to=new BufferedOutputStream(new FileOutputStream(targetFile));\n  byte[] buffer=new byte[16 * 1024];\n  int bytesRead;\n  while ((bytesRead=from.read(buffer)) != -1) {\n    to.write(buffer,0,bytesRead);\n  }\n  to.flush();\n  from.close();\n  from=null;\n  to.close();\n  to=null;\n  targetFile.setLastModified(sourceFile.lastModified());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 2476,
        "startColumnNumber" : 2,
        "endLineNumber" : 2494,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static public void copyFile(File sourceFile,File targetFile) throws IOException {\n  InputStream from=new BufferedInputStream(new FileInputStream(sourceFile));\n  OutputStream to=new BufferedOutputStream(new FileOutputStream(targetFile));\n  byte[] buffer=new byte[16 * 1024];\n  int bytesRead;\n  while ((bytesRead=from.read(buffer)) != -1) {\n    to.write(buffer,0,bytesRead);\n  }\n  to.flush();\n  from.close();\n  from=null;\n  to.close();\n  to=null;\n  targetFile.setLastModified(sourceFile.lastModified());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 2484,
        "startColumnNumber" : 11,
        "endLineNumber" : 2484,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(bytesRead=from.read(buffer)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 2484,
    "startColumnNumber" : 11,
    "endLineNumber" : 2484,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}