{
  "id" : 306,
  "expression" : "TextInputFormat.class.getName()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/StaticPathSpecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TextInputFormat.class.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 62,
      "startColumnNumber" : 23,
      "endLineNumber" : 62,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 62,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 54
      },
      "nodeContext" : "formatter=TextInputFormat.class.getName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 55
      },
      "nodeContext" : "String formatter=TextInputFormat.class.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Job job=new Job();\n  StaticPathSpec pathSpec=new StaticPathSpec(\"/a/c,/a/b/{c,d}\",null);\n  DataSchema schema=new DataSchema(\"ds\",null,new AggregatorFactory[0],null,null,jsonMapper);\n  HadoopIOConfig io=new HadoopIOConfig(null,null,null);\n  pathSpec.addInputPaths(new HadoopDruidIndexerConfig(new HadoopIngestionSpec(schema,io,null)),job);\n  String paths=job.getConfiguration().get(MultipleInputs.DIR_FORMATS);\n  String formatter=TextInputFormat.class.getName();\n  String[] expected={\"/a/c;\" + formatter,\"/a/b/c;\" + formatter,\"/a/b/d;\" + formatter};\n  Assert.assertArrayEquals(expected,paths.split(\",\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testAddingPaths() throws Exception {\n  Job job=new Job();\n  StaticPathSpec pathSpec=new StaticPathSpec(\"/a/c,/a/b/{c,d}\",null);\n  DataSchema schema=new DataSchema(\"ds\",null,new AggregatorFactory[0],null,null,jsonMapper);\n  HadoopIOConfig io=new HadoopIOConfig(null,null,null);\n  pathSpec.addInputPaths(new HadoopDruidIndexerConfig(new HadoopIngestionSpec(schema,io,null)),job);\n  String paths=job.getConfiguration().get(MultipleInputs.DIR_FORMATS);\n  String formatter=TextInputFormat.class.getName();\n  String[] expected={\"/a/c;\" + formatter,\"/a/b/c;\" + formatter,\"/a/b/d;\" + formatter};\n  Assert.assertArrayEquals(expected,paths.split(\",\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 55
      },
      "nodeContext" : "String formatter=TextInputFormat.class.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 62,
    "startColumnNumber" : 23,
    "endLineNumber" : 62,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}