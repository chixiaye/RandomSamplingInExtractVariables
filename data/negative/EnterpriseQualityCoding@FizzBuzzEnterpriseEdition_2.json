{
  "id" : 2,
  "expression" : "ThreeWayIntegerComparisonResult",
  "projectName" : "EnterpriseQualityCoding@FizzBuzzEnterpriseEdition",
  "commitID" : "c57b90895f5e84ec94d8fdb5f3fe9d9d43e58464",
  "filePath" : "src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/NumberIsMultipleOfAnotherNumberVerifier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ThreeWayIntegerComparisonResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 10,
      "startColumnNumber" : 26,
      "endLineNumber" : 10,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 10,
        "startColumnNumber" : 26,
        "endLineNumber" : 10,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ThreeWayIntegerComparisonResult.FirstEqualsSecond",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 10,
        "startColumnNumber" : 6,
        "endLineNumber" : 10,
        "endColumnNumber" : 75
      },
      "nodeContext" : "validationResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 10,
        "startColumnNumber" : 2,
        "endLineNumber" : 14,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (validationResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {\n  return true;\n}\n else {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 7,
        "startColumnNumber" : 86,
        "endLineNumber" : 15,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ThreeWayIntegerComparisonResult validationResult=ThreeWayIntegerComparator.Compare(((int)(number / anotherNumber)) * anotherNumber,number);\n  if (validationResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {\n    return true;\n  }\n else {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 7,
        "startColumnNumber" : 1,
        "endLineNumber" : 15,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static boolean numberIsMultipleOfAnotherNumber(int number,int anotherNumber){\n  ThreeWayIntegerComparisonResult validationResult=ThreeWayIntegerComparator.Compare(((int)(number / anotherNumber)) * anotherNumber,number);\n  if (validationResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {\n    return true;\n  }\n else {\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 10,
        "startColumnNumber" : 6,
        "endLineNumber" : 10,
        "endColumnNumber" : 75
      },
      "nodeContext" : "validationResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparisonResult"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 10,
    "startColumnNumber" : 26,
    "endLineNumber" : 10,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}