{
  "id" : 518,
  "expression" : "new Point(15.087267,37.502668)",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-18/src/test/java/org/redisson/spring/data/connection/RedissonConnectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Point(15.087267,37.502668)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 60,
      "startColumnNumber" : 87,
      "endLineNumber" : 60,
      "endColumnNumber" : 118
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 60,
        "startColumnNumber" : 87,
        "endLineNumber" : 60,
        "endColumnNumber" : 129
      },
      "nodeContext" : "new Point(15.087267,37.502668).toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 130
      },
      "nodeContext" : "assertThat(l.getContent().get(1).getContent().getPoint().toString()).isEqualTo(new Point(15.087267,37.502668).toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 131
      },
      "nodeContext" : "assertThat(l.getContent().get(1).getContent().getPoint().toString()).isEqualTo(new Point(15.087267,37.502668).toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1551,
        "startLineNumber" : 48,
        "startColumnNumber" : 39,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection.geoAdd(\"key1\".getBytes(),new Point(13.361389,38.115556),\"value1\".getBytes());\n  connection.geoAdd(\"key1\".getBytes(),new Point(15.087269,37.502669),\"value2\".getBytes());\n  GeoResults<RedisGeoCommands.GeoLocation<byte[]>> l=connection.geoRadius(\"key1\".getBytes(),new Circle(new Point(15,37),new Distance(200,RedisGeoCommands.DistanceUnit.KILOMETERS)),RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs().includeCoordinates());\n  assertThat(l.getContent()).hasSize(2);\n  assertThat(l.getContent().get(0).getContent().getName()).isEqualTo(\"value1\".getBytes());\n  assertThat(l.getContent().get(0).getContent().getPoint().toString()).isEqualTo(new Point(13.361389,38.115556).toString());\n  assertThat(l.getContent().get(1).getContent().getName()).isEqualTo(\"value2\".getBytes());\n  assertThat(l.getContent().get(1).getContent().getPoint().toString()).isEqualTo(new Point(15.087267,37.502668).toString());\n  GeoResults<RedisGeoCommands.GeoLocation<byte[]>> l2=connection.geoRadius(\"key1\".getBytes(),new Circle(new Point(15,37),new Distance(200,RedisGeoCommands.DistanceUnit.KILOMETERS)),RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs());\n  assertThat(l2.getContent()).hasSize(2);\n  assertThat(l2.getContent().get(0).getContent().getName()).isEqualTo(\"value1\".getBytes());\n  assertThat(l2.getContent().get(1).getContent().getName()).isEqualTo(\"value2\".getBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1596,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRadiusWithCoords(){\n  connection.geoAdd(\"key1\".getBytes(),new Point(13.361389,38.115556),\"value1\".getBytes());\n  connection.geoAdd(\"key1\".getBytes(),new Point(15.087269,37.502669),\"value2\".getBytes());\n  GeoResults<RedisGeoCommands.GeoLocation<byte[]>> l=connection.geoRadius(\"key1\".getBytes(),new Circle(new Point(15,37),new Distance(200,RedisGeoCommands.DistanceUnit.KILOMETERS)),RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs().includeCoordinates());\n  assertThat(l.getContent()).hasSize(2);\n  assertThat(l.getContent().get(0).getContent().getName()).isEqualTo(\"value1\".getBytes());\n  assertThat(l.getContent().get(0).getContent().getPoint().toString()).isEqualTo(new Point(13.361389,38.115556).toString());\n  assertThat(l.getContent().get(1).getContent().getName()).isEqualTo(\"value2\".getBytes());\n  assertThat(l.getContent().get(1).getContent().getPoint().toString()).isEqualTo(new Point(15.087267,37.502668).toString());\n  GeoResults<RedisGeoCommands.GeoLocation<byte[]>> l2=connection.geoRadius(\"key1\".getBytes(),new Circle(new Point(15,37),new Distance(200,RedisGeoCommands.DistanceUnit.KILOMETERS)),RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs());\n  assertThat(l2.getContent()).hasSize(2);\n  assertThat(l2.getContent().get(0).getContent().getName()).isEqualTo(\"value1\".getBytes());\n  assertThat(l2.getContent().get(1).getContent().getName()).isEqualTo(\"value2\".getBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 131
      },
      "nodeContext" : "assertThat(l.getContent().get(1).getContent().getPoint().toString()).isEqualTo(new Point(15.087267,37.502668).toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    },
    "tokenLength" : 5,
    "type" : "org.redisson.spring.data.connection.Point"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 60,
    "startColumnNumber" : 87,
    "endLineNumber" : 60,
    "endColumnNumber" : 118
  } ],
  "layoutRelationDataList" : [ ]
}