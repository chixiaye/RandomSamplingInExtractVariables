{
  "id" : 369,
  "expression" : "\"/echo\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/client/AbstractSockJsIntegrationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/echo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 226,
      "startColumnNumber" : 56,
      "endLineNumber" : 226,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 226,
        "startColumnNumber" : 41,
        "endLineNumber" : 226,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.baseUrl + \"/echo\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 237,
        "endColumnNumber" : 3
      },
      "nodeContext" : "this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\").addCallback(new ListenableFutureCallback<WebSocketSession>(){\n  @Override public void onSuccess(  WebSocketSession result){\n  }\n  @Override public void onFailure(  Throwable ex){\n    latch.countDown();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 237,
        "endColumnNumber" : 4
      },
      "nodeContext" : "this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\").addCallback(new ListenableFutureCallback<WebSocketSession>(){\n  @Override public void onSuccess(  WebSocketSession result){\n  }\n  @Override public void onFailure(  Throwable ex){\n    latch.countDown();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 221,
        "startColumnNumber" : 51,
        "endLineNumber" : 239,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestClientHandler handler=new TestClientHandler();\n  this.testFilter.sendErrorMap.put(\"/info\",500);\n  CountDownLatch latch=new CountDownLatch(1);\n  initSockJsClient(createWebSocketTransport());\n  this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\").addCallback(new ListenableFutureCallback<WebSocketSession>(){\n    @Override public void onSuccess(    WebSocketSession result){\n    }\n    @Override public void onFailure(    Throwable ex){\n      latch.countDown();\n    }\n  }\n);\n  assertTrue(latch.await(5000,TimeUnit.MILLISECONDS));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 220,
        "startColumnNumber" : 1,
        "endLineNumber" : 239,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void infoRequestFailure() throws Exception {\n  TestClientHandler handler=new TestClientHandler();\n  this.testFilter.sendErrorMap.put(\"/info\",500);\n  CountDownLatch latch=new CountDownLatch(1);\n  initSockJsClient(createWebSocketTransport());\n  this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\").addCallback(new ListenableFutureCallback<WebSocketSession>(){\n    @Override public void onSuccess(    WebSocketSession result){\n    }\n    @Override public void onFailure(    Throwable ex){\n      latch.countDown();\n    }\n  }\n);\n  assertTrue(latch.await(5000,TimeUnit.MILLISECONDS));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.sockJsClient.doHandshake(handler,this.baseUrl + \"/echo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 226,
    "startColumnNumber" : 56,
    "endLineNumber" : 226,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}