{
  "id" : 12,
  "expression" : "msgSize * 2",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/balance/NormalMsgDynamicBalanceIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "msgSize * 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 67,
      "startColumnNumber" : 48,
      "endLineNumber" : 67,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 53,
        "startColumnNumber" : 45,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=400;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  consumer2.shutdown();\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n  boolean balance=VerifyUtils.verifyBalance(msgSize,VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllUndupMsgBody()).size() - msgSize,VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllUndupMsgBody()).size());\n  assertThat(balance).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerAndCrashOne(){\n  int msgSize=400;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  consumer2.shutdown();\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n  boolean balance=VerifyUtils.verifyBalance(msgSize,VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllUndupMsgBody()).size() - msgSize,VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllUndupMsgBody()).size());\n  assertThat(balance).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 67,
    "startColumnNumber" : 48,
    "endLineNumber" : 67,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}