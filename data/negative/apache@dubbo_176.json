{
  "id" : 176,
  "expression" : "group != null",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryProtocol.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "group != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 445,
      "startColumnNumber" : 12,
      "endLineNumber" : 445,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 445,
        "startColumnNumber" : 12,
        "endLineNumber" : 445,
        "endColumnNumber" : 47
      },
      "nodeContext" : "group != null && group.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 445,
        "startColumnNumber" : 8,
        "endLineNumber" : 449,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (group != null && group.length() > 0) {\n  if ((COMMA_SPLIT_PATTERN.split(group)).length > 1 || \"*\".equals(group)) {\n    return doRefer(Cluster.getCluster(MergeableCluster.NAME),registry,type,url,qs);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 435,
        "startColumnNumber" : 76,
        "endLineNumber" : 453,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  url=getRegistryUrl(url);\n  Registry registry=registryFactory.getRegistry(url);\n  if (RegistryService.class.equals(type)) {\n    return proxyFactory.getInvoker((T)registry,type,url);\n  }\n  Map<String,String> qs=(Map<String,String>)url.getAttribute(REFER_KEY);\n  String group=qs.get(GROUP_KEY);\n  if (group != null && group.length() > 0) {\n    if ((COMMA_SPLIT_PATTERN.split(group)).length > 1 || \"*\".equals(group)) {\n      return doRefer(Cluster.getCluster(MergeableCluster.NAME),registry,type,url,qs);\n    }\n  }\n  Cluster cluster=Cluster.getCluster(qs.get(CLUSTER_KEY));\n  return doRefer(cluster,registry,type,url,qs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 453,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public <T>Invoker<T> refer(Class<T> type,URL url) throws RpcException {\n  url=getRegistryUrl(url);\n  Registry registry=registryFactory.getRegistry(url);\n  if (RegistryService.class.equals(type)) {\n    return proxyFactory.getInvoker((T)registry,type,url);\n  }\n  Map<String,String> qs=(Map<String,String>)url.getAttribute(REFER_KEY);\n  String group=qs.get(GROUP_KEY);\n  if (group != null && group.length() > 0) {\n    if ((COMMA_SPLIT_PATTERN.split(group)).length > 1 || \"*\".equals(group)) {\n      return doRefer(Cluster.getCluster(MergeableCluster.NAME),registry,type,url,qs);\n    }\n  }\n  Cluster cluster=Cluster.getCluster(qs.get(CLUSTER_KEY));\n  return doRefer(cluster,registry,type,url,qs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 445,
        "startColumnNumber" : 12,
        "endLineNumber" : 445,
        "endColumnNumber" : 47
      },
      "nodeContext" : "group != null && group.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 445,
    "startColumnNumber" : 12,
    "endLineNumber" : 445,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}