{
  "id" : 392,
  "expression" : "\"parser grammar T;\\n\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestATNParserPrediction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"parser grammar T;\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 53,
      "startColumnNumber" : 2,
      "endLineNumber" : 53,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 18
      },
      "nodeContext" : "\"parser grammar T;\\n\" + \"a : A{;} | B ;\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 52,
        "startColumnNumber" : 14,
        "endLineNumber" : 54,
        "endColumnNumber" : 19
      },
      "nodeContext" : "new Grammar(\"parser grammar T;\\n\" + \"a : A{;} | B ;\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 52,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 19
      },
      "nodeContext" : "g=new Grammar(\"parser grammar T;\\n\" + \"a : A{;} | B ;\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Grammar g=new Grammar(\"parser grammar T;\\n\" + \"a : A{;} | B ;\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 688,
        "startLineNumber" : 46,
        "startColumnNumber" : 47,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  LexerGrammar lg=new LexerGrammar(\"lexer grammar L;\\n\" + \"A : 'a' ;\\n\" + \"B : 'b' ;\\n\"+ \"C : 'c' ;\\n\");\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"a : A{;} | B ;\");\n  int decision=0;\n  checkPredictedAlt(lg,g,decision,\"a\",1);\n  checkPredictedAlt(lg,g,decision,\"b\",2);\n  String[] inputs={\"a\",\"b\",\"a\"};\n  String[] dfa={\"s0-'a'->:s1=>1\\n\",\"s0-'a'->:s1=>1\\n\" + \"s0-'b'->:s2=>2\\n\",\"s0-'a'->:s1=>1\\n\" + \"s0-'b'->:s2=>2\\n\"};\n  checkDFAConstruction(lg,g,decision,inputs,dfa);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 46,
        "startColumnNumber" : 1,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testAorB() throws Exception {\n  LexerGrammar lg=new LexerGrammar(\"lexer grammar L;\\n\" + \"A : 'a' ;\\n\" + \"B : 'b' ;\\n\"+ \"C : 'c' ;\\n\");\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"a : A{;} | B ;\");\n  int decision=0;\n  checkPredictedAlt(lg,g,decision,\"a\",1);\n  checkPredictedAlt(lg,g,decision,\"b\",2);\n  String[] inputs={\"a\",\"b\",\"a\"};\n  String[] dfa={\"s0-'a'->:s1=>1\\n\",\"s0-'a'->:s1=>1\\n\" + \"s0-'b'->:s2=>2\\n\",\"s0-'a'->:s1=>1\\n\" + \"s0-'b'->:s2=>2\\n\"};\n  checkDFAConstruction(lg,g,decision,inputs,dfa);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 18
      },
      "nodeContext" : "\"parser grammar T;\\n\" + \"a : A{;} | B ;\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 53,
    "startColumnNumber" : 2,
    "endLineNumber" : 53,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}