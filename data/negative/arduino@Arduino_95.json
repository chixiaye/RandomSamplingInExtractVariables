{
  "id" : 95,
  "expression" : "cmd",
  "projectName" : "arduino@Arduino",
  "commitID" : "24b32422e24e3dbffbb25a16a6ab3d8d533a3b5d",
  "filePath" : "arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cmd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 94,
      "startColumnNumber" : 44,
      "endLineNumber" : 94,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 94,
        "startColumnNumber" : 23,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "executeUploadCommand(cmd)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 91,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  }, {
    "nodeContext" : "cmd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 160,
      "startColumnNumber" : 42,
      "endLineNumber" : 160,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 160,
        "startColumnNumber" : 21,
        "endLineNumber" : 160,
        "endColumnNumber" : 46
      },
      "nodeContext" : "executeUploadCommand(cmd)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 160,
        "startColumnNumber" : 6,
        "endLineNumber" : 160,
        "endColumnNumber" : 46
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 160,
        "startColumnNumber" : 6,
        "endLineNumber" : 160,
        "endColumnNumber" : 47
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (RunnerException e) {\n  throw e;\n}\ncatch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 160,
        "startColumnNumber" : 6,
        "endLineNumber" : 160,
        "endColumnNumber" : 47
      },
      "nodeContext" : "uploadResult=executeUploadCommand(cmd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 94,
    "startColumnNumber" : 44,
    "endLineNumber" : 94,
    "endColumnNumber" : 47
  }, {
    "charLength" : 3,
    "startLineNumber" : 160,
    "startColumnNumber" : 42,
    "endLineNumber" : 160,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}