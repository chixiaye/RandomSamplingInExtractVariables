{
  "id" : 334,
  "expression" : "ClassConstants.ATTR_Code",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/KeepClassSpecificationVisitorFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassConstants.ATTR_Code",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 181,
      "startColumnNumber" : 40,
      "endLineNumber" : 181,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 181,
        "startColumnNumber" : 16,
        "endLineNumber" : 181,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 180,
        "startColumnNumber" : 31,
        "endLineNumber" : 182,
        "endColumnNumber" : 20
      },
      "nodeContext" : "keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 180,
        "startColumnNumber" : 12,
        "endLineNumber" : 182,
        "endColumnNumber" : 20
      },
      "nodeContext" : "attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 180,
        "startColumnNumber" : 12,
        "endLineNumber" : 182,
        "endColumnNumber" : 21
      },
      "nodeContext" : "attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (attributeVisitor != null) {\n  attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3995,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List variableStringMatchers=new ArrayList();\n  if (keepClassSpecification.markDescriptorClasses && classVisitor != null) {\n    fieldVisitor=fieldVisitor == null ? new MemberDescriptorReferencedClassVisitor(classVisitor) : new MultiMemberVisitor(new MemberVisitor[]{fieldVisitor,new MemberDescriptorReferencedClassVisitor(classVisitor)});\n    methodVisitor=methodVisitor == null ? new MemberDescriptorReferencedClassVisitor(classVisitor) : new MultiMemberVisitor(new MemberVisitor[]{methodVisitor,new MemberDescriptorReferencedClassVisitor(classVisitor)});\n  }\n  if (!keepClassSpecification.markClasses && !keepClassSpecification.markConditionally) {\n    classVisitor=null;\n  }\n  if (attributeVisitor != null) {\n    attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null;\n  }\n  ClassSpecification condition=keepClassSpecification.condition;\n  if (condition != null) {\n    MultiClassPoolVisitor keepClassPoolVisitor=new MultiClassPoolVisitor();\n    ClassPoolVisitor conditionalKeepClassPoolVisitor=createClassTester(condition,keepClassPoolVisitor,variableStringMatchers);\n    keepClassPoolVisitor.addClassPoolVisitor(createClassPoolVisitor(keepClassSpecification,classVisitor,fieldVisitor,methodVisitor,attributeVisitor,variableStringMatchers));\n    return conditionalKeepClassPoolVisitor;\n  }\n else {\n    return createClassPoolVisitor(keepClassSpecification,classVisitor,fieldVisitor,methodVisitor,attributeVisitor,variableStringMatchers);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5283,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructs a ClassPoolVisitor to efficiently travel to the specified classes, class members, and attributes.\n * @param keepClassSpecification the specifications of the class(es) andclass members to visit.\n * @param classVisitor           an optional ClassVisitor to be applied tomatching classes.\n * @param fieldVisitor           an optional MemberVisitor to be appliedto matching fields.\n * @param methodVisitor          an optional MemberVisitor to be appliedto matching methods.\n * @param attributeVisitor       an optional AttributeVisitor to be appliedto matching code attributes.\n */\npublic ClassPoolVisitor createClassPoolVisitor(KeepClassSpecification keepClassSpecification,ClassVisitor classVisitor,MemberVisitor fieldVisitor,MemberVisitor methodVisitor,AttributeVisitor attributeVisitor){\n  List variableStringMatchers=new ArrayList();\n  if (keepClassSpecification.markDescriptorClasses && classVisitor != null) {\n    fieldVisitor=fieldVisitor == null ? new MemberDescriptorReferencedClassVisitor(classVisitor) : new MultiMemberVisitor(new MemberVisitor[]{fieldVisitor,new MemberDescriptorReferencedClassVisitor(classVisitor)});\n    methodVisitor=methodVisitor == null ? new MemberDescriptorReferencedClassVisitor(classVisitor) : new MultiMemberVisitor(new MemberVisitor[]{methodVisitor,new MemberDescriptorReferencedClassVisitor(classVisitor)});\n  }\n  if (!keepClassSpecification.markClasses && !keepClassSpecification.markConditionally) {\n    classVisitor=null;\n  }\n  if (attributeVisitor != null) {\n    attributeVisitor=keepClassSpecification.markCodeAttributes ? new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor) : null;\n  }\n  ClassSpecification condition=keepClassSpecification.condition;\n  if (condition != null) {\n    MultiClassPoolVisitor keepClassPoolVisitor=new MultiClassPoolVisitor();\n    ClassPoolVisitor conditionalKeepClassPoolVisitor=createClassTester(condition,keepClassPoolVisitor,variableStringMatchers);\n    keepClassPoolVisitor.addClassPoolVisitor(createClassPoolVisitor(keepClassSpecification,classVisitor,fieldVisitor,methodVisitor,attributeVisitor,variableStringMatchers));\n    return conditionalKeepClassPoolVisitor;\n  }\n else {\n    return createClassPoolVisitor(keepClassSpecification,classVisitor,fieldVisitor,methodVisitor,attributeVisitor,variableStringMatchers);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 181,
        "startColumnNumber" : 16,
        "endLineNumber" : 181,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new AttributeNameFilter(ClassConstants.ATTR_Code,attributeVisitor)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 181,
    "startColumnNumber" : 40,
    "endLineNumber" : 181,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}