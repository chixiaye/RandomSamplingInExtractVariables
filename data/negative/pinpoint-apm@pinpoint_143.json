{
  "id" : 143,
  "expression" : "success",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "4cacf1146253b99caf0b9176ba85d3cbb2d02221",
  "filePath" : "collector/src/main/java/com/navercorp/pinpoint/collector/dao/hbase/HbaseTraceDaoV2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "success",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 91,
      "startColumnNumber" : 17,
      "endLineNumber" : 91,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 24
      },
      "nodeContext" : "!success",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!success) {\n  hbaseTemplate.put(TRACE_V2,put);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 89,
        "startColumnNumber" : 28,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n  if (!success) {\n    hbaseTemplate.put(TRACE_V2,put);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!put.isEmpty()) {\n  boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n  if (!success) {\n    hbaseTemplate.put(TRACE_V2,put);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 74,
        "startColumnNumber" : 57,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertSpanChunk(SpanChunkBo spanChunkBo){\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 24
      },
      "nodeContext" : "!success",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 91,
    "startColumnNumber" : 17,
    "endLineNumber" : 91,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}