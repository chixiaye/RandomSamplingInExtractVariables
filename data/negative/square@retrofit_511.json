{
  "id" : 511,
  "expression" : "typeToCheck instanceof Class",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/main/java/retrofit/RestMethodInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "typeToCheck instanceof Class",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 254,
      "startColumnNumber" : 10,
      "endLineNumber" : 254,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 254,
        "startColumnNumber" : 6,
        "endLineNumber" : 256,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (typeToCheck instanceof Class) {\n  lastArgClass=(Class<?>)typeToCheck;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 248,
        "startColumnNumber" : 35,
        "endLineNumber" : 257,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Type typeToCheck=parameterTypes[parameterTypes.length - 1];\n  lastArgType=typeToCheck;\n  if (typeToCheck instanceof ParameterizedType) {\n    typeToCheck=((ParameterizedType)typeToCheck).getRawType();\n  }\n  if (typeToCheck instanceof Class) {\n    lastArgClass=(Class<?>)typeToCheck;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 257,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (parameterTypes.length > 0) {\n  Type typeToCheck=parameterTypes[parameterTypes.length - 1];\n  lastArgType=typeToCheck;\n  if (typeToCheck instanceof ParameterizedType) {\n    typeToCheck=((ParameterizedType)typeToCheck).getRawType();\n  }\n  if (typeToCheck instanceof Class) {\n    lastArgClass=(Class<?>)typeToCheck;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2064,
        "startLineNumber" : 239,
        "startColumnNumber" : 43,
        "endLineNumber" : 290,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Type returnType=method.getGenericReturnType();\n  Type lastArgType=null;\n  Class<?> lastArgClass=null;\n  Type[] parameterTypes=method.getGenericParameterTypes();\n  if (parameterTypes.length > 0) {\n    Type typeToCheck=parameterTypes[parameterTypes.length - 1];\n    lastArgType=typeToCheck;\n    if (typeToCheck instanceof ParameterizedType) {\n      typeToCheck=((ParameterizedType)typeToCheck).getRawType();\n    }\n    if (typeToCheck instanceof Class) {\n      lastArgClass=(Class<?>)typeToCheck;\n    }\n  }\n  boolean hasReturnType=returnType != void.class;\n  boolean hasCallback=lastArgClass != null && Callback.class.isAssignableFrom(lastArgClass);\n  if (hasReturnType && hasCallback) {\n    throw methodError(\"Must have return type or Callback as last argument, not both.\");\n  }\n  if (!hasReturnType && !hasCallback) {\n    throw methodError(\"Must have either a return type or Callback as last argument.\");\n  }\n  if (hasReturnType) {\n    if (Platform.HAS_RX_JAVA) {\n      Class rawReturnType=Types.getRawType(returnType);\n      if (RxSupport.isObservable(rawReturnType)) {\n        returnType=RxSupport.getObservableType(returnType,rawReturnType);\n        responseObjectType=getParameterUpperBound((ParameterizedType)returnType);\n        return ResponseType.OBSERVABLE;\n      }\n    }\n    responseObjectType=returnType;\n    return ResponseType.OBJECT;\n  }\n  lastArgType=Types.getSupertype(lastArgType,Types.getRawType(lastArgType),Callback.class);\n  if (lastArgType instanceof ParameterizedType) {\n    responseObjectType=getParameterUpperBound((ParameterizedType)lastArgType);\n    return ResponseType.VOID;\n  }\n  throw methodError(\"Last parameter must be of type Callback<X> or Callback<? super X>.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2149,
        "startLineNumber" : 238,
        "startColumnNumber" : 2,
        "endLineNumber" : 290,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Loads  {@link #responseObjectType}. \n */\nprivate ResponseType parseResponseType(){\n  Type returnType=method.getGenericReturnType();\n  Type lastArgType=null;\n  Class<?> lastArgClass=null;\n  Type[] parameterTypes=method.getGenericParameterTypes();\n  if (parameterTypes.length > 0) {\n    Type typeToCheck=parameterTypes[parameterTypes.length - 1];\n    lastArgType=typeToCheck;\n    if (typeToCheck instanceof ParameterizedType) {\n      typeToCheck=((ParameterizedType)typeToCheck).getRawType();\n    }\n    if (typeToCheck instanceof Class) {\n      lastArgClass=(Class<?>)typeToCheck;\n    }\n  }\n  boolean hasReturnType=returnType != void.class;\n  boolean hasCallback=lastArgClass != null && Callback.class.isAssignableFrom(lastArgClass);\n  if (hasReturnType && hasCallback) {\n    throw methodError(\"Must have return type or Callback as last argument, not both.\");\n  }\n  if (!hasReturnType && !hasCallback) {\n    throw methodError(\"Must have either a return type or Callback as last argument.\");\n  }\n  if (hasReturnType) {\n    if (Platform.HAS_RX_JAVA) {\n      Class rawReturnType=Types.getRawType(returnType);\n      if (RxSupport.isObservable(rawReturnType)) {\n        returnType=RxSupport.getObservableType(returnType,rawReturnType);\n        responseObjectType=getParameterUpperBound((ParameterizedType)returnType);\n        return ResponseType.OBSERVABLE;\n      }\n    }\n    responseObjectType=returnType;\n    return ResponseType.OBJECT;\n  }\n  lastArgType=Types.getSupertype(lastArgType,Types.getRawType(lastArgType),Callback.class);\n  if (lastArgType instanceof ParameterizedType) {\n    responseObjectType=getParameterUpperBound((ParameterizedType)lastArgType);\n    return ResponseType.VOID;\n  }\n  throw methodError(\"Last parameter must be of type Callback<X> or Callback<? super X>.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 254,
        "startColumnNumber" : 6,
        "endLineNumber" : 256,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (typeToCheck instanceof Class) {\n  lastArgClass=(Class<?>)typeToCheck;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 254,
    "startColumnNumber" : 10,
    "endLineNumber" : 254,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}