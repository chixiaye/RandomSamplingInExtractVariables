{
  "id" : 48,
  "expression" : "false",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/alarm/HookAlarms.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 41,
      "startColumnNumber" : 30,
      "endLineNumber" : 41,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 41,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 35
      },
      "nodeContext" : "matched=false",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 36
      },
      "nodeContext" : "boolean matched=false;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 40,
        "startColumnNumber" : 55,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean matched=false;\n  for (  HookAlarmMatcher alarmMatcher : hookAlarms.getMessages()) {\n    try {\n      this.messages.get(i).verify(alarmMatcher);\n      matched=true;\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!matched) {\n    fail(\"\\nExpected: %s\\nActual: %s\",this.messages.get(i),hookAlarms.getMessages());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < this.messages.size(); i++) {\n  boolean matched=false;\n  for (  HookAlarmMatcher alarmMatcher : hookAlarms.getMessages()) {\n    try {\n      this.messages.get(i).verify(alarmMatcher);\n      matched=true;\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!matched) {\n    fail(\"\\nExpected: %s\\nActual: %s\",this.messages.get(i),hookAlarms.getMessages());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(this.messages).hasSameSizeAs(hookAlarms.getMessages());\n  for (int i=0; i < this.messages.size(); i++) {\n    boolean matched=false;\n    for (    HookAlarmMatcher alarmMatcher : hookAlarms.getMessages()) {\n      try {\n        this.messages.get(i).verify(alarmMatcher);\n        matched=true;\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    if (!matched) {\n      fail(\"\\nExpected: %s\\nActual: %s\",this.messages.get(i),hookAlarms.getMessages());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(HookAlarms hookAlarms){\n  assertThat(this.messages).hasSameSizeAs(hookAlarms.getMessages());\n  for (int i=0; i < this.messages.size(); i++) {\n    boolean matched=false;\n    for (    HookAlarmMatcher alarmMatcher : hookAlarms.getMessages()) {\n      try {\n        this.messages.get(i).verify(alarmMatcher);\n        matched=true;\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    if (!matched) {\n      fail(\"\\nExpected: %s\\nActual: %s\",this.messages.get(i),hookAlarms.getMessages());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 36
      },
      "nodeContext" : "boolean matched=false;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 41,
    "startColumnNumber" : 30,
    "endLineNumber" : 41,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}