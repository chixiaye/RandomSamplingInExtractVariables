{
  "id" : 116,
  "expression" : "-1.0f",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/MediaActionDrawable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1.0f",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 701,
      "startColumnNumber" : 31,
      "endLineNumber" : 701,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 701,
        "startColumnNumber" : 12,
        "endLineNumber" : 701,
        "endColumnNumber" : 37
      },
      "nodeContext" : "canvas.scale(1.0f,-1.0f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 701,
        "startColumnNumber" : 12,
        "endLineNumber" : 701,
        "endColumnNumber" : 38
      },
      "nodeContext" : "canvas.scale(1.0f,-1.0f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2619,
        "startLineNumber" : 648,
        "startColumnNumber" : 118,
        "endLineNumber" : 705,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float p;\n  if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE || currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n    if (animatingTransition) {\n      if (nextIcon == ICON_PLAY) {\n        p=1.0f - transitionProgress;\n      }\n else {\n        p=transitionProgress;\n      }\n    }\n else {\n      p=nextIcon == ICON_PAUSE ? 1.0f : 0.0f;\n    }\n  }\n else {\n    p=currentIcon == ICON_PAUSE ? 1.0f : 0.0f;\n  }\n  if (nextIcon != ICON_PLAY && nextIcon != ICON_PAUSE || currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE) {\n    if (nextIcon == ICON_NONE) {\n      paint2.setAlpha((int)(255 * (1.0f - transitionProgress)));\n    }\n else {\n      paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    }\n  }\n else {\n    paint2.setAlpha(255);\n  }\n  canvas.save();\n  canvas.translate(bounds.centerX() + AndroidUtilities.dp(1) * (1.0f - p),bounds.centerY());\n  float ms=500.0f * p;\n  float rotation=currentIcon == ICON_PAUSE ? 90 : 0;\n  if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE) {\n    if (ms < 384) {\n      rotation=95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 384);\n    }\n else     if (ms < 484) {\n      rotation=95 - 5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 384) / 100.0f);\n    }\n else {\n      rotation=90;\n    }\n    ms+=100;\n  }\n else   if (currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n    if (ms < 100) {\n      rotation=-5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 100.0f);\n    }\n else     if (ms < 484) {\n      rotation=-5 + 95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 100) / 384);\n    }\n else {\n      rotation=90;\n    }\n  }\n  canvas.rotate(rotation);\n  if (currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE || currentIcon == ICON_NONE) {\n    canvas.scale(drawableScale,drawableScale);\n  }\n  Theme.playPauseAnimator.draw(canvas,paint2,ms);\n  canvas.scale(1.0f,-1.0f);\n  Theme.playPauseAnimator.draw(canvas,paint2,ms);\n  canvas.restore();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 328,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2729,
        "startLineNumber" : 648,
        "startColumnNumber" : 8,
        "endLineNumber" : 705,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (currentIcon == ICON_PLAY || currentIcon == ICON_PAUSE || nextIcon == ICON_PLAY || nextIcon == ICON_PAUSE) {\n  float p;\n  if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE || currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n    if (animatingTransition) {\n      if (nextIcon == ICON_PLAY) {\n        p=1.0f - transitionProgress;\n      }\n else {\n        p=transitionProgress;\n      }\n    }\n else {\n      p=nextIcon == ICON_PAUSE ? 1.0f : 0.0f;\n    }\n  }\n else {\n    p=currentIcon == ICON_PAUSE ? 1.0f : 0.0f;\n  }\n  if (nextIcon != ICON_PLAY && nextIcon != ICON_PAUSE || currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE) {\n    if (nextIcon == ICON_NONE) {\n      paint2.setAlpha((int)(255 * (1.0f - transitionProgress)));\n    }\n else {\n      paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    }\n  }\n else {\n    paint2.setAlpha(255);\n  }\n  canvas.save();\n  canvas.translate(bounds.centerX() + AndroidUtilities.dp(1) * (1.0f - p),bounds.centerY());\n  float ms=500.0f * p;\n  float rotation=currentIcon == ICON_PAUSE ? 90 : 0;\n  if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE) {\n    if (ms < 384) {\n      rotation=95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 384);\n    }\n else     if (ms < 484) {\n      rotation=95 - 5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 384) / 100.0f);\n    }\n else {\n      rotation=90;\n    }\n    ms+=100;\n  }\n else   if (currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n    if (ms < 100) {\n      rotation=-5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 100.0f);\n    }\n else     if (ms < 484) {\n      rotation=-5 + 95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 100) / 384);\n    }\n else {\n      rotation=90;\n    }\n  }\n  canvas.rotate(rotation);\n  if (currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE || currentIcon == ICON_NONE) {\n    canvas.scale(drawableScale,drawableScale);\n  }\n  Theme.playPauseAnimator.draw(canvas,paint2,ms);\n  canvas.scale(1.0f,-1.0f);\n  Theme.playPauseAnimator.draw(canvas,paint2,ms);\n  canvas.restore();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 26411,
        "startLineNumber" : 265,
        "startColumnNumber" : 36,
        "endLineNumber" : 823,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  android.graphics.Rect bounds=getBounds();\n  if (messageDrawable != null && messageDrawable.hasGradient() && !hasOverlayImage) {\n    LinearGradient shader=messageDrawable.getGradientShader();\n    Matrix matrix=messageDrawable.getMatrix();\n    matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n    shader.setLocalMatrix(matrix);\n    paint.setShader(shader);\n    paint2.setShader(shader);\n    paint3.setShader(shader);\n  }\n else {\n    paint.setShader(null);\n    paint2.setShader(null);\n    paint3.setShader(null);\n  }\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  int saveCount=0;\n  if (nextIcon == ICON_NONE) {\n    if (currentIcon != ICON_CANCEL && currentIcon != ICON_CANCEL_FILL) {\n      saveCount=canvas.save();\n      float progress=1.0f - transitionProgress;\n      canvas.scale(progress,progress,cx,cy);\n    }\n  }\n else   if ((nextIcon == ICON_CHECK || nextIcon == ICON_EMPTY) && currentIcon == ICON_NONE) {\n    saveCount=canvas.save();\n    canvas.scale(transitionProgress,transitionProgress,cx,cy);\n  }\n  int width=AndroidUtilities.dp(3);\n  if (currentIcon == ICON_DOWNLOAD || nextIcon == ICON_DOWNLOAD) {\n    float yStart=cy - AndroidUtilities.dp(9) * scale;\n    float yEnd=cy + AndroidUtilities.dp(9) * scale;\n    float yStart2;\n    float yEnd2=cy + AndroidUtilities.dp(12) * scale;\n    float transition;\n    if ((currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL) && nextIcon == ICON_DOWNLOAD) {\n      paint.setAlpha((int)(255 * Math.min(1.0f,transitionProgress / 0.5f)));\n      transition=transitionProgress;\n      yStart2=cy + AndroidUtilities.dp(12) * scale;\n    }\n else {\n      if (nextIcon != ICON_CANCEL && nextIcon != ICON_CANCEL_FILL && nextIcon != ICON_DOWNLOAD) {\n        paint.setAlpha((int)(255 * Math.min(1.0f,savedTransitionProgress / 0.5f) * (1.0f - transitionProgress)));\n        transition=savedTransitionProgress;\n      }\n else {\n        paint.setAlpha(255);\n        transition=transitionProgress;\n      }\n      yStart2=cy + AndroidUtilities.dp(1) * scale;\n    }\n    float y1, y2, x1, x2, y3;\n    if (animatingTransition) {\n      float progress=transition;\n      if (nextIcon == ICON_DOWNLOAD || progress <= DOWNLOAD_TO_CANCEL_STAGE1) {\n        float currentProgress;\n        float currentBackProgress;\n        if (nextIcon == ICON_DOWNLOAD) {\n          currentBackProgress=transition;\n          currentProgress=1.0f - currentBackProgress;\n        }\n else {\n          currentProgress=transition / DOWNLOAD_TO_CANCEL_STAGE1;\n          currentBackProgress=1.0f - currentProgress;\n        }\n        y1=yStart + (yStart2 - yStart) * currentProgress;\n        y2=yEnd + (yEnd2 - yEnd) * currentProgress;\n        x1=cx - AndroidUtilities.dp(8) * currentBackProgress * scale;\n        x2=cx + AndroidUtilities.dp(8) * currentBackProgress * scale;\n        y3=y2 - AndroidUtilities.dp(8) * currentBackProgress * scale;\n      }\n else {\n        float currentProgress;\n        float currentProgress2;\n        float currentProgress3;\n        float d=AndroidUtilities.dp(13) * scale * scale + (isMini ? AndroidUtilities.dp(2) : 0);\n        progress-=DOWNLOAD_TO_CANCEL_STAGE1;\n        currentProgress3=progress / (DOWNLOAD_TO_CANCEL_STAGE2 + DOWNLOAD_TO_CANCEL_STAGE3);\n        if (progress > DOWNLOAD_TO_CANCEL_STAGE2) {\n          progress-=DOWNLOAD_TO_CANCEL_STAGE2;\n          currentProgress=1.0f;\n          currentProgress2=progress / DOWNLOAD_TO_CANCEL_STAGE3;\n        }\n else {\n          currentProgress=progress / DOWNLOAD_TO_CANCEL_STAGE2;\n          currentProgress2=0.0f;\n        }\n        rect.set(cx - d,yEnd2 - d / 2,cx,yEnd2 + d / 2);\n        float start=100 * currentProgress2;\n        canvas.drawArc(rect,start,104 * currentProgress3 - start,false,paint);\n        y1=yStart2 + (yEnd2 - yStart2) * currentProgress;\n        y2=y3=yEnd2;\n        x1=x2=cx;\n        if (currentProgress2 > 0) {\n          float rotation;\n          if (nextIcon == ICON_CANCEL_FILL) {\n            rotation=0;\n          }\n else {\n            rotation=-45 * (1.0f - currentProgress2);\n          }\n          d=AndroidUtilities.dp(7) * currentProgress2 * scale;\n          int alpha=(int)(255 * currentProgress2);\n          if (nextIcon != ICON_CANCEL && nextIcon != ICON_CANCEL_FILL && nextIcon != ICON_DOWNLOAD) {\n            float backProgress=(1.0f - Math.min(1.0f,transitionProgress / 0.5f));\n            alpha*=backProgress;\n          }\n          if (rotation != 0) {\n            canvas.save();\n            canvas.rotate(rotation,cx,cy);\n          }\n          if (alpha != 0) {\n            paint.setAlpha(alpha);\n            if (nextIcon == ICON_CANCEL_FILL) {\n              paint3.setAlpha(alpha);\n              rect.set(cx - AndroidUtilities.dp(3.5f),cy - AndroidUtilities.dp(3.5f),cx + AndroidUtilities.dp(3.5f),cy + AndroidUtilities.dp(3.5f));\n              canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),paint3);\n              paint.setAlpha((int)(alpha * 0.15f));\n              int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n              rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n              canvas.drawArc(rect,0,360,false,paint);\n              paint.setAlpha(alpha);\n            }\n else {\n              canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n              canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n            }\n          }\n          if (rotation != 0) {\n            canvas.restore();\n          }\n        }\n      }\n    }\n else {\n      y1=yStart;\n      y2=yEnd;\n      x1=cx - AndroidUtilities.dp(8) * scale;\n      x2=cx + AndroidUtilities.dp(8) * scale;\n      y3=y2 - AndroidUtilities.dp(8) * scale;\n    }\n    if (y1 != y2) {\n      canvas.drawLine(cx,y1,cx,y2,paint);\n    }\n    if (x1 != cx) {\n      canvas.drawLine(x1,y3,cx,y2,paint);\n      canvas.drawLine(x2,y3,cx,y2,paint);\n    }\n  }\n  if (currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) {\n    float d;\n    float rotation;\n    float iconScale=1.0f;\n    float iconScaleX=0;\n    float iconScaleY=0;\n    int alpha;\n    if (nextIcon == ICON_DOWNLOAD) {\n      if (transitionProgress <= DOWNLOAD_TO_CANCEL_STAGE3 + DOWNLOAD_TO_CANCEL_STAGE2) {\n        float progress=transitionProgress / (DOWNLOAD_TO_CANCEL_STAGE3 + DOWNLOAD_TO_CANCEL_STAGE2);\n        float backProgress=1.0f - progress;\n        d=AndroidUtilities.dp(7) * backProgress * scale;\n        alpha=(int)(255 * backProgress);\n      }\n else {\n        d=0;\n        alpha=0;\n      }\n      rotation=0;\n    }\n else     if (nextIcon == ICON_PLAY || nextIcon == ICON_PAUSE || nextIcon == ICON_FILE || nextIcon == ICON_GIF || nextIcon == ICON_SECRETCHECK || nextIcon == ICON_FIRE || nextIcon == ICON_CHECK) {\n      float progress;\n      float backProgress;\n      if (nextIcon == ICON_CHECK) {\n        progress=Math.min(1.0f,transitionProgress / CANCEL_TO_CHECK_STAGE1);\n      }\n else {\n        progress=transitionProgress;\n      }\n      backProgress=1.0f - progress;\n      rotation=45 * progress;\n      d=AndroidUtilities.dp(7) * backProgress * scale;\n      alpha=(int)(255 * Math.min(1.0f,backProgress * 2.0f));\n    }\n else     if (nextIcon == ICON_NONE) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=(int)(255 * backProgress);\n      if (currentIcon == ICON_CANCEL_FILL) {\n        rotation=0;\n        iconScale=backProgress;\n        iconScaleX=bounds.left;\n        iconScaleY=bounds.top;\n      }\n else {\n        rotation=45 * progress;\n        iconScale=1.0f;\n        iconScaleX=bounds.centerX();\n        iconScaleY=bounds.centerY();\n      }\n    }\n else     if (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      if (currentIcon == ICON_NONE) {\n        rotation=0;\n        iconScale=progress;\n      }\n else {\n        rotation=45 * backProgress;\n        iconScale=1.0f;\n      }\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=(int)(255 * progress);\n      if (nextIcon == ICON_CANCEL_FILL) {\n        iconScaleX=bounds.left;\n        iconScaleY=bounds.top;\n      }\n else {\n        iconScaleX=bounds.centerX();\n        iconScaleY=bounds.centerY();\n      }\n    }\n else {\n      rotation=0;\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=255;\n    }\n    if (iconScale != 1.0f) {\n      canvas.save();\n      canvas.scale(iconScale,iconScale,iconScaleX,iconScaleY);\n    }\n    if (rotation != 0) {\n      canvas.save();\n      canvas.rotate(rotation,cx,cy);\n    }\n    if (alpha != 0) {\n      paint.setAlpha((int)(alpha * overrideAlpha));\n      if (currentIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL_FILL) {\n        paint3.setAlpha((int)(alpha * overrideAlpha));\n        rect.set(cx - AndroidUtilities.dp(3.5f),cy - AndroidUtilities.dp(3.5f),cx + AndroidUtilities.dp(3.5f),cy + AndroidUtilities.dp(3.5f));\n        canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),paint3);\n      }\n else {\n        canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n        canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n      }\n    }\n    if (rotation != 0) {\n      canvas.restore();\n    }\n    if ((currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) && alpha != 0) {\n      float rad=Math.max(4,360 * animatedDownloadProgress);\n      int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n      rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n      if (currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) {\n        paint.setAlpha((int)(alpha * 0.15f * overrideAlpha));\n        canvas.drawArc(rect,0,360,false,paint);\n        paint.setAlpha(alpha);\n      }\n      canvas.drawArc(rect,downloadRadOffset,rad,false,paint);\n    }\n    if (iconScale != 1.0f) {\n      canvas.restore();\n    }\n  }\n else   if (currentIcon == ICON_EMPTY || nextIcon == ICON_EMPTY || currentIcon == ICON_CANCEL_PERCENT) {\n    int alpha;\n    if (nextIcon == ICON_NONE || nextIcon == ICON_CHECK) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      alpha=(int)(255 * backProgress);\n    }\n else {\n      alpha=255;\n    }\n    if (alpha != 0) {\n      paint.setAlpha((int)(alpha * overrideAlpha));\n      float rad=Math.max(4,360 * animatedDownloadProgress);\n      int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n      rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n      canvas.drawArc(rect,downloadRadOffset,rad,false,paint);\n    }\n  }\n  Drawable nextDrawable=null;\n  Drawable previousDrawable=null;\n  Path[] nextPath=null;\n  Path[] previousPath=null;\n  float drawableScale;\n  float previowsDrawableScale;\n  if (currentIcon == nextIcon) {\n    drawableScale=previowsDrawableScale=1.0f;\n  }\n else   if (currentIcon == ICON_NONE) {\n    drawableScale=transitionProgress;\n    previowsDrawableScale=1.0f - transitionProgress;\n  }\n else {\n    drawableScale=Math.min(1.0f,transitionProgress / 0.5f);\n    previowsDrawableScale=Math.max(0.0f,1.0f - transitionProgress / 0.5f);\n  }\n  if (nextIcon == ICON_FILE) {\n    nextPath=Theme.chat_filePath;\n  }\n else   if (currentIcon == ICON_FILE) {\n    previousPath=Theme.chat_filePath;\n  }\n  if (nextIcon == ICON_FIRE) {\n    nextDrawable=Theme.chat_flameIcon;\n  }\n else   if (currentIcon == ICON_FIRE) {\n    previousDrawable=Theme.chat_flameIcon;\n  }\n  if (nextIcon == ICON_GIF) {\n    nextDrawable=Theme.chat_gifIcon;\n  }\n else   if (currentIcon == ICON_GIF) {\n    previousDrawable=Theme.chat_gifIcon;\n  }\n  if (currentIcon == ICON_SECRETCHECK || nextIcon == ICON_SECRETCHECK) {\n    paint.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transitionProgress,transitionProgress,cx,cy);\n    }\n    canvas.drawLine(x - AndroidUtilities.dp(6),y - AndroidUtilities.dp(6),x,y,paint);\n    canvas.drawLine(x,y,x + AndroidUtilities.dp(12),y - AndroidUtilities.dp(12),paint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_CANCEL_NOPROFRESS || nextIcon == ICON_CANCEL_NOPROFRESS) {\n    float transition;\n    if (currentIcon == nextIcon) {\n      transition=1.0f;\n    }\n else     if (nextIcon == ICON_CANCEL_PERCENT) {\n      transition=transitionProgress;\n    }\n else {\n      transition=1.0f - transitionProgress;\n    }\n    paint.setAlpha(currentIcon == nextIcon ? 255 : (int)(transition * 255));\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transition,transition,cx,cy);\n    }\n    float d=AndroidUtilities.dp(7) * scale;\n    canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n    canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_CANCEL_PERCENT || nextIcon == ICON_CANCEL_PERCENT) {\n    float transition;\n    if (currentIcon == nextIcon) {\n      transition=1.0f;\n    }\n else     if (nextIcon == ICON_CANCEL_PERCENT) {\n      transition=transitionProgress;\n    }\n else {\n      transition=1.0f - transitionProgress;\n    }\n    textPaint.setAlpha((int)(transition * 255));\n    int y=cy + AndroidUtilities.dp(5);\n    int x=cx - percentStringWidth / 2;\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transition,transition,cx,cy);\n    }\n    int newPercent=(int)(animatedDownloadProgress * 100);\n    if (percentString == null || newPercent != lastPercent) {\n      lastPercent=newPercent;\n      percentString=String.format(\"%d%%\",lastPercent);\n      percentStringWidth=(int)Math.ceil(textPaint.measureText(percentString));\n    }\n    canvas.drawText(percentString,x,y,textPaint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_PLAY || currentIcon == ICON_PAUSE || nextIcon == ICON_PLAY || nextIcon == ICON_PAUSE) {\n    float p;\n    if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE || currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n      if (animatingTransition) {\n        if (nextIcon == ICON_PLAY) {\n          p=1.0f - transitionProgress;\n        }\n else {\n          p=transitionProgress;\n        }\n      }\n else {\n        p=nextIcon == ICON_PAUSE ? 1.0f : 0.0f;\n      }\n    }\n else {\n      p=currentIcon == ICON_PAUSE ? 1.0f : 0.0f;\n    }\n    if (nextIcon != ICON_PLAY && nextIcon != ICON_PAUSE || currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE) {\n      if (nextIcon == ICON_NONE) {\n        paint2.setAlpha((int)(255 * (1.0f - transitionProgress)));\n      }\n else {\n        paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n      }\n    }\n else {\n      paint2.setAlpha(255);\n    }\n    canvas.save();\n    canvas.translate(bounds.centerX() + AndroidUtilities.dp(1) * (1.0f - p),bounds.centerY());\n    float ms=500.0f * p;\n    float rotation=currentIcon == ICON_PAUSE ? 90 : 0;\n    if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE) {\n      if (ms < 384) {\n        rotation=95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 384);\n      }\n else       if (ms < 484) {\n        rotation=95 - 5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 384) / 100.0f);\n      }\n else {\n        rotation=90;\n      }\n      ms+=100;\n    }\n else     if (currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n      if (ms < 100) {\n        rotation=-5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 100.0f);\n      }\n else       if (ms < 484) {\n        rotation=-5 + 95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 100) / 384);\n      }\n else {\n        rotation=90;\n      }\n    }\n    canvas.rotate(rotation);\n    if (currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE || currentIcon == ICON_NONE) {\n      canvas.scale(drawableScale,drawableScale);\n    }\n    Theme.playPauseAnimator.draw(canvas,paint2,ms);\n    canvas.scale(1.0f,-1.0f);\n    Theme.playPauseAnimator.draw(canvas,paint2,ms);\n    canvas.restore();\n  }\n  if (currentIcon == ICON_CHECK || nextIcon == ICON_CHECK) {\n    float progress1;\n    float progress2;\n    if (currentIcon != ICON_CHECK) {\n      if (transitionProgress > CANCEL_TO_CHECK_STAGE1) {\n        float progress=(transitionProgress - CANCEL_TO_CHECK_STAGE1) / CANCEL_TO_CHECK_STAGE2;\n        progress1=1.0f - Math.min(1.0f,progress / 0.5f);\n        progress2=progress > 0.5f ? ((progress - 0.5f) / 0.5f) : 0.0f;\n      }\n else {\n        progress1=1.0f;\n        progress2=0.0f;\n      }\n      paint.setAlpha(255);\n    }\n else {\n      progress1=0.0f;\n      progress2=1.0f;\n      if (nextIcon != ICON_CHECK) {\n        paint.setAlpha((int)(255 * (1.0f - transitionProgress)));\n      }\n else {\n        paint.setAlpha(255);\n      }\n    }\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (progress1 < 1) {\n      canvas.drawLine(x - AndroidUtilities.dp(6),y - AndroidUtilities.dp(6),x - AndroidUtilities.dp(6) * progress1,y - AndroidUtilities.dp(6) * progress1,paint);\n    }\n    if (progress2 > 0) {\n      canvas.drawLine(x,y,x + AndroidUtilities.dp(12) * progress2,y - AndroidUtilities.dp(12) * progress2,paint);\n    }\n  }\n  if (previousDrawable != null && previousDrawable != nextDrawable) {\n    int w=(int)(previousDrawable.getIntrinsicWidth() * previowsDrawableScale);\n    int h=(int)(previousDrawable.getIntrinsicHeight() * previowsDrawableScale);\n    previousDrawable.setColorFilter(colorFilter);\n    previousDrawable.setAlpha(currentIcon == nextIcon ? 255 : (int)((1.0f - transitionProgress) * 255));\n    previousDrawable.setBounds(cx - w / 2,cy - h / 2,cx + w / 2,cy + h / 2);\n    previousDrawable.draw(canvas);\n  }\n  if (nextDrawable != null) {\n    int w=(int)(nextDrawable.getIntrinsicWidth() * drawableScale);\n    int h=(int)(nextDrawable.getIntrinsicHeight() * drawableScale);\n    nextDrawable.setColorFilter(colorFilter);\n    nextDrawable.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    nextDrawable.setBounds(cx - w / 2,cy - h / 2,cx + w / 2,cy + h / 2);\n    nextDrawable.draw(canvas);\n  }\n  if (previousPath != null && previousPath != nextPath) {\n    int w=(int)(AndroidUtilities.dp(24) * previowsDrawableScale);\n    int h=(int)(AndroidUtilities.dp(24) * previowsDrawableScale);\n    paint2.setStyle(Paint.Style.FILL_AND_STROKE);\n    paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)((1.0f - transitionProgress) * 255));\n    canvas.save();\n    canvas.translate(cx - w / 2,cy - h / 2);\n    canvas.drawPath(previousPath[0],paint2);\n    if (previousPath[1] != null) {\n      canvas.drawPath(previousPath[1],backPaint);\n    }\n    canvas.restore();\n  }\n  if (nextPath != null) {\n    int w=(int)(AndroidUtilities.dp(24) * drawableScale);\n    int h=(int)(AndroidUtilities.dp(24) * drawableScale);\n    paint2.setStyle(Paint.Style.FILL_AND_STROKE);\n    paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    canvas.save();\n    canvas.translate(cx - w / 2,cy - h / 2);\n    canvas.drawPath(nextPath[0],paint2);\n    if (nextPath[1] != null) {\n      canvas.drawPath(nextPath[1],backPaint);\n    }\n    canvas.restore();\n  }\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastAnimationTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastAnimationTime=newTime;\n  if (currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && nextIcon == ICON_CANCEL_FILL || currentIcon == ICON_EMPTY || currentIcon == ICON_CANCEL_PERCENT) {\n    downloadRadOffset+=360 * dt / 2500.0f;\n    downloadRadOffset=getCircleValue(downloadRadOffset);\n    if (nextIcon != ICON_DOWNLOAD) {\n      float progressDiff=downloadProgress - downloadProgressAnimationStart;\n      if (progressDiff > 0) {\n        downloadProgressTime+=dt;\n        if (downloadProgressTime >= 200.0f) {\n          animatedDownloadProgress=downloadProgress;\n          downloadProgressAnimationStart=downloadProgress;\n          downloadProgressTime=0;\n        }\n else {\n          animatedDownloadProgress=downloadProgressAnimationStart + progressDiff * interpolator.getInterpolation(downloadProgressTime / 200.0f);\n        }\n      }\n    }\n    invalidateSelf();\n  }\n  if (animatingTransition) {\n    if (transitionProgress < 1.0f) {\n      transitionProgress+=dt / transitionAnimationTime;\n      if (transitionProgress >= 1.0f) {\n        currentIcon=nextIcon;\n        transitionProgress=1.0f;\n        animatingTransition=false;\n      }\n      invalidateSelf();\n    }\n  }\n  if (saveCount >= 1) {\n    canvas.restoreToCount(saveCount);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3365,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 26457,
        "startLineNumber" : 264,
        "startColumnNumber" : 4,
        "endLineNumber" : 823,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Canvas canvas){\n  android.graphics.Rect bounds=getBounds();\n  if (messageDrawable != null && messageDrawable.hasGradient() && !hasOverlayImage) {\n    LinearGradient shader=messageDrawable.getGradientShader();\n    Matrix matrix=messageDrawable.getMatrix();\n    matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n    shader.setLocalMatrix(matrix);\n    paint.setShader(shader);\n    paint2.setShader(shader);\n    paint3.setShader(shader);\n  }\n else {\n    paint.setShader(null);\n    paint2.setShader(null);\n    paint3.setShader(null);\n  }\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  int saveCount=0;\n  if (nextIcon == ICON_NONE) {\n    if (currentIcon != ICON_CANCEL && currentIcon != ICON_CANCEL_FILL) {\n      saveCount=canvas.save();\n      float progress=1.0f - transitionProgress;\n      canvas.scale(progress,progress,cx,cy);\n    }\n  }\n else   if ((nextIcon == ICON_CHECK || nextIcon == ICON_EMPTY) && currentIcon == ICON_NONE) {\n    saveCount=canvas.save();\n    canvas.scale(transitionProgress,transitionProgress,cx,cy);\n  }\n  int width=AndroidUtilities.dp(3);\n  if (currentIcon == ICON_DOWNLOAD || nextIcon == ICON_DOWNLOAD) {\n    float yStart=cy - AndroidUtilities.dp(9) * scale;\n    float yEnd=cy + AndroidUtilities.dp(9) * scale;\n    float yStart2;\n    float yEnd2=cy + AndroidUtilities.dp(12) * scale;\n    float transition;\n    if ((currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL) && nextIcon == ICON_DOWNLOAD) {\n      paint.setAlpha((int)(255 * Math.min(1.0f,transitionProgress / 0.5f)));\n      transition=transitionProgress;\n      yStart2=cy + AndroidUtilities.dp(12) * scale;\n    }\n else {\n      if (nextIcon != ICON_CANCEL && nextIcon != ICON_CANCEL_FILL && nextIcon != ICON_DOWNLOAD) {\n        paint.setAlpha((int)(255 * Math.min(1.0f,savedTransitionProgress / 0.5f) * (1.0f - transitionProgress)));\n        transition=savedTransitionProgress;\n      }\n else {\n        paint.setAlpha(255);\n        transition=transitionProgress;\n      }\n      yStart2=cy + AndroidUtilities.dp(1) * scale;\n    }\n    float y1, y2, x1, x2, y3;\n    if (animatingTransition) {\n      float progress=transition;\n      if (nextIcon == ICON_DOWNLOAD || progress <= DOWNLOAD_TO_CANCEL_STAGE1) {\n        float currentProgress;\n        float currentBackProgress;\n        if (nextIcon == ICON_DOWNLOAD) {\n          currentBackProgress=transition;\n          currentProgress=1.0f - currentBackProgress;\n        }\n else {\n          currentProgress=transition / DOWNLOAD_TO_CANCEL_STAGE1;\n          currentBackProgress=1.0f - currentProgress;\n        }\n        y1=yStart + (yStart2 - yStart) * currentProgress;\n        y2=yEnd + (yEnd2 - yEnd) * currentProgress;\n        x1=cx - AndroidUtilities.dp(8) * currentBackProgress * scale;\n        x2=cx + AndroidUtilities.dp(8) * currentBackProgress * scale;\n        y3=y2 - AndroidUtilities.dp(8) * currentBackProgress * scale;\n      }\n else {\n        float currentProgress;\n        float currentProgress2;\n        float currentProgress3;\n        float d=AndroidUtilities.dp(13) * scale * scale + (isMini ? AndroidUtilities.dp(2) : 0);\n        progress-=DOWNLOAD_TO_CANCEL_STAGE1;\n        currentProgress3=progress / (DOWNLOAD_TO_CANCEL_STAGE2 + DOWNLOAD_TO_CANCEL_STAGE3);\n        if (progress > DOWNLOAD_TO_CANCEL_STAGE2) {\n          progress-=DOWNLOAD_TO_CANCEL_STAGE2;\n          currentProgress=1.0f;\n          currentProgress2=progress / DOWNLOAD_TO_CANCEL_STAGE3;\n        }\n else {\n          currentProgress=progress / DOWNLOAD_TO_CANCEL_STAGE2;\n          currentProgress2=0.0f;\n        }\n        rect.set(cx - d,yEnd2 - d / 2,cx,yEnd2 + d / 2);\n        float start=100 * currentProgress2;\n        canvas.drawArc(rect,start,104 * currentProgress3 - start,false,paint);\n        y1=yStart2 + (yEnd2 - yStart2) * currentProgress;\n        y2=y3=yEnd2;\n        x1=x2=cx;\n        if (currentProgress2 > 0) {\n          float rotation;\n          if (nextIcon == ICON_CANCEL_FILL) {\n            rotation=0;\n          }\n else {\n            rotation=-45 * (1.0f - currentProgress2);\n          }\n          d=AndroidUtilities.dp(7) * currentProgress2 * scale;\n          int alpha=(int)(255 * currentProgress2);\n          if (nextIcon != ICON_CANCEL && nextIcon != ICON_CANCEL_FILL && nextIcon != ICON_DOWNLOAD) {\n            float backProgress=(1.0f - Math.min(1.0f,transitionProgress / 0.5f));\n            alpha*=backProgress;\n          }\n          if (rotation != 0) {\n            canvas.save();\n            canvas.rotate(rotation,cx,cy);\n          }\n          if (alpha != 0) {\n            paint.setAlpha(alpha);\n            if (nextIcon == ICON_CANCEL_FILL) {\n              paint3.setAlpha(alpha);\n              rect.set(cx - AndroidUtilities.dp(3.5f),cy - AndroidUtilities.dp(3.5f),cx + AndroidUtilities.dp(3.5f),cy + AndroidUtilities.dp(3.5f));\n              canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),paint3);\n              paint.setAlpha((int)(alpha * 0.15f));\n              int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n              rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n              canvas.drawArc(rect,0,360,false,paint);\n              paint.setAlpha(alpha);\n            }\n else {\n              canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n              canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n            }\n          }\n          if (rotation != 0) {\n            canvas.restore();\n          }\n        }\n      }\n    }\n else {\n      y1=yStart;\n      y2=yEnd;\n      x1=cx - AndroidUtilities.dp(8) * scale;\n      x2=cx + AndroidUtilities.dp(8) * scale;\n      y3=y2 - AndroidUtilities.dp(8) * scale;\n    }\n    if (y1 != y2) {\n      canvas.drawLine(cx,y1,cx,y2,paint);\n    }\n    if (x1 != cx) {\n      canvas.drawLine(x1,y3,cx,y2,paint);\n      canvas.drawLine(x2,y3,cx,y2,paint);\n    }\n  }\n  if (currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) {\n    float d;\n    float rotation;\n    float iconScale=1.0f;\n    float iconScaleX=0;\n    float iconScaleY=0;\n    int alpha;\n    if (nextIcon == ICON_DOWNLOAD) {\n      if (transitionProgress <= DOWNLOAD_TO_CANCEL_STAGE3 + DOWNLOAD_TO_CANCEL_STAGE2) {\n        float progress=transitionProgress / (DOWNLOAD_TO_CANCEL_STAGE3 + DOWNLOAD_TO_CANCEL_STAGE2);\n        float backProgress=1.0f - progress;\n        d=AndroidUtilities.dp(7) * backProgress * scale;\n        alpha=(int)(255 * backProgress);\n      }\n else {\n        d=0;\n        alpha=0;\n      }\n      rotation=0;\n    }\n else     if (nextIcon == ICON_PLAY || nextIcon == ICON_PAUSE || nextIcon == ICON_FILE || nextIcon == ICON_GIF || nextIcon == ICON_SECRETCHECK || nextIcon == ICON_FIRE || nextIcon == ICON_CHECK) {\n      float progress;\n      float backProgress;\n      if (nextIcon == ICON_CHECK) {\n        progress=Math.min(1.0f,transitionProgress / CANCEL_TO_CHECK_STAGE1);\n      }\n else {\n        progress=transitionProgress;\n      }\n      backProgress=1.0f - progress;\n      rotation=45 * progress;\n      d=AndroidUtilities.dp(7) * backProgress * scale;\n      alpha=(int)(255 * Math.min(1.0f,backProgress * 2.0f));\n    }\n else     if (nextIcon == ICON_NONE) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=(int)(255 * backProgress);\n      if (currentIcon == ICON_CANCEL_FILL) {\n        rotation=0;\n        iconScale=backProgress;\n        iconScaleX=bounds.left;\n        iconScaleY=bounds.top;\n      }\n else {\n        rotation=45 * progress;\n        iconScale=1.0f;\n        iconScaleX=bounds.centerX();\n        iconScaleY=bounds.centerY();\n      }\n    }\n else     if (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      if (currentIcon == ICON_NONE) {\n        rotation=0;\n        iconScale=progress;\n      }\n else {\n        rotation=45 * backProgress;\n        iconScale=1.0f;\n      }\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=(int)(255 * progress);\n      if (nextIcon == ICON_CANCEL_FILL) {\n        iconScaleX=bounds.left;\n        iconScaleY=bounds.top;\n      }\n else {\n        iconScaleX=bounds.centerX();\n        iconScaleY=bounds.centerY();\n      }\n    }\n else {\n      rotation=0;\n      d=AndroidUtilities.dp(7) * scale;\n      alpha=255;\n    }\n    if (iconScale != 1.0f) {\n      canvas.save();\n      canvas.scale(iconScale,iconScale,iconScaleX,iconScaleY);\n    }\n    if (rotation != 0) {\n      canvas.save();\n      canvas.rotate(rotation,cx,cy);\n    }\n    if (alpha != 0) {\n      paint.setAlpha((int)(alpha * overrideAlpha));\n      if (currentIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL_FILL) {\n        paint3.setAlpha((int)(alpha * overrideAlpha));\n        rect.set(cx - AndroidUtilities.dp(3.5f),cy - AndroidUtilities.dp(3.5f),cx + AndroidUtilities.dp(3.5f),cy + AndroidUtilities.dp(3.5f));\n        canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),paint3);\n      }\n else {\n        canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n        canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n      }\n    }\n    if (rotation != 0) {\n      canvas.restore();\n    }\n    if ((currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) && alpha != 0) {\n      float rad=Math.max(4,360 * animatedDownloadProgress);\n      int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n      rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n      if (currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && (nextIcon == ICON_CANCEL_FILL || nextIcon == ICON_CANCEL)) {\n        paint.setAlpha((int)(alpha * 0.15f * overrideAlpha));\n        canvas.drawArc(rect,0,360,false,paint);\n        paint.setAlpha(alpha);\n      }\n      canvas.drawArc(rect,downloadRadOffset,rad,false,paint);\n    }\n    if (iconScale != 1.0f) {\n      canvas.restore();\n    }\n  }\n else   if (currentIcon == ICON_EMPTY || nextIcon == ICON_EMPTY || currentIcon == ICON_CANCEL_PERCENT) {\n    int alpha;\n    if (nextIcon == ICON_NONE || nextIcon == ICON_CHECK) {\n      float progress=transitionProgress;\n      float backProgress=1.0f - progress;\n      alpha=(int)(255 * backProgress);\n    }\n else {\n      alpha=255;\n    }\n    if (alpha != 0) {\n      paint.setAlpha((int)(alpha * overrideAlpha));\n      float rad=Math.max(4,360 * animatedDownloadProgress);\n      int diff=AndroidUtilities.dp(isMini ? 2 : 4);\n      rect.set(bounds.left + diff,bounds.top + diff,bounds.right - diff,bounds.bottom - diff);\n      canvas.drawArc(rect,downloadRadOffset,rad,false,paint);\n    }\n  }\n  Drawable nextDrawable=null;\n  Drawable previousDrawable=null;\n  Path[] nextPath=null;\n  Path[] previousPath=null;\n  float drawableScale;\n  float previowsDrawableScale;\n  if (currentIcon == nextIcon) {\n    drawableScale=previowsDrawableScale=1.0f;\n  }\n else   if (currentIcon == ICON_NONE) {\n    drawableScale=transitionProgress;\n    previowsDrawableScale=1.0f - transitionProgress;\n  }\n else {\n    drawableScale=Math.min(1.0f,transitionProgress / 0.5f);\n    previowsDrawableScale=Math.max(0.0f,1.0f - transitionProgress / 0.5f);\n  }\n  if (nextIcon == ICON_FILE) {\n    nextPath=Theme.chat_filePath;\n  }\n else   if (currentIcon == ICON_FILE) {\n    previousPath=Theme.chat_filePath;\n  }\n  if (nextIcon == ICON_FIRE) {\n    nextDrawable=Theme.chat_flameIcon;\n  }\n else   if (currentIcon == ICON_FIRE) {\n    previousDrawable=Theme.chat_flameIcon;\n  }\n  if (nextIcon == ICON_GIF) {\n    nextDrawable=Theme.chat_gifIcon;\n  }\n else   if (currentIcon == ICON_GIF) {\n    previousDrawable=Theme.chat_gifIcon;\n  }\n  if (currentIcon == ICON_SECRETCHECK || nextIcon == ICON_SECRETCHECK) {\n    paint.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transitionProgress,transitionProgress,cx,cy);\n    }\n    canvas.drawLine(x - AndroidUtilities.dp(6),y - AndroidUtilities.dp(6),x,y,paint);\n    canvas.drawLine(x,y,x + AndroidUtilities.dp(12),y - AndroidUtilities.dp(12),paint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_CANCEL_NOPROFRESS || nextIcon == ICON_CANCEL_NOPROFRESS) {\n    float transition;\n    if (currentIcon == nextIcon) {\n      transition=1.0f;\n    }\n else     if (nextIcon == ICON_CANCEL_PERCENT) {\n      transition=transitionProgress;\n    }\n else {\n      transition=1.0f - transitionProgress;\n    }\n    paint.setAlpha(currentIcon == nextIcon ? 255 : (int)(transition * 255));\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transition,transition,cx,cy);\n    }\n    float d=AndroidUtilities.dp(7) * scale;\n    canvas.drawLine(cx - d,cy - d,cx + d,cy + d,paint);\n    canvas.drawLine(cx + d,cy - d,cx - d,cy + d,paint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_CANCEL_PERCENT || nextIcon == ICON_CANCEL_PERCENT) {\n    float transition;\n    if (currentIcon == nextIcon) {\n      transition=1.0f;\n    }\n else     if (nextIcon == ICON_CANCEL_PERCENT) {\n      transition=transitionProgress;\n    }\n else {\n      transition=1.0f - transitionProgress;\n    }\n    textPaint.setAlpha((int)(transition * 255));\n    int y=cy + AndroidUtilities.dp(5);\n    int x=cx - percentStringWidth / 2;\n    if (currentIcon != nextIcon) {\n      canvas.save();\n      canvas.scale(transition,transition,cx,cy);\n    }\n    int newPercent=(int)(animatedDownloadProgress * 100);\n    if (percentString == null || newPercent != lastPercent) {\n      lastPercent=newPercent;\n      percentString=String.format(\"%d%%\",lastPercent);\n      percentStringWidth=(int)Math.ceil(textPaint.measureText(percentString));\n    }\n    canvas.drawText(percentString,x,y,textPaint);\n    if (currentIcon != nextIcon) {\n      canvas.restore();\n    }\n  }\n  if (currentIcon == ICON_PLAY || currentIcon == ICON_PAUSE || nextIcon == ICON_PLAY || nextIcon == ICON_PAUSE) {\n    float p;\n    if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE || currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n      if (animatingTransition) {\n        if (nextIcon == ICON_PLAY) {\n          p=1.0f - transitionProgress;\n        }\n else {\n          p=transitionProgress;\n        }\n      }\n else {\n        p=nextIcon == ICON_PAUSE ? 1.0f : 0.0f;\n      }\n    }\n else {\n      p=currentIcon == ICON_PAUSE ? 1.0f : 0.0f;\n    }\n    if (nextIcon != ICON_PLAY && nextIcon != ICON_PAUSE || currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE) {\n      if (nextIcon == ICON_NONE) {\n        paint2.setAlpha((int)(255 * (1.0f - transitionProgress)));\n      }\n else {\n        paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n      }\n    }\n else {\n      paint2.setAlpha(255);\n    }\n    canvas.save();\n    canvas.translate(bounds.centerX() + AndroidUtilities.dp(1) * (1.0f - p),bounds.centerY());\n    float ms=500.0f * p;\n    float rotation=currentIcon == ICON_PAUSE ? 90 : 0;\n    if (currentIcon == ICON_PLAY && nextIcon == ICON_PAUSE) {\n      if (ms < 384) {\n        rotation=95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 384);\n      }\n else       if (ms < 484) {\n        rotation=95 - 5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 384) / 100.0f);\n      }\n else {\n        rotation=90;\n      }\n      ms+=100;\n    }\n else     if (currentIcon == ICON_PAUSE && nextIcon == ICON_PLAY) {\n      if (ms < 100) {\n        rotation=-5 * CubicBezierInterpolator.EASE_BOTH.getInterpolation(ms / 100.0f);\n      }\n else       if (ms < 484) {\n        rotation=-5 + 95 * CubicBezierInterpolator.EASE_BOTH.getInterpolation((ms - 100) / 384);\n      }\n else {\n        rotation=90;\n      }\n    }\n    canvas.rotate(rotation);\n    if (currentIcon != ICON_PLAY && currentIcon != ICON_PAUSE || currentIcon == ICON_NONE) {\n      canvas.scale(drawableScale,drawableScale);\n    }\n    Theme.playPauseAnimator.draw(canvas,paint2,ms);\n    canvas.scale(1.0f,-1.0f);\n    Theme.playPauseAnimator.draw(canvas,paint2,ms);\n    canvas.restore();\n  }\n  if (currentIcon == ICON_CHECK || nextIcon == ICON_CHECK) {\n    float progress1;\n    float progress2;\n    if (currentIcon != ICON_CHECK) {\n      if (transitionProgress > CANCEL_TO_CHECK_STAGE1) {\n        float progress=(transitionProgress - CANCEL_TO_CHECK_STAGE1) / CANCEL_TO_CHECK_STAGE2;\n        progress1=1.0f - Math.min(1.0f,progress / 0.5f);\n        progress2=progress > 0.5f ? ((progress - 0.5f) / 0.5f) : 0.0f;\n      }\n else {\n        progress1=1.0f;\n        progress2=0.0f;\n      }\n      paint.setAlpha(255);\n    }\n else {\n      progress1=0.0f;\n      progress2=1.0f;\n      if (nextIcon != ICON_CHECK) {\n        paint.setAlpha((int)(255 * (1.0f - transitionProgress)));\n      }\n else {\n        paint.setAlpha(255);\n      }\n    }\n    int y=cy + AndroidUtilities.dp(7);\n    int x=cx - AndroidUtilities.dp(3);\n    if (progress1 < 1) {\n      canvas.drawLine(x - AndroidUtilities.dp(6),y - AndroidUtilities.dp(6),x - AndroidUtilities.dp(6) * progress1,y - AndroidUtilities.dp(6) * progress1,paint);\n    }\n    if (progress2 > 0) {\n      canvas.drawLine(x,y,x + AndroidUtilities.dp(12) * progress2,y - AndroidUtilities.dp(12) * progress2,paint);\n    }\n  }\n  if (previousDrawable != null && previousDrawable != nextDrawable) {\n    int w=(int)(previousDrawable.getIntrinsicWidth() * previowsDrawableScale);\n    int h=(int)(previousDrawable.getIntrinsicHeight() * previowsDrawableScale);\n    previousDrawable.setColorFilter(colorFilter);\n    previousDrawable.setAlpha(currentIcon == nextIcon ? 255 : (int)((1.0f - transitionProgress) * 255));\n    previousDrawable.setBounds(cx - w / 2,cy - h / 2,cx + w / 2,cy + h / 2);\n    previousDrawable.draw(canvas);\n  }\n  if (nextDrawable != null) {\n    int w=(int)(nextDrawable.getIntrinsicWidth() * drawableScale);\n    int h=(int)(nextDrawable.getIntrinsicHeight() * drawableScale);\n    nextDrawable.setColorFilter(colorFilter);\n    nextDrawable.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    nextDrawable.setBounds(cx - w / 2,cy - h / 2,cx + w / 2,cy + h / 2);\n    nextDrawable.draw(canvas);\n  }\n  if (previousPath != null && previousPath != nextPath) {\n    int w=(int)(AndroidUtilities.dp(24) * previowsDrawableScale);\n    int h=(int)(AndroidUtilities.dp(24) * previowsDrawableScale);\n    paint2.setStyle(Paint.Style.FILL_AND_STROKE);\n    paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)((1.0f - transitionProgress) * 255));\n    canvas.save();\n    canvas.translate(cx - w / 2,cy - h / 2);\n    canvas.drawPath(previousPath[0],paint2);\n    if (previousPath[1] != null) {\n      canvas.drawPath(previousPath[1],backPaint);\n    }\n    canvas.restore();\n  }\n  if (nextPath != null) {\n    int w=(int)(AndroidUtilities.dp(24) * drawableScale);\n    int h=(int)(AndroidUtilities.dp(24) * drawableScale);\n    paint2.setStyle(Paint.Style.FILL_AND_STROKE);\n    paint2.setAlpha(currentIcon == nextIcon ? 255 : (int)(transitionProgress * 255));\n    canvas.save();\n    canvas.translate(cx - w / 2,cy - h / 2);\n    canvas.drawPath(nextPath[0],paint2);\n    if (nextPath[1] != null) {\n      canvas.drawPath(nextPath[1],backPaint);\n    }\n    canvas.restore();\n  }\n  long newTime=System.currentTimeMillis();\n  long dt=newTime - lastAnimationTime;\n  if (dt > 17) {\n    dt=17;\n  }\n  lastAnimationTime=newTime;\n  if (currentIcon == ICON_CANCEL || currentIcon == ICON_CANCEL_FILL || currentIcon == ICON_NONE && nextIcon == ICON_CANCEL_FILL || currentIcon == ICON_EMPTY || currentIcon == ICON_CANCEL_PERCENT) {\n    downloadRadOffset+=360 * dt / 2500.0f;\n    downloadRadOffset=getCircleValue(downloadRadOffset);\n    if (nextIcon != ICON_DOWNLOAD) {\n      float progressDiff=downloadProgress - downloadProgressAnimationStart;\n      if (progressDiff > 0) {\n        downloadProgressTime+=dt;\n        if (downloadProgressTime >= 200.0f) {\n          animatedDownloadProgress=downloadProgress;\n          downloadProgressAnimationStart=downloadProgress;\n          downloadProgressTime=0;\n        }\n else {\n          animatedDownloadProgress=downloadProgressAnimationStart + progressDiff * interpolator.getInterpolation(downloadProgressTime / 200.0f);\n        }\n      }\n    }\n    invalidateSelf();\n  }\n  if (animatingTransition) {\n    if (transitionProgress < 1.0f) {\n      transitionProgress+=dt / transitionAnimationTime;\n      if (transitionProgress >= 1.0f) {\n        currentIcon=nextIcon;\n        transitionProgress=1.0f;\n        animatingTransition=false;\n      }\n      invalidateSelf();\n    }\n  }\n  if (saveCount >= 1) {\n    canvas.restoreToCount(saveCount);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 3375,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 701,
        "startColumnNumber" : 12,
        "endLineNumber" : 701,
        "endColumnNumber" : 38
      },
      "nodeContext" : "canvas.scale(1.0f,-1.0f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 701,
    "startColumnNumber" : 31,
    "endLineNumber" : 701,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}