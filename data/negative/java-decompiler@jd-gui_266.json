{
  "id" : 266,
  "expression" : "packageName + '/' + name",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/util/parser/antlr/AbstractJavaListener.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "packageName + '/' + name",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 95,
      "startColumnNumber" : 44,
      "endLineNumber" : 95,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 95,
        "startColumnNumber" : 28,
        "endLineNumber" : 95,
        "endColumnNumber" : 68
      },
      "nodeContext" : "qualifiedName=packageName + '/' + name",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 95,
        "startColumnNumber" : 28,
        "endLineNumber" : 95,
        "endColumnNumber" : 69
      },
      "nodeContext" : "qualifiedName=packageName + '/' + name;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 94,
        "startColumnNumber" : 113,
        "endLineNumber" : 98,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  qualifiedName=packageName + '/' + name;\n  typeNameCache.put(name,qualifiedName);\n  return qualifiedName;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 94,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n  qualifiedName=packageName + '/' + name;\n  typeNameCache.put(name,qualifiedName);\n  return qualifiedName;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 93,
        "startColumnNumber" : 71,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n    qualifiedName=packageName + '/' + name;\n    typeNameCache.put(name,qualifiedName);\n    return qualifiedName;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Container.Entry child : parent.getChildren()) {\n  if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n    qualifiedName=packageName + '/' + name;\n    typeNameCache.put(name,qualifiedName);\n    return qualifiedName;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 88,
        "startColumnNumber" : 56,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entry.getPath().indexOf('/') != -1) {\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (identifiers.size()) {\ncase 0:  return null;\ncase 1:String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 222,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2576,
        "startLineNumber" : 63,
        "startColumnNumber" : 77,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2649,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String resolveInternalTypeName(List<TerminalNode> identifiers){\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 95,
        "startColumnNumber" : 28,
        "endLineNumber" : 95,
        "endColumnNumber" : 69
      },
      "nodeContext" : "qualifiedName=packageName + '/' + name;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 95,
    "startColumnNumber" : 44,
    "endLineNumber" : 95,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}