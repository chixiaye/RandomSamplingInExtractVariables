{
  "id" : 91,
  "expression" : "this",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-pulsar/src/main/java/org/apache/flink/connector/pulsar/sink/writer/PulsarWriter.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 99,
      "startColumnNumber" : 8,
      "endLineNumber" : 99,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 30
      },
      "nodeContext" : "this.sinkConfiguration",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.sinkConfiguration=checkNotNull(sinkConfiguration)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.sinkConfiguration=checkNotNull(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.sinkConfiguration=checkNotNull(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 100,
      "startColumnNumber" : 8,
      "endLineNumber" : 100,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 32
      },
      "nodeContext" : "this.serializationSchema",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 68
      },
      "nodeContext" : "this.serializationSchema=checkNotNull(serializationSchema)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 69
      },
      "nodeContext" : "this.serializationSchema=checkNotNull(serializationSchema);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 69
      },
      "nodeContext" : "this.serializationSchema=checkNotNull(serializationSchema);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 8,
      "endLineNumber" : 101,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.metadataListener",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.metadataListener=checkNotNull(metadataListener)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.metadataListener=checkNotNull(metadataListener);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.metadataListener=checkNotNull(metadataListener);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 102,
      "startColumnNumber" : 8,
      "endLineNumber" : 102,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 24
      },
      "nodeContext" : "this.topicRouter",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.topicRouter=checkNotNull(topicRouter)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.topicRouter=checkNotNull(topicRouter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.topicRouter=checkNotNull(topicRouter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 103,
      "startColumnNumber" : 8,
      "endLineNumber" : 103,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 27
      },
      "nodeContext" : "this.messageDelayer",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 58
      },
      "nodeContext" : "this.messageDelayer=checkNotNull(messageDelayer)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.messageDelayer=checkNotNull(messageDelayer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.messageDelayer=checkNotNull(messageDelayer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 106,
      "startColumnNumber" : 8,
      "endLineNumber" : 106,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 30
      },
      "nodeContext" : "this.deliveryGuarantee",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 73
      },
      "nodeContext" : "this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 74
      },
      "nodeContext" : "this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 74
      },
      "nodeContext" : "this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 107,
      "startColumnNumber" : 8,
      "endLineNumber" : 107,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 24
      },
      "nodeContext" : "this.sinkContext",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 84
      },
      "nodeContext" : "this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 85
      },
      "nodeContext" : "this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 85
      },
      "nodeContext" : "this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 108,
      "startColumnNumber" : 8,
      "endLineNumber" : 108,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 28
      },
      "nodeContext" : "this.mailboxExecutor",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.mailboxExecutor=initContext.getMailboxExecutor()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.mailboxExecutor=initContext.getMailboxExecutor();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.mailboxExecutor=initContext.getMailboxExecutor();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 113,
      "startColumnNumber" : 8,
      "endLineNumber" : 113,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.metadataListener",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 66
      },
      "nodeContext" : "this.metadataListener.open(sinkConfiguration,timeService)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.metadataListener.open(sinkConfiguration,timeService);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.metadataListener.open(sinkConfiguration,timeService);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 116,
      "startColumnNumber" : 8,
      "endLineNumber" : 116,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 24
      },
      "nodeContext" : "this.topicRouter",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.topicRouter.open(sinkConfiguration)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.topicRouter.open(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.topicRouter.open(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 122,
      "startColumnNumber" : 12,
      "endLineNumber" : 122,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 36
      },
      "nodeContext" : "this.serializationSchema",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 97
      },
      "nodeContext" : "this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n  this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n  this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n}\n catch (Exception e) {\n  throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 97
      },
      "nodeContext" : "this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 128,
      "startColumnNumber" : 8,
      "endLineNumber" : 128,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.producerRegister",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.producerRegister=new TopicProducerRegister(sinkConfiguration)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 98,
        "startColumnNumber" : 37,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor creating a Pulsar writer. <p>It will throw a  {@link RuntimeException} if {@link PulsarSerializationSchema#open(InitializationContext,PulsarSinkContext,SinkConfiguration)}fails.\n * @param sinkConfiguration The configuration to configure the Pulsar producer.\n * @param serializationSchema Transform the incoming records into different message properties.\n * @param metadataListener The listener for querying topic metadata.\n * @param topicRouter Topic router to choose topic by incoming records.\n * @param initContext Context to provide information about the runtime environment.\n */\npublic PulsarWriter(SinkConfiguration sinkConfiguration,PulsarSerializationSchema<IN> serializationSchema,TopicMetadataListener metadataListener,TopicRouter<IN> topicRouter,MessageDelayer<IN> messageDelayer,InitContext initContext){\n  this.sinkConfiguration=checkNotNull(sinkConfiguration);\n  this.serializationSchema=checkNotNull(serializationSchema);\n  this.metadataListener=checkNotNull(metadataListener);\n  this.topicRouter=checkNotNull(topicRouter);\n  this.messageDelayer=checkNotNull(messageDelayer);\n  checkNotNull(initContext);\n  this.deliveryGuarantee=sinkConfiguration.getDeliveryGuarantee();\n  this.sinkContext=new PulsarSinkContextImpl(initContext,sinkConfiguration);\n  this.mailboxExecutor=initContext.getMailboxExecutor();\n  LOG.debug(\"Initialize topic metadata after creating Pulsar writer.\");\n  ProcessingTimeService timeService=initContext.getProcessingTimeService();\n  this.metadataListener.open(sinkConfiguration,timeService);\n  this.topicRouter.open(sinkConfiguration);\n  try {\n    InitializationContext initializationContext=initContext.asSerializationSchemaInitializationContext();\n    this.serializationSchema.open(initializationContext,sinkContext,sinkConfiguration);\n  }\n catch (  Exception e) {\n    throw new FlinkRuntimeException(\"Cannot initialize schema.\",e);\n  }\n  this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "this.producerRegister=new TopicProducerRegister(sinkConfiguration);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.pulsar.sink.writer.PulsarWriter<IN>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 99,
    "startColumnNumber" : 8,
    "endLineNumber" : 99,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 100,
    "startColumnNumber" : 8,
    "endLineNumber" : 100,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 8,
    "endLineNumber" : 101,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 102,
    "startColumnNumber" : 8,
    "endLineNumber" : 102,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 103,
    "startColumnNumber" : 8,
    "endLineNumber" : 103,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 106,
    "startColumnNumber" : 8,
    "endLineNumber" : 106,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 107,
    "startColumnNumber" : 8,
    "endLineNumber" : 107,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 108,
    "startColumnNumber" : 8,
    "endLineNumber" : 108,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 113,
    "startColumnNumber" : 8,
    "endLineNumber" : 113,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 116,
    "startColumnNumber" : 8,
    "endLineNumber" : 116,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 122,
    "startColumnNumber" : 12,
    "endLineNumber" : 122,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 128,
    "startColumnNumber" : 8,
    "endLineNumber" : 128,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  } ]
}