{
  "id" : 105,
  "expression" : "requestForResponse",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "26fd11dd77690df0cee6b8ba4274e8db887db616",
  "filePath" : "hystrix-core/src/main/java/com/netflix/hystrix/HystrixObservableCollapser.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestForResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 189,
      "startColumnNumber" : 32,
      "endLineNumber" : 189,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 189,
        "startColumnNumber" : 32,
        "endLineNumber" : 189,
        "endColumnNumber" : 58
      },
      "nodeContext" : "requestForResponse != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 189,
        "startColumnNumber" : 28,
        "endLineNumber" : 195,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (requestForResponse != null) {\n  requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n  seenKeys.add(responseKey);\n}\n else {\n  logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 186,
        "startColumnNumber" : 28,
        "endLineNumber" : 196,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  K responseKey=batchResponseKeySelector.call(batchReturnType);\n  CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n  if (requestForResponse != null) {\n    requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n    seenKeys.add(responseKey);\n  }\n else {\n    logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 186,
        "startColumnNumber" : 24,
        "endLineNumber" : 198,
        "endColumnNumber" : 25
      },
      "nodeContext" : "try {\n  K responseKey=batchResponseKeySelector.call(batchReturnType);\n  CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n  if (requestForResponse != null) {\n    requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n    seenKeys.add(responseKey);\n  }\n else {\n    logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n  }\n}\n catch (Throwable ex) {\n  logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 185,
        "startColumnNumber" : 70,
        "endLineNumber" : 199,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  try {\n    K responseKey=batchResponseKeySelector.call(batchReturnType);\n    CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n    if (requestForResponse != null) {\n      requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n      seenKeys.add(responseKey);\n    }\n else {\n      logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n    }\n  }\n catch (  Throwable ex) {\n    logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 184,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public void call(BatchReturnType batchReturnType){\n  try {\n    K responseKey=batchResponseKeySelector.call(batchReturnType);\n    CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n    if (requestForResponse != null) {\n      requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n      seenKeys.add(responseKey);\n    }\n else {\n      logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n    }\n  }\n catch (  Throwable ex) {\n    logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 189,
        "startColumnNumber" : 32,
        "endLineNumber" : 189,
        "endColumnNumber" : 58
      },
      "nodeContext" : "requestForResponse != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixCollapser.CollapsedRequest<ResponseType,RequestArgumentType>"
  }, {
    "nodeContext" : "requestForResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 190,
      "startColumnNumber" : 32,
      "endLineNumber" : 190,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 190,
        "startColumnNumber" : 32,
        "endLineNumber" : 190,
        "endColumnNumber" : 113
      },
      "nodeContext" : "requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 190,
        "startColumnNumber" : 32,
        "endLineNumber" : 190,
        "endColumnNumber" : 114
      },
      "nodeContext" : "requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 189,
        "startColumnNumber" : 60,
        "endLineNumber" : 193,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n  seenKeys.add(responseKey);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 189,
        "startColumnNumber" : 28,
        "endLineNumber" : 195,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (requestForResponse != null) {\n  requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n  seenKeys.add(responseKey);\n}\n else {\n  logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 186,
        "startColumnNumber" : 28,
        "endLineNumber" : 196,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  K responseKey=batchResponseKeySelector.call(batchReturnType);\n  CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n  if (requestForResponse != null) {\n    requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n    seenKeys.add(responseKey);\n  }\n else {\n    logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 186,
        "startColumnNumber" : 24,
        "endLineNumber" : 198,
        "endColumnNumber" : 25
      },
      "nodeContext" : "try {\n  K responseKey=batchResponseKeySelector.call(batchReturnType);\n  CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n  if (requestForResponse != null) {\n    requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n    seenKeys.add(responseKey);\n  }\n else {\n    logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n  }\n}\n catch (Throwable ex) {\n  logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 185,
        "startColumnNumber" : 70,
        "endLineNumber" : 199,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  try {\n    K responseKey=batchResponseKeySelector.call(batchReturnType);\n    CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n    if (requestForResponse != null) {\n      requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n      seenKeys.add(responseKey);\n    }\n else {\n      logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n    }\n  }\n catch (  Throwable ex) {\n    logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 184,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public void call(BatchReturnType batchReturnType){\n  try {\n    K responseKey=batchResponseKeySelector.call(batchReturnType);\n    CollapsedRequest<ResponseType,RequestArgumentType> requestForResponse=requestsByKey.get(responseKey);\n    if (requestForResponse != null) {\n      requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n      seenKeys.add(responseKey);\n    }\n else {\n      logger.warn(\"Batch Response contained a response key not in request batch : \" + responseKey);\n    }\n  }\n catch (  Throwable ex) {\n    logger.warn(\"Uncaught error during demultiplexing of BatchResponse\",ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 190,
        "startColumnNumber" : 32,
        "endLineNumber" : 190,
        "endColumnNumber" : 114
      },
      "nodeContext" : "requestForResponse.emitResponse(mapBatchTypeToResponseType.call(batchReturnType));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixCollapser.CollapsedRequest<ResponseType,RequestArgumentType>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 189,
    "startColumnNumber" : 32,
    "endLineNumber" : 189,
    "endColumnNumber" : 50
  }, {
    "charLength" : 18,
    "startLineNumber" : 190,
    "startColumnNumber" : 32,
    "endLineNumber" : 190,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}