{
  "id" : 30,
  "expression" : "vals",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "58ad281d635c4d8d9aa79f3c7a83b82a66cd8216",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 255,
      "startColumnNumber" : 28,
      "endLineNumber" : 255,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 255,
        "startColumnNumber" : 28,
        "endLineNumber" : 255,
        "endColumnNumber" : 40
      },
      "nodeContext" : "vals == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 255,
        "startColumnNumber" : 28,
        "endLineNumber" : 255,
        "endColumnNumber" : 40
      },
      "nodeContext" : "vals == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float[]"
  }, {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 262,
      "startColumnNumber" : 60,
      "endLineNumber" : 262,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 262,
        "startColumnNumber" : 60,
        "endLineNumber" : 262,
        "endColumnNumber" : 71
      },
      "nodeContext" : "vals.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 262,
        "startColumnNumber" : 60,
        "endLineNumber" : 262,
        "endColumnNumber" : 75
      },
      "nodeContext" : "vals.length * 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 262,
        "startColumnNumber" : 50,
        "endLineNumber" : 262,
        "endColumnNumber" : 76
      },
      "nodeContext" : "new float[vals.length * 2]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 262,
        "startColumnNumber" : 36,
        "endLineNumber" : 262,
        "endColumnNumber" : 76
      },
      "nodeContext" : "transformed=new float[vals.length * 2]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 262,
        "startColumnNumber" : 28,
        "endLineNumber" : 262,
        "endColumnNumber" : 77
      },
      "nodeContext" : "float[] transformed=new float[vals.length * 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 262,
        "startColumnNumber" : 28,
        "endLineNumber" : 262,
        "endColumnNumber" : 77
      },
      "nodeContext" : "float[] transformed=new float[vals.length * 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float[]"
  }, {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 268,
      "startColumnNumber" : 39,
      "endLineNumber" : 268,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 268,
        "startColumnNumber" : 39,
        "endLineNumber" : 268,
        "endColumnNumber" : 48
      },
      "nodeContext" : "vals[cnt]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 268,
        "startColumnNumber" : 32,
        "endLineNumber" : 268,
        "endColumnNumber" : 48
      },
      "nodeContext" : "add-=vals[cnt]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 268,
        "startColumnNumber" : 32,
        "endLineNumber" : 268,
        "endColumnNumber" : 49
      },
      "nodeContext" : "add-=vals[cnt];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 266,
        "startColumnNumber" : 76,
        "endLineNumber" : 271,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  add-=vals[cnt];\n  transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n  cnt++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 266,
        "startColumnNumber" : 28,
        "endLineNumber" : 271,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (int k=0; k < transformed.length; k+=2) {\n  add-=vals[cnt];\n  transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n  cnt++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 268,
        "startColumnNumber" : 32,
        "endLineNumber" : 268,
        "endColumnNumber" : 49
      },
      "nodeContext" : "add-=vals[cnt];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float[]"
  }, {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 269,
      "startColumnNumber" : 54,
      "endLineNumber" : 269,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 269,
        "startColumnNumber" : 54,
        "endLineNumber" : 269,
        "endColumnNumber" : 63
      },
      "nodeContext" : "vals[cnt]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 269,
        "startColumnNumber" : 54,
        "endLineNumber" : 269,
        "endColumnNumber" : 69
      },
      "nodeContext" : "vals[cnt] + add",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 269,
        "startColumnNumber" : 53,
        "endLineNumber" : 269,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(vals[cnt] + add)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 269,
        "startColumnNumber" : 53,
        "endLineNumber" : 269,
        "endColumnNumber" : 94
      },
      "nodeContext" : "(vals[cnt] + add) * mAnimator.getPhaseY()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 269,
        "startColumnNumber" : 32,
        "endLineNumber" : 269,
        "endColumnNumber" : 94
      },
      "nodeContext" : "transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 269,
        "startColumnNumber" : 32,
        "endLineNumber" : 269,
        "endColumnNumber" : 95
      },
      "nodeContext" : "transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 266,
        "startColumnNumber" : 76,
        "endLineNumber" : 271,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  add-=vals[cnt];\n  transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n  cnt++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 266,
        "startColumnNumber" : 28,
        "endLineNumber" : 271,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (int k=0; k < transformed.length; k+=2) {\n  add-=vals[cnt];\n  transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n  cnt++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 269,
        "startColumnNumber" : 32,
        "endLineNumber" : 269,
        "endColumnNumber" : 95
      },
      "nodeContext" : "transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "float[]"
  }, {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 277,
      "startColumnNumber" : 45,
      "endLineNumber" : 277,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 277,
        "startColumnNumber" : 45,
        "endLineNumber" : 277,
        "endColumnNumber" : 56
      },
      "nodeContext" : "vals[k / 2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 93
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 94
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 275,
        "startColumnNumber" : 76,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 275,
        "startColumnNumber" : 28,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (int k=0; k < transformed.length; k+=2) {\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 277,
        "startColumnNumber" : 45,
        "endLineNumber" : 277,
        "endColumnNumber" : 56
      },
      "nodeContext" : "vals[k / 2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "float[]"
  }, {
    "nodeContext" : "vals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 279,
      "startColumnNumber" : 51,
      "endLineNumber" : 279,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 279,
        "startColumnNumber" : 51,
        "endLineNumber" : 279,
        "endColumnNumber" : 62
      },
      "nodeContext" : "vals[k / 2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 279,
        "startColumnNumber" : 51,
        "endLineNumber" : 279,
        "endColumnNumber" : 67
      },
      "nodeContext" : "vals[k / 2] >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 279,
        "startColumnNumber" : 51,
        "endLineNumber" : 279,
        "endColumnNumber" : 91
      },
      "nodeContext" : "vals[k / 2] >= 0 ? posOffset : negOffset",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 279,
        "startColumnNumber" : 50,
        "endLineNumber" : 279,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(vals[k / 2] >= 0 ? posOffset : negOffset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 278,
        "startColumnNumber" : 40,
        "endLineNumber" : 279,
        "endColumnNumber" : 92
      },
      "nodeContext" : "transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 93
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 94
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 275,
        "startColumnNumber" : 76,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 275,
        "startColumnNumber" : 28,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (int k=0; k < transformed.length; k+=2) {\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 279,
        "startColumnNumber" : 50,
        "endLineNumber" : 279,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(vals[k / 2] >= 0 ? posOffset : negOffset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float[]"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 255,
    "startColumnNumber" : 28,
    "endLineNumber" : 255,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 262,
    "startColumnNumber" : 60,
    "endLineNumber" : 262,
    "endColumnNumber" : 64
  }, {
    "charLength" : 4,
    "startLineNumber" : 268,
    "startColumnNumber" : 39,
    "endLineNumber" : 268,
    "endColumnNumber" : 43
  }, {
    "charLength" : 4,
    "startLineNumber" : 269,
    "startColumnNumber" : 54,
    "endLineNumber" : 269,
    "endColumnNumber" : 58
  }, {
    "charLength" : 4,
    "startLineNumber" : 277,
    "startColumnNumber" : 45,
    "endLineNumber" : 277,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 279,
    "startColumnNumber" : 51,
    "endLineNumber" : 279,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  } ]
}