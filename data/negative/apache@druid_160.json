{
  "id" : 160,
  "expression" : "new Statement(){\n  @Override public void evaluate() throws Throwable {\n    clearRecordedQueries();\n    final Consumer<Object> function=query -> {\n      try {\n        recordedQueries.add((Query)query);\n        log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n      }\n catch (      Exception e) {\n        log.warn(e,\"Failed to serialize query: %s\",query);\n      }\n    }\n;\n    try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n      base.evaluate();\n    }\n   }\n}\n",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/test/java/org/apache/druid/sql/calcite/util/QueryLogHook.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Statement(){\n  @Override public void evaluate() throws Throwable {\n    clearRecordedQueries();\n    final Consumer<Object> function=query -> {\n      try {\n        recordedQueries.add((Query)query);\n        log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n      }\n catch (      Exception e) {\n        log.warn(e,\"Failed to serialize query: %s\",query);\n      }\n    }\n;\n    try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n      base.evaluate();\n    }\n   }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 662,
      "startLineNumber" : 74,
      "startColumnNumber" : 11,
      "endLineNumber" : 98,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 83,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 6
      },
      "nodeContext" : "return new Statement(){\n  @Override public void evaluate() throws Throwable {\n    clearRecordedQueries();\n    final Consumer<Object> function=query -> {\n      try {\n        recordedQueries.add((Query)query);\n        log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n      }\n catch (      Exception e) {\n        log.warn(e,\"Failed to serialize query: %s\",query);\n      }\n    }\n;\n    try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n      base.evaluate();\n    }\n   }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 84,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new Statement(){\n    @Override public void evaluate() throws Throwable {\n      clearRecordedQueries();\n      final Consumer<Object> function=query -> {\n        try {\n          recordedQueries.add((Query)query);\n          log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n        }\n catch (        Exception e) {\n          log.warn(e,\"Failed to serialize query: %s\",query);\n        }\n      }\n;\n      try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n        base.evaluate();\n      }\n     }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Statement apply(final Statement base,final Description description){\n  return new Statement(){\n    @Override public void evaluate() throws Throwable {\n      clearRecordedQueries();\n      final Consumer<Object> function=query -> {\n        try {\n          recordedQueries.add((Query)query);\n          log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n        }\n catch (        Exception e) {\n          log.warn(e,\"Failed to serialize query: %s\",query);\n        }\n      }\n;\n      try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n        base.evaluate();\n      }\n     }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 6
      },
      "nodeContext" : "return new Statement(){\n  @Override public void evaluate() throws Throwable {\n    clearRecordedQueries();\n    final Consumer<Object> function=query -> {\n      try {\n        recordedQueries.add((Query)query);\n        log.info(\"Issued query: %s\",objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(query));\n      }\n catch (      Exception e) {\n        log.warn(e,\"Failed to serialize query: %s\",query);\n      }\n    }\n;\n    try (final Hook.Closeable unhook=Hook.QUERY_PLAN.add(function)){\n      base.evaluate();\n    }\n   }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 84,
      "astHeight" : 16
    },
    "tokenLength" : 41,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 662,
    "startLineNumber" : 74,
    "startColumnNumber" : 11,
    "endLineNumber" : 98,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ ]
}