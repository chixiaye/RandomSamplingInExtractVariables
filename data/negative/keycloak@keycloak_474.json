{
  "id" : 474,
  "expression" : "importDir",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/ImportRealmMixin.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "importDir",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 48,
      "startColumnNumber" : 12,
      "endLineNumber" : 48,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 30
      },
      "nodeContext" : "importDir.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (importDir.exists()) {\n  for (  File realmFile : importDir.listFiles()) {\n    filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 39,
        "startColumnNumber" : 50,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder filesToImport=new StringBuilder(Optional.ofNullable(realmFiles).orElse(\"\"));\n  if (filesToImport.length() > 0) {\n    throw new CommandLine.ParameterException(spec.commandLine(),\"Instead of manually specifying the files to import, just copy them to the 'data/import' directory.\");\n  }\n  File importDir=Environment.getHomePath().resolve(\"data\").resolve(\"import\").toFile();\n  if (importDir.exists()) {\n    for (    File realmFile : importDir.listFiles()) {\n      filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n    }\n  }\n  System.setProperty(\"keycloak.import\",filesToImport.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@CommandLine.Option(names=IMPORT_REALM,description=\"Import realms during startup by reading any realm configuration file from the 'data/import' directory.\",paramLabel=NO_PARAM_LABEL,arity=\"0\") public void setImportRealm(String realmFiles){\n  StringBuilder filesToImport=new StringBuilder(Optional.ofNullable(realmFiles).orElse(\"\"));\n  if (filesToImport.length() > 0) {\n    throw new CommandLine.ParameterException(spec.commandLine(),\"Instead of manually specifying the files to import, just copy them to the 'data/import' directory.\");\n  }\n  File importDir=Environment.getHomePath().resolve(\"data\").resolve(\"import\").toFile();\n  if (importDir.exists()) {\n    for (    File realmFile : importDir.listFiles()) {\n      filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n    }\n  }\n  System.setProperty(\"keycloak.import\",filesToImport.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 30
      },
      "nodeContext" : "importDir.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "importDir",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 49,
      "startColumnNumber" : 34,
      "endLineNumber" : 49,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "importDir.listFiles()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (File realmFile : importDir.listFiles()) {\n  filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 48,
        "startColumnNumber" : 32,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  File realmFile : importDir.listFiles()) {\n    filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (importDir.exists()) {\n  for (  File realmFile : importDir.listFiles()) {\n    filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 39,
        "startColumnNumber" : 50,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder filesToImport=new StringBuilder(Optional.ofNullable(realmFiles).orElse(\"\"));\n  if (filesToImport.length() > 0) {\n    throw new CommandLine.ParameterException(spec.commandLine(),\"Instead of manually specifying the files to import, just copy them to the 'data/import' directory.\");\n  }\n  File importDir=Environment.getHomePath().resolve(\"data\").resolve(\"import\").toFile();\n  if (importDir.exists()) {\n    for (    File realmFile : importDir.listFiles()) {\n      filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n    }\n  }\n  System.setProperty(\"keycloak.import\",filesToImport.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@CommandLine.Option(names=IMPORT_REALM,description=\"Import realms during startup by reading any realm configuration file from the 'data/import' directory.\",paramLabel=NO_PARAM_LABEL,arity=\"0\") public void setImportRealm(String realmFiles){\n  StringBuilder filesToImport=new StringBuilder(Optional.ofNullable(realmFiles).orElse(\"\"));\n  if (filesToImport.length() > 0) {\n    throw new CommandLine.ParameterException(spec.commandLine(),\"Instead of manually specifying the files to import, just copy them to the 'data/import' directory.\");\n  }\n  File importDir=Environment.getHomePath().resolve(\"data\").resolve(\"import\").toFile();\n  if (importDir.exists()) {\n    for (    File realmFile : importDir.listFiles()) {\n      filesToImport.append(realmFile.getAbsolutePath()).append(\",\");\n    }\n  }\n  System.setProperty(\"keycloak.import\",filesToImport.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "importDir.listFiles()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 48,
    "startColumnNumber" : 12,
    "endLineNumber" : 48,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 49,
    "startColumnNumber" : 34,
    "endLineNumber" : 49,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}