{
  "id" : 133,
  "expression" : "this",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "4cacf1146253b99caf0b9176ba85d3cbb2d02221",
  "filePath" : "collector/src/main/java/com/navercorp/pinpoint/collector/dao/hbase/HbaseTraceDaoV2.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 30,
      "endLineNumber" : 77,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 77,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.rowKeyEncoder",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 77,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.rowKeyEncoder.encodeRowKey(transactionId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 77,
        "startColumnNumber" : 21,
        "endLineNumber" : 77,
        "endColumnNumber" : 76
      },
      "nodeContext" : "rowKey=this.rowKeyEncoder.encodeRowKey(transactionId)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 77
      },
      "nodeContext" : "final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 74,
        "startColumnNumber" : 57,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertSpanChunk(SpanChunkBo spanChunkBo){\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 77
      },
      "nodeContext" : "final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.collector.dao.hbase.HbaseTraceDaoV2"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 87,
      "startColumnNumber" : 8,
      "endLineNumber" : 87,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "this.spanChunkSerializer",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 66
      },
      "nodeContext" : "this.spanChunkSerializer.serialize(spanChunkBo,put,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 74,
        "startColumnNumber" : 57,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertSpanChunk(SpanChunkBo spanChunkBo){\n  TransactionId transactionId=spanChunkBo.getTransactionId();\n  final byte[] rowKey=this.rowKeyEncoder.encodeRowKey(transactionId);\n  final long acceptedTime=spanChunkBo.getCollectorAcceptTime();\n  final Put put=new Put(rowKey,acceptedTime);\n  final List<SpanEventBo> spanEventBoList=spanChunkBo.getSpanEventBoList();\n  if (CollectionUtils.isEmpty(spanEventBoList)) {\n    return;\n  }\n  this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n  if (!put.isEmpty()) {\n    boolean success=hbaseTemplate.asyncPut(TRACE_V2,put);\n    if (!success) {\n      hbaseTemplate.put(TRACE_V2,put);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.spanChunkSerializer.serialize(spanChunkBo,put,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.collector.dao.hbase.HbaseTraceDaoV2"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 30,
    "endLineNumber" : 77,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 87,
    "startColumnNumber" : 8,
    "endLineNumber" : 87,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}