{
  "id" : 450,
  "expression" : "msgs.size() == 1",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "msgs.size() == 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 69,
      "startColumnNumber" : 16,
      "endLineNumber" : 69,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (msgs.size() == 1) {\n  ctx.tellSuccess(msgs.get(0));\n}\n else {\n  TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n    @Override public void onSuccess(){\n      ctx.ack(msg);\n    }\n    @Override public void onFailure(    RuleEngineException e){\n      ctx.tellFailure(msg,e);\n    }\n  }\n);\n  msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 68,
        "startColumnNumber" : 45,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (msgs.size() == 1) {\n    ctx.tellSuccess(msgs.get(0));\n  }\n else {\n    TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n      @Override public void onSuccess(){\n        ctx.ack(msg);\n      }\n      @Override public void onFailure(      RuleEngineException e){\n        ctx.tellFailure(msg,e);\n      }\n    }\n);\n    msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msgs != null && !msgs.isEmpty()) {\n  if (msgs.size() == 1) {\n    ctx.tellSuccess(msgs.get(0));\n  }\n else {\n    TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n      @Override public void onSuccess(){\n        ctx.ack(msg);\n      }\n      @Override public void onFailure(      RuleEngineException e){\n        ctx.tellFailure(msg,e);\n      }\n    }\n);\n    msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n  }\n}\n else {\n  ctx.tellNext(msg,FAILURE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 67,
        "startColumnNumber" : 80,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msgs != null && !msgs.isEmpty()) {\n    if (msgs.size() == 1) {\n      ctx.tellSuccess(msgs.get(0));\n    }\n else {\n      TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n        @Override public void onSuccess(){\n          ctx.ack(msg);\n        }\n        @Override public void onFailure(        RuleEngineException e){\n          ctx.tellFailure(msg,e);\n        }\n      }\n);\n      msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n    }\n  }\n else {\n    ctx.tellNext(msg,FAILURE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void transformSuccess(TbContext ctx,TbMsg msg,List<TbMsg> msgs){\n  if (msgs != null && !msgs.isEmpty()) {\n    if (msgs.size() == 1) {\n      ctx.tellSuccess(msgs.get(0));\n    }\n else {\n      TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n        @Override public void onSuccess(){\n          ctx.ack(msg);\n        }\n        @Override public void onFailure(        RuleEngineException e){\n          ctx.tellFailure(msg,e);\n        }\n      }\n);\n      msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n    }\n  }\n else {\n    ctx.tellNext(msg,FAILURE);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (msgs.size() == 1) {\n  ctx.tellSuccess(msgs.get(0));\n}\n else {\n  TbMsgCallbackWrapper wrapper=new MultipleTbMsgsCallbackWrapper(msgs.size(),new TbMsgCallback(){\n    @Override public void onSuccess(){\n      ctx.ack(msg);\n    }\n    @Override public void onFailure(    RuleEngineException e){\n      ctx.tellFailure(msg,e);\n    }\n  }\n);\n  msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg,\"Success\",wrapper::onSuccess,wrapper::onFailure));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 12
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 69,
    "startColumnNumber" : 16,
    "endLineNumber" : 69,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}