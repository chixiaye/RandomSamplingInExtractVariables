{
  "id" : 441,
  "expression" : "3000",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context-support/src/test/java/org/springframework/scheduling/quartz/QuartzSupportTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 329,
      "startColumnNumber" : 15,
      "endLineNumber" : 329,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 329,
        "startColumnNumber" : 2,
        "endLineNumber" : 329,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Thread.sleep(3000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 329,
        "startColumnNumber" : 2,
        "endLineNumber" : 329,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Thread.sleep(3000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 326,
        "startColumnNumber" : 80,
        "endLineNumber" : 342,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assume.group(TestGroup.PERFORMANCE);\n  ClassPathXmlApplicationContext ctx=context(\"multipleAnonymousMethodInvokingJobDetailFB.xml\");\n  Thread.sleep(3000);\n  try {\n    QuartzTestBean exportService=(QuartzTestBean)ctx.getBean(\"exportService\");\n    QuartzTestBean importService=(QuartzTestBean)ctx.getBean(\"importService\");\n    assertEquals(\"doImport called exportService\",0,exportService.getImportCount());\n    assertEquals(\"doExport not called on exportService\",2,exportService.getExportCount());\n    assertEquals(\"doImport not called on importService\",2,importService.getImportCount());\n    assertEquals(\"doExport called on importService\",0,importService.getExportCount());\n  }\n  finally {\n    ctx.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 813,
        "startLineNumber" : 325,
        "startColumnNumber" : 1,
        "endLineNumber" : 342,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void twoAnonymousMethodInvokingJobDetailFactoryBeans() throws Exception {\n  Assume.group(TestGroup.PERFORMANCE);\n  ClassPathXmlApplicationContext ctx=context(\"multipleAnonymousMethodInvokingJobDetailFB.xml\");\n  Thread.sleep(3000);\n  try {\n    QuartzTestBean exportService=(QuartzTestBean)ctx.getBean(\"exportService\");\n    QuartzTestBean importService=(QuartzTestBean)ctx.getBean(\"importService\");\n    assertEquals(\"doImport called exportService\",0,exportService.getImportCount());\n    assertEquals(\"doExport not called on exportService\",2,exportService.getExportCount());\n    assertEquals(\"doImport not called on importService\",2,importService.getImportCount());\n    assertEquals(\"doExport called on importService\",0,importService.getExportCount());\n  }\n  finally {\n    ctx.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 329,
        "startColumnNumber" : 2,
        "endLineNumber" : 329,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Thread.sleep(3000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 329,
    "startColumnNumber" : 15,
    "endLineNumber" : 329,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}