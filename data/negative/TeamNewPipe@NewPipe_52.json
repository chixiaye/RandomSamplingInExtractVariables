{
  "id" : 52,
  "expression" : "(visibleBottomBorder + fourLines)",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/views/LargeTextMovementMethod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(visibleBottomBorder + fourLines)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 252,
      "startColumnNumber" : 44,
      "endLineNumber" : 252,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 252,
        "startColumnNumber" : 38,
        "endLineNumber" : 252,
        "endColumnNumber" : 77
      },
      "nodeContext" : "(int)(visibleBottomBorder + fourLines)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 252,
        "startColumnNumber" : 29,
        "endLineNumber" : 252,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Math.min((int)(visibleBottomBorder + fourLines),view.getHeight())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 252,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 96
      },
      "nodeContext" : "visibleRect.bottom=Math.min((int)(visibleBottomBorder + fourLines),view.getHeight())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 252,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 97
      },
      "nodeContext" : "visibleRect.bottom=Math.min((int)(visibleBottomBorder + fourLines),view.getHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2633,
        "startLineNumber" : 186,
        "startColumnNumber" : 74,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Layout layout=view.getLayout();\n  if (layout == null) {\n    return false;\n  }\n  View root=findScrollableParent(view);\n  int rootHeight=root.getHeight();\n  if (visibleRect.bottom <= rootHeight) {\n    return false;\n  }\n  int bottomExtra=visibleRect.bottom - rootHeight;\n  int visibleBottomBorder=view.getHeight() - bottomExtra;\n  int lineCount=layout.getLineCount();\n  int lastVisibleLineNumber=layout.getLineForVertical(visibleBottomBorder);\n  int visibleEnd=lastVisibleLineNumber == lineCount - 1 ? buffer.length() : layout.getLineEnd(lastVisibleLineNumber - 1);\n  ClickableSpan[] candidates=buffer.getSpans(0,visibleEnd,ClickableSpan.class);\n  if (candidates.length != 0) {\n    int a=Selection.getSelectionStart(buffer);\n    int b=Selection.getSelectionEnd(buffer);\n    int selStart=Math.min(a,b);\n    int selEnd=Math.max(a,b);\n    int bestStart=Integer.MAX_VALUE;\n    int bestEnd=Integer.MAX_VALUE;\n    for (int i=0; i < candidates.length; i++) {\n      int start=buffer.getSpanStart(candidates[i]);\n      int end=buffer.getSpanEnd(candidates[i]);\n      if ((start > selStart || selStart == selEnd) && end <= visibleEnd) {\n        if (start < bestStart) {\n          bestStart=start;\n          bestEnd=buffer.getSpanEnd(candidates[i]);\n        }\n      }\n    }\n    if (bestEnd < Integer.MAX_VALUE) {\n      Selection.setSelection(buffer,bestStart,bestEnd);\n      return true;\n    }\n  }\n  float fourLines=view.getTextSize() * 4;\n  visibleRect.left=0;\n  visibleRect.right=view.getWidth();\n  visibleRect.bottom=Math.min((int)(visibleBottomBorder + fourLines),view.getHeight());\n  visibleRect.top=visibleRect.bottom - rootHeight;\n  return view.requestRectangleOnScreen(visibleRect);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 299,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2703,
        "startLineNumber" : 186,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean gotoNext(final TextView view,final Spannable buffer){\n  Layout layout=view.getLayout();\n  if (layout == null) {\n    return false;\n  }\n  View root=findScrollableParent(view);\n  int rootHeight=root.getHeight();\n  if (visibleRect.bottom <= rootHeight) {\n    return false;\n  }\n  int bottomExtra=visibleRect.bottom - rootHeight;\n  int visibleBottomBorder=view.getHeight() - bottomExtra;\n  int lineCount=layout.getLineCount();\n  int lastVisibleLineNumber=layout.getLineForVertical(visibleBottomBorder);\n  int visibleEnd=lastVisibleLineNumber == lineCount - 1 ? buffer.length() : layout.getLineEnd(lastVisibleLineNumber - 1);\n  ClickableSpan[] candidates=buffer.getSpans(0,visibleEnd,ClickableSpan.class);\n  if (candidates.length != 0) {\n    int a=Selection.getSelectionStart(buffer);\n    int b=Selection.getSelectionEnd(buffer);\n    int selStart=Math.min(a,b);\n    int selEnd=Math.max(a,b);\n    int bestStart=Integer.MAX_VALUE;\n    int bestEnd=Integer.MAX_VALUE;\n    for (int i=0; i < candidates.length; i++) {\n      int start=buffer.getSpanStart(candidates[i]);\n      int end=buffer.getSpanEnd(candidates[i]);\n      if ((start > selStart || selStart == selEnd) && end <= visibleEnd) {\n        if (start < bestStart) {\n          bestStart=start;\n          bestEnd=buffer.getSpanEnd(candidates[i]);\n        }\n      }\n    }\n    if (bestEnd < Integer.MAX_VALUE) {\n      Selection.setSelection(buffer,bestStart,bestEnd);\n      return true;\n    }\n  }\n  float fourLines=view.getTextSize() * 4;\n  visibleRect.left=0;\n  visibleRect.right=view.getWidth();\n  visibleRect.bottom=Math.min((int)(visibleBottomBorder + fourLines),view.getHeight());\n  visibleRect.top=visibleRect.bottom - rootHeight;\n  return view.requestRectangleOnScreen(visibleRect);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 313,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 252,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 97
      },
      "nodeContext" : "visibleRect.bottom=Math.min((int)(visibleBottomBorder + fourLines),view.getHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 252,
    "startColumnNumber" : 44,
    "endLineNumber" : 252,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}