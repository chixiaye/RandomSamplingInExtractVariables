{
  "id" : 287,
  "expression" : "url + \"-\" + this.unitName+ \"?nofix=1\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/namesrv/TopAddressing.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "url + \"-\" + this.unitName+ \"?nofix=1\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 71,
      "startColumnNumber" : 22,
      "endLineNumber" : 71,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 60
      },
      "nodeContext" : "url=url + \"-\" + this.unitName+ \"?nofix=1\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 61
      },
      "nodeContext" : "url=url + \"-\" + this.unitName+ \"?nofix=1\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 70,
        "startColumnNumber" : 49,
        "endLineNumber" : 72,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  url=url + \"-\" + this.unitName+ \"?nofix=1\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!UtilAll.isBlank(this.unitName)) {\n  url=url + \"-\" + this.unitName+ \"?nofix=1\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!UtilAll.isBlank(this.unitName)) {\n    url=url + \"-\" + this.unitName+ \"?nofix=1\";\n  }\n  HttpTinyClient.HttpResult result=HttpTinyClient.httpGet(url,null,null,\"UTF-8\",timeoutMills);\n  if (200 == result.code) {\n    String responseStr=result.content;\n    if (responseStr != null) {\n      return clearNewLine(responseStr);\n    }\n else {\n      log.error(\"fetch nameserver address is null\");\n    }\n  }\n else {\n    log.error(\"fetch nameserver address failed. statusCode=\" + result.code);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 819,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (!UtilAll.isBlank(this.unitName)) {\n    url=url + \"-\" + this.unitName+ \"?nofix=1\";\n  }\n  HttpTinyClient.HttpResult result=HttpTinyClient.httpGet(url,null,null,\"UTF-8\",timeoutMills);\n  if (200 == result.code) {\n    String responseStr=result.content;\n    if (responseStr != null) {\n      return clearNewLine(responseStr);\n    }\n else {\n      log.error(\"fetch nameserver address is null\");\n    }\n  }\n else {\n    log.error(\"fetch nameserver address failed. statusCode=\" + result.code);\n  }\n}\n catch (IOException e) {\n  if (verbose) {\n    log.error(\"fetch name server address exception\",e);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 67,
        "startColumnNumber" : 72,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String url=this.wsAddr;\n  try {\n    if (!UtilAll.isBlank(this.unitName)) {\n      url=url + \"-\" + this.unitName+ \"?nofix=1\";\n    }\n    HttpTinyClient.HttpResult result=HttpTinyClient.httpGet(url,null,null,\"UTF-8\",timeoutMills);\n    if (200 == result.code) {\n      String responseStr=result.content;\n      if (responseStr != null) {\n        return clearNewLine(responseStr);\n      }\n else {\n        log.error(\"fetch nameserver address is null\");\n      }\n    }\n else {\n      log.error(\"fetch nameserver address failed. statusCode=\" + result.code);\n    }\n  }\n catch (  IOException e) {\n    if (verbose) {\n      log.error(\"fetch name server address exception\",e);\n    }\n  }\n  if (verbose) {\n    String errorMsg=\"connect to \" + url + \" failed, maybe the domain name \"+ MixAll.getWSAddr()+ \" not bind in /etc/hosts\";\n    errorMsg+=FAQUrl.suggestTodo(FAQUrl.NAME_SERVER_ADDR_NOT_EXIST_URL);\n    log.warn(errorMsg);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public final String fetchNSAddr(boolean verbose,long timeoutMills){\n  String url=this.wsAddr;\n  try {\n    if (!UtilAll.isBlank(this.unitName)) {\n      url=url + \"-\" + this.unitName+ \"?nofix=1\";\n    }\n    HttpTinyClient.HttpResult result=HttpTinyClient.httpGet(url,null,null,\"UTF-8\",timeoutMills);\n    if (200 == result.code) {\n      String responseStr=result.content;\n      if (responseStr != null) {\n        return clearNewLine(responseStr);\n      }\n else {\n        log.error(\"fetch nameserver address is null\");\n      }\n    }\n else {\n      log.error(\"fetch nameserver address failed. statusCode=\" + result.code);\n    }\n  }\n catch (  IOException e) {\n    if (verbose) {\n      log.error(\"fetch name server address exception\",e);\n    }\n  }\n  if (verbose) {\n    String errorMsg=\"connect to \" + url + \" failed, maybe the domain name \"+ MixAll.getWSAddr()+ \" not bind in /etc/hosts\";\n    errorMsg+=FAQUrl.suggestTodo(FAQUrl.NAME_SERVER_ADDR_NOT_EXIST_URL);\n    log.warn(errorMsg);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 61
      },
      "nodeContext" : "url=url + \"-\" + this.unitName+ \"?nofix=1\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 71,
    "startColumnNumber" : 22,
    "endLineNumber" : 71,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}