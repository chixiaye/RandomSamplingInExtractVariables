{
  "id" : 76,
  "expression" : "curve1.getVertex()",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/ShapeData.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "curve1.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 77,
      "startColumnNumber" : 23,
      "endLineNumber" : 77,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 77,
        "startColumnNumber" : 13,
        "endLineNumber" : 77,
        "endColumnNumber" : 41
      },
      "nodeContext" : "vertex1=curve1.getVertex()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 42
      },
      "nodeContext" : "PointF vertex1=curve1.getVertex();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 42
      },
      "nodeContext" : "PointF vertex1=curve1.getVertex();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.airbnb.lottie.PointF"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 77,
    "startColumnNumber" : 23,
    "endLineNumber" : 77,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}