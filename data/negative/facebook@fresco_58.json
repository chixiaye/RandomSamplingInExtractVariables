{
  "id" : 58,
  "expression" : "ImageFormatChecker",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/AddImageTransformMetaDataProducerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ImageFormatChecker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 84,
      "startColumnNumber" : 9,
      "endLineNumber" : 84,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 84,
        "startColumnNumber" : 9,
        "endLineNumber" : 84,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 52
      },
      "nodeContext" : "when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class))).thenReturn(DefaultImageFormats.WEBP_SIMPLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 53
      },
      "nodeContext" : "when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class))).thenReturn(DefaultImageFormats.WEBP_SIMPLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 83,
        "startColumnNumber" : 43,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class))).thenReturn(DefaultImageFormats.WEBP_SIMPLE);\n  mAddMetaDataConsumer.onNewResult(mFinalResult,Consumer.IS_LAST);\n  ArgumentCaptor<EncodedImage> argumentCaptor=ArgumentCaptor.forClass(EncodedImage.class);\n  verify(mConsumer).onNewResult(argumentCaptor.capture(),eq(Consumer.IS_LAST));\n  EncodedImage encodedImage=argumentCaptor.getValue();\n  assertTrue(EncodedImage.isValid(encodedImage));\n  assertEquals(DefaultImageFormats.WEBP_SIMPLE,encodedImage.getImageFormat());\n  assertEquals(0,encodedImage.getRotationAngle());\n  assertEquals(-1,encodedImage.getWidth());\n  assertEquals(-1,encodedImage.getHeight());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testOnNewResultLastNotJpeg(){\n  when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class))).thenReturn(DefaultImageFormats.WEBP_SIMPLE);\n  mAddMetaDataConsumer.onNewResult(mFinalResult,Consumer.IS_LAST);\n  ArgumentCaptor<EncodedImage> argumentCaptor=ArgumentCaptor.forClass(EncodedImage.class);\n  verify(mConsumer).onNewResult(argumentCaptor.capture(),eq(Consumer.IS_LAST));\n  EncodedImage encodedImage=argumentCaptor.getValue();\n  assertTrue(EncodedImage.isValid(encodedImage));\n  assertEquals(DefaultImageFormats.WEBP_SIMPLE,encodedImage.getImageFormat());\n  assertEquals(0,encodedImage.getRotationAngle());\n  assertEquals(-1,encodedImage.getWidth());\n  assertEquals(-1,encodedImage.getHeight());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "when(ImageFormatChecker.getImageFormat_WrapIOException(any(InputStream.class)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.facebook.imageformat.ImageFormatChecker"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 84,
    "startColumnNumber" : 9,
    "endLineNumber" : 84,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}