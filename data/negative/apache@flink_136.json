{
  "id" : 136,
  "expression" : "\" concat_distinct STRING\\n\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/test/java/org/apache/flink/table/planner/plan/nodes/exec/stream/WindowAggregateJsonPlanTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" concat_distinct STRING\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 66,
      "startColumnNumber" : 26,
      "endLineNumber" : 66,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "sinkTableDdl=\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 55
      },
      "nodeContext" : "String sinkTableDdl=\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1239,
        "startLineNumber" : 56,
        "startColumnNumber" : 44,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tEnv.createFunction(\"concat_distinct_agg\",ConcatDistinctAggFunction.class);\n  String sinkTableDdl=\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\";\n  tEnv.executeSql(sinkTableDdl);\n  util.verifyJsonPlan(\"insert into MySink select\\n\" + \"  b,\\n\" + \"  window_start,\\n\"+ \"  window_end,\\n\"+ \"  COUNT(*),\\n\"+ \"  SUM(a),\\n\"+ \"  COUNT(DISTINCT c),\\n\"+ \"  concat_distinct_agg(c)\\n\"+ \"FROM TABLE(\\n\"+ \"   TUMBLE(TABLE MyTable, DESCRIPTOR(rowtime), INTERVAL '5' SECOND))\\n\"+ \"GROUP BY b, window_start, window_end\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testEventTimeTumbleWindow(){\n  tEnv.createFunction(\"concat_distinct_agg\",ConcatDistinctAggFunction.class);\n  String sinkTableDdl=\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\";\n  tEnv.executeSql(sinkTableDdl);\n  util.verifyJsonPlan(\"insert into MySink select\\n\" + \"  b,\\n\" + \"  window_start,\\n\"+ \"  window_end,\\n\"+ \"  COUNT(*),\\n\"+ \"  SUM(a),\\n\"+ \"  COUNT(DISTINCT c),\\n\"+ \"  concat_distinct_agg(c)\\n\"+ \"FROM TABLE(\\n\"+ \"   TUMBLE(TABLE MyTable, DESCRIPTOR(rowtime), INTERVAL '5' SECOND))\\n\"+ \"GROUP BY b, window_start, window_end\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "\"CREATE TABLE MySink (\\n\" + \" b BIGINT,\\n\" + \" window_start TIMESTAMP(3),\\n\"+ \" window_end TIMESTAMP(3),\\n\"+ \" cnt BIGINT,\\n\"+ \" sum_a INT,\\n\"+ \" distinct_cnt BIGINT,\\n\"+ \" concat_distinct STRING\\n\"+ \") WITH (\\n\"+ \" 'connector' = 'values')\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 66,
    "startColumnNumber" : 26,
    "endLineNumber" : 66,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}