{
  "id" : 432,
  "expression" : "\"[]\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/DoubleArraySerializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"[]\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 12,
      "startColumnNumber" : 28,
      "endLineNumber" : 12,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertEquals(\"[]\",JSON.toJSONString(new double[0]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(\"[]\",JSON.toJSONString(new double[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 11,
        "startColumnNumber" : 25,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(\"[]\",JSON.toJSONString(new double[0]));\n  Assert.assertEquals(\"[null]\",JSON.toJSONString(new double[]{Double.NaN}));\n  Assert.assertEquals(\"[1.0,2.0]\",JSON.toJSONString(new double[]{1,2}));\n  Assert.assertEquals(\"[1.0,2.0,3.0]\",JSON.toJSONString(new double[]{1,2,3}));\n  Assert.assertEquals(\"[1.0,2.0,3.0,null,null]\",JSON.toJSONString(new double[]{1,2,3,Double.NaN,Double.NaN}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0(){\n  Assert.assertEquals(\"[]\",JSON.toJSONString(new double[0]));\n  Assert.assertEquals(\"[null]\",JSON.toJSONString(new double[]{Double.NaN}));\n  Assert.assertEquals(\"[1.0,2.0]\",JSON.toJSONString(new double[]{1,2}));\n  Assert.assertEquals(\"[1.0,2.0,3.0]\",JSON.toJSONString(new double[]{1,2,3}));\n  Assert.assertEquals(\"[1.0,2.0,3.0,null,null]\",JSON.toJSONString(new double[]{1,2,3,Double.NaN,Double.NaN}));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(\"[]\",JSON.toJSONString(new double[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 12,
    "startColumnNumber" : 28,
    "endLineNumber" : 12,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}