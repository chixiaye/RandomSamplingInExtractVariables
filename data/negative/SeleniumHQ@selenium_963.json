{
  "id" : 963,
  "expression" : "\"newsession_queuer.validate\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "a2a60d7cfea954b4fa7c8d09f6b92ee526f37536",
  "filePath" : "java/server/src/org/openqa/selenium/grid/sessionqueue/NewSessionQueuer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"newsession_queuer.validate\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 86,
      "startColumnNumber" : 59,
      "endLineNumber" : 86,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 86,
        "startColumnNumber" : 21,
        "endLineNumber" : 86,
        "endColumnNumber" : 88
      },
      "nodeContext" : "tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 86,
        "startColumnNumber" : 14,
        "endLineNumber" : 86,
        "endColumnNumber" : 88
      },
      "nodeContext" : "span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 86,
        "startColumnNumber" : 9,
        "endLineNumber" : 86,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Span span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1503,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Span span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")){\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  try (Reader reader=reader(request);NewSessionPayload payload=NewSessionPayload.create(reader)){\n    Objects.requireNonNull(payload,\"Requests to process must be set.\");\n    attributeMap.put(\"request.payload\",EventAttribute.setValue(payload.toString()));\n    Iterator<Capabilities> iterator=payload.stream().iterator();\n    if (!iterator.hasNext()) {\n      SessionNotCreatedException exception=new SessionNotCreatedException(\"No capabilities found\");\n      EXCEPTION.accept(attributeMap,exception);\n      attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(exception.getMessage()));\n      span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n      throw exception;\n    }\n  }\n catch (  IOException e) {\n    SessionNotCreatedException exception=new SessionNotCreatedException(e.getMessage(),e);\n    EXCEPTION.accept(attributeMap,exception);\n    String errorMessage=\"IOException while reading the request payload. \" + exception.getMessage();\n    attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(errorMessage));\n    span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n    throw exception;\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 183,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1513,
        "startLineNumber" : 85,
        "startColumnNumber" : 58,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (Span span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    try (Reader reader=reader(request);NewSessionPayload payload=NewSessionPayload.create(reader)){\n      Objects.requireNonNull(payload,\"Requests to process must be set.\");\n      attributeMap.put(\"request.payload\",EventAttribute.setValue(payload.toString()));\n      Iterator<Capabilities> iterator=payload.stream().iterator();\n      if (!iterator.hasNext()) {\n        SessionNotCreatedException exception=new SessionNotCreatedException(\"No capabilities found\");\n        EXCEPTION.accept(attributeMap,exception);\n        attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(exception.getMessage()));\n        span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n        throw exception;\n      }\n    }\n catch (    IOException e) {\n      SessionNotCreatedException exception=new SessionNotCreatedException(e.getMessage(),e);\n      EXCEPTION.accept(attributeMap,exception);\n      String errorMessage=\"IOException while reading the request payload. \" + exception.getMessage();\n      attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(errorMessage));\n      span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n      throw exception;\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1569,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void validateSessionRequest(HttpRequest request){\n  try (Span span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")){\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    try (Reader reader=reader(request);NewSessionPayload payload=NewSessionPayload.create(reader)){\n      Objects.requireNonNull(payload,\"Requests to process must be set.\");\n      attributeMap.put(\"request.payload\",EventAttribute.setValue(payload.toString()));\n      Iterator<Capabilities> iterator=payload.stream().iterator();\n      if (!iterator.hasNext()) {\n        SessionNotCreatedException exception=new SessionNotCreatedException(\"No capabilities found\");\n        EXCEPTION.accept(attributeMap,exception);\n        attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(exception.getMessage()));\n        span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n        throw exception;\n      }\n    }\n catch (    IOException e) {\n      SessionNotCreatedException exception=new SessionNotCreatedException(e.getMessage(),e);\n      EXCEPTION.accept(attributeMap,exception);\n      String errorMessage=\"IOException while reading the request payload. \" + exception.getMessage();\n      attributeMap.put(AttributeKey.EXCEPTION_MESSAGE.getKey(),EventAttribute.setValue(errorMessage));\n      span.addEvent(AttributeKey.EXCEPTION_EVENT.getKey(),attributeMap);\n      throw exception;\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 86,
        "startColumnNumber" : 9,
        "endLineNumber" : 86,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Span span=tracer.getCurrentContext().createSpan(\"newsession_queuer.validate\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 86,
    "startColumnNumber" : 59,
    "endLineNumber" : 86,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}