{
  "id" : 496,
  "expression" : "newFromConstructor(constructor,cause)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/util/concurrent/FuturesGetChecked.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newFromConstructor(constructor,cause)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 234,
      "startColumnNumber" : 19,
      "endLineNumber" : 234,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 57
      },
      "nodeContext" : "instance=newFromConstructor(constructor,cause)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 234,
        "startColumnNumber" : 6,
        "endLineNumber" : 234,
        "endColumnNumber" : 58
      },
      "nodeContext" : "X instance=newFromConstructor(constructor,cause);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 233,
        "startColumnNumber" : 71,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  X instance=newFromConstructor(constructor,cause);\n  if (instance != null) {\n    if (instance.getCause() == null) {\n      instance.initCause(cause);\n    }\n    return instance;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 233,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Constructor<X> constructor : preferringStrings(constructors)) {\n  X instance=newFromConstructor(constructor,cause);\n  if (instance != null) {\n    if (instance.getCause() == null) {\n      instance.initCause(cause);\n    }\n    return instance;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 229,
        "startColumnNumber" : 96,
        "endLineNumber" : 247,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"}) List<Constructor<X>> constructors=(List)Arrays.asList(exceptionClass.getConstructors());\n  for (  Constructor<X> constructor : preferringStrings(constructors)) {\n    X instance=newFromConstructor(constructor,cause);\n    if (instance != null) {\n      if (instance.getCause() == null) {\n        instance.initCause(cause);\n      }\n      return instance;\n    }\n  }\n  throw new IllegalArgumentException(\"No appropriate constructor for exception of type \" + exceptionClass + \" in response to chained exception\",cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 828,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 247,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static <X extends Exception>X newWithCause(Class<X> exceptionClass,Throwable cause){\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"}) List<Constructor<X>> constructors=(List)Arrays.asList(exceptionClass.getConstructors());\n  for (  Constructor<X> constructor : preferringStrings(constructors)) {\n    X instance=newFromConstructor(constructor,cause);\n    if (instance != null) {\n      if (instance.getCause() == null) {\n        instance.initCause(cause);\n      }\n      return instance;\n    }\n  }\n  throw new IllegalArgumentException(\"No appropriate constructor for exception of type \" + exceptionClass + \" in response to chained exception\",cause);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 234,
        "startColumnNumber" : 6,
        "endLineNumber" : 234,
        "endColumnNumber" : 58
      },
      "nodeContext" : "X instance=newFromConstructor(constructor,cause);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "X"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 234,
    "startColumnNumber" : 19,
    "endLineNumber" : 234,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}