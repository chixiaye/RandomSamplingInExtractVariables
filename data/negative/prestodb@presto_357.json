{
  "id" : 357,
  "expression" : "\"Invocation convention for function type is not supported\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/metadata/FunctionInvokerProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invocation convention for function type is not supported\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 58,
      "startLineNumber" : 73,
      "startColumnNumber" : 56,
      "endLineNumber" : 73,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 73,
        "startColumnNumber" : 22,
        "endLineNumber" : 73,
        "endColumnNumber" : 115
      },
      "nodeContext" : "new UnsupportedOperationException(\"Invocation convention for function type is not supported\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 116
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 68,
        "startColumnNumber" : 88,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n    return false;\n  }\n  throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (definitionArgumentProperties.get(i).getArgumentType() == FUNCTION_TYPE) {\n  if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n    return false;\n  }\n  throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1451,
        "startLineNumber" : 64,
        "startColumnNumber" : 70,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  InvocationArgumentConvention invocationArgumentConvention=invocationConvention.get().getArgumentConvention(i);\n  NullConvention nullConvention=definitionArgumentProperties.get(i).getNullConvention();\n  if (definitionArgumentProperties.get(i).getArgumentType() == FUNCTION_TYPE) {\n    if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n      return false;\n    }\n    throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n  }\n  if (nullConvention == RETURN_NULL_ON_NULL && invocationArgumentConvention != InvocationArgumentConvention.NEVER_NULL) {\n    return false;\n  }\n  if (nullConvention == USE_BOXED_TYPE && invocationArgumentConvention != InvocationArgumentConvention.BOXED_NULLABLE) {\n    return false;\n  }\n  if (nullConvention == USE_NULL_FLAG && invocationArgumentConvention != InvocationArgumentConvention.NULL_FLAG) {\n    return false;\n  }\n  if (nullConvention == BLOCK_AND_POSITION && invocationArgumentConvention != InvocationArgumentConvention.BLOCK_POSITION) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1513,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < definitionArgumentProperties.size(); i++) {\n  InvocationArgumentConvention invocationArgumentConvention=invocationConvention.get().getArgumentConvention(i);\n  NullConvention nullConvention=definitionArgumentProperties.get(i).getNullConvention();\n  if (definitionArgumentProperties.get(i).getArgumentType() == FUNCTION_TYPE) {\n    if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n      return false;\n    }\n    throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n  }\n  if (nullConvention == RETURN_NULL_ON_NULL && invocationArgumentConvention != InvocationArgumentConvention.NEVER_NULL) {\n    return false;\n  }\n  if (nullConvention == USE_BOXED_TYPE && invocationArgumentConvention != InvocationArgumentConvention.BOXED_NULLABLE) {\n    return false;\n  }\n  if (nullConvention == USE_NULL_FLAG && invocationArgumentConvention != InvocationArgumentConvention.NULL_FLAG) {\n    return false;\n  }\n  if (nullConvention == BLOCK_AND_POSITION && invocationArgumentConvention != InvocationArgumentConvention.BLOCK_POSITION) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2413,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < definitionArgumentProperties.size(); i++) {\n    InvocationArgumentConvention invocationArgumentConvention=invocationConvention.get().getArgumentConvention(i);\n    NullConvention nullConvention=definitionArgumentProperties.get(i).getNullConvention();\n    if (definitionArgumentProperties.get(i).getArgumentType() == FUNCTION_TYPE) {\n      if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n        return false;\n      }\n      throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n    }\n    if (nullConvention == RETURN_NULL_ON_NULL && invocationArgumentConvention != InvocationArgumentConvention.NEVER_NULL) {\n      return false;\n    }\n    if (nullConvention == USE_BOXED_TYPE && invocationArgumentConvention != InvocationArgumentConvention.BOXED_NULLABLE) {\n      return false;\n    }\n    if (nullConvention == USE_NULL_FLAG && invocationArgumentConvention != InvocationArgumentConvention.NULL_FLAG) {\n      return false;\n    }\n    if (nullConvention == BLOCK_AND_POSITION && invocationArgumentConvention != InvocationArgumentConvention.BLOCK_POSITION) {\n      return false;\n    }\n  }\n  if (definitionReturnsNullable && invocationConvention.get().getReturnConvention() != InvocationReturnConvention.NULLABLE_RETURN) {\n    return false;\n  }\n  if (!definitionReturnsNullable) {\n    if (invocationConvention.get().getReturnConvention() != InvocationReturnConvention.FAIL_ON_NULL) {\n      return false;\n    }\n  }\n  if (definitionHasSession != invocationConvention.get().hasSession()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2638,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting static boolean checkChoice(List<ArgumentProperty> definitionArgumentProperties,boolean definitionReturnsNullable,boolean definitionHasSession,Optional<InvocationConvention> invocationConvention){\n  for (int i=0; i < definitionArgumentProperties.size(); i++) {\n    InvocationArgumentConvention invocationArgumentConvention=invocationConvention.get().getArgumentConvention(i);\n    NullConvention nullConvention=definitionArgumentProperties.get(i).getNullConvention();\n    if (definitionArgumentProperties.get(i).getArgumentType() == FUNCTION_TYPE) {\n      if (invocationArgumentConvention != InvocationArgumentConvention.FUNCTION) {\n        return false;\n      }\n      throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n    }\n    if (nullConvention == RETURN_NULL_ON_NULL && invocationArgumentConvention != InvocationArgumentConvention.NEVER_NULL) {\n      return false;\n    }\n    if (nullConvention == USE_BOXED_TYPE && invocationArgumentConvention != InvocationArgumentConvention.BOXED_NULLABLE) {\n      return false;\n    }\n    if (nullConvention == USE_NULL_FLAG && invocationArgumentConvention != InvocationArgumentConvention.NULL_FLAG) {\n      return false;\n    }\n    if (nullConvention == BLOCK_AND_POSITION && invocationArgumentConvention != InvocationArgumentConvention.BLOCK_POSITION) {\n      return false;\n    }\n  }\n  if (definitionReturnsNullable && invocationConvention.get().getReturnConvention() != InvocationReturnConvention.NULLABLE_RETURN) {\n    return false;\n  }\n  if (!definitionReturnsNullable) {\n    if (invocationConvention.get().getReturnConvention() != InvocationReturnConvention.FAIL_ON_NULL) {\n      return false;\n    }\n  }\n  if (definitionHasSession != invocationConvention.get().hasSession()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 116
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"Invocation convention for function type is not supported\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 58,
    "startLineNumber" : 73,
    "startColumnNumber" : 56,
    "endLineNumber" : 73,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ]
}