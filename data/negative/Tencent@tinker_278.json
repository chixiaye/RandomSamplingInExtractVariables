{
  "id" : 278,
  "expression" : "entry == null",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/tinker-ziputils/src/main/java/com/tencent/tinker/ziputils/ziputil/TinkerZipFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 336,
      "startColumnNumber" : 12,
      "endLineNumber" : 336,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 336,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entry == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2575,
        "startLineNumber" : 333,
        "startColumnNumber" : 79,
        "endLineNumber" : 380,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  entry=getEntry(entry.getName());\n  if (entry == null) {\n    return null;\n  }\n  RandomAccessFile localRaf=raf;\nsynchronized (localRaf) {\n    RAFStream rafStream=new RAFStream(localRaf,entry.localHeaderRelOffset);\n    DataInputStream is=new DataInputStream(rafStream);\n    final int localMagic=Integer.reverseBytes(is.readInt());\n    if (localMagic != LOCSIG) {\n      throwZipException(filename,localRaf.length(),entry.getName(),entry.localHeaderRelOffset,\"Local File Header\",localMagic);\n    }\n    is.skipBytes(2);\n    int gpbf=Short.reverseBytes(is.readShort()) & 0xffff;\n    if ((gpbf & TinkerZipFile.GPBF_UNSUPPORTED_MASK) != 0) {\n      throw new ZipException(\"Invalid General Purpose Bit Flag: \" + gpbf);\n    }\n    is.skipBytes(18);\n    int fileNameLength=Short.reverseBytes(is.readShort()) & 0xffff;\n    int extraFieldLength=Short.reverseBytes(is.readShort()) & 0xffff;\n    is.close();\n    rafStream.skip(fileNameLength + extraFieldLength);\n    if (entry.compressionMethod == TinkerZipEntry.STORED) {\n      rafStream.endOffset=rafStream.offset + entry.size;\n    }\n else {\n      rafStream.endOffset=rafStream.offset + entry.compressedSize;\n    }\n    return rafStream;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3032,
        "startLineNumber" : 323,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an input stream on the data of the specified  {@code ZipEntry}.\n * @param entry the ZipEntry.\n * @return an input stream of the data contained in the {@code ZipEntry}.\n * @throws IOException if an  {@code IOException} occurs.\n * @throws IllegalStateException if this zip file has been closed.\n */\npublic InputStream getInputStream(TinkerZipEntry entry) throws IOException {\n  entry=getEntry(entry.getName());\n  if (entry == null) {\n    return null;\n  }\n  RandomAccessFile localRaf=raf;\nsynchronized (localRaf) {\n    RAFStream rafStream=new RAFStream(localRaf,entry.localHeaderRelOffset);\n    DataInputStream is=new DataInputStream(rafStream);\n    final int localMagic=Integer.reverseBytes(is.readInt());\n    if (localMagic != LOCSIG) {\n      throwZipException(filename,localRaf.length(),entry.getName(),entry.localHeaderRelOffset,\"Local File Header\",localMagic);\n    }\n    is.skipBytes(2);\n    int gpbf=Short.reverseBytes(is.readShort()) & 0xffff;\n    if ((gpbf & TinkerZipFile.GPBF_UNSUPPORTED_MASK) != 0) {\n      throw new ZipException(\"Invalid General Purpose Bit Flag: \" + gpbf);\n    }\n    is.skipBytes(18);\n    int fileNameLength=Short.reverseBytes(is.readShort()) & 0xffff;\n    int extraFieldLength=Short.reverseBytes(is.readShort()) & 0xffff;\n    is.close();\n    rafStream.skip(fileNameLength + extraFieldLength);\n    if (entry.compressionMethod == TinkerZipEntry.STORED) {\n      rafStream.endOffset=rafStream.offset + entry.size;\n    }\n else {\n      rafStream.endOffset=rafStream.offset + entry.compressedSize;\n    }\n    return rafStream;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 336,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entry == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 336,
    "startColumnNumber" : 12,
    "endLineNumber" : 336,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}