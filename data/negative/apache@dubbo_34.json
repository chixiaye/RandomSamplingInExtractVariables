{
  "id" : 34,
  "expression" : "leastIndex",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/loadbalance/LeastActiveLoadBalance.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "leastIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 106,
      "startColumnNumber" : 40,
      "endLineNumber" : 106,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 106,
        "startColumnNumber" : 32,
        "endLineNumber" : 106,
        "endColumnNumber" : 51
      },
      "nodeContext" : "weights[leastIndex]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 51
      },
      "nodeContext" : "offsetWeight-=weights[leastIndex]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 52
      },
      "nodeContext" : "offsetWeight-=weights[leastIndex];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 104,
        "startColumnNumber" : 49,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int leastIndex=leastIndexes[i];\n  offsetWeight-=weights[leastIndex];\n  if (offsetWeight < 0) {\n    return invokers.get(leastIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < leastCount; i++) {\n  int leastIndex=leastIndexes[i];\n  offsetWeight-=weights[leastIndex];\n  if (offsetWeight < 0) {\n    return invokers.get(leastIndex);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 99,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n  for (int i=0; i < leastCount; i++) {\n    int leastIndex=leastIndexes[i];\n    offsetWeight-=weights[leastIndex];\n    if (offsetWeight < 0) {\n      return invokers.get(leastIndex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!sameWeight && totalWeight > 0) {\n  int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n  for (int i=0; i < leastCount; i++) {\n    int leastIndex=leastIndexes[i];\n    offsetWeight-=weights[leastIndex];\n    if (offsetWeight < 0) {\n      return invokers.get(leastIndex);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3847,
        "startLineNumber" : 40,
        "startColumnNumber" : 97,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int length=invokers.size();\n  int leastActive=-1;\n  int leastCount=0;\n  int[] leastIndexes=new int[length];\n  int[] weights=new int[length];\n  int totalWeight=0;\n  int firstWeight=0;\n  boolean sameWeight=true;\n  for (int i=0; i < length; i++) {\n    Invoker<T> invoker=invokers.get(i);\n    int active=RpcStatus.getStatus(invoker.getUrl(),invocation.getMethodName()).getActive();\n    int afterWarmup=getWeight(invoker,invocation);\n    weights[i]=afterWarmup;\n    if (leastActive == -1 || active < leastActive) {\n      leastActive=active;\n      leastCount=1;\n      leastIndexes[0]=i;\n      totalWeight=afterWarmup;\n      firstWeight=afterWarmup;\n      sameWeight=true;\n    }\n else     if (active == leastActive) {\n      leastIndexes[leastCount++]=i;\n      totalWeight+=afterWarmup;\n      if (sameWeight && afterWarmup != firstWeight) {\n        sameWeight=false;\n      }\n    }\n  }\n  if (leastCount == 1) {\n    return invokers.get(leastIndexes[0]);\n  }\n  if (!sameWeight && totalWeight > 0) {\n    int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n    for (int i=0; i < leastCount; i++) {\n      int leastIndex=leastIndexes[i];\n      offsetWeight-=weights[leastIndex];\n      if (offsetWeight < 0) {\n        return invokers.get(leastIndex);\n      }\n    }\n  }\n  return invokers.get(leastIndexes[ThreadLocalRandom.current().nextInt(leastCount)]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3955,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected <T>Invoker<T> doSelect(List<Invoker<T>> invokers,URL url,Invocation invocation){\n  int length=invokers.size();\n  int leastActive=-1;\n  int leastCount=0;\n  int[] leastIndexes=new int[length];\n  int[] weights=new int[length];\n  int totalWeight=0;\n  int firstWeight=0;\n  boolean sameWeight=true;\n  for (int i=0; i < length; i++) {\n    Invoker<T> invoker=invokers.get(i);\n    int active=RpcStatus.getStatus(invoker.getUrl(),invocation.getMethodName()).getActive();\n    int afterWarmup=getWeight(invoker,invocation);\n    weights[i]=afterWarmup;\n    if (leastActive == -1 || active < leastActive) {\n      leastActive=active;\n      leastCount=1;\n      leastIndexes[0]=i;\n      totalWeight=afterWarmup;\n      firstWeight=afterWarmup;\n      sameWeight=true;\n    }\n else     if (active == leastActive) {\n      leastIndexes[leastCount++]=i;\n      totalWeight+=afterWarmup;\n      if (sameWeight && afterWarmup != firstWeight) {\n        sameWeight=false;\n      }\n    }\n  }\n  if (leastCount == 1) {\n    return invokers.get(leastIndexes[0]);\n  }\n  if (!sameWeight && totalWeight > 0) {\n    int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n    for (int i=0; i < leastCount; i++) {\n      int leastIndex=leastIndexes[i];\n      offsetWeight-=weights[leastIndex];\n      if (offsetWeight < 0) {\n        return invokers.get(leastIndex);\n      }\n    }\n  }\n  return invokers.get(leastIndexes[ThreadLocalRandom.current().nextInt(leastCount)]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 52
      },
      "nodeContext" : "offsetWeight-=weights[leastIndex];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "leastIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 108,
      "startColumnNumber" : 40,
      "endLineNumber" : 108,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 108,
        "startColumnNumber" : 27,
        "endLineNumber" : 108,
        "endColumnNumber" : 51
      },
      "nodeContext" : "invokers.get(leastIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return invokers.get(leastIndex);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 107,
        "startColumnNumber" : 38,
        "endLineNumber" : 109,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return invokers.get(leastIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 109,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (offsetWeight < 0) {\n  return invokers.get(leastIndex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 104,
        "startColumnNumber" : 49,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int leastIndex=leastIndexes[i];\n  offsetWeight-=weights[leastIndex];\n  if (offsetWeight < 0) {\n    return invokers.get(leastIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < leastCount; i++) {\n  int leastIndex=leastIndexes[i];\n  offsetWeight-=weights[leastIndex];\n  if (offsetWeight < 0) {\n    return invokers.get(leastIndex);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 99,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n  for (int i=0; i < leastCount; i++) {\n    int leastIndex=leastIndexes[i];\n    offsetWeight-=weights[leastIndex];\n    if (offsetWeight < 0) {\n      return invokers.get(leastIndex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!sameWeight && totalWeight > 0) {\n  int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n  for (int i=0; i < leastCount; i++) {\n    int leastIndex=leastIndexes[i];\n    offsetWeight-=weights[leastIndex];\n    if (offsetWeight < 0) {\n      return invokers.get(leastIndex);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3847,
        "startLineNumber" : 40,
        "startColumnNumber" : 97,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int length=invokers.size();\n  int leastActive=-1;\n  int leastCount=0;\n  int[] leastIndexes=new int[length];\n  int[] weights=new int[length];\n  int totalWeight=0;\n  int firstWeight=0;\n  boolean sameWeight=true;\n  for (int i=0; i < length; i++) {\n    Invoker<T> invoker=invokers.get(i);\n    int active=RpcStatus.getStatus(invoker.getUrl(),invocation.getMethodName()).getActive();\n    int afterWarmup=getWeight(invoker,invocation);\n    weights[i]=afterWarmup;\n    if (leastActive == -1 || active < leastActive) {\n      leastActive=active;\n      leastCount=1;\n      leastIndexes[0]=i;\n      totalWeight=afterWarmup;\n      firstWeight=afterWarmup;\n      sameWeight=true;\n    }\n else     if (active == leastActive) {\n      leastIndexes[leastCount++]=i;\n      totalWeight+=afterWarmup;\n      if (sameWeight && afterWarmup != firstWeight) {\n        sameWeight=false;\n      }\n    }\n  }\n  if (leastCount == 1) {\n    return invokers.get(leastIndexes[0]);\n  }\n  if (!sameWeight && totalWeight > 0) {\n    int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n    for (int i=0; i < leastCount; i++) {\n      int leastIndex=leastIndexes[i];\n      offsetWeight-=weights[leastIndex];\n      if (offsetWeight < 0) {\n        return invokers.get(leastIndex);\n      }\n    }\n  }\n  return invokers.get(leastIndexes[ThreadLocalRandom.current().nextInt(leastCount)]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3955,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected <T>Invoker<T> doSelect(List<Invoker<T>> invokers,URL url,Invocation invocation){\n  int length=invokers.size();\n  int leastActive=-1;\n  int leastCount=0;\n  int[] leastIndexes=new int[length];\n  int[] weights=new int[length];\n  int totalWeight=0;\n  int firstWeight=0;\n  boolean sameWeight=true;\n  for (int i=0; i < length; i++) {\n    Invoker<T> invoker=invokers.get(i);\n    int active=RpcStatus.getStatus(invoker.getUrl(),invocation.getMethodName()).getActive();\n    int afterWarmup=getWeight(invoker,invocation);\n    weights[i]=afterWarmup;\n    if (leastActive == -1 || active < leastActive) {\n      leastActive=active;\n      leastCount=1;\n      leastIndexes[0]=i;\n      totalWeight=afterWarmup;\n      firstWeight=afterWarmup;\n      sameWeight=true;\n    }\n else     if (active == leastActive) {\n      leastIndexes[leastCount++]=i;\n      totalWeight+=afterWarmup;\n      if (sameWeight && afterWarmup != firstWeight) {\n        sameWeight=false;\n      }\n    }\n  }\n  if (leastCount == 1) {\n    return invokers.get(leastIndexes[0]);\n  }\n  if (!sameWeight && totalWeight > 0) {\n    int offsetWeight=ThreadLocalRandom.current().nextInt(totalWeight);\n    for (int i=0; i < leastCount; i++) {\n      int leastIndex=leastIndexes[i];\n      offsetWeight-=weights[leastIndex];\n      if (offsetWeight < 0) {\n        return invokers.get(leastIndex);\n      }\n    }\n  }\n  return invokers.get(leastIndexes[ThreadLocalRandom.current().nextInt(leastCount)]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return invokers.get(leastIndex);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 106,
    "startColumnNumber" : 40,
    "endLineNumber" : 106,
    "endColumnNumber" : 50
  }, {
    "charLength" : 10,
    "startLineNumber" : 108,
    "startColumnNumber" : 40,
    "endLineNumber" : 108,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}