{
  "id" : 448,
  "expression" : "serverSslHandler.handshakeFuture().await()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/test/java/io/netty/handler/ssl/OpenSslPrivateKeyMethodTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serverSslHandler.handshakeFuture().await()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 370,
      "startColumnNumber" : 48,
      "endLineNumber" : 370,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 370,
        "startColumnNumber" : 48,
        "endLineNumber" : 370,
        "endColumnNumber" : 98
      },
      "nodeContext" : "serverSslHandler.handshakeFuture().await().cause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 370,
        "startColumnNumber" : 34,
        "endLineNumber" : 370,
        "endColumnNumber" : 98
      },
      "nodeContext" : "serverCause=serverSslHandler.handshakeFuture().await().cause()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 370,
        "startColumnNumber" : 24,
        "endLineNumber" : 370,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 368,
        "startColumnNumber" : 24,
        "endLineNumber" : 373,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n  Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n  assertNotNull(clientCause);\n  assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 368,
        "startColumnNumber" : 20,
        "endLineNumber" : 375,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n  Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n  assertNotNull(clientCause);\n  assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n}\n  finally {\n  client.close().sync();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 366,
        "startColumnNumber" : 20,
        "endLineNumber" : 376,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Channel client=client(server,clientSslHandler);\n  try {\n    Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n    Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n    assertNotNull(clientCause);\n    assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n  }\n  finally {\n    client.close().sync();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 366,
        "startColumnNumber" : 16,
        "endLineNumber" : 378,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  Channel client=client(server,clientSslHandler);\n  try {\n    Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n    Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n    assertNotNull(clientCause);\n    assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n  }\n  finally {\n    client.close().sync();\n  }\n}\n  finally {\n  server.close().sync();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 361,
        "startColumnNumber" : 16,
        "endLineNumber" : 379,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n  Channel server=server(address,serverSslHandler);\n  try {\n    Channel client=client(server,clientSslHandler);\n    try {\n      Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n      Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n      assertNotNull(clientCause);\n      assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n    }\n  finally {\n      client.close().sync();\n    }\n  }\n  finally {\n    server.close().sync();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 361,
        "startColumnNumber" : 12,
        "endLineNumber" : 381,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n  Channel server=server(address,serverSslHandler);\n  try {\n    Channel client=client(server,clientSslHandler);\n    try {\n      Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n      Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n      assertNotNull(clientCause);\n      assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n    }\n  finally {\n      client.close().sync();\n    }\n  }\n  finally {\n    server.close().sync();\n  }\n}\n  finally {\n  ReferenceCountUtil.release(sslClientContext);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 360,
        "startColumnNumber" : 12,
        "endLineNumber" : 382,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n    Channel server=server(address,serverSslHandler);\n    try {\n      Channel client=client(server,clientSslHandler);\n      try {\n        Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n        Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n        assertNotNull(clientCause);\n        assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n      }\n  finally {\n        client.close().sync();\n      }\n    }\n  finally {\n      server.close().sync();\n    }\n  }\n  finally {\n    ReferenceCountUtil.release(sslClientContext);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 360,
        "startColumnNumber" : 8,
        "endLineNumber" : 384,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  try {\n    LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n    Channel server=server(address,serverSslHandler);\n    try {\n      Channel client=client(server,clientSslHandler);\n      try {\n        Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n        Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n        assertNotNull(clientCause);\n        assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n      }\n  finally {\n        client.close().sync();\n      }\n    }\n  finally {\n      server.close().sync();\n    }\n  }\n  finally {\n    ReferenceCountUtil.release(sslClientContext);\n  }\n}\n  finally {\n  ReferenceCountUtil.release(sslServerContext);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2135,
        "startLineNumber" : 337,
        "startColumnNumber" : 110,
        "endLineNumber" : 385,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SslContext sslServerContext=buildServerContext(new OpenSslPrivateKeyMethod(){\n    @Override public byte[] sign(    SSLEngine engine,    int signatureAlgorithm,    byte[] input) throws Exception {\n      assertThread(delegate);\n      if (returnNull) {\n        return null;\n      }\n      throw new SignatureException();\n    }\n    @Override public byte[] decrypt(    SSLEngine engine,    byte[] input){\n      throw new UnsupportedOperationException();\n    }\n  }\n);\n  final SslContext sslClientContext=buildClientContext();\n  SslHandler serverSslHandler=newSslHandler(sslServerContext,UnpooledByteBufAllocator.DEFAULT,delegateExecutor(delegate));\n  SslHandler clientSslHandler=newSslHandler(sslClientContext,UnpooledByteBufAllocator.DEFAULT,delegateExecutor(delegate));\n  try {\n    try {\n      LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n      Channel server=server(address,serverSslHandler);\n      try {\n        Channel client=client(server,clientSslHandler);\n        try {\n          Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n          Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n          assertNotNull(clientCause);\n          assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n        }\n  finally {\n          client.close().sync();\n        }\n      }\n  finally {\n        server.close().sync();\n      }\n    }\n  finally {\n      ReferenceCountUtil.release(sslClientContext);\n    }\n  }\n  finally {\n    ReferenceCountUtil.release(sslServerContext);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2241,
        "startLineNumber" : 337,
        "startColumnNumber" : 4,
        "endLineNumber" : 385,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testPrivateKeyMethodFails(final boolean delegate,final boolean returnNull) throws Exception {\n  final SslContext sslServerContext=buildServerContext(new OpenSslPrivateKeyMethod(){\n    @Override public byte[] sign(    SSLEngine engine,    int signatureAlgorithm,    byte[] input) throws Exception {\n      assertThread(delegate);\n      if (returnNull) {\n        return null;\n      }\n      throw new SignatureException();\n    }\n    @Override public byte[] decrypt(    SSLEngine engine,    byte[] input){\n      throw new UnsupportedOperationException();\n    }\n  }\n);\n  final SslContext sslClientContext=buildClientContext();\n  SslHandler serverSslHandler=newSslHandler(sslServerContext,UnpooledByteBufAllocator.DEFAULT,delegateExecutor(delegate));\n  SslHandler clientSslHandler=newSslHandler(sslClientContext,UnpooledByteBufAllocator.DEFAULT,delegateExecutor(delegate));\n  try {\n    try {\n      LocalAddress address=new LocalAddress(\"test-\" + SslProvider.OPENSSL + '-'+ SslProvider.JDK+ '-'+ RFC_CIPHER_NAME+ '-'+ delegate);\n      Channel server=server(address,serverSslHandler);\n      try {\n        Channel client=client(server,clientSslHandler);\n        try {\n          Throwable clientCause=clientSslHandler.handshakeFuture().await().cause();\n          Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n          assertNotNull(clientCause);\n          assertThat(serverCause,Matchers.instanceOf(SSLHandshakeException.class));\n        }\n  finally {\n          client.close().sync();\n        }\n      }\n  finally {\n        server.close().sync();\n      }\n    }\n  finally {\n      ReferenceCountUtil.release(sslClientContext);\n    }\n  }\n  finally {\n    ReferenceCountUtil.release(sslServerContext);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 370,
        "startColumnNumber" : 24,
        "endLineNumber" : 370,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Throwable serverCause=serverSslHandler.handshakeFuture().await().cause();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "io.netty.util.concurrent.Future<io.netty.channel.Channel>"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 370,
    "startColumnNumber" : 48,
    "endLineNumber" : 370,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}