{
  "id" : 270,
  "expression" : "new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n  @Override public void handleJsonMetric(  String json){\n    System.out.println(\"Received: \" + json);\n    metricsCount.incrementAndGet();\n  }\n}\n,100)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-metrics-event-stream/src/test/java/com/netflix/hystrix/contrib/metrics/eventstream/HystrixMetricsPollerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n  @Override public void handleJsonMetric(  String json){\n    System.out.println(\"Received: \" + json);\n    metricsCount.incrementAndGet();\n  }\n}\n,100)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 295,
      "startLineNumber" : 38,
      "startColumnNumber" : 38,
      "endLineNumber" : 45,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 34,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 38,
        "startColumnNumber" : 29,
        "endLineNumber" : 45,
        "endColumnNumber" : 15
      },
      "nodeContext" : "poller=new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n  @Override public void handleJsonMetric(  String json){\n    System.out.println(\"Received: \" + json);\n    metricsCount.incrementAndGet();\n  }\n}\n,100)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 16
      },
      "nodeContext" : "HystrixMetricsPoller poller=new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n  @Override public void handleJsonMetric(  String json){\n    System.out.println(\"Received: \" + json);\n    metricsCount.incrementAndGet();\n  }\n}\n,100);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 35,
        "startColumnNumber" : 37,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger metricsCount=new AtomicInteger();\n  HystrixMetricsPoller poller=new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n    @Override public void handleJsonMetric(    String json){\n      System.out.println(\"Received: \" + json);\n      metricsCount.incrementAndGet();\n    }\n  }\n,100);\n  try {\n    HystrixCommand<Boolean> test=new HystrixCommand<Boolean>(HystrixCommandGroupKey.Factory.asKey(\"HystrixMetricsPollerTest\")){\n      @Override protected Boolean run(){\n        return true;\n      }\n    }\n;\n    test.execute();\n    poller.start();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v1=metricsCount.get();\n    assertTrue(v1 > 0);\n    poller.pause();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v2=metricsCount.get();\n    System.out.println(\"First poll got : \" + v1 + \", second got : \"+ v2);\n    assertTrue(v2 == v1);\n    poller.start();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v3=metricsCount.get();\n    assertTrue(v3 > v1);\n  }\n  finally {\n    poller.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStartStopStart(){\n  final AtomicInteger metricsCount=new AtomicInteger();\n  HystrixMetricsPoller poller=new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n    @Override public void handleJsonMetric(    String json){\n      System.out.println(\"Received: \" + json);\n      metricsCount.incrementAndGet();\n    }\n  }\n,100);\n  try {\n    HystrixCommand<Boolean> test=new HystrixCommand<Boolean>(HystrixCommandGroupKey.Factory.asKey(\"HystrixMetricsPollerTest\")){\n      @Override protected Boolean run(){\n        return true;\n      }\n    }\n;\n    test.execute();\n    poller.start();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v1=metricsCount.get();\n    assertTrue(v1 > 0);\n    poller.pause();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v2=metricsCount.get();\n    System.out.println(\"First poll got : \" + v1 + \", second got : \"+ v2);\n    assertTrue(v2 == v1);\n    poller.start();\n    try {\n      Thread.sleep(500);\n    }\n catch (    InterruptedException e) {\n      e.printStackTrace();\n    }\n    int v3=metricsCount.get();\n    assertTrue(v3 > v1);\n  }\n  finally {\n    poller.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 16
      },
      "nodeContext" : "HystrixMetricsPoller poller=new HystrixMetricsPoller(new HystrixMetricsPoller.MetricsAsJsonPollerListener(){\n  @Override public void handleJsonMetric(  String json){\n    System.out.println(\"Received: \" + json);\n    metricsCount.incrementAndGet();\n  }\n}\n,100);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 39,
      "astHeight" : 11
    },
    "tokenLength" : 16,
    "type" : "com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsPoller"
  } ],
  "positionList" : [ {
    "charLength" : 295,
    "startLineNumber" : 38,
    "startColumnNumber" : 38,
    "endLineNumber" : 45,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}