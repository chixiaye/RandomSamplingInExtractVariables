{
  "id" : 37,
  "expression" : "FingerprintStorage.get() instanceof FileFingerprintStorage",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/FingerprintCleanupThread.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FingerprintStorage.get() instanceof FileFingerprintStorage",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 58,
      "startLineNumber" : 80,
      "startColumnNumber" : 14,
      "endLineNumber" : 80,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 80,
        "startColumnNumber" : 13,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "(FingerprintStorage.get() instanceof FileFingerprintStorage)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "!(FingerprintStorage.get() instanceof FileFingerprintStorage)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 72
      },
      "nodeContext" : "!(FingerprintStorage.get() instanceof FileFingerprintStorage) && FingerprintStorage.getFileFingerprintStorage().isReady()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!(FingerprintStorage.get() instanceof FileFingerprintStorage) && FingerprintStorage.getFileFingerprintStorage().isReady()) {\n  FingerprintStorage.getFileFingerprintStorage().iterateAndCleanupFingerprints(listener);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 73,
        "startColumnNumber" : 47,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (GlobalFingerprintConfiguration.get().isFingerprintCleanupDisabled()) {\n    LOGGER.fine(\"Fingerprint cleanup is disabled. Skipping execution\");\n    return;\n  }\n  FingerprintStorage.get().iterateAndCleanupFingerprints(listener);\n  if (!(FingerprintStorage.get() instanceof FileFingerprintStorage) && FingerprintStorage.getFileFingerprintStorage().isReady()) {\n    FingerprintStorage.getFileFingerprintStorage().iterateAndCleanupFingerprints(listener);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Initiates the cleanup of fingerprints IF enabled. In case of configured external storage, the file system based storage cleanup is also performed.\n */\npublic void execute(TaskListener listener){\n  if (GlobalFingerprintConfiguration.get().isFingerprintCleanupDisabled()) {\n    LOGGER.fine(\"Fingerprint cleanup is disabled. Skipping execution\");\n    return;\n  }\n  FingerprintStorage.get().iterateAndCleanupFingerprints(listener);\n  if (!(FingerprintStorage.get() instanceof FileFingerprintStorage) && FingerprintStorage.getFileFingerprintStorage().isReady()) {\n    FingerprintStorage.getFileFingerprintStorage().iterateAndCleanupFingerprints(listener);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "!(FingerprintStorage.get() instanceof FileFingerprintStorage)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 58,
    "startLineNumber" : 80,
    "startColumnNumber" : 14,
    "endLineNumber" : 80,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}