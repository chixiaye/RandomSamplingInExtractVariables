{
  "id" : 15,
  "expression" : "lexerAction instanceof LexerIndexedCustomAction",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/atn/LexerActionExecutor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lexerAction instanceof LexerIndexedCustomAction",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 157,
      "startColumnNumber" : 8,
      "endLineNumber" : 157,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (lexerAction instanceof LexerIndexedCustomAction) {\n  int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n  input.seek(startIndex + offset);\n  lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n  requiresSeek=(startIndex + offset) != stopIndex;\n}\n else if (lexerAction.isPositionDependent()) {\n  input.seek(stopIndex);\n  requiresSeek=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 156,
        "startColumnNumber" : 48,
        "endLineNumber" : 169,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (lexerAction instanceof LexerIndexedCustomAction) {\n    int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n    input.seek(startIndex + offset);\n    lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n    requiresSeek=(startIndex + offset) != stopIndex;\n  }\n else   if (lexerAction.isPositionDependent()) {\n    input.seek(stopIndex);\n    requiresSeek=false;\n  }\n  lexerAction.execute(lexer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 156,
        "startColumnNumber" : 3,
        "endLineNumber" : 169,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (LexerAction lexerAction : lexerActions) {\n  if (lexerAction instanceof LexerIndexedCustomAction) {\n    int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n    input.seek(startIndex + offset);\n    lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n    requiresSeek=(startIndex + offset) != stopIndex;\n  }\n else   if (lexerAction.isPositionDependent()) {\n    input.seek(stopIndex);\n    requiresSeek=false;\n  }\n  lexerAction.execute(lexer);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  LexerAction lexerAction : lexerActions) {\n    if (lexerAction instanceof LexerIndexedCustomAction) {\n      int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n      input.seek(startIndex + offset);\n      lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n      requiresSeek=(startIndex + offset) != stopIndex;\n    }\n else     if (lexerAction.isPositionDependent()) {\n      input.seek(stopIndex);\n      requiresSeek=false;\n    }\n    lexerAction.execute(lexer);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (  LexerAction lexerAction : lexerActions) {\n    if (lexerAction instanceof LexerIndexedCustomAction) {\n      int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n      input.seek(startIndex + offset);\n      lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n      requiresSeek=(startIndex + offset) != stopIndex;\n    }\n else     if (lexerAction.isPositionDependent()) {\n      input.seek(stopIndex);\n      requiresSeek=false;\n    }\n    lexerAction.execute(lexer);\n  }\n}\n  finally {\n  if (requiresSeek) {\n    input.seek(stopIndex);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 152,
        "startColumnNumber" : 68,
        "endLineNumber" : 176,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean requiresSeek=false;\n  int stopIndex=input.index();\n  try {\n    for (    LexerAction lexerAction : lexerActions) {\n      if (lexerAction instanceof LexerIndexedCustomAction) {\n        int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n        input.seek(startIndex + offset);\n        lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n        requiresSeek=(startIndex + offset) != stopIndex;\n      }\n else       if (lexerAction.isPositionDependent()) {\n        input.seek(stopIndex);\n        requiresSeek=false;\n      }\n      lexerAction.execute(lexer);\n    }\n  }\n  finally {\n    if (requiresSeek) {\n      input.seek(stopIndex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 133,
        "startColumnNumber" : 1,
        "endLineNumber" : 176,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Execute the actions encapsulated by this executor within the context of a particular  {@link Lexer}. <p>This method calls  {@link IntStream#seek} to set the position of the{@code input} {@link CharStream} prior to calling{@link LexerAction#execute} on a position-dependent action. Before themethod returns, the input position will be restored to the same position it was in when the method was invoked.</p>\n * @param lexer The lexer instance.\n * @param input The input stream which is the source for the current token.When this method is called, the current  {@link IntStream#index} for{@code input} should be the start of the following token, i.e. 1character past the end of the current token.\n * @param startIndex The token start index. This value may be passed to{@link IntStream#seek} to set the {@code input} position to the beginningof the token.\n */\npublic void execute(Lexer lexer,CharStream input,int startIndex){\n  boolean requiresSeek=false;\n  int stopIndex=input.index();\n  try {\n    for (    LexerAction lexerAction : lexerActions) {\n      if (lexerAction instanceof LexerIndexedCustomAction) {\n        int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n        input.seek(startIndex + offset);\n        lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n        requiresSeek=(startIndex + offset) != stopIndex;\n      }\n else       if (lexerAction.isPositionDependent()) {\n        input.seek(stopIndex);\n        requiresSeek=false;\n      }\n      lexerAction.execute(lexer);\n    }\n  }\n  finally {\n    if (requiresSeek) {\n      input.seek(stopIndex);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (lexerAction instanceof LexerIndexedCustomAction) {\n  int offset=((LexerIndexedCustomAction)lexerAction).getOffset();\n  input.seek(startIndex + offset);\n  lexerAction=((LexerIndexedCustomAction)lexerAction).getAction();\n  requiresSeek=(startIndex + offset) != stopIndex;\n}\n else if (lexerAction.isPositionDependent()) {\n  input.seek(stopIndex);\n  requiresSeek=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 157,
    "startColumnNumber" : 8,
    "endLineNumber" : 157,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}