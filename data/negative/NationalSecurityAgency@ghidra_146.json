{
  "id" : 146,
  "expression" : "\"Volume Set Size: 0x\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/iso9660/ISO9660VolumeDescriptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Volume Set Size: 0x\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 209,
      "startColumnNumber" : 14,
      "endLineNumber" : 209,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 209,
        "startColumnNumber" : 14,
        "endLineNumber" : 209,
        "endColumnNumber" : 86
      },
      "nodeContext" : "\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 209,
        "endColumnNumber" : 87
      },
      "nodeContext" : "buff.append(\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 209,
        "endColumnNumber" : 88
      },
      "nodeContext" : "buff.append(\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3356,
        "startLineNumber" : 196,
        "startColumnNumber" : 26,
        "endLineNumber" : 248,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StringBuilder buff=new StringBuilder();\n  buff.append(\"Type Code: 0x\" + Integer.toHexString(super.getTypeCode()) + \" => \"+ getTypeCodeString()+ \"\\n\");\n  buff.append(\"Standard Identifier: \" + new String(super.getIdentifier()).trim() + \"\\n\");\n  buff.append(\"Version: 0x\" + Integer.toHexString(super.getVersion()) + \"\\n\");\n  buff.append(\"Unused: 0x\" + Integer.toHexString(unused) + \"\\n\");\n  buff.append(\"System Identifier: \" + new String(systemIdentifier).trim() + \"\\n\");\n  buff.append(\"Volume Identifier: \" + new String(volumeIdentifier).trim() + \"\\n\");\n  buff.append(\"Unused Field: 0x\" + Long.toHexString(unused2) + \"\\n\");\n  buff.append(\"Volume Space Size: 0x\" + Integer.toHexString(getVolumeSpaceSizeLE()) + \"\\n\");\n  buff.append(\"Unused: \" + new String(unused3).trim() + \"\\n\");\n  buff.append(\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\");\n  buff.append(\"Volume Sequence Number: 0x\" + Integer.toHexString(getVolumeSeqNumberLE()) + \"\\n\");\n  buff.append(\"Logical Block Size: 0x\" + Integer.toHexString(getLogicalBlockSizeLE()) + \"\\n\");\n  buff.append(\"Path Table Size: 0x\" + Integer.toHexString(getPathTableSizeLE()) + \"\\n\");\n  buff.append(\"LBA Location of Type-L Path Table: 0x\" + Integer.toHexString(typeLPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Optional Type-L Path Table: 0x\" + Integer.toHexString(optionalTypeLPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Type-M Path Table: 0x\" + Integer.toHexString(typeMPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Optional Type-M Path Table: 0x\" + Integer.toHexString(optionalTypeMPathTableLocation) + \"\\n\");\n  buff.append(\"Calculated Location of Type-L Path Table: 0x\" + Integer.toHexString(typeLPathTableLocation * getLogicalBlockSizeLE()) + \"\\n\");\n  buff.append(\"Calculated Location of Type-M Path Table: 0x\" + Integer.toHexString(typeMPathTableLocation * getLogicalBlockSizeBE()) + \"\\n\");\n  buff.append(\"Directory Entry for Root Directory: \\n\" + directoryEntry.toString() + \"\\n\");\n  buff.append(\"Volume Set Identifier: \" + new String(volumeSetIdentifier).trim() + \"\\n\");\n  buff.append(\"Publisher Identifier: \" + new String(publisherIdentifier).trim() + \"\\n\");\n  buff.append(\"Data Preparer Identifier: \" + new String(dataPreparerIdentifier).trim() + \"\\n\");\n  buff.append(\"Application Identifier: \" + new String(applicationIdentifier).trim() + \"\\n\");\n  buff.append(\"Copyright File Identifier: \" + new String(copyrightFileIdentifier).trim() + \"\\n\");\n  buff.append(\"Abstract File Identifier: \" + new String(abstractFileIdentifier).trim() + \"\\n\");\n  buff.append(\"Biliographic File Identifier: \" + new String(bibliographicFileIdentifier) + \"\\n\");\n  buff.append(\"Volume Creation Date/Time: \" + createDateTimeString(volumeCreationDateTime) + \"\\n\");\n  buff.append(\"Volume Modification Date/Time: \" + createDateTimeString(volumeModifyDateTime) + \"\\n\");\n  buff.append(\"Volume Expiration Date/Time: \" + createDateTimeString(volumeCreationDateTime) + \"\\n\");\n  buff.append(\"Volume Effective Date/Time: \" + createDateTimeString(volumeEffectiveDateTime) + \"\\n\");\n  buff.append(\"File Structure Version: 0x\" + Integer.toHexString(fileStructureVersion) + \"\\n\");\n  buff.append(\"Unused: 0x\" + Integer.toHexString(unused4) + \"\\n\");\n  return buff.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 408,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3393,
        "startLineNumber" : 195,
        "startColumnNumber" : 1,
        "endLineNumber" : 248,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String toString(){\n  StringBuilder buff=new StringBuilder();\n  buff.append(\"Type Code: 0x\" + Integer.toHexString(super.getTypeCode()) + \" => \"+ getTypeCodeString()+ \"\\n\");\n  buff.append(\"Standard Identifier: \" + new String(super.getIdentifier()).trim() + \"\\n\");\n  buff.append(\"Version: 0x\" + Integer.toHexString(super.getVersion()) + \"\\n\");\n  buff.append(\"Unused: 0x\" + Integer.toHexString(unused) + \"\\n\");\n  buff.append(\"System Identifier: \" + new String(systemIdentifier).trim() + \"\\n\");\n  buff.append(\"Volume Identifier: \" + new String(volumeIdentifier).trim() + \"\\n\");\n  buff.append(\"Unused Field: 0x\" + Long.toHexString(unused2) + \"\\n\");\n  buff.append(\"Volume Space Size: 0x\" + Integer.toHexString(getVolumeSpaceSizeLE()) + \"\\n\");\n  buff.append(\"Unused: \" + new String(unused3).trim() + \"\\n\");\n  buff.append(\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\");\n  buff.append(\"Volume Sequence Number: 0x\" + Integer.toHexString(getVolumeSeqNumberLE()) + \"\\n\");\n  buff.append(\"Logical Block Size: 0x\" + Integer.toHexString(getLogicalBlockSizeLE()) + \"\\n\");\n  buff.append(\"Path Table Size: 0x\" + Integer.toHexString(getPathTableSizeLE()) + \"\\n\");\n  buff.append(\"LBA Location of Type-L Path Table: 0x\" + Integer.toHexString(typeLPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Optional Type-L Path Table: 0x\" + Integer.toHexString(optionalTypeLPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Type-M Path Table: 0x\" + Integer.toHexString(typeMPathTableLocation) + \"\\n\");\n  buff.append(\"LBA Location of Optional Type-M Path Table: 0x\" + Integer.toHexString(optionalTypeMPathTableLocation) + \"\\n\");\n  buff.append(\"Calculated Location of Type-L Path Table: 0x\" + Integer.toHexString(typeLPathTableLocation * getLogicalBlockSizeLE()) + \"\\n\");\n  buff.append(\"Calculated Location of Type-M Path Table: 0x\" + Integer.toHexString(typeMPathTableLocation * getLogicalBlockSizeBE()) + \"\\n\");\n  buff.append(\"Directory Entry for Root Directory: \\n\" + directoryEntry.toString() + \"\\n\");\n  buff.append(\"Volume Set Identifier: \" + new String(volumeSetIdentifier).trim() + \"\\n\");\n  buff.append(\"Publisher Identifier: \" + new String(publisherIdentifier).trim() + \"\\n\");\n  buff.append(\"Data Preparer Identifier: \" + new String(dataPreparerIdentifier).trim() + \"\\n\");\n  buff.append(\"Application Identifier: \" + new String(applicationIdentifier).trim() + \"\\n\");\n  buff.append(\"Copyright File Identifier: \" + new String(copyrightFileIdentifier).trim() + \"\\n\");\n  buff.append(\"Abstract File Identifier: \" + new String(abstractFileIdentifier).trim() + \"\\n\");\n  buff.append(\"Biliographic File Identifier: \" + new String(bibliographicFileIdentifier) + \"\\n\");\n  buff.append(\"Volume Creation Date/Time: \" + createDateTimeString(volumeCreationDateTime) + \"\\n\");\n  buff.append(\"Volume Modification Date/Time: \" + createDateTimeString(volumeModifyDateTime) + \"\\n\");\n  buff.append(\"Volume Expiration Date/Time: \" + createDateTimeString(volumeCreationDateTime) + \"\\n\");\n  buff.append(\"Volume Effective Date/Time: \" + createDateTimeString(volumeEffectiveDateTime) + \"\\n\");\n  buff.append(\"File Structure Version: 0x\" + Integer.toHexString(fileStructureVersion) + \"\\n\");\n  buff.append(\"Unused: 0x\" + Integer.toHexString(unused4) + \"\\n\");\n  return buff.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 415,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 209,
        "endColumnNumber" : 88
      },
      "nodeContext" : "buff.append(\"Volume Set Size: 0x\" + Integer.toHexString(getVolumeSetSizeLE()) + \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 209,
    "startColumnNumber" : 14,
    "endLineNumber" : 209,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}