{
  "id" : 268,
  "expression" : "subHashTableBuffers[newTableIdx]",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "subHashTableBuffers[newTableIdx]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 520,
      "startColumnNumber" : 34,
      "endLineNumber" : 520,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 520,
        "startColumnNumber" : 17,
        "endLineNumber" : 520,
        "endColumnNumber" : 66
      },
      "nodeContext" : "newTableBuffer=subHashTableBuffers[newTableIdx]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 520,
        "startColumnNumber" : 6,
        "endLineNumber" : 520,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ByteBuffer newTableBuffer=subHashTableBuffers[newTableIdx];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2079,
        "startLineNumber" : 518,
        "startColumnNumber" : 4,
        "endLineNumber" : 571,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newTableIdx=(growthCount % 2 == 0) ? 1 : 0;\n  ByteBuffer newTableBuffer=subHashTableBuffers[newTableIdx];\n  for (int i=0; i < maxBuckets; i++) {\n    newTableBuffer.put(i * bucketSizeWithHash,(byte)0);\n  }\n  final ByteBuffer entryBuffer=tableBuffer.duplicate();\n  final ByteBuffer keyBuffer=tableBuffer.duplicate();\n  int numCopied=0;\n  for (int i=0; i < offsetHeap.getHeapSize(); i++) {\n    final int oldBucketOffset=offsetHeap.getAt(i);\n    if (isOffsetUsed(oldBucketOffset)) {\n      entryBuffer.limit(oldBucketOffset + bucketSizeWithHash);\n      entryBuffer.position(oldBucketOffset);\n      keyBuffer.limit(entryBuffer.position() + HASH_SIZE + keySize);\n      keyBuffer.position(entryBuffer.position() + HASH_SIZE);\n      final int keyHash=entryBuffer.getInt(entryBuffer.position()) & 0x7fffffff;\n      final int newBucket=findBucket(true,maxBuckets,newTableBuffer,keyBuffer,keyHash);\n      if (newBucket < 0) {\n        throw new ISE(\"Couldn't find a bucket while resizing\");\n      }\n      final int newBucketOffset=newBucket * bucketSizeWithHash;\n      newTableBuffer.position(newBucketOffset);\n      newTableBuffer.put(entryBuffer);\n      numCopied++;\n      offsetHeap.setAt(i,newBucketOffset);\n      aggregators.relocate(oldBucketOffset + baseAggregatorOffset,newBucketOffset + baseAggregatorOffset,tableBuffer,newTableBuffer);\n    }\n  }\n  size=numCopied;\n  tableBuffer=newTableBuffer;\n  growthCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2131,
        "startLineNumber" : 516,
        "startColumnNumber" : 4,
        "endLineNumber" : 571,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void adjustTableWhenFull(){\n  int newTableIdx=(growthCount % 2 == 0) ? 1 : 0;\n  ByteBuffer newTableBuffer=subHashTableBuffers[newTableIdx];\n  for (int i=0; i < maxBuckets; i++) {\n    newTableBuffer.put(i * bucketSizeWithHash,(byte)0);\n  }\n  final ByteBuffer entryBuffer=tableBuffer.duplicate();\n  final ByteBuffer keyBuffer=tableBuffer.duplicate();\n  int numCopied=0;\n  for (int i=0; i < offsetHeap.getHeapSize(); i++) {\n    final int oldBucketOffset=offsetHeap.getAt(i);\n    if (isOffsetUsed(oldBucketOffset)) {\n      entryBuffer.limit(oldBucketOffset + bucketSizeWithHash);\n      entryBuffer.position(oldBucketOffset);\n      keyBuffer.limit(entryBuffer.position() + HASH_SIZE + keySize);\n      keyBuffer.position(entryBuffer.position() + HASH_SIZE);\n      final int keyHash=entryBuffer.getInt(entryBuffer.position()) & 0x7fffffff;\n      final int newBucket=findBucket(true,maxBuckets,newTableBuffer,keyBuffer,keyHash);\n      if (newBucket < 0) {\n        throw new ISE(\"Couldn't find a bucket while resizing\");\n      }\n      final int newBucketOffset=newBucket * bucketSizeWithHash;\n      newTableBuffer.position(newBucketOffset);\n      newTableBuffer.put(entryBuffer);\n      numCopied++;\n      offsetHeap.setAt(i,newBucketOffset);\n      aggregators.relocate(oldBucketOffset + baseAggregatorOffset,newBucketOffset + baseAggregatorOffset,tableBuffer,newTableBuffer);\n    }\n  }\n  size=numCopied;\n  tableBuffer=newTableBuffer;\n  growthCount++;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 520,
        "startColumnNumber" : 6,
        "endLineNumber" : 520,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ByteBuffer newTableBuffer=subHashTableBuffers[newTableIdx];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 520,
    "startColumnNumber" : 34,
    "endLineNumber" : 520,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}