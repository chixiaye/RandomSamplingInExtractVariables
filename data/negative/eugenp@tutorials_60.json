{
  "id" : 60,
  "expression" : "\"ijkl\".getBytes(\"UTF-8\")",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-strings/src/test/java/com/baeldung/interview/StringToByteArrayUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ijkl\".getBytes(\"UTF-8\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 15,
      "startColumnNumber" : 28,
      "endLineNumber" : 15,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 15,
        "startColumnNumber" : 15,
        "endLineNumber" : 15,
        "endColumnNumber" : 52
      },
      "nodeContext" : "byteArray3=\"ijkl\".getBytes(\"UTF-8\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 53
      },
      "nodeContext" : "byte[] byteArray3=\"ijkl\".getBytes(\"UTF-8\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 12,
        "startColumnNumber" : 79,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] byteArray1=\"abcd\".getBytes();\n  byte[] byteArray2=\"efgh\".getBytes(StandardCharsets.US_ASCII);\n  byte[] byteArray3=\"ijkl\".getBytes(\"UTF-8\");\n  byte[] expected1=new byte[]{97,98,99,100};\n  byte[] expected2=new byte[]{101,102,103,104};\n  byte[] expected3=new byte[]{105,106,107,108};\n  assertArrayEquals(expected1,byteArray1);\n  assertArrayEquals(expected2,byteArray2);\n  assertArrayEquals(expected3,byteArray3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenGetBytes_thenCorrect() throws UnsupportedEncodingException {\n  byte[] byteArray1=\"abcd\".getBytes();\n  byte[] byteArray2=\"efgh\".getBytes(StandardCharsets.US_ASCII);\n  byte[] byteArray3=\"ijkl\".getBytes(\"UTF-8\");\n  byte[] expected1=new byte[]{97,98,99,100};\n  byte[] expected2=new byte[]{101,102,103,104};\n  byte[] expected3=new byte[]{105,106,107,108};\n  assertArrayEquals(expected1,byteArray1);\n  assertArrayEquals(expected2,byteArray2);\n  assertArrayEquals(expected3,byteArray3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 53
      },
      "nodeContext" : "byte[] byteArray3=\"ijkl\".getBytes(\"UTF-8\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 15,
    "startColumnNumber" : 28,
    "endLineNumber" : 15,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}