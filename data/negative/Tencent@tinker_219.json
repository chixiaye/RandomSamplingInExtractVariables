{
  "id" : 219,
  "expression" : "tinkerID",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/info/PatchInfoGen.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tinkerID",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 50,
      "startColumnNumber" : 16,
      "endLineNumber" : 50,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 32
      },
      "nodeContext" : "tinkerID == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tinkerID == null) {\n  throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 46,
        "startColumnNumber" : 70,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n  String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n  AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n  String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 45,
        "startColumnNumber" : 66,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addTinkerID() throws IOException, ParseException {\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 32
      },
      "nodeContext" : "tinkerID == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tinkerID",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 53,
      "startColumnNumber" : 60,
      "endLineNumber" : 53,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 69
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 70
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 46,
        "startColumnNumber" : 70,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n  String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n  AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n  String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 45,
        "startColumnNumber" : 66,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addTinkerID() throws IOException, ParseException {\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 70
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tinkerID",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 60,
      "startColumnNumber" : 16,
      "endLineNumber" : 60,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "tinkerID == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tinkerID == null) {\n  throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 56,
        "startColumnNumber" : 74,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n  String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n  AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n  String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 45,
        "startColumnNumber" : 66,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addTinkerID() throws IOException, ParseException {\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "tinkerID == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tinkerID",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 63,
      "startColumnNumber" : 64,
      "endLineNumber" : 63,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 73
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 74
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 56,
        "startColumnNumber" : 74,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n  String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n  AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n  String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n  if (tinkerID == null) {\n    throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n  }\n  config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 45,
        "startColumnNumber" : 66,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addTinkerID() throws IOException, ParseException {\n  if (!config.mPackageFields.containsKey(TypedValue.TINKER_ID)) {\n    AndroidParser oldAndroidManifest=AndroidParser.getAndroidManifest(config.mOldApkFile);\n    String tinkerID=oldAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the old apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.TINKER_ID,tinkerID);\n  }\n  if (!config.mPackageFields.containsKey(TypedValue.NEW_TINKER_ID)) {\n    AndroidParser newAndroidManifest=AndroidParser.getAndroidManifest(config.mNewApkFile);\n    String tinkerID=newAndroidManifest.metaDatas.get(TypedValue.TINKER_ID);\n    if (tinkerID == null) {\n      throw new TinkerPatchException(\"can't find TINKER_ID from the new apk manifest file, it must be set!\");\n    }\n    config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 74
      },
      "nodeContext" : "config.mPackageFields.put(TypedValue.NEW_TINKER_ID,tinkerID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 50,
    "startColumnNumber" : 16,
    "endLineNumber" : 50,
    "endColumnNumber" : 24
  }, {
    "charLength" : 8,
    "startLineNumber" : 53,
    "startColumnNumber" : 60,
    "endLineNumber" : 53,
    "endColumnNumber" : 68
  }, {
    "charLength" : 8,
    "startLineNumber" : 60,
    "startColumnNumber" : 16,
    "endLineNumber" : 60,
    "endColumnNumber" : 24
  }, {
    "charLength" : 8,
    "startLineNumber" : 63,
    "startColumnNumber" : 64,
    "endLineNumber" : 63,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}