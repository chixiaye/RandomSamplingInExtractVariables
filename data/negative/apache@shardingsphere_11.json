{
  "id" : 11,
  "expression" : "7",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/core/statement/ShardingSpherePreparedStatementTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 384,
      "startColumnNumber" : 37,
      "endLineNumber" : 384,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 384,
        "endColumnNumber" : 48
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 384,
        "endColumnNumber" : 49
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1275,
        "startLineNumber" : 377,
        "startColumnNumber" : 125,
        "endLineNumber" : 403,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  preparedStatement.setInt(1,itemId);\n  preparedStatement.setInt(2,orderId);\n  preparedStatement.setInt(3,userId1);\n  preparedStatement.setString(4,status);\n  preparedStatement.setInt(5,itemId);\n  preparedStatement.setInt(6,orderId);\n  preparedStatement.setInt(7,userId2);\n  preparedStatement.setString(8,status);\n  preparedStatement.setString(9,updatedStatus);\n  int result=preparedStatement.executeUpdate();\n  assertThat(result,is(2));\n  queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId1);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId1));\n    assertThat(resultSet.getString(3),is(status));\n  }\n   queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId2);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId2));\n    assertThat(resultSet.getString(3),is(status));\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 375,
        "startColumnNumber" : 8,
        "endLineNumber" : 403,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n  preparedStatement.setInt(1,itemId);\n  preparedStatement.setInt(2,orderId);\n  preparedStatement.setInt(3,userId1);\n  preparedStatement.setString(4,status);\n  preparedStatement.setInt(5,itemId);\n  preparedStatement.setInt(6,orderId);\n  preparedStatement.setInt(7,userId2);\n  preparedStatement.setString(8,status);\n  preparedStatement.setString(9,updatedStatus);\n  int result=preparedStatement.executeUpdate();\n  assertThat(result,is(2));\n  queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId1);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId1));\n    assertThat(resultSet.getString(3),is(status));\n  }\n   queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId2);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId2));\n    assertThat(resultSet.getString(3),is(status));\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 193,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3414,
        "startLineNumber" : 368,
        "startColumnNumber" : 62,
        "endLineNumber" : 434,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int itemId=1;\n  int userId1=101;\n  int userId2=102;\n  int orderId=200;\n  String status=\"init\";\n  String updatedStatus=\"updated on duplicate key\";\n  try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(status));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(status));\n    }\n   }\n   try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3482,
        "startLineNumber" : 367,
        "startColumnNumber" : 4,
        "endLineNumber" : 434,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertAddOnDuplicateKey() throws SQLException {\n  int itemId=1;\n  int userId1=101;\n  int userId2=102;\n  int orderId=200;\n  String status=\"init\";\n  String updatedStatus=\"updated on duplicate key\";\n  try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(status));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(status));\n    }\n   }\n   try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 427,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 384,
        "endColumnNumber" : 49
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 414,
      "startColumnNumber" : 37,
      "endLineNumber" : 414,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 414,
        "startColumnNumber" : 12,
        "endLineNumber" : 414,
        "endColumnNumber" : 48
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 414,
        "startColumnNumber" : 12,
        "endLineNumber" : 414,
        "endColumnNumber" : 49
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 407,
        "startColumnNumber" : 125,
        "endLineNumber" : 433,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  preparedStatement.setInt(1,itemId);\n  preparedStatement.setInt(2,orderId);\n  preparedStatement.setInt(3,userId1);\n  preparedStatement.setString(4,status);\n  preparedStatement.setInt(5,itemId);\n  preparedStatement.setInt(6,orderId);\n  preparedStatement.setInt(7,userId2);\n  preparedStatement.setString(8,status);\n  preparedStatement.setString(9,updatedStatus);\n  int result=preparedStatement.executeUpdate();\n  assertThat(result,is(2));\n  queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId1);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId1));\n    assertThat(resultSet.getString(3),is(updatedStatus));\n  }\n   queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId2);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId2));\n    assertThat(resultSet.getString(3),is(updatedStatus));\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 405,
        "startColumnNumber" : 8,
        "endLineNumber" : 433,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n  preparedStatement.setInt(1,itemId);\n  preparedStatement.setInt(2,orderId);\n  preparedStatement.setInt(3,userId1);\n  preparedStatement.setString(4,status);\n  preparedStatement.setInt(5,itemId);\n  preparedStatement.setInt(6,orderId);\n  preparedStatement.setInt(7,userId2);\n  preparedStatement.setString(8,status);\n  preparedStatement.setString(9,updatedStatus);\n  int result=preparedStatement.executeUpdate();\n  assertThat(result,is(2));\n  queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId1);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId1));\n    assertThat(resultSet.getString(3),is(updatedStatus));\n  }\n   queryStatement.setInt(1,orderId);\n  queryStatement.setInt(2,userId2);\n  try (ResultSet resultSet=queryStatement.executeQuery()){\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getInt(2),is(userId2));\n    assertThat(resultSet.getString(3),is(updatedStatus));\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 193,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3414,
        "startLineNumber" : 368,
        "startColumnNumber" : 62,
        "endLineNumber" : 434,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int itemId=1;\n  int userId1=101;\n  int userId2=102;\n  int orderId=200;\n  String status=\"init\";\n  String updatedStatus=\"updated on duplicate key\";\n  try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(status));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(status));\n    }\n   }\n   try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3482,
        "startLineNumber" : 367,
        "startColumnNumber" : 4,
        "endLineNumber" : 434,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertAddOnDuplicateKey() throws SQLException {\n  int itemId=1;\n  int userId1=101;\n  int userId2=102;\n  int orderId=200;\n  String status=\"init\";\n  String updatedStatus=\"updated on duplicate key\";\n  try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(status));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(status));\n    }\n   }\n   try (Connection connection=getShardingSphereDataSource().getConnection();PreparedStatement preparedStatement=connection.prepareStatement(INSERT_ON_DUPLICATE_KEY_SQL);PreparedStatement queryStatement=connection.prepareStatement(SELECT_SQL_WITH_PARAMETER_MARKER_RETURN_STATUS)){\n    preparedStatement.setInt(1,itemId);\n    preparedStatement.setInt(2,orderId);\n    preparedStatement.setInt(3,userId1);\n    preparedStatement.setString(4,status);\n    preparedStatement.setInt(5,itemId);\n    preparedStatement.setInt(6,orderId);\n    preparedStatement.setInt(7,userId2);\n    preparedStatement.setString(8,status);\n    preparedStatement.setString(9,updatedStatus);\n    int result=preparedStatement.executeUpdate();\n    assertThat(result,is(2));\n    queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId1);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId1));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n     queryStatement.setInt(1,orderId);\n    queryStatement.setInt(2,userId2);\n    try (ResultSet resultSet=queryStatement.executeQuery()){\n      assertTrue(resultSet.next());\n      assertThat(resultSet.getInt(2),is(userId2));\n      assertThat(resultSet.getString(3),is(updatedStatus));\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 427,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 414,
        "startColumnNumber" : 12,
        "endLineNumber" : 414,
        "endColumnNumber" : 49
      },
      "nodeContext" : "preparedStatement.setInt(7,userId2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 384,
    "startColumnNumber" : 37,
    "endLineNumber" : 384,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 414,
    "startColumnNumber" : 37,
    "endLineNumber" : 414,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}