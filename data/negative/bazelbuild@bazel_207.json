{
  "id" : 207,
  "expression" : "testNameProvider",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/java_tools/junitrunner/java/com/google/testing/junit/runner/util/CurrentRunningTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testNameProvider",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 36,
      "startColumnNumber" : 11,
      "endLineNumber" : 36,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 36,
        "endColumnNumber" : 35
      },
      "nodeContext" : "testNameProvider != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 36,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testNameProvider != null ? testNameProvider.get() : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return testNameProvider != null ? testNameProvider.get() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 35,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return testNameProvider != null ? testNameProvider.get() : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * If called during a JUnit test run with our test runner, returns the test running in the current thread. Otherwise (for example, when the test is run directly in an IDE), returns  {@code null}. <p>Our test runner is special only in that it installs  {@link #testNameProvider} to listen fortest start/stop events using {@link org.junit.runner.JUnitCore#addListener(org.junit.runner.notification.RunListener)}.\n */\npublic static Description get(){\n  return testNameProvider != null ? testNameProvider.get() : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 17,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return testNameProvider != null ? testNameProvider.get() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.testing.junit.runner.util.TestNameProvider"
  }, {
    "nodeContext" : "testNameProvider",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 36,
      "startColumnNumber" : 38,
      "endLineNumber" : 36,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 60
      },
      "nodeContext" : "testNameProvider.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 36,
        "startColumnNumber" : 11,
        "endLineNumber" : 36,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testNameProvider != null ? testNameProvider.get() : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return testNameProvider != null ? testNameProvider.get() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 35,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return testNameProvider != null ? testNameProvider.get() : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * If called during a JUnit test run with our test runner, returns the test running in the current thread. Otherwise (for example, when the test is run directly in an IDE), returns  {@code null}. <p>Our test runner is special only in that it installs  {@link #testNameProvider} to listen fortest start/stop events using {@link org.junit.runner.JUnitCore#addListener(org.junit.runner.notification.RunListener)}.\n */\npublic static Description get(){\n  return testNameProvider != null ? testNameProvider.get() : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 17,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return testNameProvider != null ? testNameProvider.get() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.testing.junit.runner.util.TestNameProvider"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 36,
    "startColumnNumber" : 11,
    "endLineNumber" : 36,
    "endColumnNumber" : 27
  }, {
    "charLength" : 16,
    "startLineNumber" : 36,
    "startColumnNumber" : 38,
    "endLineNumber" : 36,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}