{
  "id" : 191,
  "expression" : "dataSet.getYValForXIndex(xIndex)",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "266fb4d5d6497ea28ab71012d0f6657921f42583",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/charts/PieRadarChartBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataSet.getYValForXIndex(xIndex)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 438,
      "startColumnNumber" : 25,
      "endLineNumber" : 438,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 438,
        "startColumnNumber" : 18,
        "endLineNumber" : 438,
        "endColumnNumber" : 57
      },
      "nodeContext" : "yVal=dataSet.getYValForXIndex(xIndex)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 438,
        "startColumnNumber" : 12,
        "endLineNumber" : 438,
        "endColumnNumber" : 58
      },
      "nodeContext" : "float yVal=dataSet.getYValForXIndex(xIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 433,
        "startColumnNumber" : 58,
        "endLineNumber" : 443,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DataSet<?> dataSet=mData.getDataSetByIndex(i);\n  float yVal=dataSet.getYValForXIndex(xIndex);\n  if (!Float.isNaN(yVal)) {\n    vals.add(new SelInfo(yVal,i,dataSet));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 433,
        "startColumnNumber" : 8,
        "endLineNumber" : 443,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mData.getDataSetCount(); i++) {\n  DataSet<?> dataSet=mData.getDataSetByIndex(i);\n  float yVal=dataSet.getYValForXIndex(xIndex);\n  if (!Float.isNaN(yVal)) {\n    vals.add(new SelInfo(yVal,i,dataSet));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 429,
        "startColumnNumber" : 58,
        "endLineNumber" : 446,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<SelInfo> vals=new ArrayList<SelInfo>();\n  for (int i=0; i < mData.getDataSetCount(); i++) {\n    DataSet<?> dataSet=mData.getDataSetByIndex(i);\n    float yVal=dataSet.getYValForXIndex(xIndex);\n    if (!Float.isNaN(yVal)) {\n      vals.add(new SelInfo(yVal,i,dataSet));\n    }\n  }\n  return vals;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 421,
        "startColumnNumber" : 4,
        "endLineNumber" : 446,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an array of SelInfo objects for the given x-index. The SelInfo objects give information about the value at the selected index and the DataSet it belongs to. INFORMATION: This method does calculations at runtime. Do not over-use in performance critical situations.\n * @return\n */\npublic ArrayList<SelInfo> getYValsAtIndex(int xIndex){\n  ArrayList<SelInfo> vals=new ArrayList<SelInfo>();\n  for (int i=0; i < mData.getDataSetCount(); i++) {\n    DataSet<?> dataSet=mData.getDataSetByIndex(i);\n    float yVal=dataSet.getYValForXIndex(xIndex);\n    if (!Float.isNaN(yVal)) {\n      vals.add(new SelInfo(yVal,i,dataSet));\n    }\n  }\n  return vals;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 438,
        "startColumnNumber" : 12,
        "endLineNumber" : 438,
        "endColumnNumber" : 58
      },
      "nodeContext" : "float yVal=dataSet.getYValForXIndex(xIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 438,
    "startColumnNumber" : 25,
    "endLineNumber" : 438,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}