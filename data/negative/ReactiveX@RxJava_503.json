{
  "id" : 503,
  "expression" : "\"Multiple Error present but no assertion error!\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/subscribers/TestSubscriberTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Multiple Error present but no assertion error!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 301,
      "startColumnNumber" : 13,
      "endLineNumber" : 301,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 62
      },
      "nodeContext" : "fail(\"Multiple Error present but no assertion error!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 63
      },
      "nodeContext" : "fail(\"Multiple Error present but no assertion error!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 281,
        "startColumnNumber" : 37,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  ts.onSubscribe(EmptySubscription.INSTANCE);\n  ts.onError(new TestException());\n  ts.onError(new TestException());\n  try {\n    ts.assertNoErrors();\n  }\n catch (  AssertionError ex) {\n    Throwable e=ex.getCause();\n    if (!(e instanceof CompositeException)) {\n      fail(\"Multiple Error present but the reported error doesn't have a composite cause!\");\n    }\n    CompositeException ce=(CompositeException)e;\n    if (ce.size() != 2) {\n      ce.printStackTrace();\n    }\n    assertEquals(2,ce.size());\n    return;\n  }\n  fail(\"Multiple Error present but no assertion error!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 280,
        "startColumnNumber" : 4,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultipleErrors(){\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  ts.onSubscribe(EmptySubscription.INSTANCE);\n  ts.onError(new TestException());\n  ts.onError(new TestException());\n  try {\n    ts.assertNoErrors();\n  }\n catch (  AssertionError ex) {\n    Throwable e=ex.getCause();\n    if (!(e instanceof CompositeException)) {\n      fail(\"Multiple Error present but the reported error doesn't have a composite cause!\");\n    }\n    CompositeException ce=(CompositeException)e;\n    if (ce.size() != 2) {\n      ce.printStackTrace();\n    }\n    assertEquals(2,ce.size());\n    return;\n  }\n  fail(\"Multiple Error present but no assertion error!\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 63
      },
      "nodeContext" : "fail(\"Multiple Error present but no assertion error!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 301,
    "startColumnNumber" : 13,
    "endLineNumber" : 301,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}