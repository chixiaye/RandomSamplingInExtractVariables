{
  "id" : 341,
  "expression" : "getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/ChannelWrappedInvoker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 72,
      "startLineNumber" : 71,
      "startColumnNumber" : 40,
      "endLineNumber" : 71,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 113
      },
      "nodeContext" : "currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 114
      },
      "nodeContext" : "currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 70,
        "startColumnNumber" : 50,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n  return AsyncRpcResult.newDefaultAsyncResult(invocation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (RpcUtils.isOneway(getUrl(),inv)) {\n  currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n  return AsyncRpcResult.newDefaultAsyncResult(invocation);\n}\n else {\n  CompletableFuture<AppResponse> appResponseFuture=currentClient.request(inv).thenApply(obj -> (AppResponse)obj);\n  return new AsyncRpcResult(appResponseFuture,inv);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (RpcUtils.isOneway(getUrl(),inv)) {\n    currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n    return AsyncRpcResult.newDefaultAsyncResult(invocation);\n  }\n else {\n    CompletableFuture<AppResponse> appResponseFuture=currentClient.request(inv).thenApply(obj -> (AppResponse)obj);\n    return new AsyncRpcResult(appResponseFuture,inv);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (RpcUtils.isOneway(getUrl(),inv)) {\n    currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n    return AsyncRpcResult.newDefaultAsyncResult(invocation);\n  }\n else {\n    CompletableFuture<AppResponse> appResponseFuture=currentClient.request(inv).thenApply(obj -> (AppResponse)obj);\n    return new AsyncRpcResult(appResponseFuture,inv);\n  }\n}\n catch (RpcException e) {\n  throw e;\n}\ncatch (TimeoutException e) {\n  throw new RpcException(RpcException.TIMEOUT_EXCEPTION,e.getMessage(),e);\n}\ncatch (RemotingException e) {\n  throw new RpcException(RpcException.NETWORK_EXCEPTION,e.getMessage(),e);\n}\ncatch (Throwable e) {\n  throw new RpcException(e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 63,
        "startColumnNumber" : 70,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RpcInvocation inv=(RpcInvocation)invocation;\n  inv.setAttachment(PATH_KEY,getInterface().getName());\n  inv.setAttachment(CALLBACK_SERVICE_KEY,serviceKey);\n  try {\n    if (RpcUtils.isOneway(getUrl(),inv)) {\n      currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n      return AsyncRpcResult.newDefaultAsyncResult(invocation);\n    }\n else {\n      CompletableFuture<AppResponse> appResponseFuture=currentClient.request(inv).thenApply(obj -> (AppResponse)obj);\n      return new AsyncRpcResult(appResponseFuture,inv);\n    }\n  }\n catch (  RpcException e) {\n    throw e;\n  }\ncatch (  TimeoutException e) {\n    throw new RpcException(RpcException.TIMEOUT_EXCEPTION,e.getMessage(),e);\n  }\ncatch (  RemotingException e) {\n    throw new RpcException(RpcException.NETWORK_EXCEPTION,e.getMessage(),e);\n  }\ncatch (  Throwable e) {\n    throw new RpcException(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Result doInvoke(Invocation invocation) throws Throwable {\n  RpcInvocation inv=(RpcInvocation)invocation;\n  inv.setAttachment(PATH_KEY,getInterface().getName());\n  inv.setAttachment(CALLBACK_SERVICE_KEY,serviceKey);\n  try {\n    if (RpcUtils.isOneway(getUrl(),inv)) {\n      currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n      return AsyncRpcResult.newDefaultAsyncResult(invocation);\n    }\n else {\n      CompletableFuture<AppResponse> appResponseFuture=currentClient.request(inv).thenApply(obj -> (AppResponse)obj);\n      return new AsyncRpcResult(appResponseFuture,inv);\n    }\n  }\n catch (  RpcException e) {\n    throw e;\n  }\ncatch (  TimeoutException e) {\n    throw new RpcException(RpcException.TIMEOUT_EXCEPTION,e.getMessage(),e);\n  }\ncatch (  RemotingException e) {\n    throw new RpcException(RpcException.NETWORK_EXCEPTION,e.getMessage(),e);\n  }\ncatch (  Throwable e) {\n    throw new RpcException(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 114
      },
      "nodeContext" : "currentClient.send(inv,getUrl().getMethodParameter(invocation.getMethodName(),SENT_KEY,false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 72,
    "startLineNumber" : 71,
    "startColumnNumber" : 40,
    "endLineNumber" : 71,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}