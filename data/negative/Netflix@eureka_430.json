{
  "id" : 430,
  "expression" : "ic.items",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-test-utils/src/main/java/com/netflix/eureka2/rx/Observables.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ic.items",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 78,
      "startColumnNumber" : 59,
      "endLineNumber" : 78,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 43,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Observable.from(ic.items)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 78,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 69
      },
      "nodeContext" : "itemObservableList.add(Observable.from(ic.items))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 78,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemObservableList.add(Observable.from(ic.items));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 77,
        "startColumnNumber" : 59,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  itemObservableList.add(Observable.from(ic.items));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (ItemCollector<T> ic : itemCollectors) {\n  itemObservableList.add(Observable.from(ic.items));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 68,
        "startColumnNumber" : 82,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Collections.sort(itemCollectors,new Comparator<ItemCollector<T>>(){\n    @Override public int compare(    ItemCollector<T> o1,    ItemCollector<T> o2){\n      return o1.index < o2.index ? -1 : o1.index > o2.index ? 1 : 0;\n    }\n  }\n);\n  List<Observable<T>> itemObservableList=new ArrayList<Observable<T>>(itemCollectors.size());\n  for (  ItemCollector<T> ic : itemCollectors) {\n    itemObservableList.add(Observable.from(ic.items));\n  }\n  return Observable.concat(Observable.from(itemObservableList));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Observable<T> call(ArrayList<ItemCollector<T>> itemCollectors){\n  Collections.sort(itemCollectors,new Comparator<ItemCollector<T>>(){\n    @Override public int compare(    ItemCollector<T> o1,    ItemCollector<T> o2){\n      return o1.index < o2.index ? -1 : o1.index > o2.index ? 1 : 0;\n    }\n  }\n);\n  List<Observable<T>> itemObservableList=new ArrayList<Observable<T>>(itemCollectors.size());\n  for (  ItemCollector<T> ic : itemCollectors) {\n    itemObservableList.add(Observable.from(ic.items));\n  }\n  return Observable.concat(Observable.from(itemObservableList));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 78,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemObservableList.add(Observable.from(ic.items));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.ConcurrentLinkedQueue<T>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 78,
    "startColumnNumber" : 59,
    "endLineNumber" : 78,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}