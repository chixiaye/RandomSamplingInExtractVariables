{
  "id" : 283,
  "expression" : "\"It should either be non-negative or be one of the \"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/connector/kafka/source/split/KafkaPartitionSplit.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"It should either be non-negative or be one of the \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 134,
      "startColumnNumber" : 38,
      "endLineNumber" : 134,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 135,
        "endColumnNumber" : 82
      },
      "nodeContext" : "\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 132,
        "startColumnNumber" : 20,
        "endLineNumber" : 136,
        "endColumnNumber" : 97
      },
      "nodeContext" : "String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 131,
        "startColumnNumber" : 18,
        "endLineNumber" : 136,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 99
      },
      "nodeContext" : "throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 130,
        "startColumnNumber" : 91,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (startingOffset < 0 && !VALID_STARTING_OFFSET_MARKERS.contains(startingOffset)) {\n  throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 124,
        "startColumnNumber" : 73,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (startingOffset == null) {\n    throw new FlinkRuntimeException(\"Cannot initialize starting offset for partition \" + tp);\n  }\n  if (startingOffset < 0 && !VALID_STARTING_OFFSET_MARKERS.contains(startingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n  }\n  if (stoppingOffset < 0 && !VALID_STOPPING_OFFSET_MARKERS.contains(stoppingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void verifyInitialOffset(TopicPartition tp,Long startingOffset,long stoppingOffset){\n  if (startingOffset == null) {\n    throw new FlinkRuntimeException(\"Cannot initialize starting offset for partition \" + tp);\n  }\n  if (startingOffset < 0 && !VALID_STARTING_OFFSET_MARKERS.contains(startingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n  }\n  if (stoppingOffset < 0 && !VALID_STOPPING_OFFSET_MARKERS.contains(stoppingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 135,
        "endColumnNumber" : 82
      },
      "nodeContext" : "\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"It should either be non-negative or be one of the \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 143,
      "startColumnNumber" : 38,
      "endLineNumber" : 143,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 142,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 108
      },
      "nodeContext" : "\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 47
      },
      "nodeContext" : "String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 140,
        "startColumnNumber" : 18,
        "endLineNumber" : 149,
        "endColumnNumber" : 48
      },
      "nodeContext" : "new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 49
      },
      "nodeContext" : "throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 139,
        "startColumnNumber" : 91,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (stoppingOffset < 0 && !VALID_STOPPING_OFFSET_MARKERS.contains(stoppingOffset)) {\n  throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 124,
        "startColumnNumber" : 73,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (startingOffset == null) {\n    throw new FlinkRuntimeException(\"Cannot initialize starting offset for partition \" + tp);\n  }\n  if (startingOffset < 0 && !VALID_STARTING_OFFSET_MARKERS.contains(startingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n  }\n  if (stoppingOffset < 0 && !VALID_STOPPING_OFFSET_MARKERS.contains(stoppingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void verifyInitialOffset(TopicPartition tp,Long startingOffset,long stoppingOffset){\n  if (startingOffset == null) {\n    throw new FlinkRuntimeException(\"Cannot initialize starting offset for partition \" + tp);\n  }\n  if (startingOffset < 0 && !VALID_STARTING_OFFSET_MARKERS.contains(startingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Invalid starting offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(earliest), %d(latest), %d(committed)].\",startingOffset,tp,LATEST_OFFSET,EARLIEST_OFFSET,COMMITTED_OFFSET));\n  }\n  if (stoppingOffset < 0 && !VALID_STOPPING_OFFSET_MARKERS.contains(stoppingOffset)) {\n    throw new FlinkRuntimeException(String.format(\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\",stoppingOffset,tp,LATEST_OFFSET,COMMITTED_OFFSET,NO_STOPPING_OFFSET));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 142,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 108
      },
      "nodeContext" : "\"Illegal stopping offset %d is specified for partition %s. \" + \"It should either be non-negative or be one of the \" + \"[%d(latest), %d(committed), %d(Long.MIN_VALUE, no_stopping_offset)].\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 134,
    "startColumnNumber" : 38,
    "endLineNumber" : 134,
    "endColumnNumber" : 90
  }, {
    "charLength" : 52,
    "startLineNumber" : 143,
    "startColumnNumber" : 38,
    "endLineNumber" : 143,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}