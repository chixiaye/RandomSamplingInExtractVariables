{
  "id" : 406,
  "expression" : "flags",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-annotations-processor/src/test/resources/io/realm/some_test_EmbeddedClassSimpleParentRealmProxy.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "flags",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 417,
      "startColumnNumber" : 83,
      "endLineNumber" : 417,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 417,
        "startColumnNumber" : 29,
        "endLineNumber" : 417,
        "endColumnNumber" : 89
      },
      "nodeContext" : "update(realm,columnInfo,realmObject,object,cache,flags)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 417,
        "startColumnNumber" : 15,
        "endLineNumber" : 417,
        "endColumnNumber" : 145
      },
      "nodeContext" : "(canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 417,
        "endColumnNumber" : 146
      },
      "nodeContext" : "return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 376,
        "startColumnNumber" : 251,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (object instanceof RealmObjectProxy && !RealmObject.isFrozen(object) && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null) {\n    final BaseRealm otherRealm=((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm();\n    if (otherRealm.threadId != realm.threadId) {\n      throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\");\n    }\n    if (otherRealm.getPath().equals(realm.getPath())) {\n      return object;\n    }\n  }\n  final BaseRealm.RealmObjectContext objectContext=BaseRealm.objectContext.get();\n  RealmObjectProxy cachedRealmObject=cache.get(object);\n  if (cachedRealmObject != null) {\n    return (some.test.EmbeddedClassSimpleParent)cachedRealmObject;\n  }\n  some.test.EmbeddedClassSimpleParent realmObject=null;\n  boolean canUpdate=update;\n  if (canUpdate) {\n    Table table=realm.getTable(some.test.EmbeddedClassSimpleParent.class);\n    long pkColumnKey=columnInfo.idColKey;\n    String value=((some_test_EmbeddedClassSimpleParentRealmProxyInterface)object).realmGet$id();\n    long objKey=Table.NO_MATCH;\n    if (value == null) {\n      objKey=table.findFirstNull(pkColumnKey);\n    }\n else {\n      objKey=table.findFirstString(pkColumnKey,value);\n    }\n    if (objKey == Table.NO_MATCH) {\n      canUpdate=false;\n    }\n else {\n      try {\n        objectContext.set(realm,table.getUncheckedRow(objKey),columnInfo,false,Collections.<String>emptyList());\n        realmObject=new io.realm.some_test_EmbeddedClassSimpleParentRealmProxy();\n        cache.put(object,(RealmObjectProxy)realmObject);\n      }\n  finally {\n        objectContext.clear();\n      }\n    }\n  }\n  return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 376,
        "startColumnNumber" : 4,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static some.test.EmbeddedClassSimpleParent copyOrUpdate(Realm realm,EmbeddedClassSimpleParentColumnInfo columnInfo,some.test.EmbeddedClassSimpleParent object,boolean update,Map<RealmModel,RealmObjectProxy> cache,Set<ImportFlag> flags){\n  if (object instanceof RealmObjectProxy && !RealmObject.isFrozen(object) && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null) {\n    final BaseRealm otherRealm=((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm();\n    if (otherRealm.threadId != realm.threadId) {\n      throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\");\n    }\n    if (otherRealm.getPath().equals(realm.getPath())) {\n      return object;\n    }\n  }\n  final BaseRealm.RealmObjectContext objectContext=BaseRealm.objectContext.get();\n  RealmObjectProxy cachedRealmObject=cache.get(object);\n  if (cachedRealmObject != null) {\n    return (some.test.EmbeddedClassSimpleParent)cachedRealmObject;\n  }\n  some.test.EmbeddedClassSimpleParent realmObject=null;\n  boolean canUpdate=update;\n  if (canUpdate) {\n    Table table=realm.getTable(some.test.EmbeddedClassSimpleParent.class);\n    long pkColumnKey=columnInfo.idColKey;\n    String value=((some_test_EmbeddedClassSimpleParentRealmProxyInterface)object).realmGet$id();\n    long objKey=Table.NO_MATCH;\n    if (value == null) {\n      objKey=table.findFirstNull(pkColumnKey);\n    }\n else {\n      objKey=table.findFirstString(pkColumnKey,value);\n    }\n    if (objKey == Table.NO_MATCH) {\n      canUpdate=false;\n    }\n else {\n      try {\n        objectContext.set(realm,table.getUncheckedRow(objKey),columnInfo,false,Collections.<String>emptyList());\n        realmObject=new io.realm.some_test_EmbeddedClassSimpleParentRealmProxy();\n        cache.put(object,(RealmObjectProxy)realmObject);\n      }\n  finally {\n        objectContext.clear();\n      }\n    }\n  }\n  return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 417,
        "endColumnNumber" : 146
      },
      "nodeContext" : "return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<io.realm.ImportFlag>"
  }, {
    "nodeContext" : "flags",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 417,
      "startColumnNumber" : 139,
      "endLineNumber" : 417,
      "endColumnNumber" : 144
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 417,
        "startColumnNumber" : 92,
        "endLineNumber" : 417,
        "endColumnNumber" : 145
      },
      "nodeContext" : "copy(realm,columnInfo,object,update,cache,flags)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 417,
        "startColumnNumber" : 15,
        "endLineNumber" : 417,
        "endColumnNumber" : 145
      },
      "nodeContext" : "(canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 417,
        "endColumnNumber" : 146
      },
      "nodeContext" : "return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 376,
        "startColumnNumber" : 251,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (object instanceof RealmObjectProxy && !RealmObject.isFrozen(object) && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null) {\n    final BaseRealm otherRealm=((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm();\n    if (otherRealm.threadId != realm.threadId) {\n      throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\");\n    }\n    if (otherRealm.getPath().equals(realm.getPath())) {\n      return object;\n    }\n  }\n  final BaseRealm.RealmObjectContext objectContext=BaseRealm.objectContext.get();\n  RealmObjectProxy cachedRealmObject=cache.get(object);\n  if (cachedRealmObject != null) {\n    return (some.test.EmbeddedClassSimpleParent)cachedRealmObject;\n  }\n  some.test.EmbeddedClassSimpleParent realmObject=null;\n  boolean canUpdate=update;\n  if (canUpdate) {\n    Table table=realm.getTable(some.test.EmbeddedClassSimpleParent.class);\n    long pkColumnKey=columnInfo.idColKey;\n    String value=((some_test_EmbeddedClassSimpleParentRealmProxyInterface)object).realmGet$id();\n    long objKey=Table.NO_MATCH;\n    if (value == null) {\n      objKey=table.findFirstNull(pkColumnKey);\n    }\n else {\n      objKey=table.findFirstString(pkColumnKey,value);\n    }\n    if (objKey == Table.NO_MATCH) {\n      canUpdate=false;\n    }\n else {\n      try {\n        objectContext.set(realm,table.getUncheckedRow(objKey),columnInfo,false,Collections.<String>emptyList());\n        realmObject=new io.realm.some_test_EmbeddedClassSimpleParentRealmProxy();\n        cache.put(object,(RealmObjectProxy)realmObject);\n      }\n  finally {\n        objectContext.clear();\n      }\n    }\n  }\n  return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 376,
        "startColumnNumber" : 4,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static some.test.EmbeddedClassSimpleParent copyOrUpdate(Realm realm,EmbeddedClassSimpleParentColumnInfo columnInfo,some.test.EmbeddedClassSimpleParent object,boolean update,Map<RealmModel,RealmObjectProxy> cache,Set<ImportFlag> flags){\n  if (object instanceof RealmObjectProxy && !RealmObject.isFrozen(object) && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null) {\n    final BaseRealm otherRealm=((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm();\n    if (otherRealm.threadId != realm.threadId) {\n      throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\");\n    }\n    if (otherRealm.getPath().equals(realm.getPath())) {\n      return object;\n    }\n  }\n  final BaseRealm.RealmObjectContext objectContext=BaseRealm.objectContext.get();\n  RealmObjectProxy cachedRealmObject=cache.get(object);\n  if (cachedRealmObject != null) {\n    return (some.test.EmbeddedClassSimpleParent)cachedRealmObject;\n  }\n  some.test.EmbeddedClassSimpleParent realmObject=null;\n  boolean canUpdate=update;\n  if (canUpdate) {\n    Table table=realm.getTable(some.test.EmbeddedClassSimpleParent.class);\n    long pkColumnKey=columnInfo.idColKey;\n    String value=((some_test_EmbeddedClassSimpleParentRealmProxyInterface)object).realmGet$id();\n    long objKey=Table.NO_MATCH;\n    if (value == null) {\n      objKey=table.findFirstNull(pkColumnKey);\n    }\n else {\n      objKey=table.findFirstString(pkColumnKey,value);\n    }\n    if (objKey == Table.NO_MATCH) {\n      canUpdate=false;\n    }\n else {\n      try {\n        objectContext.set(realm,table.getUncheckedRow(objKey),columnInfo,false,Collections.<String>emptyList());\n        realmObject=new io.realm.some_test_EmbeddedClassSimpleParentRealmProxy();\n        cache.put(object,(RealmObjectProxy)realmObject);\n      }\n  finally {\n        objectContext.clear();\n      }\n    }\n  }\n  return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 417,
        "endColumnNumber" : 146
      },
      "nodeContext" : "return (canUpdate) ? update(realm,columnInfo,realmObject,object,cache,flags) : copy(realm,columnInfo,object,update,cache,flags);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<io.realm.ImportFlag>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 417,
    "startColumnNumber" : 83,
    "endLineNumber" : 417,
    "endColumnNumber" : 88
  }, {
    "charLength" : 5,
    "startLineNumber" : 417,
    "startColumnNumber" : 139,
    "endLineNumber" : 417,
    "endColumnNumber" : 144
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}