{
  "id" : 384,
  "expression" : "new PascalCaseConverter()",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-annotations-processor/src/test/java/io/realm/processor/NameConverterTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PascalCaseConverter()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 62,
      "startColumnNumber" : 34,
      "endLineNumber" : 62,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 62,
        "startColumnNumber" : 22,
        "endLineNumber" : 62,
        "endColumnNumber" : 59
      },
      "nodeContext" : "converter=new PascalCaseConverter()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "NameConverter converter=new PascalCaseConverter();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1795,
        "startLineNumber" : 61,
        "startColumnNumber" : 29,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NameConverter converter=new PascalCaseConverter();\n  Map<String,String> values=new LinkedHashMap<String,String>(){\n{\n      put(\"camelCase\",\"CamelCase\");\n      put(\"PascalCase\",\"PascalCase\");\n      put(\"mHungarianNotation\",\"HungarianNotation\");\n      put(\"_PascalCaseWithStartingSeparator\",\"PascalCaseWithStartingSeparator\");\n      put(\"_camelCaseWithStartingSeparator\",\"CamelCaseWithStartingSeparator\");\n      put(\"ALL_CAPS_WITH_SEPARATOR\",\"AllCapsWithSeparator\");\n      put(\"ALLCAPS\",\"Allcaps\");\n      put(\"_ALL_CAPS_WITH_STARTING_SEPARATOR\",\"AllCapsWithStartingSeparator\");\n      put(\"alllower\",\"Alllower\");\n      put(\"all_lower_with_separator\",\"AllLowerWithSeparator\");\n      put(\"$generatedNames\",\"GeneratedNames\");\n      put(\"generatedNames$\",\"GeneratedNames\");\n      put(\"generated$Names\",\"GeneratedNames\");\n      put(\"πPi\",\"ΠPi\");\n      put(\"NonAsciiÆøÅ\",\"NonAsciiÆøÅ\");\n      put(\"HTMLFile\",\"HtmlFile\");\n      put(\"aHTMLFile\",\"AHtmlFile\");\n      put(\"_HTMLFile\",\"HtmlFile\");\n      put(\"\\uD83D\\uDE01\",\"\\uD83D\\uDE01\");\n      put(\"m\\uD83D\\uDE01\",\"M\\uD83D\\uDE01\");\n      put(\"M\\uD83D\\uDE01\",\"M\\uD83D\\uDE01\");\n      put(\"\\uD83D\\uDE01Smiley\",\"\\uD83D\\uDE01smiley\");\n      put(\"_\\uD83D\\uDE01smiley\",\"\\uD83D\\uDE01smiley\");\n    }\n  }\n;\n  for (  Map.Entry<String,String> entry : values.entrySet()) {\n    assertEquals(entry.getValue(),converter.convert(entry.getKey()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1830,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void pascalCase(){\n  NameConverter converter=new PascalCaseConverter();\n  Map<String,String> values=new LinkedHashMap<String,String>(){\n{\n      put(\"camelCase\",\"CamelCase\");\n      put(\"PascalCase\",\"PascalCase\");\n      put(\"mHungarianNotation\",\"HungarianNotation\");\n      put(\"_PascalCaseWithStartingSeparator\",\"PascalCaseWithStartingSeparator\");\n      put(\"_camelCaseWithStartingSeparator\",\"CamelCaseWithStartingSeparator\");\n      put(\"ALL_CAPS_WITH_SEPARATOR\",\"AllCapsWithSeparator\");\n      put(\"ALLCAPS\",\"Allcaps\");\n      put(\"_ALL_CAPS_WITH_STARTING_SEPARATOR\",\"AllCapsWithStartingSeparator\");\n      put(\"alllower\",\"Alllower\");\n      put(\"all_lower_with_separator\",\"AllLowerWithSeparator\");\n      put(\"$generatedNames\",\"GeneratedNames\");\n      put(\"generatedNames$\",\"GeneratedNames\");\n      put(\"generated$Names\",\"GeneratedNames\");\n      put(\"πPi\",\"ΠPi\");\n      put(\"NonAsciiÆøÅ\",\"NonAsciiÆøÅ\");\n      put(\"HTMLFile\",\"HtmlFile\");\n      put(\"aHTMLFile\",\"AHtmlFile\");\n      put(\"_HTMLFile\",\"HtmlFile\");\n      put(\"\\uD83D\\uDE01\",\"\\uD83D\\uDE01\");\n      put(\"m\\uD83D\\uDE01\",\"M\\uD83D\\uDE01\");\n      put(\"M\\uD83D\\uDE01\",\"M\\uD83D\\uDE01\");\n      put(\"\\uD83D\\uDE01Smiley\",\"\\uD83D\\uDE01smiley\");\n      put(\"_\\uD83D\\uDE01smiley\",\"\\uD83D\\uDE01smiley\");\n    }\n  }\n;\n  for (  Map.Entry<String,String> entry : values.entrySet()) {\n    assertEquals(entry.getValue(),converter.convert(entry.getKey()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "NameConverter converter=new PascalCaseConverter();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.realm.processor.PascalCaseConverter"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 62,
    "startColumnNumber" : 34,
    "endLineNumber" : 62,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}