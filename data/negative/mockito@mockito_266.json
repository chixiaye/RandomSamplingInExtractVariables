{
  "id" : 266,
  "expression" : "TreeSet.class",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TreeSet.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 99,
      "startColumnNumber" : 27,
      "endLineNumber" : 99,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 99,
        "startColumnNumber" : 19,
        "endLineNumber" : 99,
        "endColumnNumber" : 40
      },
      "nodeContext" : "type == TreeSet.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2186,
        "startLineNumber" : 99,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 270,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2276,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 284,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2364,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == HashSet.class) {\n  return new HashSet<Object>();\n}\n else if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 298,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2448,
        "startLineNumber" : 93,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == Set.class) {\n  return new HashSet<Object>();\n}\n else if (type == HashSet.class) {\n  return new HashSet<Object>();\n}\n else if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 312,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2542,
        "startLineNumber" : 91,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == Collection.class) {\n  return new LinkedList<Object>();\n}\n else if (type == Set.class) {\n  return new HashSet<Object>();\n}\n else if (type == HashSet.class) {\n  return new HashSet<Object>();\n}\n else if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 326,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2634,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type == Iterable.class) {\n  return new ArrayList<Object>(0);\n}\n else if (type == Collection.class) {\n  return new LinkedList<Object>();\n}\n else if (type == Set.class) {\n  return new HashSet<Object>();\n}\n else if (type == HashSet.class) {\n  return new HashSet<Object>();\n}\n else if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 341,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2945,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Primitives.isPrimitiveOrWrapper(type)) {\n  return Primitives.defaultValue(type);\n}\n else if (type == Iterable.class) {\n  return new ArrayList<Object>(0);\n}\n else if (type == Collection.class) {\n  return new LinkedList<Object>();\n}\n else if (type == Set.class) {\n  return new HashSet<Object>();\n}\n else if (type == HashSet.class) {\n  return new HashSet<Object>();\n}\n else if (type == SortedSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == TreeSet.class) {\n  return new TreeSet<Object>();\n}\n else if (type == LinkedHashSet.class) {\n  return new LinkedHashSet<Object>();\n}\n else if (type == List.class) {\n  return new LinkedList<Object>();\n}\n else if (type == LinkedList.class) {\n  return new LinkedList<Object>();\n}\n else if (type == ArrayList.class) {\n  return new ArrayList<Object>();\n}\n else if (type == Map.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == HashMap.class) {\n  return new HashMap<Object,Object>();\n}\n else if (type == SortedMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == TreeMap.class) {\n  return new TreeMap<Object,Object>();\n}\n else if (type == LinkedHashMap.class) {\n  return new LinkedHashMap<Object,Object>();\n}\n else if (\"java.util.Optional\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptional();\n}\n else if (\"java.util.OptionalDouble\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalDouble();\n}\n else if (\"java.util.OptionalInt\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalInt();\n}\n else if (\"java.util.OptionalLong\".equals(type.getName())) {\n  return JavaEightUtil.emptyOptionalLong();\n}\n else if (\"java.util.stream.Stream\".equals(type.getName())) {\n  return JavaEightUtil.emptyStream();\n}\n else if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyDoubleStream();\n}\n else if (\"java.util.stream.IntStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyIntStream();\n}\n else if (\"java.util.stream.LongStream\".equals(type.getName())) {\n  return JavaEightUtil.emptyLongStream();\n}\n else if (\"java.time.Duration\".equals(type.getName())) {\n  return JavaEightUtil.emptyDuration();\n}\n else if (\"java.time.Period\".equals(type.getName())) {\n  return JavaEightUtil.emptyPeriod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 352,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3045,
        "startLineNumber" : 83,
        "startColumnNumber" : 41,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Primitives.isPrimitiveOrWrapper(type)) {\n    return Primitives.defaultValue(type);\n  }\n else   if (type == Iterable.class) {\n    return new ArrayList<Object>(0);\n  }\n else   if (type == Collection.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == Set.class) {\n    return new HashSet<Object>();\n  }\n else   if (type == HashSet.class) {\n    return new HashSet<Object>();\n  }\n else   if (type == SortedSet.class) {\n    return new TreeSet<Object>();\n  }\n else   if (type == TreeSet.class) {\n    return new TreeSet<Object>();\n  }\n else   if (type == LinkedHashSet.class) {\n    return new LinkedHashSet<Object>();\n  }\n else   if (type == List.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == LinkedList.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == ArrayList.class) {\n    return new ArrayList<Object>();\n  }\n else   if (type == Map.class) {\n    return new HashMap<Object,Object>();\n  }\n else   if (type == HashMap.class) {\n    return new HashMap<Object,Object>();\n  }\n else   if (type == SortedMap.class) {\n    return new TreeMap<Object,Object>();\n  }\n else   if (type == TreeMap.class) {\n    return new TreeMap<Object,Object>();\n  }\n else   if (type == LinkedHashMap.class) {\n    return new LinkedHashMap<Object,Object>();\n  }\n else   if (\"java.util.Optional\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptional();\n  }\n else   if (\"java.util.OptionalDouble\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalDouble();\n  }\n else   if (\"java.util.OptionalInt\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalInt();\n  }\n else   if (\"java.util.OptionalLong\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalLong();\n  }\n else   if (\"java.util.stream.Stream\".equals(type.getName())) {\n    return JavaEightUtil.emptyStream();\n  }\n else   if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyDoubleStream();\n  }\n else   if (\"java.util.stream.IntStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyIntStream();\n  }\n else   if (\"java.util.stream.LongStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyLongStream();\n  }\n else   if (\"java.time.Duration\".equals(type.getName())) {\n    return JavaEightUtil.emptyDuration();\n  }\n else   if (\"java.time.Period\".equals(type.getName())) {\n    return JavaEightUtil.emptyPeriod();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3082,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Object returnValueFor(Class<?> type){\n  if (Primitives.isPrimitiveOrWrapper(type)) {\n    return Primitives.defaultValue(type);\n  }\n else   if (type == Iterable.class) {\n    return new ArrayList<Object>(0);\n  }\n else   if (type == Collection.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == Set.class) {\n    return new HashSet<Object>();\n  }\n else   if (type == HashSet.class) {\n    return new HashSet<Object>();\n  }\n else   if (type == SortedSet.class) {\n    return new TreeSet<Object>();\n  }\n else   if (type == TreeSet.class) {\n    return new TreeSet<Object>();\n  }\n else   if (type == LinkedHashSet.class) {\n    return new LinkedHashSet<Object>();\n  }\n else   if (type == List.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == LinkedList.class) {\n    return new LinkedList<Object>();\n  }\n else   if (type == ArrayList.class) {\n    return new ArrayList<Object>();\n  }\n else   if (type == Map.class) {\n    return new HashMap<Object,Object>();\n  }\n else   if (type == HashMap.class) {\n    return new HashMap<Object,Object>();\n  }\n else   if (type == SortedMap.class) {\n    return new TreeMap<Object,Object>();\n  }\n else   if (type == TreeMap.class) {\n    return new TreeMap<Object,Object>();\n  }\n else   if (type == LinkedHashMap.class) {\n    return new LinkedHashMap<Object,Object>();\n  }\n else   if (\"java.util.Optional\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptional();\n  }\n else   if (\"java.util.OptionalDouble\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalDouble();\n  }\n else   if (\"java.util.OptionalInt\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalInt();\n  }\n else   if (\"java.util.OptionalLong\".equals(type.getName())) {\n    return JavaEightUtil.emptyOptionalLong();\n  }\n else   if (\"java.util.stream.Stream\".equals(type.getName())) {\n    return JavaEightUtil.emptyStream();\n  }\n else   if (\"java.util.stream.DoubleStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyDoubleStream();\n  }\n else   if (\"java.util.stream.IntStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyIntStream();\n  }\n else   if (\"java.util.stream.LongStream\".equals(type.getName())) {\n    return JavaEightUtil.emptyLongStream();\n  }\n else   if (\"java.time.Duration\".equals(type.getName())) {\n    return JavaEightUtil.emptyDuration();\n  }\n else   if (\"java.time.Period\".equals(type.getName())) {\n    return JavaEightUtil.emptyPeriod();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 32
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 99,
        "startColumnNumber" : 19,
        "endLineNumber" : 99,
        "endColumnNumber" : 40
      },
      "nodeContext" : "type == TreeSet.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.util.TreeSet>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 99,
    "startColumnNumber" : 27,
    "endLineNumber" : 99,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}