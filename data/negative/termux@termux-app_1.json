{
  "id" : 1,
  "expression" : "mSettings.isFullScreen()",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/TermuxActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mSettings.isFullScreen()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 225,
      "startColumnNumber" : 39,
      "endLineNumber" : 225,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 64
      },
      "nodeContext" : "mFullScreenHelper.setImmersive(mSettings.isFullScreen())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mFullScreenHelper.setImmersive(mSettings.isFullScreen());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5483,
        "startLineNumber" : 213,
        "startColumnNumber" : 40,
        "endLineNumber" : 344,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(bundle);\n  mOnBellAnimation=AnimationUtils.loadAnimation(this,R.anim.on_bell);\n  mSettings=new TermuxPreferences(this);\n  setContentView(R.layout.drawer_layout);\n  mTerminalView=(TerminalView)findViewById(R.id.terminal_view);\n  mTerminalView.setOnKeyListener(new TermuxKeyListener(this));\n  mTerminalView.setTextSize(mSettings.getFontSize());\n  mFullScreenHelper.setImmersive(mSettings.isFullScreen());\n  mTerminalView.requestFocus();\n  final ViewPager viewPager=(ViewPager)findViewById(R.id.viewpager);\n  if (mSettings.isShowExtraKeys())   viewPager.setVisibility(View.VISIBLE);\n  viewPager.setAdapter(new PagerAdapter(){\n    @Override public int getCount(){\n      return 2;\n    }\n    @Override public boolean isViewFromObject(    View view,    Object object){\n      return view == object;\n    }\n    @Override public Object instantiateItem(    ViewGroup collection,    int position){\n      LayoutInflater inflater=LayoutInflater.from(TermuxActivity.this);\n      View layout;\n      if (position == 0) {\n        layout=mExtraKeysView=(ExtraKeysView)inflater.inflate(R.layout.extra_keys_main,collection,false);\n      }\n else {\n        layout=inflater.inflate(R.layout.extra_keys_right,collection,false);\n        final EditText editText=(EditText)layout.findViewById(R.id.text_input);\n        editText.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n          @Override public boolean onEditorAction(          TextView v,          int actionId,          KeyEvent event){\n            TerminalSession session=getCurrentTermSession();\n            if (session != null) {\n              if (session.isRunning()) {\n                session.write(editText.getText().toString() + \"\\n\");\n              }\n else {\n                removeFinishedSession(session);\n              }\n              editText.setText(\"\");\n            }\n            return true;\n          }\n        }\n);\n      }\n      collection.addView(layout);\n      return layout;\n    }\n    @Override public void destroyItem(    ViewGroup collection,    int position,    Object view){\n      collection.removeView((View)view);\n    }\n  }\n);\n  viewPager.addOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){\n    @Override public void onPageSelected(    int position){\n      if (position == 0) {\n        mTerminalView.requestFocus();\n      }\n else {\n        final EditText editText=(EditText)viewPager.findViewById(R.id.text_input);\n        if (editText != null)         editText.requestFocus();\n      }\n    }\n  }\n);\n  View newSessionButton=findViewById(R.id.new_session_button);\n  newSessionButton.setOnClickListener(new OnClickListener(){\n    @Override public void onClick(    View v){\n      addNewSession(false,null);\n    }\n  }\n);\n  newSessionButton.setOnLongClickListener(new OnLongClickListener(){\n    @Override public boolean onLongClick(    View v){\n      DialogUtils.textInput(TermuxActivity.this,R.string.session_new_named_title,null,R.string.session_new_named_positive_button,new DialogUtils.TextSetListener(){\n        @Override public void onTextSet(        String text){\n          addNewSession(false,text);\n        }\n      }\n,R.string.new_session_failsafe,new DialogUtils.TextSetListener(){\n        @Override public void onTextSet(        String text){\n          addNewSession(true,text);\n        }\n      }\n,-1,null,null);\n      return true;\n    }\n  }\n);\n  findViewById(R.id.toggle_keyboard_button).setOnClickListener(new OnClickListener(){\n    @Override public void onClick(    View v){\n      InputMethodManager imm=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);\n      imm.toggleSoftInput(InputMethodManager.SHOW_IMPLICIT,0);\n      getDrawer().closeDrawers();\n    }\n  }\n);\n  findViewById(R.id.toggle_keyboard_button).setOnLongClickListener(new OnLongClickListener(){\n    @Override public boolean onLongClick(    View v){\n      toggleShowExtraKeys();\n      return true;\n    }\n  }\n);\n  registerForContextMenu(mTerminalView);\n  Intent serviceIntent=new Intent(this,TermuxService.class);\n  startService(serviceIntent);\n  if (!bindService(serviceIntent,this,0))   throw new RuntimeException(\"bindService() failed\");\n  checkForFontAndColors();\n  mBellSoundId=mBellSoundPool.load(this,R.raw.bell,1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 630,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5533,
        "startLineNumber" : 212,
        "startColumnNumber" : 4,
        "endLineNumber" : 344,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void onCreate(Bundle bundle){\n  super.onCreate(bundle);\n  mOnBellAnimation=AnimationUtils.loadAnimation(this,R.anim.on_bell);\n  mSettings=new TermuxPreferences(this);\n  setContentView(R.layout.drawer_layout);\n  mTerminalView=(TerminalView)findViewById(R.id.terminal_view);\n  mTerminalView.setOnKeyListener(new TermuxKeyListener(this));\n  mTerminalView.setTextSize(mSettings.getFontSize());\n  mFullScreenHelper.setImmersive(mSettings.isFullScreen());\n  mTerminalView.requestFocus();\n  final ViewPager viewPager=(ViewPager)findViewById(R.id.viewpager);\n  if (mSettings.isShowExtraKeys())   viewPager.setVisibility(View.VISIBLE);\n  viewPager.setAdapter(new PagerAdapter(){\n    @Override public int getCount(){\n      return 2;\n    }\n    @Override public boolean isViewFromObject(    View view,    Object object){\n      return view == object;\n    }\n    @Override public Object instantiateItem(    ViewGroup collection,    int position){\n      LayoutInflater inflater=LayoutInflater.from(TermuxActivity.this);\n      View layout;\n      if (position == 0) {\n        layout=mExtraKeysView=(ExtraKeysView)inflater.inflate(R.layout.extra_keys_main,collection,false);\n      }\n else {\n        layout=inflater.inflate(R.layout.extra_keys_right,collection,false);\n        final EditText editText=(EditText)layout.findViewById(R.id.text_input);\n        editText.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n          @Override public boolean onEditorAction(          TextView v,          int actionId,          KeyEvent event){\n            TerminalSession session=getCurrentTermSession();\n            if (session != null) {\n              if (session.isRunning()) {\n                session.write(editText.getText().toString() + \"\\n\");\n              }\n else {\n                removeFinishedSession(session);\n              }\n              editText.setText(\"\");\n            }\n            return true;\n          }\n        }\n);\n      }\n      collection.addView(layout);\n      return layout;\n    }\n    @Override public void destroyItem(    ViewGroup collection,    int position,    Object view){\n      collection.removeView((View)view);\n    }\n  }\n);\n  viewPager.addOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){\n    @Override public void onPageSelected(    int position){\n      if (position == 0) {\n        mTerminalView.requestFocus();\n      }\n else {\n        final EditText editText=(EditText)viewPager.findViewById(R.id.text_input);\n        if (editText != null)         editText.requestFocus();\n      }\n    }\n  }\n);\n  View newSessionButton=findViewById(R.id.new_session_button);\n  newSessionButton.setOnClickListener(new OnClickListener(){\n    @Override public void onClick(    View v){\n      addNewSession(false,null);\n    }\n  }\n);\n  newSessionButton.setOnLongClickListener(new OnLongClickListener(){\n    @Override public boolean onLongClick(    View v){\n      DialogUtils.textInput(TermuxActivity.this,R.string.session_new_named_title,null,R.string.session_new_named_positive_button,new DialogUtils.TextSetListener(){\n        @Override public void onTextSet(        String text){\n          addNewSession(false,text);\n        }\n      }\n,R.string.new_session_failsafe,new DialogUtils.TextSetListener(){\n        @Override public void onTextSet(        String text){\n          addNewSession(true,text);\n        }\n      }\n,-1,null,null);\n      return true;\n    }\n  }\n);\n  findViewById(R.id.toggle_keyboard_button).setOnClickListener(new OnClickListener(){\n    @Override public void onClick(    View v){\n      InputMethodManager imm=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);\n      imm.toggleSoftInput(InputMethodManager.SHOW_IMPLICIT,0);\n      getDrawer().closeDrawers();\n    }\n  }\n);\n  findViewById(R.id.toggle_keyboard_button).setOnLongClickListener(new OnLongClickListener(){\n    @Override public boolean onLongClick(    View v){\n      toggleShowExtraKeys();\n      return true;\n    }\n  }\n);\n  registerForContextMenu(mTerminalView);\n  Intent serviceIntent=new Intent(this,TermuxService.class);\n  startService(serviceIntent);\n  if (!bindService(serviceIntent,this,0))   throw new RuntimeException(\"bindService() failed\");\n  checkForFontAndColors();\n  mBellSoundId=mBellSoundPool.load(this,R.raw.bell,1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 640,
      "astHeight" : 26
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mFullScreenHelper.setImmersive(mSettings.isFullScreen());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 225,
    "startColumnNumber" : 39,
    "endLineNumber" : 225,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}