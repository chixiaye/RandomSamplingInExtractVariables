{
  "id" : 4,
  "expression" : "pe",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pe",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 632,
      "startColumnNumber" : 8,
      "endLineNumber" : 632,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 632,
        "startColumnNumber" : 8,
        "endLineNumber" : 632,
        "endColumnNumber" : 36
      },
      "nodeContext" : "pe.isFromPartiallyValidRow()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 632,
        "startColumnNumber" : 4,
        "endLineNumber" : 636,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (pe.isFromPartiallyValidRow()) {\n  rowIngestionMeters.incrementProcessedWithError();\n}\n else {\n  rowIngestionMeters.incrementUnparseable();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 631,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 630,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void handleParseException(ParseException pe){\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 632,
        "startColumnNumber" : 8,
        "endLineNumber" : 632,
        "endColumnNumber" : 36
      },
      "nodeContext" : "pe.isFromPartiallyValidRow()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.common.parsers.ParseException"
  }, {
    "nodeContext" : "pe",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 639,
      "startColumnNumber" : 16,
      "endLineNumber" : 639,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 639,
        "startColumnNumber" : 6,
        "endLineNumber" : 639,
        "endColumnNumber" : 50
      },
      "nodeContext" : "log.error(pe,\"Encountered parse exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 639,
        "startColumnNumber" : 6,
        "endLineNumber" : 639,
        "endColumnNumber" : 51
      },
      "nodeContext" : "log.error(pe,\"Encountered parse exception\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 638,
        "startColumnNumber" : 55,
        "endLineNumber" : 640,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.error(pe,\"Encountered parse exception\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 638,
        "startColumnNumber" : 4,
        "endLineNumber" : 640,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (spec.getTuningConfig().isLogParseExceptions()) {\n  log.error(pe,\"Encountered parse exception\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 631,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 630,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void handleParseException(ParseException pe){\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 639,
        "startColumnNumber" : 6,
        "endLineNumber" : 639,
        "endColumnNumber" : 51
      },
      "nodeContext" : "log.error(pe,\"Encountered parse exception\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.common.parsers.ParseException"
  }, {
    "nodeContext" : "pe",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 643,
      "startColumnNumber" : 58,
      "endLineNumber" : 643,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 643,
        "startColumnNumber" : 6,
        "endLineNumber" : 643,
        "endColumnNumber" : 61
      },
      "nodeContext" : "parseExceptionHandler.getSavedParseExceptions().add(pe)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 643,
        "startColumnNumber" : 6,
        "endLineNumber" : 643,
        "endColumnNumber" : 62
      },
      "nodeContext" : "parseExceptionHandler.getSavedParseExceptions().add(pe);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 642,
        "startColumnNumber" : 65,
        "endLineNumber" : 644,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  parseExceptionHandler.getSavedParseExceptions().add(pe);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 642,
        "startColumnNumber" : 4,
        "endLineNumber" : 644,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (parseExceptionHandler.getSavedParseExceptions() != null) {\n  parseExceptionHandler.getSavedParseExceptions().add(pe);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 631,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 630,
        "startColumnNumber" : 2,
        "endLineNumber" : 651,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void handleParseException(ParseException pe){\n  if (pe.isFromPartiallyValidRow()) {\n    rowIngestionMeters.incrementProcessedWithError();\n  }\n else {\n    rowIngestionMeters.incrementUnparseable();\n  }\n  if (spec.getTuningConfig().isLogParseExceptions()) {\n    log.error(pe,\"Encountered parse exception\");\n  }\n  if (parseExceptionHandler.getSavedParseExceptions() != null) {\n    parseExceptionHandler.getSavedParseExceptions().add(pe);\n  }\n  if (rowIngestionMeters.getUnparseable() + rowIngestionMeters.getProcessedWithError() > spec.getTuningConfig().getMaxParseExceptions()) {\n    log.error(\"Max parse exceptions exceeded, terminating task...\");\n    throw new RuntimeException(\"Max parse exceptions exceeded, terminating task...\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 643,
        "startColumnNumber" : 6,
        "endLineNumber" : 643,
        "endColumnNumber" : 62
      },
      "nodeContext" : "parseExceptionHandler.getSavedParseExceptions().add(pe);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.common.parsers.ParseException"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 632,
    "startColumnNumber" : 8,
    "endLineNumber" : 632,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 639,
    "startColumnNumber" : 16,
    "endLineNumber" : 639,
    "endColumnNumber" : 18
  }, {
    "charLength" : 2,
    "startLineNumber" : 643,
    "startColumnNumber" : 58,
    "endLineNumber" : 643,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}