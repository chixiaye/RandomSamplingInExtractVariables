{
  "id" : 403,
  "expression" : "(comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/client/result/SMSMMSResultParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 76,
      "startColumnNumber" : 11,
      "endLineNumber" : 76,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 12,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma) {\n  String numberPart=smsURIWithoutQuery.substring(lastComma + 1,comma);\n  addNumberVia(numbers,vias,numberPart);\n  lastComma=comma;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1683,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  if (!(rawText.startsWith(\"sms:\") || rawText.startsWith(\"SMS:\") || rawText.startsWith(\"mms:\")|| rawText.startsWith(\"MMS:\"))) {\n    return null;\n  }\n  Map<String,String> nameValuePairs=parseNameValuePairs(rawText);\n  String subject=null;\n  String body=null;\n  boolean querySyntax=false;\n  if (nameValuePairs != null && !nameValuePairs.isEmpty()) {\n    subject=nameValuePairs.get(\"subject\");\n    body=nameValuePairs.get(\"body\");\n    querySyntax=true;\n  }\n  int queryStart=rawText.indexOf('?',4);\n  String smsURIWithoutQuery;\n  if (queryStart < 0 || !querySyntax) {\n    smsURIWithoutQuery=rawText.substring(4);\n  }\n else {\n    smsURIWithoutQuery=rawText.substring(4,queryStart);\n  }\n  int lastComma=-1;\n  int comma;\n  List<String> numbers=new ArrayList<String>(1);\n  List<String> vias=new ArrayList<String>(1);\n  while ((comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma) {\n    String numberPart=smsURIWithoutQuery.substring(lastComma + 1,comma);\n    addNumberVia(numbers,vias,numberPart);\n    lastComma=comma;\n  }\n  addNumberVia(numbers,vias,smsURIWithoutQuery.substring(lastComma + 1));\n  return new SMSParsedResult(numbers.toArray(new String[numbers.size()]),vias.toArray(new String[vias.size()]),subject,body);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1739,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SMSParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  if (!(rawText.startsWith(\"sms:\") || rawText.startsWith(\"SMS:\") || rawText.startsWith(\"mms:\")|| rawText.startsWith(\"MMS:\"))) {\n    return null;\n  }\n  Map<String,String> nameValuePairs=parseNameValuePairs(rawText);\n  String subject=null;\n  String body=null;\n  boolean querySyntax=false;\n  if (nameValuePairs != null && !nameValuePairs.isEmpty()) {\n    subject=nameValuePairs.get(\"subject\");\n    body=nameValuePairs.get(\"body\");\n    querySyntax=true;\n  }\n  int queryStart=rawText.indexOf('?',4);\n  String smsURIWithoutQuery;\n  if (queryStart < 0 || !querySyntax) {\n    smsURIWithoutQuery=rawText.substring(4);\n  }\n else {\n    smsURIWithoutQuery=rawText.substring(4,queryStart);\n  }\n  int lastComma=-1;\n  int comma;\n  List<String> numbers=new ArrayList<String>(1);\n  List<String> vias=new ArrayList<String>(1);\n  while ((comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma) {\n    String numberPart=smsURIWithoutQuery.substring(lastComma + 1,comma);\n    addNumberVia(numbers,vias,numberPart);\n    lastComma=comma;\n  }\n  addNumberVia(numbers,vias,smsURIWithoutQuery.substring(lastComma + 1));\n  return new SMSParsedResult(numbers.toArray(new String[numbers.size()]),vias.toArray(new String[vias.size()]),subject,body);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma) {\n  String numberPart=smsURIWithoutQuery.substring(lastComma + 1,comma);\n  addNumberVia(numbers,vias,numberPart);\n  lastComma=comma;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 76,
    "startColumnNumber" : 11,
    "endLineNumber" : 76,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}