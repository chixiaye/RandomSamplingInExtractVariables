{
  "id" : 162,
  "expression" : "chargeBatteries(powerProduced - powerNeeded)",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/power/PowerGraph.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "chargeBatteries(powerProduced - powerNeeded)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 243,
      "startColumnNumber" : 37,
      "endLineNumber" : 243,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 81
      },
      "nodeContext" : "powerProduced-=chargeBatteries(powerProduced - powerNeeded)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 82
      },
      "nodeContext" : "powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 242,
        "startColumnNumber" : 53,
        "endLineNumber" : 244,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 242,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (powerProduced > powerNeeded) {\n  powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 238,
        "startColumnNumber" : 16,
        "endLineNumber" : 244,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (powerNeeded > powerProduced) {\n  float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n  powerProduced+=powerBatteryUsed;\n  lastPowerProduced+=powerBatteryUsed;\n}\n else if (powerProduced > powerNeeded) {\n  powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 237,
        "startColumnNumber" : 56,
        "endLineNumber" : 245,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (powerNeeded > powerProduced) {\n    float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n    powerProduced+=powerBatteryUsed;\n    lastPowerProduced+=powerBatteryUsed;\n  }\n else   if (powerProduced > powerNeeded) {\n    powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 237,
        "startColumnNumber" : 12,
        "endLineNumber" : 245,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!Mathf.equal(powerNeeded,powerProduced)) {\n  if (powerNeeded > powerProduced) {\n    float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n    powerProduced+=powerBatteryUsed;\n    lastPowerProduced+=powerBatteryUsed;\n  }\n else   if (powerProduced > powerNeeded) {\n    powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 235,
        "startColumnNumber" : 80,
        "endLineNumber" : 248,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!Mathf.equal(powerNeeded,powerProduced)) {\n    if (powerNeeded > powerProduced) {\n      float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n      powerProduced+=powerBatteryUsed;\n      lastPowerProduced+=powerBatteryUsed;\n    }\n else     if (powerProduced > powerNeeded) {\n      powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n    }\n  }\n  distributePower(powerNeeded,powerProduced);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!(consumers.size == 0 && producers.size == 0 && batteries.size == 0)) {\n  if (!Mathf.equal(powerNeeded,powerProduced)) {\n    if (powerNeeded > powerProduced) {\n      float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n      powerProduced+=powerBatteryUsed;\n      lastPowerProduced+=powerBatteryUsed;\n    }\n else     if (powerProduced > powerNeeded) {\n      powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n    }\n  }\n  distributePower(powerNeeded,powerProduced);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1602,
        "startLineNumber" : 206,
        "startColumnNumber" : 24,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Core.graphics.getFrameId() == lastFrameUpdated) {\n    return;\n  }\n else   if (!consumers.isEmpty() && consumers.first().cheating()) {\n    for (    Building tile : consumers) {\n      tile.power.status=1f;\n    }\n    lastPowerNeeded=lastPowerProduced=1f;\n    return;\n  }\n  lastFrameUpdated=Core.graphics.getFrameId();\n  float powerNeeded=getPowerNeeded();\n  float powerProduced=getPowerProduced();\n  lastPowerNeeded=powerNeeded;\n  lastPowerProduced=powerProduced;\n  lastScaledPowerIn=(powerProduced + energyDelta) / Time.delta;\n  lastScaledPowerOut=powerNeeded / Time.delta;\n  lastCapacity=getTotalBatteryCapacity();\n  lastPowerStored=getBatteryStored();\n  powerBalance.add((lastPowerProduced - lastPowerNeeded + energyDelta) / Time.delta);\n  energyDelta=0f;\n  if (!(consumers.size == 0 && producers.size == 0 && batteries.size == 0)) {\n    if (!Mathf.equal(powerNeeded,powerProduced)) {\n      if (powerNeeded > powerProduced) {\n        float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n        powerProduced+=powerBatteryUsed;\n        lastPowerProduced+=powerBatteryUsed;\n      }\n else       if (powerProduced > powerNeeded) {\n        powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n      }\n    }\n    distributePower(powerNeeded,powerProduced);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1622,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void update(){\n  if (Core.graphics.getFrameId() == lastFrameUpdated) {\n    return;\n  }\n else   if (!consumers.isEmpty() && consumers.first().cheating()) {\n    for (    Building tile : consumers) {\n      tile.power.status=1f;\n    }\n    lastPowerNeeded=lastPowerProduced=1f;\n    return;\n  }\n  lastFrameUpdated=Core.graphics.getFrameId();\n  float powerNeeded=getPowerNeeded();\n  float powerProduced=getPowerProduced();\n  lastPowerNeeded=powerNeeded;\n  lastPowerProduced=powerProduced;\n  lastScaledPowerIn=(powerProduced + energyDelta) / Time.delta;\n  lastScaledPowerOut=powerNeeded / Time.delta;\n  lastCapacity=getTotalBatteryCapacity();\n  lastPowerStored=getBatteryStored();\n  powerBalance.add((lastPowerProduced - lastPowerNeeded + energyDelta) / Time.delta);\n  energyDelta=0f;\n  if (!(consumers.size == 0 && producers.size == 0 && batteries.size == 0)) {\n    if (!Mathf.equal(powerNeeded,powerProduced)) {\n      if (powerNeeded > powerProduced) {\n        float powerBatteryUsed=useBatteries(powerNeeded - powerProduced);\n        powerProduced+=powerBatteryUsed;\n        lastPowerProduced+=powerBatteryUsed;\n      }\n else       if (powerProduced > powerNeeded) {\n        powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n      }\n    }\n    distributePower(powerNeeded,powerProduced);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 82
      },
      "nodeContext" : "powerProduced-=chargeBatteries(powerProduced - powerNeeded);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 243,
    "startColumnNumber" : 37,
    "endLineNumber" : 243,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}