{
  "id" : 229,
  "expression" : "idsRefs",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "idsRefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 95,
      "startColumnNumber" : 25,
      "endLineNumber" : 95,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (JFieldRef idRef : idsRefs) {\n  JBlock block=holder.afterSetContentView.body().block();\n  JInvocation findViewById=JExpr.invoke(\"findViewById\");\n  JVar view=block.decl(narrowAdapterViewClass,\"view\",JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)));\n  block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnItemClickListener\").arg(JExpr._new(onItemClickListenerClass));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2225,
        "startLineNumber" : 57,
        "startColumnNumber" : 91,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasItemParameter=parameters.size() == 1;\n  ItemClick annotation=element.getAnnotation(ItemClick.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"ItemClicked\",holder);\n  JDefinedClass onItemClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.widget.AdapterView.OnItemClickListener\"));\n  JMethod onItemClickMethod=onItemClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onItemClick\");\n  JClass adapterViewClass=holder.refClass(\"android.widget.AdapterView\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass narrowAdapterViewClass=adapterViewClass.narrow(codeModel.wildcard());\n  JVar onItemClickParentParam=onItemClickMethod.param(narrowAdapterViewClass,\"parent\");\n  onItemClickMethod.param(viewClass,\"view\");\n  JVar onItemClickPositionParam=onItemClickMethod.param(codeModel.INT,\"position\");\n  onItemClickMethod.param(codeModel.LONG,\"id\");\n  JInvocation itemClickCall=onItemClickMethod.body().invoke(methodName);\n  if (hasItemParameter) {\n    VariableElement parameter=parameters.get(0);\n    TypeMirror parameterType=parameter.asType();\n    if (parameterType.getKind() == TypeKind.INT) {\n      itemClickCall.arg(onItemClickPositionParam);\n    }\n else {\n      String parameterTypeQualifiedName=parameterType.toString();\n      itemClickCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName),JExpr.invoke(onItemClickParentParam,\"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n    }\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(narrowAdapterViewClass,\"view\",JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnItemClickListener\").arg(JExpr._new(onItemClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2326,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasItemParameter=parameters.size() == 1;\n  ItemClick annotation=element.getAnnotation(ItemClick.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"ItemClicked\",holder);\n  JDefinedClass onItemClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.widget.AdapterView.OnItemClickListener\"));\n  JMethod onItemClickMethod=onItemClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onItemClick\");\n  JClass adapterViewClass=holder.refClass(\"android.widget.AdapterView\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass narrowAdapterViewClass=adapterViewClass.narrow(codeModel.wildcard());\n  JVar onItemClickParentParam=onItemClickMethod.param(narrowAdapterViewClass,\"parent\");\n  onItemClickMethod.param(viewClass,\"view\");\n  JVar onItemClickPositionParam=onItemClickMethod.param(codeModel.INT,\"position\");\n  onItemClickMethod.param(codeModel.LONG,\"id\");\n  JInvocation itemClickCall=onItemClickMethod.body().invoke(methodName);\n  if (hasItemParameter) {\n    VariableElement parameter=parameters.get(0);\n    TypeMirror parameterType=parameter.asType();\n    if (parameterType.getKind() == TypeKind.INT) {\n      itemClickCall.arg(onItemClickPositionParam);\n    }\n else {\n      String parameterTypeQualifiedName=parameterType.toString();\n      itemClickCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName),JExpr.invoke(onItemClickParentParam,\"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n    }\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(narrowAdapterViewClass,\"view\",JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnItemClickListener\").arg(JExpr._new(onItemClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (JFieldRef idRef : idsRefs) {\n  JBlock block=holder.afterSetContentView.body().block();\n  JInvocation findViewById=JExpr.invoke(\"findViewById\");\n  JVar view=block.decl(narrowAdapterViewClass,\"view\",JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)));\n  block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnItemClickListener\").arg(JExpr._new(onItemClickListenerClass));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.googlecode.androidannotations.processing.JFieldRef>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 95,
    "startColumnNumber" : 25,
    "endLineNumber" : 95,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}