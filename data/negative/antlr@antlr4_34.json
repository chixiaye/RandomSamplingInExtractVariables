{
  "id" : 34,
  "expression" : "\"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestLexerActions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 292,
      "startColumnNumber" : 3,
      "endLineNumber" : 292,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 287,
        "startColumnNumber" : 3,
        "endLineNumber" : 293,
        "endColumnNumber" : 34
      },
      "nodeContext" : "\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 286,
        "startColumnNumber" : 9,
        "endLineNumber" : 293,
        "endColumnNumber" : 34
      },
      "nodeContext" : "expecting=\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 286,
        "startColumnNumber" : 2,
        "endLineNumber" : 293,
        "endColumnNumber" : 35
      },
      "nodeContext" : "String expecting=\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 266,
        "startColumnNumber" : 51,
        "endLineNumber" : 295,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String grammar=\"lexer grammar TestLexer;\\n\" + \"\\n\" + \"fragment WS: [ \\\\t]+;\\n\"+ \"fragment EOL: '\\\\r'? '\\\\n';\\n\"+ \"\\n\"+ \"LINE: WS? ~[\\\\r\\\\n]* EOL { !getText().trim().startsWith(\\\"Item:\\\") }?;\\n\"+ \"ITEM: WS? 'Item:' -> pushMode(ITEM_HEADING_MODE);\\n\"+ \"\\n\"+ \"mode ITEM_HEADING_MODE;\\n\"+ \"\\n\"+ \"NAME: ~[\\\\r\\\\n]+;\\n\"+ \"SECTION_HEADING_END: EOL -> popMode;\\n\";\n  String input=\"A line here.\\n\" + \"Item: name of item\\n\" + \"Another line.\\n\"+ \"More line.\\n\";\n  String found=execLexer(\"TestLexer.g4\",grammar,\"TestLexer\",input);\n  String expecting=\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\";\n  assertEquals(expecting,found);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1199,
        "startLineNumber" : 260,
        "startColumnNumber" : 1,
        "endLineNumber" : 295,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * This is a regression test for antlr/antlr4#398 \"Lexer: literal matches while negated char set fail to match\" https://github.com/antlr/antlr4/issues/398\n */\n@Test public void testFailingPredicateEvalIsNotCached(){\n  String grammar=\"lexer grammar TestLexer;\\n\" + \"\\n\" + \"fragment WS: [ \\\\t]+;\\n\"+ \"fragment EOL: '\\\\r'? '\\\\n';\\n\"+ \"\\n\"+ \"LINE: WS? ~[\\\\r\\\\n]* EOL { !getText().trim().startsWith(\\\"Item:\\\") }?;\\n\"+ \"ITEM: WS? 'Item:' -> pushMode(ITEM_HEADING_MODE);\\n\"+ \"\\n\"+ \"mode ITEM_HEADING_MODE;\\n\"+ \"\\n\"+ \"NAME: ~[\\\\r\\\\n]+;\\n\"+ \"SECTION_HEADING_END: EOL -> popMode;\\n\";\n  String input=\"A line here.\\n\" + \"Item: name of item\\n\" + \"Another line.\\n\"+ \"More line.\\n\";\n  String found=execLexer(\"TestLexer.g4\",grammar,\"TestLexer\",input);\n  String expecting=\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\";\n  assertEquals(expecting,found);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 287,
        "startColumnNumber" : 3,
        "endLineNumber" : 293,
        "endColumnNumber" : 34
      },
      "nodeContext" : "\"[@0,0:12='A line here.\\\\n',<1>,1:0]\\n\" + \"[@1,13:17='Item:',<2>,2:0]\\n\" + \"[@2,18:30=' name of item',<3>,2:5]\\n\"+ \"[@3,31:31='\\\\n',<4>,2:18]\\n\"+ \"[@4,32:45='Another line.\\\\n',<1>,3:0]\\n\"+ \"[@5,46:56='More line.\\\\n',<1>,4:0]\\n\"+ \"[@6,57:56='<EOF>',<-1>,5:0]\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 292,
    "startColumnNumber" : 3,
    "endLineNumber" : 292,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}