{
  "id" : 228,
  "expression" : "s.getName()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/PDB/developer_scripts/DumpAllSymbolsDemangledScript.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "s.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 60,
      "startColumnNumber" : 17,
      "endLineNumber" : 60,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 28
      },
      "nodeContext" : "name=s.getName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 60,
        "endColumnNumber" : 29
      },
      "nodeContext" : "String name=s.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 49,
        "startColumnNumber" : 49,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Symbol s=it.next();\n  if (s.getSource() == SourceType.DEFAULT) {\n    continue;\n  }\n  Address addr=s.getAddress();\n  if (addr.isExternalAddress() || Address.NO_ADDRESS.equals(addr)) {\n    continue;\n  }\n  String name=s.getName();\n  String demangled=getDemangledString(name);\n  if (demangled != null && !demangled.isBlank()) {\n    name=demangled;\n  }\n  bufferedWriter.append(addr + \" \" + name+ \"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (it.hasNext() && !monitor.isCancelled()) {\n  Symbol s=it.next();\n  if (s.getSource() == SourceType.DEFAULT) {\n    continue;\n  }\n  Address addr=s.getAddress();\n  if (addr.isExternalAddress() || Address.NO_ADDRESS.equals(addr)) {\n    continue;\n  }\n  String name=s.getName();\n  String demangled=getDemangledString(name);\n  if (demangled != null && !demangled.isBlank()) {\n    name=demangled;\n  }\n  bufferedWriter.append(addr + \" \" + name+ \"\\n\");\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 31,
        "startColumnNumber" : 36,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  File dumpFile=askFile(\"Choose an output file\",\"OK\");\n  if (dumpFile == null) {\n    Msg.info(this,\"Canceled execution due to no output file\");\n    return;\n  }\n  if (dumpFile.exists()) {\n    if (!askYesNo(\"Confirm Overwrite\",\"Overwrite file: \" + dumpFile.getName())) {\n      Msg.info(this,\"Operation canceled\");\n      return;\n    }\n  }\n  FileWriter fileWriter=new FileWriter(dumpFile);\n  BufferedWriter bufferedWriter=new BufferedWriter(fileWriter);\n  SymbolTable st=currentProgram.getSymbolTable();\n  SymbolIterator it=st.getDefinedSymbols();\n  while (it.hasNext() && !monitor.isCancelled()) {\n    Symbol s=it.next();\n    if (s.getSource() == SourceType.DEFAULT) {\n      continue;\n    }\n    Address addr=s.getAddress();\n    if (addr.isExternalAddress() || Address.NO_ADDRESS.equals(addr)) {\n      continue;\n    }\n    String name=s.getName();\n    String demangled=getDemangledString(name);\n    if (demangled != null && !demangled.isBlank()) {\n      name=demangled;\n    }\n    bufferedWriter.append(addr + \" \" + name+ \"\\n\");\n  }\n  bufferedWriter.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 30,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void run() throws Exception {\n  File dumpFile=askFile(\"Choose an output file\",\"OK\");\n  if (dumpFile == null) {\n    Msg.info(this,\"Canceled execution due to no output file\");\n    return;\n  }\n  if (dumpFile.exists()) {\n    if (!askYesNo(\"Confirm Overwrite\",\"Overwrite file: \" + dumpFile.getName())) {\n      Msg.info(this,\"Operation canceled\");\n      return;\n    }\n  }\n  FileWriter fileWriter=new FileWriter(dumpFile);\n  BufferedWriter bufferedWriter=new BufferedWriter(fileWriter);\n  SymbolTable st=currentProgram.getSymbolTable();\n  SymbolIterator it=st.getDefinedSymbols();\n  while (it.hasNext() && !monitor.isCancelled()) {\n    Symbol s=it.next();\n    if (s.getSource() == SourceType.DEFAULT) {\n      continue;\n    }\n    Address addr=s.getAddress();\n    if (addr.isExternalAddress() || Address.NO_ADDRESS.equals(addr)) {\n      continue;\n    }\n    String name=s.getName();\n    String demangled=getDemangledString(name);\n    if (demangled != null && !demangled.isBlank()) {\n      name=demangled;\n    }\n    bufferedWriter.append(addr + \" \" + name+ \"\\n\");\n  }\n  bufferedWriter.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 60,
        "endColumnNumber" : 29
      },
      "nodeContext" : "String name=s.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 60,
    "startColumnNumber" : 17,
    "endLineNumber" : 60,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}