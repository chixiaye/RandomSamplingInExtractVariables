{
  "id" : 371,
  "expression" : "\"input message\"",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulFilterChainRunner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"input message\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 92,
      "startColumnNumber" : 47,
      "endLineNumber" : 92,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Preconditions.checkNotNull(inMesg,\"input message\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Preconditions.checkNotNull(inMesg,\"input message\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Preconditions.checkNotNull(inMesg,\"input message\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 92,
    "startColumnNumber" : 47,
    "endLineNumber" : 92,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}