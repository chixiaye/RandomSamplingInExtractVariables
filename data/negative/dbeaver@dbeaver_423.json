{
  "id" : 423,
  "expression" : "java.awt.Color",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.ui.svg/src/org/jkiss/dbeaver/ext/ui/svg/ImageConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "java.awt.Color",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 136,
      "startColumnNumber" : 39,
      "endLineNumber" : 136,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 136,
        "startColumnNumber" : 39,
        "endLineNumber" : 136,
        "endColumnNumber" : 53
      },
      "nodeContext" : "java.awt.Color",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 136,
        "startColumnNumber" : 35,
        "endLineNumber" : 136,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new java.awt.Color(color.red,color.green,color.blue)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 136,
        "startColumnNumber" : 35,
        "endLineNumber" : 136,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new java.awt.Color(color.red,color.green,color.blue).getRGB()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 136,
        "endColumnNumber" : 99
      },
      "nodeContext" : "image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 136,
        "endColumnNumber" : 100
      },
      "nodeContext" : "image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 156,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n  image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n  if (alphaRaster != null) {\n    if (imageData.alphaData != null) {\n      alpha[0]=imageData.getAlpha(x,y);\n      alphaRaster.setPixel(x,y,alpha);\n    }\n else {\n      if (maskData != null) {\n        alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n        alphaRaster.setPixel(x,y,alpha);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 156,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n  image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n  if (alphaRaster != null) {\n    if (imageData.alphaData != null) {\n      alpha[0]=imageData.getAlpha(x,y);\n      alphaRaster.setPixel(x,y,alpha);\n    }\n else {\n      if (maskData != null) {\n        alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n        alphaRaster.setPixel(x,y,alpha);\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int x=0; x < width; x++) {\n    RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n    image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n    if (alphaRaster != null) {\n      if (imageData.alphaData != null) {\n        alpha[0]=imageData.getAlpha(x,y);\n        alphaRaster.setPixel(x,y,alpha);\n      }\n else {\n        if (maskData != null) {\n          alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n          alphaRaster.setPixel(x,y,alpha);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  for (int x=0; x < width; x++) {\n    RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n    image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n    if (alphaRaster != null) {\n      if (imageData.alphaData != null) {\n        alpha[0]=imageData.getAlpha(x,y);\n        alphaRaster.setPixel(x,y,alpha);\n      }\n else {\n        if (maskData != null) {\n          alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n          alphaRaster.setPixel(x,y,alpha);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1729,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int width=imageData.width;\n  int height=imageData.height;\n  ImageData maskData=null;\n  int alpha[]=new int[1];\n  if (imageData.alphaData == null)   maskData=imageData.getTransparencyMask();\n  BufferedImage image=new BufferedImage(imageData.width,imageData.height,BufferedImage.TYPE_INT_ARGB);\n  WritableRaster alphaRaster=image.getAlphaRaster();\n  for (int y=0; y < height; y++) {\n    for (int x=0; x < width; x++) {\n      RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n      image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n      if (alphaRaster != null) {\n        if (imageData.alphaData != null) {\n          alpha[0]=imageData.getAlpha(x,y);\n          alphaRaster.setPixel(x,y,alpha);\n        }\n else {\n          if (maskData != null) {\n            alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n            alphaRaster.setPixel(x,y,alpha);\n          }\n        }\n      }\n    }\n  }\n  return image;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2352,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Converts an swt based image data into an AWT <code>BufferedImage</code>. This will always return a <code>BufferedImage</code> that is of type <code>BufferedImage.TYPE_INT_ARGB</code> regardless of the type of swt image that is passed into the method.\n * @param imageData the {@link org.eclipse.swt.graphics.Image} to be converted to a <code>BufferedImage</code>\n * @return a <code>BufferedImage</code> that represents the same image data as the swt <code>Image</code>\n * @since 1.3.1\n */\npublic static BufferedImage convertFromImageData(ImageData imageData){\n  int width=imageData.width;\n  int height=imageData.height;\n  ImageData maskData=null;\n  int alpha[]=new int[1];\n  if (imageData.alphaData == null)   maskData=imageData.getTransparencyMask();\n  BufferedImage image=new BufferedImage(imageData.width,imageData.height,BufferedImage.TYPE_INT_ARGB);\n  WritableRaster alphaRaster=image.getAlphaRaster();\n  for (int y=0; y < height; y++) {\n    for (int x=0; x < width; x++) {\n      RGB color=imageData.palette.getRGB(imageData.getPixel(x,y));\n      image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n      if (alphaRaster != null) {\n        if (imageData.alphaData != null) {\n          alpha[0]=imageData.getAlpha(x,y);\n          alphaRaster.setPixel(x,y,alpha);\n        }\n else {\n          if (maskData != null) {\n            alpha[0]=maskData.getPixel(x,y) == 0 ? 0 : 255;\n            alphaRaster.setPixel(x,y,alpha);\n          }\n        }\n      }\n    }\n  }\n  return image;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 136,
        "endColumnNumber" : 100
      },
      "nodeContext" : "image.setRGB(x,y,new java.awt.Color(color.red,color.green,color.blue).getRGB());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "java.awt.Color"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 136,
    "startColumnNumber" : 39,
    "endLineNumber" : 136,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}