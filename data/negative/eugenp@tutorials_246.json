{
  "id" : 246,
  "expression" : "buff",
  "projectName" : "eugenp@tutorials",
  "commitID" : "fece0dc4b8bcbb870c5a524719a30a93529deb7f",
  "filePath" : "core-java-io/src/test/java/com/baeldung/filechannel/FileChannelUnitTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 34,
      "startColumnNumber" : 32,
      "endLineNumber" : 34,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 19,
        "endLineNumber" : 34,
        "endColumnNumber" : 37
      },
      "nodeContext" : "channel.read(buff)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 34,
        "startColumnNumber" : 19,
        "endLineNumber" : 34,
        "endColumnNumber" : 41
      },
      "nodeContext" : "channel.read(buff) > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (channel.read(buff) > 0) {\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 26,
        "startColumnNumber" : 70,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 22,
        "startColumnNumber" : 104,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFile_whenReadWithFileChannelUsingRandomAccessFile_thenCorrect() throws IOException {\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 34,
        "startColumnNumber" : 19,
        "endLineNumber" : 34,
        "endColumnNumber" : 41
      },
      "nodeContext" : "channel.read(buff) > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  }, {
    "nodeContext" : "buff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 35,
      "startColumnNumber" : 26,
      "endLineNumber" : 35,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 35,
        "startColumnNumber" : 26,
        "endLineNumber" : 35,
        "endColumnNumber" : 38
      },
      "nodeContext" : "buff.array()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 59
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 60
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 34,
        "startColumnNumber" : 43,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (channel.read(buff) > 0) {\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 26,
        "startColumnNumber" : 70,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 22,
        "startColumnNumber" : 104,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFile_whenReadWithFileChannelUsingRandomAccessFile_thenCorrect() throws IOException {\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 60
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  }, {
    "nodeContext" : "buff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 35,
      "startColumnNumber" : 43,
      "endLineNumber" : 35,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 35,
        "startColumnNumber" : 43,
        "endLineNumber" : 35,
        "endColumnNumber" : 58
      },
      "nodeContext" : "buff.position()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 59
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 60
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 34,
        "startColumnNumber" : 43,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (channel.read(buff) > 0) {\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 26,
        "startColumnNumber" : 70,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 22,
        "startColumnNumber" : 104,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFile_whenReadWithFileChannelUsingRandomAccessFile_thenCorrect() throws IOException {\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 60
      },
      "nodeContext" : "out.write(buff.array(),0,buff.position());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  }, {
    "nodeContext" : "buff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 36,
      "startColumnNumber" : 16,
      "endLineNumber" : 36,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 28
      },
      "nodeContext" : "buff.clear()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 29
      },
      "nodeContext" : "buff.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 34,
        "startColumnNumber" : 43,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (channel.read(buff) > 0) {\n  out.write(buff.array(),0,buff.position());\n  buff.clear();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 26,
        "startColumnNumber" : 70,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n  int bufferSize=1024;\n  if (bufferSize > channel.size()) {\n    bufferSize=(int)channel.size();\n  }\n  ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n  while (channel.read(buff) > 0) {\n    out.write(buff.array(),0,buff.position());\n    buff.clear();\n  }\n  String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n  assertEquals(\"Hello world\",fileContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 22,
        "startColumnNumber" : 104,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFile_whenReadWithFileChannelUsingRandomAccessFile_thenCorrect() throws IOException {\n  try (RandomAccessFile reader=new RandomAccessFile(\"src/test/resources/test_read.in\",\"r\");FileChannel channel=reader.getChannel();ByteArrayOutputStream out=new ByteArrayOutputStream()){\n    int bufferSize=1024;\n    if (bufferSize > channel.size()) {\n      bufferSize=(int)channel.size();\n    }\n    ByteBuffer buff=ByteBuffer.allocate(bufferSize);\n    while (channel.read(buff) > 0) {\n      out.write(buff.array(),0,buff.position());\n      buff.clear();\n    }\n    String fileContent=new String(out.toByteArray(),StandardCharsets.UTF_8);\n    assertEquals(\"Hello world\",fileContent);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 29
      },
      "nodeContext" : "buff.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 34,
    "startColumnNumber" : 32,
    "endLineNumber" : 34,
    "endColumnNumber" : 36
  }, {
    "charLength" : 4,
    "startLineNumber" : 35,
    "startColumnNumber" : 26,
    "endLineNumber" : 35,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 35,
    "startColumnNumber" : 43,
    "endLineNumber" : 35,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 36,
    "startColumnNumber" : 16,
    "endLineNumber" : 36,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}