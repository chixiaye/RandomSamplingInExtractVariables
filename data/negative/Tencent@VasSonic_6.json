{
  "id" : 6,
  "expression" : "remainParamTreeSet.contains(parameterName)",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicRuntime.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "remainParamTreeSet.contains(parameterName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 87,
      "startColumnNumber" : 138,
      "endLineNumber" : 87,
      "endColumnNumber" : 180
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 87,
        "startColumnNumber" : 66,
        "endLineNumber" : 87,
        "endColumnNumber" : 180
      },
      "nodeContext" : "parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 87,
        "startColumnNumber" : 65,
        "endLineNumber" : 87,
        "endColumnNumber" : 181
      },
      "nodeContext" : "(parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 87,
        "startColumnNumber" : 28,
        "endLineNumber" : 87,
        "endColumnNumber" : 181
      },
      "nodeContext" : "!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 89,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n  sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 86,
        "startColumnNumber" : 71,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n    sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (String parameterName : parameterNamesTreeSet) {\n  if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n    sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 74,
        "startColumnNumber" : 42,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n  TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n  if (!TextUtils.isEmpty(sonicRemainParams)) {\n    Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n  }\n  TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n  if (!remainParamTreeSet.isEmpty()) {\n    parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n  }\n  for (  String parameterName : parameterNamesTreeSet) {\n    if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n      sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (uri.isHierarchical()) {\n  String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n  TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n  if (!TextUtils.isEmpty(sonicRemainParams)) {\n    Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n  }\n  TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n  if (!remainParamTreeSet.isEmpty()) {\n    parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n  }\n  for (  String parameterName : parameterNamesTreeSet) {\n    if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n      sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1332,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Uri uri=Uri.parse(url);\n  sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n  if (uri.isHierarchical()) {\n    String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n    TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n    if (!TextUtils.isEmpty(sonicRemainParams)) {\n      Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n    }\n    TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n    if (!remainParamTreeSet.isEmpty()) {\n      parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n    }\n    for (    String parameterName : parameterNamesTreeSet) {\n      if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n        sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1560,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Uri uri=Uri.parse(url);\n  sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n  if (uri.isHierarchical()) {\n    String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n    TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n    if (!TextUtils.isEmpty(sonicRemainParams)) {\n      Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n    }\n    TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n    if (!remainParamTreeSet.isEmpty()) {\n      parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n    }\n    for (    String parameterName : parameterNamesTreeSet) {\n      if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n        sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n      }\n    }\n  }\n}\n catch (Throwable e) {\n  log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n  sessionIdBuilder.setLength(0);\n  sessionIdBuilder.append(url);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 169,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1965,
        "startLineNumber" : 69,
        "startColumnNumber" : 29,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSonicUrl(url)) {\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2023,
        "startLineNumber" : 68,
        "startColumnNumber" : 70,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2321,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Make a unique session id for the url, it can be account related.\n * @param url Url which need to make session id\n * @param isAccountRelated Is account related or not\n * @return A unique session id\n */\npublic String makeSessionId(String url,boolean isAccountRelated){\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 87,
        "startColumnNumber" : 28,
        "endLineNumber" : 87,
        "endColumnNumber" : 181
      },
      "nodeContext" : "!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 87,
    "startColumnNumber" : 138,
    "endLineNumber" : 87,
    "endColumnNumber" : 180
  } ],
  "layoutRelationDataList" : [ ]
}