{
  "id" : 240,
  "expression" : "3",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/test/java/org/apache/flink/table/planner/runtime/batch/sql/ForwardHashExchangeITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 76,
      "startColumnNumber" : 39,
      "endLineNumber" : 76,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 76,
        "startColumnNumber" : 32,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Row.of(3,15,15,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 73,
        "startColumnNumber" : 24,
        "endLineNumber" : 79,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 56
      },
      "nodeContext" : "JavaScalaConversionUtil.toScala(Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 48,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 22
      },
      "nodeContext" : "checkResult(\"SELECT\\n\" + \"   b,\\n\" + \"   SUM(a) sum_a,\\n\"+ \"   AVG(SUM(a)) OVER (PARTITION BY b) avg_a,\\n\"+ \"   RANK() OVER (PARTITION BY b ORDER BY b) rn\\n\"+ \" FROM MyTable\\n\"+ \" GROUP BY b\",JavaScalaConversionUtil.toScala(Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1))),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 23
      },
      "nodeContext" : "checkResult(\"SELECT\\n\" + \"   b,\\n\" + \"   SUM(a) sum_a,\\n\"+ \"   AVG(SUM(a)) OVER (PARTITION BY b) avg_a,\\n\"+ \"   RANK() OVER (PARTITION BY b ORDER BY b) rn\\n\"+ \" FROM MyTable\\n\"+ \" GROUP BY b\",JavaScalaConversionUtil.toScala(Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1))),false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 62,
        "startColumnNumber" : 41,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tEnv().getConfig().set(ExecutionConfigOptions.TABLE_EXEC_DISABLED_OPERATORS,\"SortAgg\");\n  checkResult(\"SELECT\\n\" + \"   b,\\n\" + \"   SUM(a) sum_a,\\n\"+ \"   AVG(SUM(a)) OVER (PARTITION BY b) avg_a,\\n\"+ \"   RANK() OVER (PARTITION BY b ORDER BY b) rn\\n\"+ \" FROM MyTable\\n\"+ \" GROUP BY b\",JavaScalaConversionUtil.toScala(Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1))),false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOverAggWithHashAgg(){\n  tEnv().getConfig().set(ExecutionConfigOptions.TABLE_EXEC_DISABLED_OPERATORS,\"SortAgg\");\n  checkResult(\"SELECT\\n\" + \"   b,\\n\" + \"   SUM(a) sum_a,\\n\"+ \"   AVG(SUM(a)) OVER (PARTITION BY b) avg_a,\\n\"+ \"   RANK() OVER (PARTITION BY b ORDER BY b) rn\\n\"+ \" FROM MyTable\\n\"+ \" GROUP BY b\",JavaScalaConversionUtil.toScala(Arrays.asList(Row.of(1,1,1,1),Row.of(2,5,5,1),Row.of(3,15,15,1),Row.of(4,34,34,1),Row.of(5,65,65,1),Row.of(6,111,111,1))),false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 76,
        "startColumnNumber" : 32,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Row.of(3,15,15,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 76,
    "startColumnNumber" : 39,
    "endLineNumber" : 76,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}