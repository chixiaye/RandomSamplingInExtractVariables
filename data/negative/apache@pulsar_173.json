{
  "id" : 173,
  "expression" : "Assert",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyConnectionThrottlingTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 94,
      "startColumnNumber" : 8,
      "endLineNumber" : 94,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 76,
        "startColumnNumber" : 57,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInboundConnection() throws Exception {\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 99,
      "startColumnNumber" : 12,
      "endLineNumber" : 99,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 164
      },
      "nodeContext" : "Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 165
      },
      "nodeContext" : "Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  producer2.send(\"Message 1\".getBytes());\n  Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  producer2.send(\"Message 1\".getBytes());\n  Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n}\n catch (Exception ex) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 76,
        "startColumnNumber" : 57,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInboundConnection() throws Exception {\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 165
      },
      "nodeContext" : "Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 104,
      "startColumnNumber" : 8,
      "endLineNumber" : 104,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 76,
        "startColumnNumber" : 57,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInboundConnection() throws Exception {\n  LOG.info(\"Creating producer 1\");\n  @Cleanup PulsarClient client1=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  @Cleanup Producer<byte[]> producer1=client1.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n  LOG.info(\"Creating producer 2\");\n  @Cleanup PulsarClient client2=PulsarClient.builder().serviceUrl(proxyService.getServiceUrl()).operationTimeout(1000,TimeUnit.MILLISECONDS).build();\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),0.0d);\n  try {\n    @Cleanup Producer<byte[]> producer2=client2.newProducer(Schema.BYTES).topic(\"persistent://sample/test/local/producer-topic-1\").create();\n    producer2.send(\"Message 1\".getBytes());\n    Assert.fail(\"Should have failed since max num of connections is 2 and the first producer used them all up - one for discovery and other for producing.\");\n  }\n catch (  Exception ex) {\n  }\n  Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(ProxyService.rejectedConnections.get(),5.0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 94,
    "startColumnNumber" : 8,
    "endLineNumber" : 94,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 99,
    "startColumnNumber" : 12,
    "endLineNumber" : 99,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 104,
    "startColumnNumber" : 8,
    "endLineNumber" : 104,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}