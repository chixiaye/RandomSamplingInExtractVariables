{
  "id" : 49,
  "expression" : "imageUrls[position]",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/sample/src/com/nostra13/example/universalimageloader/ImageGridActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "imageUrls[position]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 110,
      "startColumnNumber" : 28,
      "endLineNumber" : 110,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "imageLoader.displayImage(imageUrls[position],holder.imageView,options,new SimpleImageLoadingListener(){\n  @Override public void onLoadingStarted(  String imageUri,  View view){\n    holder.progressBar.setProgress(0);\n    holder.progressBar.setVisibility(View.VISIBLE);\n  }\n  @Override public void onLoadingFailed(  String imageUri,  View view,  FailReason failReason){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n  @Override public void onLoadingComplete(  String imageUri,  View view,  Bitmap loadedImage){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n}\n,new ImageLoadingProgressListener(){\n  @Override public void onProgressUpdate(  String imageUri,  View view,  int current,  int total){\n    holder.progressBar.setProgress(Math.round(100.0f * current / total));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 140,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "imageLoader.displayImage(imageUrls[position],holder.imageView,options,new SimpleImageLoadingListener(){\n  @Override public void onLoadingStarted(  String imageUri,  View view){\n    holder.progressBar.setProgress(0);\n    holder.progressBar.setVisibility(View.VISIBLE);\n  }\n  @Override public void onLoadingFailed(  String imageUri,  View view,  FailReason failReason){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n  @Override public void onLoadingComplete(  String imageUri,  View view,  Bitmap loadedImage){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n}\n,new ImageLoadingProgressListener(){\n  @Override public void onProgressUpdate(  String imageUri,  View view,  int current,  int total){\n    holder.progressBar.setProgress(Math.round(100.0f * current / total));\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 96,
        "startColumnNumber" : 72,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ViewHolder holder;\n  View view=convertView;\n  if (view == null) {\n    view=getLayoutInflater().inflate(R.layout.item_grid_image,parent,false);\n    holder=new ViewHolder();\n    assert view != null;\n    holder.imageView=(ImageView)view.findViewById(R.id.image);\n    holder.progressBar=(ProgressBar)view.findViewById(R.id.progress);\n    view.setTag(holder);\n  }\n else {\n    holder=(ViewHolder)view.getTag();\n  }\n  imageLoader.displayImage(imageUrls[position],holder.imageView,options,new SimpleImageLoadingListener(){\n    @Override public void onLoadingStarted(    String imageUri,    View view){\n      holder.progressBar.setProgress(0);\n      holder.progressBar.setVisibility(View.VISIBLE);\n    }\n    @Override public void onLoadingFailed(    String imageUri,    View view,    FailReason failReason){\n      holder.progressBar.setVisibility(View.GONE);\n    }\n    @Override public void onLoadingComplete(    String imageUri,    View view,    Bitmap loadedImage){\n      holder.progressBar.setVisibility(View.GONE);\n    }\n  }\n,new ImageLoadingProgressListener(){\n    @Override public void onProgressUpdate(    String imageUri,    View view,    int current,    int total){\n      holder.progressBar.setProgress(Math.round(100.0f * current / total));\n    }\n  }\n);\n  return view;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 232,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1536,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public View getView(int position,View convertView,ViewGroup parent){\n  final ViewHolder holder;\n  View view=convertView;\n  if (view == null) {\n    view=getLayoutInflater().inflate(R.layout.item_grid_image,parent,false);\n    holder=new ViewHolder();\n    assert view != null;\n    holder.imageView=(ImageView)view.findViewById(R.id.image);\n    holder.progressBar=(ProgressBar)view.findViewById(R.id.progress);\n    view.setTag(holder);\n  }\n else {\n    holder=(ViewHolder)view.getTag();\n  }\n  imageLoader.displayImage(imageUrls[position],holder.imageView,options,new SimpleImageLoadingListener(){\n    @Override public void onLoadingStarted(    String imageUri,    View view){\n      holder.progressBar.setProgress(0);\n      holder.progressBar.setVisibility(View.VISIBLE);\n    }\n    @Override public void onLoadingFailed(    String imageUri,    View view,    FailReason failReason){\n      holder.progressBar.setVisibility(View.GONE);\n    }\n    @Override public void onLoadingComplete(    String imageUri,    View view,    Bitmap loadedImage){\n      holder.progressBar.setVisibility(View.GONE);\n    }\n  }\n,new ImageLoadingProgressListener(){\n    @Override public void onProgressUpdate(    String imageUri,    View view,    int current,    int total){\n      holder.progressBar.setProgress(Math.round(100.0f * current / total));\n    }\n  }\n);\n  return view;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "imageLoader.displayImage(imageUrls[position],holder.imageView,options,new SimpleImageLoadingListener(){\n  @Override public void onLoadingStarted(  String imageUri,  View view){\n    holder.progressBar.setProgress(0);\n    holder.progressBar.setVisibility(View.VISIBLE);\n  }\n  @Override public void onLoadingFailed(  String imageUri,  View view,  FailReason failReason){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n  @Override public void onLoadingComplete(  String imageUri,  View view,  Bitmap loadedImage){\n    holder.progressBar.setVisibility(View.GONE);\n  }\n}\n,new ImageLoadingProgressListener(){\n  @Override public void onProgressUpdate(  String imageUri,  View view,  int current,  int total){\n    holder.progressBar.setProgress(Math.round(100.0f * current / total));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 140,
      "astHeight" : 11
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 110,
    "startColumnNumber" : 28,
    "endLineNumber" : 110,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}