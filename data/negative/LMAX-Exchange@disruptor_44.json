{
  "id" : 44,
  "expression" : "handlers",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/dsl/Disruptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "handlers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 101,
      "startColumnNumber" : 60,
      "endLineNumber" : 101,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 69
      },
      "nodeContext" : "createEventProcessors(new EventProcessor[0],handlers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 70
      },
      "nodeContext" : "return createEventProcessors(new EventProcessor[0],handlers);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return createEventProcessors(new EventProcessor[0],handlers);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set up event handlers to handle events from the ring buffer. These handlers will process events as soon as they become available, in parallel. <p/> <p>This method can be used as the start of a chain. For example if the handler <code>A</code> must process events before handler <code>B</code>:</p> <p/> <pre><code>dw.handleEventsWith(A).then(B);</code></pre>\n * @param handlers the event handlers that will process events.\n * @return a {@link EventHandlerGroup} that can be used to chain dependencies.\n */\n@SuppressWarnings(\"varargs\") public EventHandlerGroup<T> handleEventsWith(final EventHandler<T>... handlers){\n  return createEventProcessors(new EventProcessor[0],handlers);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 70
      },
      "nodeContext" : "return createEventProcessors(new EventProcessor[0],handlers);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.EventHandler<T>[]"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 101,
    "startColumnNumber" : 60,
    "endLineNumber" : 101,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}