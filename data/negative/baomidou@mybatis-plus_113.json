{
  "id" : 113,
  "expression" : "batchSqlSession",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "4be088ec5c30fbdf2f257518023c3adf44195e64",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/framework/service/impl/ServiceImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "batchSqlSession",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 157,
      "startColumnNumber" : 5,
      "endLineNumber" : 157,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 157,
        "startColumnNumber" : 5,
        "endLineNumber" : 157,
        "endColumnNumber" : 38
      },
      "nodeContext" : "batchSqlSession.flushStatements()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 157,
        "startColumnNumber" : 5,
        "endLineNumber" : 157,
        "endColumnNumber" : 39
      },
      "nodeContext" : "batchSqlSession.flushStatements();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 156,
        "startColumnNumber" : 28,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 156,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (i % batchSize == 0) {\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 150,
        "startColumnNumber" : 34,
        "endLineNumber" : 159,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (isSelective) {\n    baseMapper.insertSelective(entityList.get(0));\n  }\n else {\n    baseMapper.insert(entityList.get(0));\n  }\n  if (i % batchSize == 0) {\n    batchSqlSession.flushStatements();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 150,
        "startColumnNumber" : 3,
        "endLineNumber" : 159,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (isSelective) {\n    baseMapper.insertSelective(entityList.get(0));\n  }\n else {\n    baseMapper.insert(entityList.get(0));\n  }\n  if (i % batchSize == 0) {\n    batchSqlSession.flushStatements();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 148,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int size=entityList.size();\n  for (int i=0; i < size; i++) {\n    if (isSelective) {\n      baseMapper.insertSelective(entityList.get(0));\n    }\n else {\n      baseMapper.insert(entityList.get(0));\n    }\n    if (i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 148,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  int size=entityList.size();\n  for (int i=0; i < size; i++) {\n    if (isSelective) {\n      baseMapper.insertSelective(entityList.get(0));\n    }\n else {\n      baseMapper.insert(entityList.get(0));\n    }\n    if (i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Exception e) {\n  logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 139,
        "startColumnNumber" : 87,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 批量插入\n * @param entityList\n * @param batchSize\n * @param isSelective\n * @return\n */\nprotected boolean insertBatch(List<T> entityList,int batchSize,boolean isSelective){\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 157,
        "startColumnNumber" : 5,
        "endLineNumber" : 157,
        "endColumnNumber" : 39
      },
      "nodeContext" : "batchSqlSession.flushStatements();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.framework.service.impl.SqlSession"
  }, {
    "nodeContext" : "batchSqlSession",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 160,
      "startColumnNumber" : 3,
      "endLineNumber" : 160,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 160,
        "startColumnNumber" : 3,
        "endLineNumber" : 160,
        "endColumnNumber" : 36
      },
      "nodeContext" : "batchSqlSession.flushStatements()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 160,
        "startColumnNumber" : 3,
        "endLineNumber" : 160,
        "endColumnNumber" : 37
      },
      "nodeContext" : "batchSqlSession.flushStatements();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 148,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int size=entityList.size();\n  for (int i=0; i < size; i++) {\n    if (isSelective) {\n      baseMapper.insertSelective(entityList.get(0));\n    }\n else {\n      baseMapper.insert(entityList.get(0));\n    }\n    if (i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 148,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  int size=entityList.size();\n  for (int i=0; i < size; i++) {\n    if (isSelective) {\n      baseMapper.insertSelective(entityList.get(0));\n    }\n else {\n      baseMapper.insert(entityList.get(0));\n    }\n    if (i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Exception e) {\n  logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 139,
        "startColumnNumber" : 87,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 批量插入\n * @param entityList\n * @param batchSize\n * @param isSelective\n * @return\n */\nprotected boolean insertBatch(List<T> entityList,int batchSize,boolean isSelective){\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 160,
        "startColumnNumber" : 3,
        "endLineNumber" : 160,
        "endColumnNumber" : 37
      },
      "nodeContext" : "batchSqlSession.flushStatements();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.framework.service.impl.SqlSession"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 157,
    "startColumnNumber" : 5,
    "endLineNumber" : 157,
    "endColumnNumber" : 20
  }, {
    "charLength" : 15,
    "startLineNumber" : 160,
    "startColumnNumber" : 3,
    "endLineNumber" : 160,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}