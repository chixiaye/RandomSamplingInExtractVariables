{
  "id" : 500,
  "expression" : "\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\"",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 221,
      "startLineNumber" : 61,
      "startColumnNumber" : 10,
      "endLineNumber" : 63,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 39
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 59,
        "startColumnNumber" : 48,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!Util.isValidDimensions(width,height)) {\n  throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 58,
        "startColumnNumber" : 50,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Util.isValidDimensions(width,height)) {\n    throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\");\n  }\n  cb.onSizeReady(width,height);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Immediately calls the given callback with the sizes given in the constructor.\n * @param cb {@inheritDoc}\n */\n@Override public final void getSize(SizeReadyCallback cb){\n  if (!Util.isValidDimensions(width,height)) {\n    throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\");\n  }\n  cb.onSizeReady(width,height);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height+ \", either provide dimensions in the constructor\"+ \" or call override()\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 33,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 221,
    "startLineNumber" : 61,
    "startColumnNumber" : 10,
    "endLineNumber" : 63,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}