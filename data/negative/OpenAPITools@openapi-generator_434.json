{
  "id" : 434,
  "expression" : "e",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/openapi3/client/petstore/java/native/src/main/java/org/openapitools/client/api/AnotherFakeApi.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 111,
      "startColumnNumber" : 29,
      "endLineNumber" : 111,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 31
      },
      "nodeContext" : "new ApiException(e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 111,
        "startColumnNumber" : 6,
        "endLineNumber" : 111,
        "endColumnNumber" : 32
      },
      "nodeContext" : "throw new ApiException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 110,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new ApiException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 110,
        "startColumnNumber" : 6,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IOException e) {\n  throw new ApiException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n  if (memberVarResponseInterceptor != null) {\n    memberVarResponseInterceptor.accept(localVarResponse);\n  }\n  if (localVarResponse.statusCode() / 100 != 2) {\n    throw getApiException(\"call123testSpecialTags\",localVarResponse);\n  }\n  return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n  }\n));\n}\n catch (IOException e) {\n  throw new ApiException(e);\n}\ncatch (InterruptedException e) {\n  Thread.currentThread().interrupt();\n  throw new ApiException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 93,
        "startColumnNumber" : 99,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpRequest.Builder localVarRequestBuilder=call123testSpecialTagsRequestBuilder(client);\n  try {\n    HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n    if (memberVarResponseInterceptor != null) {\n      memberVarResponseInterceptor.accept(localVarResponse);\n    }\n    if (localVarResponse.statusCode() / 100 != 2) {\n      throw getApiException(\"call123testSpecialTags\",localVarResponse);\n    }\n    return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n    }\n));\n  }\n catch (  IOException e) {\n    throw new ApiException(e);\n  }\ncatch (  InterruptedException e) {\n    Thread.currentThread().interrupt();\n    throw new ApiException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1293,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * To test special tags To test special tags and operation ID starting with number\n * @param client client model (required)\n * @return ApiResponse&lt;Client&gt;\n * @throws ApiException if fails to make API call\n */\npublic ApiResponse<Client> call123testSpecialTagsWithHttpInfo(Client client) throws ApiException {\n  HttpRequest.Builder localVarRequestBuilder=call123testSpecialTagsRequestBuilder(client);\n  try {\n    HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n    if (memberVarResponseInterceptor != null) {\n      memberVarResponseInterceptor.accept(localVarResponse);\n    }\n    if (localVarResponse.statusCode() / 100 != 2) {\n      throw getApiException(\"call123testSpecialTags\",localVarResponse);\n    }\n    return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n    }\n));\n  }\n catch (  IOException e) {\n    throw new ApiException(e);\n  }\ncatch (  InterruptedException e) {\n    Thread.currentThread().interrupt();\n    throw new ApiException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 111,
        "startColumnNumber" : 6,
        "endLineNumber" : 111,
        "endColumnNumber" : 32
      },
      "nodeContext" : "throw new ApiException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 115,
      "startColumnNumber" : 29,
      "endLineNumber" : 115,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 31
      },
      "nodeContext" : "new ApiException(e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 32
      },
      "nodeContext" : "throw new ApiException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 113,
        "startColumnNumber" : 35,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Thread.currentThread().interrupt();\n  throw new ApiException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (InterruptedException e) {\n  Thread.currentThread().interrupt();\n  throw new ApiException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n  if (memberVarResponseInterceptor != null) {\n    memberVarResponseInterceptor.accept(localVarResponse);\n  }\n  if (localVarResponse.statusCode() / 100 != 2) {\n    throw getApiException(\"call123testSpecialTags\",localVarResponse);\n  }\n  return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n  }\n));\n}\n catch (IOException e) {\n  throw new ApiException(e);\n}\ncatch (InterruptedException e) {\n  Thread.currentThread().interrupt();\n  throw new ApiException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 93,
        "startColumnNumber" : 99,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpRequest.Builder localVarRequestBuilder=call123testSpecialTagsRequestBuilder(client);\n  try {\n    HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n    if (memberVarResponseInterceptor != null) {\n      memberVarResponseInterceptor.accept(localVarResponse);\n    }\n    if (localVarResponse.statusCode() / 100 != 2) {\n      throw getApiException(\"call123testSpecialTags\",localVarResponse);\n    }\n    return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n    }\n));\n  }\n catch (  IOException e) {\n    throw new ApiException(e);\n  }\ncatch (  InterruptedException e) {\n    Thread.currentThread().interrupt();\n    throw new ApiException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1293,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * To test special tags To test special tags and operation ID starting with number\n * @param client client model (required)\n * @return ApiResponse&lt;Client&gt;\n * @throws ApiException if fails to make API call\n */\npublic ApiResponse<Client> call123testSpecialTagsWithHttpInfo(Client client) throws ApiException {\n  HttpRequest.Builder localVarRequestBuilder=call123testSpecialTagsRequestBuilder(client);\n  try {\n    HttpResponse<InputStream> localVarResponse=memberVarHttpClient.send(localVarRequestBuilder.build(),HttpResponse.BodyHandlers.ofInputStream());\n    if (memberVarResponseInterceptor != null) {\n      memberVarResponseInterceptor.accept(localVarResponse);\n    }\n    if (localVarResponse.statusCode() / 100 != 2) {\n      throw getApiException(\"call123testSpecialTags\",localVarResponse);\n    }\n    return new ApiResponse<Client>(localVarResponse.statusCode(),localVarResponse.headers().map(),memberVarObjectMapper.readValue(localVarResponse.body(),new TypeReference<Client>(){\n    }\n));\n  }\n catch (  IOException e) {\n    throw new ApiException(e);\n  }\ncatch (  InterruptedException e) {\n    Thread.currentThread().interrupt();\n    throw new ApiException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 32
      },
      "nodeContext" : "throw new ApiException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.InterruptedException"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 111,
    "startColumnNumber" : 29,
    "endLineNumber" : 111,
    "endColumnNumber" : 30
  }, {
    "charLength" : 1,
    "startLineNumber" : 115,
    "startColumnNumber" : 29,
    "endLineNumber" : 115,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}