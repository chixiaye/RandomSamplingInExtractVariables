{
  "id" : 88,
  "expression" : "DelimitedParseSpec.class",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/test/java/org/apache/druid/data/input/impl/DelimitedParseSpecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DelimitedParseSpec.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 50,
      "startColumnNumber" : 8,
      "endLineNumber" : 50,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 48,
        "startColumnNumber" : 37,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 48,
        "startColumnNumber" : 29,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "serde=jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 6
      },
      "nodeContext" : "final DelimitedParseSpec serde=jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DelimitedParseSpec spec=new DelimitedParseSpec(new TimestampSpec(\"abc\",\"iso\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"abc\")),null,null),\"\\u0001\",\"\\u0002\",Collections.singletonList(\"abc\"),false,0);\n  final DelimitedParseSpec serde=jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class);\n  Assert.assertEquals(\"abc\",serde.getTimestampSpec().getTimestampColumn());\n  Assert.assertEquals(\"iso\",serde.getTimestampSpec().getTimestampFormat());\n  Assert.assertEquals(Collections.singletonList(\"abc\"),serde.getColumns());\n  Assert.assertEquals(\"\\u0001\",serde.getDelimiter());\n  Assert.assertEquals(\"\\u0002\",serde.getListDelimiter());\n  Assert.assertEquals(Collections.singletonList(\"abc\"),serde.getDimensionsSpec().getDimensionNames());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 983,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerde() throws IOException {\n  DelimitedParseSpec spec=new DelimitedParseSpec(new TimestampSpec(\"abc\",\"iso\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"abc\")),null,null),\"\\u0001\",\"\\u0002\",Collections.singletonList(\"abc\"),false,0);\n  final DelimitedParseSpec serde=jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class);\n  Assert.assertEquals(\"abc\",serde.getTimestampSpec().getTimestampColumn());\n  Assert.assertEquals(\"iso\",serde.getTimestampSpec().getTimestampFormat());\n  Assert.assertEquals(Collections.singletonList(\"abc\"),serde.getColumns());\n  Assert.assertEquals(\"\\u0001\",serde.getDelimiter());\n  Assert.assertEquals(\"\\u0002\",serde.getListDelimiter());\n  Assert.assertEquals(Collections.singletonList(\"abc\"),serde.getDimensionsSpec().getDimensionNames());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 48,
        "startColumnNumber" : 37,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "jsonMapper.readValue(jsonMapper.writeValueAsString(spec),DelimitedParseSpec.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.druid.data.input.impl.DelimitedParseSpec>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 50,
    "startColumnNumber" : 8,
    "endLineNumber" : 50,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}