{
  "id" : 420,
  "expression" : "source.length()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/main/java/io/netty/buffer/api/internal/Statics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 245,
      "startColumnNumber" : 83,
      "endLineNumber" : 245,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 245,
        "startColumnNumber" : 12,
        "endLineNumber" : 245,
        "endColumnNumber" : 99
      },
      "nodeContext" : "destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 245,
        "startColumnNumber" : 12,
        "endLineNumber" : 245,
        "endColumnNumber" : 100
      },
      "nodeContext" : "destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 243,
        "startColumnNumber" : 71,
        "endLineNumber" : 247,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AsciiString asciiString=(AsciiString)source;\n  destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (US_ASCII.equals(charset) && source instanceof AsciiString) {\n  AsciiString asciiString=(AsciiString)source;\n  destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 242,
        "startColumnNumber" : 92,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (US_ASCII.equals(charset) && source instanceof AsciiString) {\n    AsciiString asciiString=(AsciiString)source;\n    destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n    return;\n  }\n  byte[] bytes=source.toString().getBytes(charset);\n  destination.writeBytes(bytes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void writeCharSequence(CharSequence source,Buffer destination,Charset charset){\n  if (US_ASCII.equals(charset) && source instanceof AsciiString) {\n    AsciiString asciiString=(AsciiString)source;\n    destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n    return;\n  }\n  byte[] bytes=source.toString().getBytes(charset);\n  destination.writeBytes(bytes);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 245,
        "startColumnNumber" : 12,
        "endLineNumber" : 245,
        "endColumnNumber" : 100
      },
      "nodeContext" : "destination.writeBytes(asciiString.array(),asciiString.arrayOffset(),source.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 245,
    "startColumnNumber" : 83,
    "endLineNumber" : 245,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}