{
  "id" : 60,
  "expression" : "newTracksInfo.equals(currentTracksInfo)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "ac881be2fccbbfe29fe3b4f094b85d6d16942c72",
  "filePath" : "extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newTracksInfo.equals(currentTracksInfo)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 1084,
      "startColumnNumber" : 12,
      "endLineNumber" : 1084,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 1084,
        "startColumnNumber" : 11,
        "endLineNumber" : 1084,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!newTracksInfo.equals(currentTracksInfo)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 1082,
        "startColumnNumber" : 8,
        "endLineNumber" : 1084,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 1082,
        "startColumnNumber" : 4,
        "endLineNumber" : 1089,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n  currentTrackSelection=newTrackSelections;\n  currentTrackGroups=newTrackGroups;\n  currentTracksInfo=newTracksInfo;\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 1084,
        "startColumnNumber" : 11,
        "endLineNumber" : 1084,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!newTracksInfo.equals(currentTracksInfo)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 1084,
    "startColumnNumber" : 12,
    "endLineNumber" : 1084,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}