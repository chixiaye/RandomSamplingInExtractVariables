{
  "id" : 8,
  "expression" : "type instanceof Class",
  "projectName" : "mockito@mockito",
  "commitID" : "3722958ba4db09b6ea45b613317b5f888d39a3f1",
  "filePath" : "src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "type instanceof Class",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 89,
      "startColumnNumber" : 12,
      "endLineNumber" : 89,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof Class) {\n  return (Class<?>)type;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 88,
        "startColumnNumber" : 51,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof Class) {\n    return (Class<?>)type;\n  }\n  if (type instanceof ParameterizedType) {\n    return (Class<?>)((ParameterizedType)type).getRawType();\n  }\n  if (type instanceof BoundedType) {\n    return extractRawTypeOf(((BoundedType)type).firstBound());\n  }\n  if (type instanceof TypeVariable) {\n    Type typeArgument=contextualActualTypeParameters.get(type);\n    if (typeArgument == null) {\n      BoundedType boundedType=boundsOf((TypeVariable<?>)type);\n      contextualActualTypeParameters.put((TypeVariable<?>)type,boundedType);\n      return extractRawTypeOf(boundedType);\n    }\n    return extractRawTypeOf(typeArgument);\n  }\n  throw new MockitoException(\"Raw extraction not supported for : '\" + type + \"'\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1355,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected Class<?> extractRawTypeOf(Type type){\n  if (type instanceof Class) {\n    return (Class<?>)type;\n  }\n  if (type instanceof ParameterizedType) {\n    return (Class<?>)((ParameterizedType)type).getRawType();\n  }\n  if (type instanceof BoundedType) {\n    return extractRawTypeOf(((BoundedType)type).firstBound());\n  }\n  if (type instanceof TypeVariable) {\n    Type typeArgument=contextualActualTypeParameters.get(type);\n    if (typeArgument == null) {\n      BoundedType boundedType=boundsOf((TypeVariable<?>)type);\n      contextualActualTypeParameters.put((TypeVariable<?>)type,boundedType);\n      return extractRawTypeOf(boundedType);\n    }\n    return extractRawTypeOf(typeArgument);\n  }\n  throw new MockitoException(\"Raw extraction not supported for : '\" + type + \"'\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof Class) {\n  return (Class<?>)type;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 89,
    "startColumnNumber" : 12,
    "endLineNumber" : 89,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}