{
  "id" : 45,
  "expression" : "new EventHandler<SimpleData>(){\n  @Override public void onEvent(  SimpleData event,  long sequence,  boolean endOfBatch) throws Exception {\n    byte[] data=event.getData();\n    System.arraycopy(data,0,output,0,data.length);\n    latch.countDown();\n  }\n}\n",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/OffHeapRingBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new EventHandler<SimpleData>(){\n  @Override public void onEvent(  SimpleData event,  long sequence,  boolean endOfBatch) throws Exception {\n    byte[] data=event.getData();\n    System.arraycopy(data,0,output,0,data.length);\n    latch.countDown();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 351,
      "startLineNumber" : 49,
      "startColumnNumber" : 43,
      "endLineNumber" : 58,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 50,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 49,
        "startColumnNumber" : 33,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "handler=new EventHandler<SimpleData>(){\n  @Override public void onEvent(  SimpleData event,  long sequence,  boolean endOfBatch) throws Exception {\n    byte[] data=event.getData();\n    System.arraycopy(data,0,output,0,data.length);\n    latch.countDown();\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 10
      },
      "nodeContext" : "EventHandler<SimpleData> handler=new EventHandler<SimpleData>(){\n  @Override public void onEvent(  SimpleData event,  long sequence,  boolean endOfBatch) throws Exception {\n    byte[] data=event.getData();\n    System.arraycopy(data,0,output,0,data.length);\n    latch.countDown();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1453,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] input=\"Some more test data passed between threads\".getBytes();\n  final CountDownLatch latch=new CountDownLatch(1);\n  final byte[] output=new byte[input.length];\n  EventHandler<SimpleData> handler=new EventHandler<SimpleData>(){\n    @Override public void onEvent(    SimpleData event,    long sequence,    boolean endOfBatch) throws Exception {\n      byte[] data=event.getData();\n      System.arraycopy(data,0,output,0,data.length);\n      latch.countDown();\n    }\n  }\n;\n  BatchEventProcessor<SimpleData> processor=new BatchEventProcessor<SimpleData>(ringBuffer.createDataSource(),ringBuffer.newBarrier(),handler);\n  ringBuffer.addGatingSequences(processor.getSequence());\n  Thread t=new Thread(processor);\n  t.start();\n  Producer<SimpleData> producer=ringBuffer.createProducer();\n  SimpleData entry=producer.next();\n  entry.setDataLength(input.length);\n  entry.setData(input,0,input.length);\n  producer.publish();\n  assertTrue(latch.await(1,TimeUnit.SECONDS));\n  assertTrue(Arrays.equals(input,output));\n  processor.halt();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1518,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldNotifyHandler() throws Exception {\n  final byte[] input=\"Some more test data passed between threads\".getBytes();\n  final CountDownLatch latch=new CountDownLatch(1);\n  final byte[] output=new byte[input.length];\n  EventHandler<SimpleData> handler=new EventHandler<SimpleData>(){\n    @Override public void onEvent(    SimpleData event,    long sequence,    boolean endOfBatch) throws Exception {\n      byte[] data=event.getData();\n      System.arraycopy(data,0,output,0,data.length);\n      latch.countDown();\n    }\n  }\n;\n  BatchEventProcessor<SimpleData> processor=new BatchEventProcessor<SimpleData>(ringBuffer.createDataSource(),ringBuffer.newBarrier(),handler);\n  ringBuffer.addGatingSequences(processor.getSequence());\n  Thread t=new Thread(processor);\n  t.start();\n  Producer<SimpleData> producer=ringBuffer.createProducer();\n  SimpleData entry=producer.next();\n  entry.setDataLength(input.length);\n  entry.setData(input,0,input.length);\n  producer.publish();\n  assertTrue(latch.await(1,TimeUnit.SECONDS));\n  assertTrue(Arrays.equals(input,output));\n  processor.halt();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 10
      },
      "nodeContext" : "EventHandler<SimpleData> handler=new EventHandler<SimpleData>(){\n  @Override public void onEvent(  SimpleData event,  long sequence,  boolean endOfBatch) throws Exception {\n    byte[] data=event.getData();\n    System.arraycopy(data,0,output,0,data.length);\n    latch.countDown();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    },
    "tokenLength" : 20,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 351,
    "startLineNumber" : 49,
    "startColumnNumber" : 43,
    "endLineNumber" : 58,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}