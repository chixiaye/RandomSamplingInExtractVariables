{
  "id" : 152,
  "expression" : "oauth2ParamsId",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/dao/src/main/java/org/thingsboard/server/dao/model/sql/OAuth2RegistrationEntity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oauth2ParamsId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 173,
      "startColumnNumber" : 58,
      "endLineNumber" : 173,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 173,
        "startColumnNumber" : 39,
        "endLineNumber" : 173,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new OAuth2ParamsId(oauth2ParamsId)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 74
      },
      "nodeContext" : "registration.setOauth2ParamsId(new OAuth2ParamsId(oauth2ParamsId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 75
      },
      "nodeContext" : "registration.setOauth2ParamsId(new OAuth2ParamsId(oauth2ParamsId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3101,
        "startLineNumber" : 169,
        "startColumnNumber" : 39,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OAuth2Registration registration=new OAuth2Registration();\n  registration.setId(new OAuth2RegistrationId(id));\n  registration.setCreatedTime(createdTime);\n  registration.setOauth2ParamsId(new OAuth2ParamsId(oauth2ParamsId));\n  registration.setAdditionalInfo(additionalInfo);\n  registration.setMapperConfig(OAuth2MapperConfig.builder().allowUserCreation(allowUserCreation).activateUser(activateUser).type(type).basic((type == MapperType.BASIC || type == MapperType.GITHUB || type == MapperType.APPLE) ? OAuth2BasicMapperConfig.builder().emailAttributeKey(emailAttributeKey).firstNameAttributeKey(firstNameAttributeKey).lastNameAttributeKey(lastNameAttributeKey).tenantNameStrategy(tenantNameStrategy).tenantNamePattern(tenantNamePattern).customerNamePattern(customerNamePattern).defaultDashboardName(defaultDashboardName).alwaysFullScreen(alwaysFullScreen).build() : null).custom(type == MapperType.CUSTOM ? OAuth2CustomMapperConfig.builder().url(url).username(username).password(password).sendToken(sendToken).build() : null).build());\n  registration.setClientId(clientId);\n  registration.setClientSecret(clientSecret);\n  registration.setAuthorizationUri(authorizationUri);\n  registration.setAccessTokenUri(tokenUri);\n  registration.setScope(Arrays.asList(scope.split(\",\")));\n  registration.setPlatforms(StringUtils.isNotEmpty(platforms) ? Arrays.stream(platforms.split(\",\")).map(str -> PlatformType.valueOf(str)).collect(Collectors.toList()) : Collections.emptyList());\n  registration.setUserInfoUri(userInfoUri);\n  registration.setUserNameAttributeName(userNameAttributeName);\n  registration.setJwkSetUri(jwkSetUri);\n  registration.setClientAuthenticationMethod(clientAuthenticationMethod);\n  registration.setLoginButtonLabel(loginButtonLabel);\n  registration.setLoginButtonIcon(loginButtonIcon);\n  return registration;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3150,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public OAuth2Registration toData(){\n  OAuth2Registration registration=new OAuth2Registration();\n  registration.setId(new OAuth2RegistrationId(id));\n  registration.setCreatedTime(createdTime);\n  registration.setOauth2ParamsId(new OAuth2ParamsId(oauth2ParamsId));\n  registration.setAdditionalInfo(additionalInfo);\n  registration.setMapperConfig(OAuth2MapperConfig.builder().allowUserCreation(allowUserCreation).activateUser(activateUser).type(type).basic((type == MapperType.BASIC || type == MapperType.GITHUB || type == MapperType.APPLE) ? OAuth2BasicMapperConfig.builder().emailAttributeKey(emailAttributeKey).firstNameAttributeKey(firstNameAttributeKey).lastNameAttributeKey(lastNameAttributeKey).tenantNameStrategy(tenantNameStrategy).tenantNamePattern(tenantNamePattern).customerNamePattern(customerNamePattern).defaultDashboardName(defaultDashboardName).alwaysFullScreen(alwaysFullScreen).build() : null).custom(type == MapperType.CUSTOM ? OAuth2CustomMapperConfig.builder().url(url).username(username).password(password).sendToken(sendToken).build() : null).build());\n  registration.setClientId(clientId);\n  registration.setClientSecret(clientSecret);\n  registration.setAuthorizationUri(authorizationUri);\n  registration.setAccessTokenUri(tokenUri);\n  registration.setScope(Arrays.asList(scope.split(\",\")));\n  registration.setPlatforms(StringUtils.isNotEmpty(platforms) ? Arrays.stream(platforms.split(\",\")).map(str -> PlatformType.valueOf(str)).collect(Collectors.toList()) : Collections.emptyList());\n  registration.setUserInfoUri(userInfoUri);\n  registration.setUserNameAttributeName(userNameAttributeName);\n  registration.setJwkSetUri(jwkSetUri);\n  registration.setClientAuthenticationMethod(clientAuthenticationMethod);\n  registration.setLoginButtonLabel(loginButtonLabel);\n  registration.setLoginButtonIcon(loginButtonIcon);\n  return registration;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 75
      },
      "nodeContext" : "registration.setOauth2ParamsId(new OAuth2ParamsId(oauth2ParamsId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.UUID"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 173,
    "startColumnNumber" : 58,
    "endLineNumber" : 173,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}