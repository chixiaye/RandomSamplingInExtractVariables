{
  "id" : 170,
  "expression" : "gson.fromJson(\"-Infinity\",Double.class)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gson.fromJson(\"-Infinity\",Double.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 474,
      "startColumnNumber" : 33,
      "endLineNumber" : 474,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 474,
        "startColumnNumber" : 15,
        "endLineNumber" : 474,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 474,
        "startColumnNumber" : 4,
        "endLineNumber" : 474,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 474,
        "startColumnNumber" : 4,
        "endLineNumber" : 474,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 472,
        "startColumnNumber" : 52,
        "endLineNumber" : 475,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",double.class)));\n  assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 472,
        "startColumnNumber" : 2,
        "endLineNumber" : 475,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testNegativeInfinityDeserialization(){\n  assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",double.class)));\n  assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 474,
        "startColumnNumber" : 4,
        "endLineNumber" : 474,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertTrue(Double.isInfinite(gson.fromJson(\"-Infinity\",Double.class)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.Double"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 474,
    "startColumnNumber" : 33,
    "endLineNumber" : 474,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}