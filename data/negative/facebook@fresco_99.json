{
  "id" : 99,
  "expression" : "mExecutorService.submit(new Runnable(){\n  @Override public void run(){\n    fetchSync(fetchState,callback);\n  }\n}\n)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mExecutorService.submit(new Runnable(){\n  @Override public void run(){\n    fetchSync(fetchState,callback);\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 191,
      "startLineNumber" : 99,
      "startColumnNumber" : 8,
      "endLineNumber" : 105,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 19,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 14
      },
      "nodeContext" : "future=mExecutorService.submit(new Runnable(){\n  @Override public void run(){\n    fetchSync(fetchState,callback);\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 15
      },
      "nodeContext" : "final Future<?> future=mExecutorService.submit(new Runnable(){\n  @Override public void run(){\n    fetchSync(fetchState,callback);\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 96,
        "startColumnNumber" : 98,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  fetchState.submitTime=mMonotonicClock.now();\n  final Future<?> future=mExecutorService.submit(new Runnable(){\n    @Override public void run(){\n      fetchSync(fetchState,callback);\n    }\n  }\n);\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      if (future.cancel(false)) {\n        callback.onCancellation();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void fetch(final HttpUrlConnectionNetworkFetchState fetchState,final Callback callback){\n  fetchState.submitTime=mMonotonicClock.now();\n  final Future<?> future=mExecutorService.submit(new Runnable(){\n    @Override public void run(){\n      fetchSync(fetchState,callback);\n    }\n  }\n);\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      if (future.cancel(false)) {\n        callback.onCancellation();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 14
      },
      "nodeContext" : "future=mExecutorService.submit(new Runnable(){\n  @Override public void run(){\n    fetchSync(fetchState,callback);\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 9
    },
    "tokenLength" : 8,
    "type" : "java.util.concurrent.Future<>"
  } ],
  "positionList" : [ {
    "charLength" : 191,
    "startLineNumber" : 99,
    "startColumnNumber" : 8,
    "endLineNumber" : 105,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}