{
  "id" : 70,
  "expression" : "ar.result()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/CreateVertxTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ar.result()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 60,
      "startColumnNumber" : 20,
      "endLineNumber" : 60,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertNotNull(ar.result())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertNotNull(ar.result());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 58,
        "startColumnNumber" : 40,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 58,
        "startColumnNumber" : 34,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ar -> {\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertNotNull(ar.result());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.vertx.core.Vertx"
  }, {
    "nodeContext" : "ar.result()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 17,
      "endLineNumber" : 61,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 17,
        "endLineNumber" : 61,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ar.result().isClustered()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertTrue(ar.result().isClustered())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(ar.result().isClustered());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 58,
        "startColumnNumber" : 40,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 58,
        "startColumnNumber" : 34,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ar -> {\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(ar.result().isClustered());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.vertx.core.Vertx"
  }, {
    "nodeContext" : "ar.result()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 62,
      "startColumnNumber" : 16,
      "endLineNumber" : 62,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 27
      },
      "nodeContext" : "v=ar.result()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Vertx v=ar.result();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 58,
        "startColumnNumber" : 40,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 58,
        "startColumnNumber" : 34,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ar -> {\n  assertTrue(ar.succeeded());\n  assertNotNull(ar.result());\n  assertTrue(ar.result().isClustered());\n  Vertx v=ar.result();\n  v.close(ar2 -> {\n    assertTrue(ar2.succeeded());\n    testComplete();\n  }\n);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Vertx v=ar.result();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.vertx.core.Vertx"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 60,
    "startColumnNumber" : 20,
    "endLineNumber" : 60,
    "endColumnNumber" : 31
  }, {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 17,
    "endLineNumber" : 61,
    "endColumnNumber" : 28
  }, {
    "charLength" : 11,
    "startLineNumber" : 62,
    "startColumnNumber" : 16,
    "endLineNumber" : 62,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}