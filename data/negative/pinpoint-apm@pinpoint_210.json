{
  "id" : 210,
  "expression" : "v != null && valueEquivalence.equivalent(value,v)",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thirdparty/google-guava/src/main/java/com/google/common/collect/MapMakerInternalMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "v != null && valueEquivalence.equivalent(value,v)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 3496,
      "startColumnNumber" : 16,
      "endLineNumber" : 3496,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 3496,
        "startColumnNumber" : 12,
        "endLineNumber" : 3498,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (v != null && valueEquivalence.equivalent(value,v)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 3494,
        "startColumnNumber" : 82,
        "endLineNumber" : 3499,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  V v=segment.getLiveValue(e);\n  if (v != null && valueEquivalence.equivalent(value,v)) {\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 3494,
        "startColumnNumber" : 10,
        "endLineNumber" : 3499,
        "endColumnNumber" : 11
      },
      "nodeContext" : "for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n  V v=segment.getLiveValue(e);\n  if (v != null && valueEquivalence.equivalent(value,v)) {\n    return true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 3493,
        "startColumnNumber" : 49,
        "endLineNumber" : 3500,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n    V v=segment.getLiveValue(e);\n    if (v != null && valueEquivalence.equivalent(value,v)) {\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 3493,
        "startColumnNumber" : 8,
        "endLineNumber" : 3500,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < table.length(); j++) {\n  for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n    V v=segment.getLiveValue(e);\n    if (v != null && valueEquivalence.equivalent(value,v)) {\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 3488,
        "startColumnNumber" : 45,
        "endLineNumber" : 3502,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int unused=segment.count;\n  AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n  for (int j=0; j < table.length(); j++) {\n    for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n      V v=segment.getLiveValue(e);\n      if (v != null && valueEquivalence.equivalent(value,v)) {\n        return true;\n      }\n    }\n  }\n  sum+=segment.modCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 3488,
        "startColumnNumber" : 6,
        "endLineNumber" : 3502,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Segment<K,V> segment : segments) {\n  int unused=segment.count;\n  AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n  for (int j=0; j < table.length(); j++) {\n    for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n      V v=segment.getLiveValue(e);\n      if (v != null && valueEquivalence.equivalent(value,v)) {\n        return true;\n      }\n    }\n  }\n  sum+=segment.modCount;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 3486,
        "startColumnNumber" : 53,
        "endLineNumber" : 3507,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long sum=0L;\n  for (  Segment<K,V> segment : segments) {\n    int unused=segment.count;\n    AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n    for (int j=0; j < table.length(); j++) {\n      for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n        V v=segment.getLiveValue(e);\n        if (v != null && valueEquivalence.equivalent(value,v)) {\n          return true;\n        }\n      }\n    }\n    sum+=segment.modCount;\n  }\n  if (sum == last) {\n    break;\n  }\n  last=sum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 3486,
        "startColumnNumber" : 4,
        "endLineNumber" : 3507,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < CONTAINS_VALUE_RETRIES; i++) {\n  long sum=0L;\n  for (  Segment<K,V> segment : segments) {\n    int unused=segment.count;\n    AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n    for (int j=0; j < table.length(); j++) {\n      for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n        V v=segment.getLiveValue(e);\n        if (v != null && valueEquivalence.equivalent(value,v)) {\n          return true;\n        }\n      }\n    }\n    sum+=segment.modCount;\n  }\n  if (sum == last) {\n    break;\n  }\n  last=sum;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 3474,
        "startColumnNumber" : 55,
        "endLineNumber" : 3509,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (value == null) {\n    return false;\n  }\n  final Segment<K,V>[] segments=this.segments;\n  long last=-1L;\n  for (int i=0; i < CONTAINS_VALUE_RETRIES; i++) {\n    long sum=0L;\n    for (    Segment<K,V> segment : segments) {\n      int unused=segment.count;\n      AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n      for (int j=0; j < table.length(); j++) {\n        for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n          V v=segment.getLiveValue(e);\n          if (v != null && valueEquivalence.equivalent(value,v)) {\n            return true;\n          }\n        }\n      }\n      sum+=segment.modCount;\n    }\n    if (sum == last) {\n      break;\n    }\n    last=sum;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 3473,
        "startColumnNumber" : 2,
        "endLineNumber" : 3509,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean containsValue(@Nullable Object value){\n  if (value == null) {\n    return false;\n  }\n  final Segment<K,V>[] segments=this.segments;\n  long last=-1L;\n  for (int i=0; i < CONTAINS_VALUE_RETRIES; i++) {\n    long sum=0L;\n    for (    Segment<K,V> segment : segments) {\n      int unused=segment.count;\n      AtomicReferenceArray<ReferenceEntry<K,V>> table=segment.table;\n      for (int j=0; j < table.length(); j++) {\n        for (ReferenceEntry<K,V> e=table.get(j); e != null; e=e.getNext()) {\n          V v=segment.getLiveValue(e);\n          if (v != null && valueEquivalence.equivalent(value,v)) {\n            return true;\n          }\n        }\n      }\n      sum+=segment.modCount;\n    }\n    if (sum == last) {\n      break;\n    }\n    last=sum;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 3496,
        "startColumnNumber" : 12,
        "endLineNumber" : 3498,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (v != null && valueEquivalence.equivalent(value,v)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 3496,
    "startColumnNumber" : 16,
    "endLineNumber" : 3496,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}