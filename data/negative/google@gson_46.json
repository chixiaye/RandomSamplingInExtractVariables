{
  "id" : 46,
  "expression" : "new TypeAdapter<T>(){\n  @Override public void write(  JsonWriter out,  T value) throws IOException {\n    if (value == null) {\n      out.nullValue();\n      return;\n    }\n    Graph graph=graphThreadLocal.get();\n    boolean writeEntireGraph=false;\n    if (graph == null) {\n      writeEntireGraph=true;\n      graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n    }\n    @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n    if (element == null) {\n      element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n      graph.map.put(value,element);\n      graph.queue.add(element);\n    }\n    if (writeEntireGraph) {\n      graphThreadLocal.set(graph);\n      try {\n        out.beginObject();\n        Element<?> current;\n        while ((current=graph.queue.poll()) != null) {\n          out.name(current.id);\n          current.write(out);\n        }\n        out.endObject();\n      }\n  finally {\n        graphThreadLocal.remove();\n      }\n    }\n else {\n      out.value(element.id);\n    }\n  }\n  @Override public T read(  JsonReader in) throws IOException {\n    if (in.peek() == JsonToken.NULL) {\n      in.nextNull();\n      return null;\n    }\n    String currentName=null;\n    Graph graph=graphThreadLocal.get();\n    boolean readEntireGraph=false;\n    if (graph == null) {\n      graph=new Graph(new HashMap<Object,Element<?>>());\n      readEntireGraph=true;\n      in.beginObject();\n      while (in.hasNext()) {\n        String name=in.nextName();\n        if (currentName == null) {\n          currentName=name;\n        }\n        JsonElement element=elementAdapter.read(in);\n        graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n      }\n      in.endObject();\n    }\n else {\n      currentName=in.nextString();\n    }\n    if (readEntireGraph) {\n      graphThreadLocal.set(graph);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n      if (element.value == null) {\n        element.typeAdapter=typeAdapter;\n        element.read(graph);\n      }\n      return element.value;\n    }\n  finally {\n      if (readEntireGraph) {\n        graphThreadLocal.remove();\n      }\n    }\n  }\n}\n",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TypeAdapter<T>(){\n  @Override public void write(  JsonWriter out,  T value) throws IOException {\n    if (value == null) {\n      out.nullValue();\n      return;\n    }\n    Graph graph=graphThreadLocal.get();\n    boolean writeEntireGraph=false;\n    if (graph == null) {\n      writeEntireGraph=true;\n      graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n    }\n    @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n    if (element == null) {\n      element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n      graph.map.put(value,element);\n      graph.queue.add(element);\n    }\n    if (writeEntireGraph) {\n      graphThreadLocal.set(graph);\n      try {\n        out.beginObject();\n        Element<?> current;\n        while ((current=graph.queue.poll()) != null) {\n          out.name(current.id);\n          current.write(out);\n        }\n        out.endObject();\n      }\n  finally {\n        graphThreadLocal.remove();\n      }\n    }\n else {\n      out.value(element.id);\n    }\n  }\n  @Override public T read(  JsonReader in) throws IOException {\n    if (in.peek() == JsonToken.NULL) {\n      in.nextNull();\n      return null;\n    }\n    String currentName=null;\n    Graph graph=graphThreadLocal.get();\n    boolean readEntireGraph=false;\n    if (graph == null) {\n      graph=new Graph(new HashMap<Object,Element<?>>());\n      readEntireGraph=true;\n      in.beginObject();\n      while (in.hasNext()) {\n        String name=in.nextName();\n        if (currentName == null) {\n          currentName=name;\n        }\n        JsonElement element=elementAdapter.read(in);\n        graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n      }\n      in.endObject();\n    }\n else {\n      currentName=in.nextString();\n    }\n    if (readEntireGraph) {\n      graphThreadLocal.set(graph);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n      if (element.value == null) {\n        element.typeAdapter=typeAdapter;\n        element.read(graph);\n      }\n      return element.value;\n    }\n  finally {\n      if (readEntireGraph) {\n        graphThreadLocal.remove();\n      }\n    }\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 4011,
      "startLineNumber" : 90,
      "startColumnNumber" : 13,
      "endLineNumber" : 199,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 391,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 199,
        "endColumnNumber" : 8
      },
      "nodeContext" : "return new TypeAdapter<T>(){\n  @Override public void write(  JsonWriter out,  T value) throws IOException {\n    if (value == null) {\n      out.nullValue();\n      return;\n    }\n    Graph graph=graphThreadLocal.get();\n    boolean writeEntireGraph=false;\n    if (graph == null) {\n      writeEntireGraph=true;\n      graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n    }\n    @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n    if (element == null) {\n      element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n      graph.map.put(value,element);\n      graph.queue.add(element);\n    }\n    if (writeEntireGraph) {\n      graphThreadLocal.set(graph);\n      try {\n        out.beginObject();\n        Element<?> current;\n        while ((current=graph.queue.poll()) != null) {\n          out.name(current.id);\n          current.write(out);\n        }\n        out.endObject();\n      }\n  finally {\n        graphThreadLocal.remove();\n      }\n    }\n else {\n      out.value(element.id);\n    }\n  }\n  @Override public T read(  JsonReader in) throws IOException {\n    if (in.peek() == JsonToken.NULL) {\n      in.nextNull();\n      return null;\n    }\n    String currentName=null;\n    Graph graph=graphThreadLocal.get();\n    boolean readEntireGraph=false;\n    if (graph == null) {\n      graph=new Graph(new HashMap<Object,Element<?>>());\n      readEntireGraph=true;\n      in.beginObject();\n      while (in.hasNext()) {\n        String name=in.nextName();\n        if (currentName == null) {\n          currentName=name;\n        }\n        JsonElement element=elementAdapter.read(in);\n        graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n      }\n      in.endObject();\n    }\n else {\n      currentName=in.nextString();\n    }\n    if (readEntireGraph) {\n      graphThreadLocal.set(graph);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n      if (element.value == null) {\n        element.typeAdapter=typeAdapter;\n        element.read(graph);\n      }\n      return element.value;\n    }\n  finally {\n      if (readEntireGraph) {\n        graphThreadLocal.remove();\n      }\n    }\n  }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 392,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4290,
        "startLineNumber" : 83,
        "startColumnNumber" : 67,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!instanceCreators.containsKey(type.getType())) {\n    return null;\n  }\n  final TypeAdapter<T> typeAdapter=gson.getDelegateAdapter(this,type);\n  final TypeAdapter<JsonElement> elementAdapter=gson.getAdapter(JsonElement.class);\n  return new TypeAdapter<T>(){\n    @Override public void write(    JsonWriter out,    T value) throws IOException {\n      if (value == null) {\n        out.nullValue();\n        return;\n      }\n      Graph graph=graphThreadLocal.get();\n      boolean writeEntireGraph=false;\n      if (graph == null) {\n        writeEntireGraph=true;\n        graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n      }\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n      if (element == null) {\n        element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n        graph.map.put(value,element);\n        graph.queue.add(element);\n      }\n      if (writeEntireGraph) {\n        graphThreadLocal.set(graph);\n        try {\n          out.beginObject();\n          Element<?> current;\n          while ((current=graph.queue.poll()) != null) {\n            out.name(current.id);\n            current.write(out);\n          }\n          out.endObject();\n        }\n  finally {\n          graphThreadLocal.remove();\n        }\n      }\n else {\n        out.value(element.id);\n      }\n    }\n    @Override public T read(    JsonReader in) throws IOException {\n      if (in.peek() == JsonToken.NULL) {\n        in.nextNull();\n        return null;\n      }\n      String currentName=null;\n      Graph graph=graphThreadLocal.get();\n      boolean readEntireGraph=false;\n      if (graph == null) {\n        graph=new Graph(new HashMap<Object,Element<?>>());\n        readEntireGraph=true;\n        in.beginObject();\n        while (in.hasNext()) {\n          String name=in.nextName();\n          if (currentName == null) {\n            currentName=name;\n          }\n          JsonElement element=elementAdapter.read(in);\n          graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n        }\n        in.endObject();\n      }\n else {\n        currentName=in.nextString();\n      }\n      if (readEntireGraph) {\n        graphThreadLocal.set(graph);\n      }\n      try {\n        @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n        if (element.value == null) {\n          element.typeAdapter=typeAdapter;\n          element.read(graph);\n        }\n        return element.value;\n      }\n  finally {\n        if (readEntireGraph) {\n          graphThreadLocal.remove();\n        }\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 433,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4353,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public <T>TypeAdapter<T> create(Gson gson,TypeToken<T> type){\n  if (!instanceCreators.containsKey(type.getType())) {\n    return null;\n  }\n  final TypeAdapter<T> typeAdapter=gson.getDelegateAdapter(this,type);\n  final TypeAdapter<JsonElement> elementAdapter=gson.getAdapter(JsonElement.class);\n  return new TypeAdapter<T>(){\n    @Override public void write(    JsonWriter out,    T value) throws IOException {\n      if (value == null) {\n        out.nullValue();\n        return;\n      }\n      Graph graph=graphThreadLocal.get();\n      boolean writeEntireGraph=false;\n      if (graph == null) {\n        writeEntireGraph=true;\n        graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n      }\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n      if (element == null) {\n        element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n        graph.map.put(value,element);\n        graph.queue.add(element);\n      }\n      if (writeEntireGraph) {\n        graphThreadLocal.set(graph);\n        try {\n          out.beginObject();\n          Element<?> current;\n          while ((current=graph.queue.poll()) != null) {\n            out.name(current.id);\n            current.write(out);\n          }\n          out.endObject();\n        }\n  finally {\n          graphThreadLocal.remove();\n        }\n      }\n else {\n        out.value(element.id);\n      }\n    }\n    @Override public T read(    JsonReader in) throws IOException {\n      if (in.peek() == JsonToken.NULL) {\n        in.nextNull();\n        return null;\n      }\n      String currentName=null;\n      Graph graph=graphThreadLocal.get();\n      boolean readEntireGraph=false;\n      if (graph == null) {\n        graph=new Graph(new HashMap<Object,Element<?>>());\n        readEntireGraph=true;\n        in.beginObject();\n        while (in.hasNext()) {\n          String name=in.nextName();\n          if (currentName == null) {\n            currentName=name;\n          }\n          JsonElement element=elementAdapter.read(in);\n          graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n        }\n        in.endObject();\n      }\n else {\n        currentName=in.nextString();\n      }\n      if (readEntireGraph) {\n        graphThreadLocal.set(graph);\n      }\n      try {\n        @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n        if (element.value == null) {\n          element.typeAdapter=typeAdapter;\n          element.read(graph);\n        }\n        return element.value;\n      }\n  finally {\n        if (readEntireGraph) {\n          graphThreadLocal.remove();\n        }\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 199,
        "endColumnNumber" : 8
      },
      "nodeContext" : "return new TypeAdapter<T>(){\n  @Override public void write(  JsonWriter out,  T value) throws IOException {\n    if (value == null) {\n      out.nullValue();\n      return;\n    }\n    Graph graph=graphThreadLocal.get();\n    boolean writeEntireGraph=false;\n    if (graph == null) {\n      writeEntireGraph=true;\n      graph=new Graph(new IdentityHashMap<Object,Element<?>>());\n    }\n    @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(value);\n    if (element == null) {\n      element=new Element<T>(value,graph.nextName(),typeAdapter,null);\n      graph.map.put(value,element);\n      graph.queue.add(element);\n    }\n    if (writeEntireGraph) {\n      graphThreadLocal.set(graph);\n      try {\n        out.beginObject();\n        Element<?> current;\n        while ((current=graph.queue.poll()) != null) {\n          out.name(current.id);\n          current.write(out);\n        }\n        out.endObject();\n      }\n  finally {\n        graphThreadLocal.remove();\n      }\n    }\n else {\n      out.value(element.id);\n    }\n  }\n  @Override public T read(  JsonReader in) throws IOException {\n    if (in.peek() == JsonToken.NULL) {\n      in.nextNull();\n      return null;\n    }\n    String currentName=null;\n    Graph graph=graphThreadLocal.get();\n    boolean readEntireGraph=false;\n    if (graph == null) {\n      graph=new Graph(new HashMap<Object,Element<?>>());\n      readEntireGraph=true;\n      in.beginObject();\n      while (in.hasNext()) {\n        String name=in.nextName();\n        if (currentName == null) {\n          currentName=name;\n        }\n        JsonElement element=elementAdapter.read(in);\n        graph.map.put(name,new Element<T>(null,name,typeAdapter,element));\n      }\n      in.endObject();\n    }\n else {\n      currentName=in.nextString();\n    }\n    if (readEntireGraph) {\n      graphThreadLocal.set(graph);\n    }\n    try {\n      @SuppressWarnings(\"unchecked\") Element<T> element=(Element<T>)graph.map.get(currentName);\n      if (element.value == null) {\n        element.typeAdapter=typeAdapter;\n        element.read(graph);\n      }\n      return element.value;\n    }\n  finally {\n      if (readEntireGraph) {\n        graphThreadLocal.remove();\n      }\n    }\n  }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 392,
      "astHeight" : 16
    },
    "tokenLength" : 167,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 4011,
    "startLineNumber" : 90,
    "startColumnNumber" : 13,
    "endLineNumber" : 199,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ ]
}