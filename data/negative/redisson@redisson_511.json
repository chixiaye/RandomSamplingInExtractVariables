{
  "id" : 511,
  "expression" : "buckets",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/RedissonBucketReactiveTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 106,
      "startColumnNumber" : 31,
      "endLineNumber" : 106,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 106,
        "startColumnNumber" : 31,
        "endLineNumber" : 106,
        "endColumnNumber" : 45
      },
      "nodeContext" : "buckets.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Assert.assertEquals(2,buckets.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertEquals(2,buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertEquals(2,buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  }, {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 107,
      "startColumnNumber" : 41,
      "endLineNumber" : 107,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 107,
        "startColumnNumber" : 41,
        "endLineNumber" : 107,
        "endColumnNumber" : 55
      },
      "nodeContext" : "buckets.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 107,
        "startColumnNumber" : 41,
        "endLineNumber" : 107,
        "endColumnNumber" : 65
      },
      "nodeContext" : "buckets.get(0).getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 107,
        "startColumnNumber" : 26,
        "endLineNumber" : 107,
        "endColumnNumber" : 66
      },
      "nodeContext" : "names.contains(buckets.get(0).getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  }, {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 108,
      "startColumnNumber" : 41,
      "endLineNumber" : 108,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 108,
        "startColumnNumber" : 41,
        "endLineNumber" : 108,
        "endColumnNumber" : 55
      },
      "nodeContext" : "buckets.get(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 108,
        "startColumnNumber" : 41,
        "endLineNumber" : 108,
        "endColumnNumber" : 65
      },
      "nodeContext" : "buckets.get(1).getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 108,
        "startColumnNumber" : 26,
        "endLineNumber" : 108,
        "endColumnNumber" : 66
      },
      "nodeContext" : "names.contains(buckets.get(1).getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(1).getName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(1).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(1).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  }, {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 109,
      "startColumnNumber" : 45,
      "endLineNumber" : 109,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 109,
        "startColumnNumber" : 45,
        "endLineNumber" : 109,
        "endColumnNumber" : 59
      },
      "nodeContext" : "buckets.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 109,
        "startColumnNumber" : 45,
        "endLineNumber" : 109,
        "endColumnNumber" : 65
      },
      "nodeContext" : "buckets.get(0).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 109,
        "startColumnNumber" : 40,
        "endLineNumber" : 109,
        "endColumnNumber" : 66
      },
      "nodeContext" : "sync(buckets.get(0).get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 109,
        "startColumnNumber" : 26,
        "endLineNumber" : 109,
        "endColumnNumber" : 67
      },
      "nodeContext" : "vals.contains(sync(buckets.get(0).get()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(0).get())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  }, {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 110,
      "startColumnNumber" : 45,
      "endLineNumber" : 110,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 110,
        "startColumnNumber" : 45,
        "endLineNumber" : 110,
        "endColumnNumber" : 59
      },
      "nodeContext" : "buckets.get(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 110,
        "startColumnNumber" : 45,
        "endLineNumber" : 110,
        "endColumnNumber" : 65
      },
      "nodeContext" : "buckets.get(1).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 110,
        "startColumnNumber" : 40,
        "endLineNumber" : 110,
        "endColumnNumber" : 66
      },
      "nodeContext" : "sync(buckets.get(1).get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 110,
        "startColumnNumber" : 26,
        "endLineNumber" : 110,
        "endColumnNumber" : 67
      },
      "nodeContext" : "vals.contains(sync(buckets.get(1).get()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(1).get())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  }, {
    "nodeContext" : "buckets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 112,
      "startColumnNumber" : 46,
      "endLineNumber" : 112,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RBucketReactive<String> bucket : buckets) {\n  bucket.delete();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RBucketReactive<String> bucket : buckets) {\n  bucket.delete();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.redisson.api.RBucketReactive<java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 106,
    "startColumnNumber" : 31,
    "endLineNumber" : 106,
    "endColumnNumber" : 38
  }, {
    "charLength" : 7,
    "startLineNumber" : 107,
    "startColumnNumber" : 41,
    "endLineNumber" : 107,
    "endColumnNumber" : 48
  }, {
    "charLength" : 7,
    "startLineNumber" : 108,
    "startColumnNumber" : 41,
    "endLineNumber" : 108,
    "endColumnNumber" : 48
  }, {
    "charLength" : 7,
    "startLineNumber" : 109,
    "startColumnNumber" : 45,
    "endLineNumber" : 109,
    "endColumnNumber" : 52
  }, {
    "charLength" : 7,
    "startLineNumber" : 110,
    "startColumnNumber" : 45,
    "endLineNumber" : 110,
    "endColumnNumber" : 52
  }, {
    "charLength" : 7,
    "startLineNumber" : 112,
    "startColumnNumber" : 46,
    "endLineNumber" : 112,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  } ]
}