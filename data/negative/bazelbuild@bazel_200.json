{
  "id" : 200,
  "expression" : "outputBase",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/pkgcache/IncrementalLoadingTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outputBase",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 432,
      "startColumnNumber" : 6,
      "endLineNumber" : 432,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 432,
        "startColumnNumber" : 6,
        "endLineNumber" : 432,
        "endColumnNumber" : 34
      },
      "nodeContext" : "outputBase.createDirectory()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 432,
        "startColumnNumber" : 6,
        "endLineNumber" : 432,
        "endColumnNumber" : 35
      },
      "nodeContext" : "outputBase.createDirectory();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 427,
        "startColumnNumber" : 78,
        "endLineNumber" : 475,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.clock=clock;\n  workspace=fs.getPath(\"/workspace\");\n  workspace.createDirectory();\n  outputBase=fs.getPath(\"/output_base\");\n  outputBase.createDirectory();\n  addFile(\"WORKSPACE\");\n  LoadingMock loadingMock=LoadingMock.get();\n  BlazeDirectories directories=new BlazeDirectories(new ServerDirectories(fs.getPath(\"/install\"),fs.getPath(\"/output\"),fs.getPath(\"/userRoot\")),workspace,null,loadingMock.getProductName());\n  ConfiguredRuleClassProvider ruleClassProvider=loadingMock.createRuleClassProvider();\n  PackageFactory pkgFactory=loadingMock.getPackageFactoryBuilderForTesting(directories).build(ruleClassProvider,fs);\n  skyframeExecutor=BazelSkyframeExecutorConstants.newBazelSkyframeExecutorBuilder().setPkgFactory(pkgFactory).setFileSystem(fs).setDirectories(directories).setActionKeyContext(new ActionKeyContext()).setDiffAwarenessFactories(ImmutableList.of(new ManualDiffAwarenessFactory())).build();\n  SkyframeExecutorTestHelper.process(skyframeExecutor);\n  PackageOptions packageOptions=Options.getDefaults(PackageOptions.class);\n  packageOptions.defaultVisibility=ConstantRuleVisibility.PUBLIC;\n  packageOptions.showLoadingProgress=true;\n  packageOptions.globbingThreads=7;\n  skyframeExecutor.injectExtraPrecomputedValues(ImmutableList.of(PrecomputedValue.injected(RepositoryDelegatorFunction.RESOLVED_FILE_INSTEAD_OF_WORKSPACE,Optional.empty()),PrecomputedValue.injected(RepositoryDelegatorFunction.ENABLE_BZLMOD,false)));\n  skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()));\n  skyframeExecutor.setActionEnv(ImmutableMap.of());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2406,
        "startLineNumber" : 427,
        "startColumnNumber" : 4,
        "endLineNumber" : 475,
        "endColumnNumber" : 5
      },
      "nodeContext" : "PackageLoadingTester(FileSystem fs,ManualClock clock) throws IOException {\n  this.clock=clock;\n  workspace=fs.getPath(\"/workspace\");\n  workspace.createDirectory();\n  outputBase=fs.getPath(\"/output_base\");\n  outputBase.createDirectory();\n  addFile(\"WORKSPACE\");\n  LoadingMock loadingMock=LoadingMock.get();\n  BlazeDirectories directories=new BlazeDirectories(new ServerDirectories(fs.getPath(\"/install\"),fs.getPath(\"/output\"),fs.getPath(\"/userRoot\")),workspace,null,loadingMock.getProductName());\n  ConfiguredRuleClassProvider ruleClassProvider=loadingMock.createRuleClassProvider();\n  PackageFactory pkgFactory=loadingMock.getPackageFactoryBuilderForTesting(directories).build(ruleClassProvider,fs);\n  skyframeExecutor=BazelSkyframeExecutorConstants.newBazelSkyframeExecutorBuilder().setPkgFactory(pkgFactory).setFileSystem(fs).setDirectories(directories).setActionKeyContext(new ActionKeyContext()).setDiffAwarenessFactories(ImmutableList.of(new ManualDiffAwarenessFactory())).build();\n  SkyframeExecutorTestHelper.process(skyframeExecutor);\n  PackageOptions packageOptions=Options.getDefaults(PackageOptions.class);\n  packageOptions.defaultVisibility=ConstantRuleVisibility.PUBLIC;\n  packageOptions.showLoadingProgress=true;\n  packageOptions.globbingThreads=7;\n  skyframeExecutor.injectExtraPrecomputedValues(ImmutableList.of(PrecomputedValue.injected(RepositoryDelegatorFunction.RESOLVED_FILE_INSTEAD_OF_WORKSPACE,Optional.empty()),PrecomputedValue.injected(RepositoryDelegatorFunction.ENABLE_BZLMOD,false)));\n  skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()));\n  skyframeExecutor.setActionEnv(ImmutableMap.of());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 432,
        "startColumnNumber" : 6,
        "endLineNumber" : 432,
        "endColumnNumber" : 35
      },
      "nodeContext" : "outputBase.createDirectory();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.vfs.Path"
  }, {
    "nodeContext" : "outputBase",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 466,
      "startColumnNumber" : 14,
      "endLineNumber" : 466,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 465,
        "startColumnNumber" : 10,
        "endLineNumber" : 468,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 464,
        "startColumnNumber" : 6,
        "endLineNumber" : 473,
        "endColumnNumber" : 65
      },
      "nodeContext" : "skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 464,
        "startColumnNumber" : 6,
        "endLineNumber" : 473,
        "endColumnNumber" : 66
      },
      "nodeContext" : "skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 427,
        "startColumnNumber" : 78,
        "endLineNumber" : 475,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.clock=clock;\n  workspace=fs.getPath(\"/workspace\");\n  workspace.createDirectory();\n  outputBase=fs.getPath(\"/output_base\");\n  outputBase.createDirectory();\n  addFile(\"WORKSPACE\");\n  LoadingMock loadingMock=LoadingMock.get();\n  BlazeDirectories directories=new BlazeDirectories(new ServerDirectories(fs.getPath(\"/install\"),fs.getPath(\"/output\"),fs.getPath(\"/userRoot\")),workspace,null,loadingMock.getProductName());\n  ConfiguredRuleClassProvider ruleClassProvider=loadingMock.createRuleClassProvider();\n  PackageFactory pkgFactory=loadingMock.getPackageFactoryBuilderForTesting(directories).build(ruleClassProvider,fs);\n  skyframeExecutor=BazelSkyframeExecutorConstants.newBazelSkyframeExecutorBuilder().setPkgFactory(pkgFactory).setFileSystem(fs).setDirectories(directories).setActionKeyContext(new ActionKeyContext()).setDiffAwarenessFactories(ImmutableList.of(new ManualDiffAwarenessFactory())).build();\n  SkyframeExecutorTestHelper.process(skyframeExecutor);\n  PackageOptions packageOptions=Options.getDefaults(PackageOptions.class);\n  packageOptions.defaultVisibility=ConstantRuleVisibility.PUBLIC;\n  packageOptions.showLoadingProgress=true;\n  packageOptions.globbingThreads=7;\n  skyframeExecutor.injectExtraPrecomputedValues(ImmutableList.of(PrecomputedValue.injected(RepositoryDelegatorFunction.RESOLVED_FILE_INSTEAD_OF_WORKSPACE,Optional.empty()),PrecomputedValue.injected(RepositoryDelegatorFunction.ENABLE_BZLMOD,false)));\n  skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()));\n  skyframeExecutor.setActionEnv(ImmutableMap.of());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2406,
        "startLineNumber" : 427,
        "startColumnNumber" : 4,
        "endLineNumber" : 475,
        "endColumnNumber" : 5
      },
      "nodeContext" : "PackageLoadingTester(FileSystem fs,ManualClock clock) throws IOException {\n  this.clock=clock;\n  workspace=fs.getPath(\"/workspace\");\n  workspace.createDirectory();\n  outputBase=fs.getPath(\"/output_base\");\n  outputBase.createDirectory();\n  addFile(\"WORKSPACE\");\n  LoadingMock loadingMock=LoadingMock.get();\n  BlazeDirectories directories=new BlazeDirectories(new ServerDirectories(fs.getPath(\"/install\"),fs.getPath(\"/output\"),fs.getPath(\"/userRoot\")),workspace,null,loadingMock.getProductName());\n  ConfiguredRuleClassProvider ruleClassProvider=loadingMock.createRuleClassProvider();\n  PackageFactory pkgFactory=loadingMock.getPackageFactoryBuilderForTesting(directories).build(ruleClassProvider,fs);\n  skyframeExecutor=BazelSkyframeExecutorConstants.newBazelSkyframeExecutorBuilder().setPkgFactory(pkgFactory).setFileSystem(fs).setDirectories(directories).setActionKeyContext(new ActionKeyContext()).setDiffAwarenessFactories(ImmutableList.of(new ManualDiffAwarenessFactory())).build();\n  SkyframeExecutorTestHelper.process(skyframeExecutor);\n  PackageOptions packageOptions=Options.getDefaults(PackageOptions.class);\n  packageOptions.defaultVisibility=ConstantRuleVisibility.PUBLIC;\n  packageOptions.showLoadingProgress=true;\n  packageOptions.globbingThreads=7;\n  skyframeExecutor.injectExtraPrecomputedValues(ImmutableList.of(PrecomputedValue.injected(RepositoryDelegatorFunction.RESOLVED_FILE_INSTEAD_OF_WORKSPACE,Optional.empty()),PrecomputedValue.injected(RepositoryDelegatorFunction.ENABLE_BZLMOD,false)));\n  skyframeExecutor.preparePackageLoading(new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY),packageOptions,Options.getDefaults(BuildLanguageOptions.class),UUID.randomUUID(),ImmutableMap.of(),new TimestampGranularityMonitor(BlazeClock.instance()));\n  skyframeExecutor.setActionEnv(ImmutableMap.of());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 465,
        "startColumnNumber" : 10,
        "endLineNumber" : 468,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new PathPackageLocator(outputBase,ImmutableList.of(Root.fromPath(workspace)),BazelSkyframeExecutorConstants.BUILD_FILES_BY_PRIORITY)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.vfs.Path"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 432,
    "startColumnNumber" : 6,
    "endLineNumber" : 432,
    "endColumnNumber" : 16
  }, {
    "charLength" : 10,
    "startLineNumber" : 466,
    "startColumnNumber" : 14,
    "endLineNumber" : 466,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}