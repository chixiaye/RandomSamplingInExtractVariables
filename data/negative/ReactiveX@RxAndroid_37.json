{
  "id" : 37,
  "expression" : "1",
  "projectName" : "ReactiveX@RxAndroid",
  "commitID" : "6b7cfe2a0acb8903ea10014d2f66386954a37813",
  "filePath" : "/src/test/java/rx/operators/OperatorConditionalBindingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 21,
      "endLineNumber" : 61,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(1,subscriber.getOnNextEvents().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(1,subscriber.getOnNextEvents().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 44,
        "startColumnNumber" : 68,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicBoolean toggle=new AtomicBoolean(true);\n  OperatorConditionalBinding<String,Object> op=new OperatorConditionalBinding<String,Object>(new Object(),new Func1<Object,Boolean>(){\n    @Override public Boolean call(    Object o){\n      return toggle.get();\n    }\n  }\n);\n  Subscriber<? super String> sub=op.call(subscriber);\n  sub.onNext(\"one\");\n  toggle.set(false);\n  sub.onNext(\"two\");\n  sub.onCompleted();\n  sub.onError(new Exception());\n  assertEquals(1,subscriber.getOnNextEvents().size());\n  assertEquals(0,subscriber.getOnCompletedEvents().size());\n  assertEquals(0,subscriber.getOnErrorEvents().size());\n  assertNull(op.getBoundRef());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReleaseBoundReferenceIfPredicateFailsToPass(){\n  final AtomicBoolean toggle=new AtomicBoolean(true);\n  OperatorConditionalBinding<String,Object> op=new OperatorConditionalBinding<String,Object>(new Object(),new Func1<Object,Boolean>(){\n    @Override public Boolean call(    Object o){\n      return toggle.get();\n    }\n  }\n);\n  Subscriber<? super String> sub=op.call(subscriber);\n  sub.onNext(\"one\");\n  toggle.set(false);\n  sub.onNext(\"two\");\n  sub.onCompleted();\n  sub.onError(new Exception());\n  assertEquals(1,subscriber.getOnNextEvents().size());\n  assertEquals(0,subscriber.getOnCompletedEvents().size());\n  assertEquals(0,subscriber.getOnErrorEvents().size());\n  assertNull(op.getBoundRef());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(1,subscriber.getOnNextEvents().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 21,
    "endLineNumber" : 61,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}