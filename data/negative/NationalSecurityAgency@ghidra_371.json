{
  "id" : 371,
  "expression" : "!SystemUtilities.isInHeadlessMode()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Python/src/main/java/ghidra/python/GhidraPythonInterpreter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!SystemUtilities.isInHeadlessMode()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 218,
      "startColumnNumber" : 48,
      "endLineNumber" : 218,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 218,
        "startColumnNumber" : 6,
        "endLineNumber" : 218,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!SystemUtilities.isInDevelopmentMode() && !SystemUtilities.isInHeadlessMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 236,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!SystemUtilities.isInDevelopmentMode() && !SystemUtilities.isInHeadlessMode()) {\n  if (PyDevUtils.getPyDevSrcDir() != null) {\n    try {\n      InetAddress localhost=InetAddress.getLocalHost();\n      new Socket(localhost,PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT).close();\n      Msg.info(this,\"Python debugger found\");\n      StringBuilder dbgCmds=new StringBuilder();\n      dbgCmds.append(\"import pydevd;\");\n      dbgCmds.append(\"pydevd.threadingCurrentThread().__pydevd_main_thread = True;\");\n      dbgCmds.append(\"pydevd.settrace(host=\\\"\" + localhost.getHostName() + \"\\\", port=\"+ PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT+ \", suspend=False);\");\n      exec(dbgCmds.toString());\n      Msg.info(this,\"Connected to a python debugger.\");\n    }\n catch (    IOException e) {\n      Msg.info(this,\"Not connected to a python debugger.\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1395,
        "startLineNumber" : 203,
        "startColumnNumber" : 32,
        "endLineNumber" : 240,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (cleanedUp) {\n    throw new IllegalStateException(\"Ghidra python interpreter has already been cleaned up.\");\n  }\n  injectScriptHierarchy(script);\n  Py.getThreadState().tracefunc=interruptTraceFunction;\n  setVariable(\"__file__\",new PyString(file.getAbsolutePath()));\n  if (!SystemUtilities.isInDevelopmentMode() && !SystemUtilities.isInHeadlessMode()) {\n    if (PyDevUtils.getPyDevSrcDir() != null) {\n      try {\n        InetAddress localhost=InetAddress.getLocalHost();\n        new Socket(localhost,PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT).close();\n        Msg.info(this,\"Python debugger found\");\n        StringBuilder dbgCmds=new StringBuilder();\n        dbgCmds.append(\"import pydevd;\");\n        dbgCmds.append(\"pydevd.threadingCurrentThread().__pydevd_main_thread = True;\");\n        dbgCmds.append(\"pydevd.settrace(host=\\\"\" + localhost.getHostName() + \"\\\", port=\"+ PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT+ \", suspend=False);\");\n        exec(dbgCmds.toString());\n        Msg.info(this,\"Connected to a python debugger.\");\n      }\n catch (      IOException e) {\n        Msg.info(this,\"Not connected to a python debugger.\");\n      }\n    }\n  }\n  execfile(file.getAbsolutePath());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1761,
        "startLineNumber" : 195,
        "startColumnNumber" : 1,
        "endLineNumber" : 240,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Execute a python file using this interpreter.\n * @param file The python file to execute.\n * @param script A PythonScript from which we load state (or null).\n * @throws IllegalStateException if this interpreter has been cleaned up.\n */\npublic synchronized void execFile(ResourceFile file,PythonScript script) throws IllegalStateException {\n  if (cleanedUp) {\n    throw new IllegalStateException(\"Ghidra python interpreter has already been cleaned up.\");\n  }\n  injectScriptHierarchy(script);\n  Py.getThreadState().tracefunc=interruptTraceFunction;\n  setVariable(\"__file__\",new PyString(file.getAbsolutePath()));\n  if (!SystemUtilities.isInDevelopmentMode() && !SystemUtilities.isInHeadlessMode()) {\n    if (PyDevUtils.getPyDevSrcDir() != null) {\n      try {\n        InetAddress localhost=InetAddress.getLocalHost();\n        new Socket(localhost,PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT).close();\n        Msg.info(this,\"Python debugger found\");\n        StringBuilder dbgCmds=new StringBuilder();\n        dbgCmds.append(\"import pydevd;\");\n        dbgCmds.append(\"pydevd.threadingCurrentThread().__pydevd_main_thread = True;\");\n        dbgCmds.append(\"pydevd.settrace(host=\\\"\" + localhost.getHostName() + \"\\\", port=\"+ PyDevUtils.PYDEV_REMOTE_DEBUGGER_PORT+ \", suspend=False);\");\n        exec(dbgCmds.toString());\n        Msg.info(this,\"Connected to a python debugger.\");\n      }\n catch (      IOException e) {\n        Msg.info(this,\"Not connected to a python debugger.\");\n      }\n    }\n  }\n  execfile(file.getAbsolutePath());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 218,
        "startColumnNumber" : 6,
        "endLineNumber" : 218,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!SystemUtilities.isInDevelopmentMode() && !SystemUtilities.isInHeadlessMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 218,
    "startColumnNumber" : 48,
    "endLineNumber" : 218,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}