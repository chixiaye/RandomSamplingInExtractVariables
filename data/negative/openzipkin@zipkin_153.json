{
  "id" : 153,
  "expression" : "entry.getKey()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/main/java/zipkin/QueryRequest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 139,
      "startColumnNumber" : 21,
      "endLineNumber" : 139,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 45
      },
      "nodeContext" : "entry.getKey().isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 139,
        "startColumnNumber" : 20,
        "endLineNumber" : 139,
        "endColumnNumber" : 45
      },
      "nodeContext" : "!entry.getKey().isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 81
      },
      "nodeContext" : "checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 82
      },
      "nodeContext" : "checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 138,
        "startColumnNumber" : 73,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n  checkArgument(!entry.getValue().isEmpty(),\"binary annotation value was empty\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : binaryAnnotations.entrySet()) {\n  checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n  checkArgument(!entry.getValue().isEmpty(),\"binary annotation value was empty\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 126,
        "startColumnNumber" : 17,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(serviceName == null || !serviceName.isEmpty(),\"serviceName was empty\");\n  checkArgument(spanName == null || !spanName.isEmpty(),\"spanName was empty\");\n  checkArgument(endTs > 0,\"endTs should be positive, in epoch microseconds: was %d\",endTs);\n  checkArgument(limit > 0,\"limit should be positive: was %d\",limit);\n  this.serviceName=serviceName != null ? serviceName.toLowerCase() : null;\n  this.spanName=spanName != null ? spanName.toLowerCase() : null;\n  this.annotations=annotations;\n  for (  String annotation : annotations) {\n    checkArgument(!annotation.isEmpty(),\"annotation was empty\");\n  }\n  this.binaryAnnotations=binaryAnnotations;\n  for (  Map.Entry<String,String> entry : binaryAnnotations.entrySet()) {\n    checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n    checkArgument(!entry.getValue().isEmpty(),\"binary annotation value was empty\");\n  }\n  this.minDuration=minDuration;\n  this.maxDuration=maxDuration;\n  this.endTs=endTs;\n  this.lookback=lookback;\n  this.limit=limit;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1342,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "QueryRequest(String serviceName,String spanName,List<String> annotations,Map<String,String> binaryAnnotations,Long minDuration,Long maxDuration,long endTs,long lookback,int limit){\n  checkArgument(serviceName == null || !serviceName.isEmpty(),\"serviceName was empty\");\n  checkArgument(spanName == null || !spanName.isEmpty(),\"spanName was empty\");\n  checkArgument(endTs > 0,\"endTs should be positive, in epoch microseconds: was %d\",endTs);\n  checkArgument(limit > 0,\"limit should be positive: was %d\",limit);\n  this.serviceName=serviceName != null ? serviceName.toLowerCase() : null;\n  this.spanName=spanName != null ? spanName.toLowerCase() : null;\n  this.annotations=annotations;\n  for (  String annotation : annotations) {\n    checkArgument(!annotation.isEmpty(),\"annotation was empty\");\n  }\n  this.binaryAnnotations=binaryAnnotations;\n  for (  Map.Entry<String,String> entry : binaryAnnotations.entrySet()) {\n    checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n    checkArgument(!entry.getValue().isEmpty(),\"binary annotation value was empty\");\n  }\n  this.minDuration=minDuration;\n  this.maxDuration=maxDuration;\n  this.endTs=endTs;\n  this.lookback=lookback;\n  this.limit=limit;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 82
      },
      "nodeContext" : "checkArgument(!entry.getKey().isEmpty(),\"binary annotation key was empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 139,
    "startColumnNumber" : 21,
    "endLineNumber" : 139,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}