{
  "id" : 63,
  "expression" : "V2C",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "783b959577be49cbf020f379e09a0043dfcd95a9",
  "filePath" : "common/transport/snmp/src/main/java/org/thingsboard/server/transport/snmp/service/SnmpAuthService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "V2C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 17,
      "endLineNumber" : 63,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case V2C:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3044,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (protocolVersion) {\ncase V1:  CommunityTarget communityTargetV1=new CommunityTarget();\ncommunityTargetV1.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv1);\ncommunityTargetV1.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV1.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV1;\nbreak;\ncase V2C:CommunityTarget communityTargetV2=new CommunityTarget();\ncommunityTargetV2.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv2c);\ncommunityTargetV2.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV2.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV2;\nbreak;\ncase V3:OctetString username=new OctetString(deviceTransportConfig.getUsername());\nOctetString securityName=new OctetString(deviceTransportConfig.getSecurityName());\nOctetString engineId=new OctetString(deviceTransportConfig.getEngineId());\nOID authenticationProtocol=new OID(deviceTransportConfig.getAuthenticationProtocol().getOid());\nOID privacyProtocol=new OID(deviceTransportConfig.getPrivacyProtocol().getOid());\nOctetString authenticationPassphrase=new OctetString(deviceTransportConfig.getAuthenticationPassphrase());\nauthenticationPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(authenticationProtocol,authenticationPassphrase,engineId.getValue()));\nOctetString privacyPassphrase=new OctetString(deviceTransportConfig.getPrivacyPassphrase());\nprivacyPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(privacyProtocol,authenticationProtocol,privacyPassphrase,engineId.getValue()));\nUSM usm=snmpTransportService.getSnmp().getUSM();\nif (usm.hasUser(engineId,securityName)) {\nusm.removeAllUsers(username,engineId);\n}\nusm.addLocalizedUser(engineId.getValue(),username,authenticationProtocol,authenticationPassphrase.getValue(),privacyProtocol,privacyPassphrase.getValue());\nUserTarget userTarget=new UserTarget();\nuserTarget.setSecurityName(securityName);\nuserTarget.setAuthoritativeEngineID(engineId.getValue());\nuserTarget.setSecurityModel(SecurityModel.SECURITY_MODEL_USM);\nuserTarget.setSecurityLevel(SecurityLevel.AUTH_PRIV);\ntarget=userTarget;\nbreak;\ndefault:throw new UnsupportedOperationException(\"SNMP protocol version \" + protocolVersion + \" is not supported\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 283,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3689,
        "startLineNumber" : 51,
        "startColumnNumber" : 154,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractTarget target;\n  SnmpProtocolVersion protocolVersion=deviceTransportConfig.getProtocolVersion();\nswitch (protocolVersion) {\ncase V1:    CommunityTarget communityTargetV1=new CommunityTarget();\n  communityTargetV1.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv1);\ncommunityTargetV1.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV1.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV1;\nbreak;\ncase V2C:CommunityTarget communityTargetV2=new CommunityTarget();\ncommunityTargetV2.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv2c);\ncommunityTargetV2.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV2.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV2;\nbreak;\ncase V3:OctetString username=new OctetString(deviceTransportConfig.getUsername());\nOctetString securityName=new OctetString(deviceTransportConfig.getSecurityName());\nOctetString engineId=new OctetString(deviceTransportConfig.getEngineId());\nOID authenticationProtocol=new OID(deviceTransportConfig.getAuthenticationProtocol().getOid());\nOID privacyProtocol=new OID(deviceTransportConfig.getPrivacyProtocol().getOid());\nOctetString authenticationPassphrase=new OctetString(deviceTransportConfig.getAuthenticationPassphrase());\nauthenticationPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(authenticationProtocol,authenticationPassphrase,engineId.getValue()));\nOctetString privacyPassphrase=new OctetString(deviceTransportConfig.getPrivacyPassphrase());\nprivacyPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(privacyProtocol,authenticationProtocol,privacyPassphrase,engineId.getValue()));\nUSM usm=snmpTransportService.getSnmp().getUSM();\nif (usm.hasUser(engineId,securityName)) {\nusm.removeAllUsers(username,engineId);\n}\nusm.addLocalizedUser(engineId.getValue(),username,authenticationProtocol,authenticationPassphrase.getValue(),privacyProtocol,privacyPassphrase.getValue());\nUserTarget userTarget=new UserTarget();\nuserTarget.setSecurityName(securityName);\nuserTarget.setAuthoritativeEngineID(engineId.getValue());\nuserTarget.setSecurityModel(SecurityModel.SECURITY_MODEL_USM);\nuserTarget.setSecurityLevel(SecurityLevel.AUTH_PRIV);\ntarget=userTarget;\nbreak;\ndefault:throw new UnsupportedOperationException(\"SNMP protocol version \" + protocolVersion + \" is not supported\");\n}\nAddress address=GenericAddress.parse(snmpUnderlyingProtocol + \":\" + deviceTransportConfig.getHost()+ \"/\"+ deviceTransportConfig.getPort());\ntarget.setAddress(Optional.ofNullable(address).orElseThrow(() -> new IllegalArgumentException(\"Address of the SNMP device is invalid\")));\ntarget.setTimeout(profileTransportConfig.getTimeoutMs());\ntarget.setRetries(profileTransportConfig.getRetries());\ntarget.setVersion(protocolVersion.getCode());\nreturn target;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 353,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3839,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Target setUpSnmpTarget(SnmpDeviceProfileTransportConfiguration profileTransportConfig,SnmpDeviceTransportConfiguration deviceTransportConfig){\n  AbstractTarget target;\n  SnmpProtocolVersion protocolVersion=deviceTransportConfig.getProtocolVersion();\nswitch (protocolVersion) {\ncase V1:    CommunityTarget communityTargetV1=new CommunityTarget();\n  communityTargetV1.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv1);\ncommunityTargetV1.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV1.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV1;\nbreak;\ncase V2C:CommunityTarget communityTargetV2=new CommunityTarget();\ncommunityTargetV2.setSecurityModel(SecurityModel.SECURITY_MODEL_SNMPv2c);\ncommunityTargetV2.setSecurityLevel(SecurityLevel.NOAUTH_NOPRIV);\ncommunityTargetV2.setCommunity(new OctetString(deviceTransportConfig.getCommunity()));\ntarget=communityTargetV2;\nbreak;\ncase V3:OctetString username=new OctetString(deviceTransportConfig.getUsername());\nOctetString securityName=new OctetString(deviceTransportConfig.getSecurityName());\nOctetString engineId=new OctetString(deviceTransportConfig.getEngineId());\nOID authenticationProtocol=new OID(deviceTransportConfig.getAuthenticationProtocol().getOid());\nOID privacyProtocol=new OID(deviceTransportConfig.getPrivacyProtocol().getOid());\nOctetString authenticationPassphrase=new OctetString(deviceTransportConfig.getAuthenticationPassphrase());\nauthenticationPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(authenticationProtocol,authenticationPassphrase,engineId.getValue()));\nOctetString privacyPassphrase=new OctetString(deviceTransportConfig.getPrivacyPassphrase());\nprivacyPassphrase=new OctetString(SecurityProtocols.getInstance().passwordToKey(privacyProtocol,authenticationProtocol,privacyPassphrase,engineId.getValue()));\nUSM usm=snmpTransportService.getSnmp().getUSM();\nif (usm.hasUser(engineId,securityName)) {\nusm.removeAllUsers(username,engineId);\n}\nusm.addLocalizedUser(engineId.getValue(),username,authenticationProtocol,authenticationPassphrase.getValue(),privacyProtocol,privacyPassphrase.getValue());\nUserTarget userTarget=new UserTarget();\nuserTarget.setSecurityName(securityName);\nuserTarget.setAuthoritativeEngineID(engineId.getValue());\nuserTarget.setSecurityModel(SecurityModel.SECURITY_MODEL_USM);\nuserTarget.setSecurityLevel(SecurityLevel.AUTH_PRIV);\ntarget=userTarget;\nbreak;\ndefault:throw new UnsupportedOperationException(\"SNMP protocol version \" + protocolVersion + \" is not supported\");\n}\nAddress address=GenericAddress.parse(snmpUnderlyingProtocol + \":\" + deviceTransportConfig.getHost()+ \"/\"+ deviceTransportConfig.getPort());\ntarget.setAddress(Optional.ofNullable(address).orElseThrow(() -> new IllegalArgumentException(\"Address of the SNMP device is invalid\")));\ntarget.setTimeout(profileTransportConfig.getTimeoutMs());\ntarget.setRetries(profileTransportConfig.getRetries());\ntarget.setVersion(protocolVersion.getCode());\nreturn target;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 366,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case V2C:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.common.data.transport.snmp.SnmpProtocolVersion"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 17,
    "endLineNumber" : 63,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}