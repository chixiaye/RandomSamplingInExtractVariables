{
  "id" : 519,
  "expression" : "descriptions",
  "projectName" : "apache@kafka",
  "commitID" : "31fca1611a6780e8a8aa3ac21618135201718e32",
  "filePath" : "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "descriptions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 2686,
      "startColumnNumber" : 24,
      "endLineNumber" : 2686,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 2686,
        "startColumnNumber" : 24,
        "endLineNumber" : 2686,
        "endColumnNumber" : 43
      },
      "nodeContext" : "descriptions.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 2686,
        "startColumnNumber" : 24,
        "endLineNumber" : 2686,
        "endColumnNumber" : 47
      },
      "nodeContext" : "descriptions.size() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 2686,
        "startColumnNumber" : 20,
        "endLineNumber" : 2694,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (descriptions.size() > 0) {\n  future.complete(descriptions);\n}\n else {\n  Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n  future.completeExceptionally(error.exception());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 2683,
        "startColumnNumber" : 78,
        "endLineNumber" : 2695,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  DescribeLogDirsResponse response=(DescribeLogDirsResponse)abstractResponse;\n  Map<String,LogDirDescription> descriptions=logDirDescriptions(response);\n  if (descriptions.size() > 0) {\n    future.complete(descriptions);\n  }\n else {\n    Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n    future.completeExceptionally(error.exception());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 2682,
        "startColumnNumber" : 16,
        "endLineNumber" : 2695,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void handleResponse(AbstractResponse abstractResponse){\n  DescribeLogDirsResponse response=(DescribeLogDirsResponse)abstractResponse;\n  Map<String,LogDirDescription> descriptions=logDirDescriptions(response);\n  if (descriptions.size() > 0) {\n    future.complete(descriptions);\n  }\n else {\n    Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n    future.completeExceptionally(error.exception());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 2686,
        "startColumnNumber" : 24,
        "endLineNumber" : 2686,
        "endColumnNumber" : 47
      },
      "nodeContext" : "descriptions.size() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.kafka.clients.admin.LogDirDescription>"
  }, {
    "nodeContext" : "descriptions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 2687,
      "startColumnNumber" : 40,
      "endLineNumber" : 2687,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 2687,
        "startColumnNumber" : 24,
        "endLineNumber" : 2687,
        "endColumnNumber" : 53
      },
      "nodeContext" : "future.complete(descriptions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 2687,
        "startColumnNumber" : 24,
        "endLineNumber" : 2687,
        "endColumnNumber" : 54
      },
      "nodeContext" : "future.complete(descriptions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 2686,
        "startColumnNumber" : 49,
        "endLineNumber" : 2688,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  future.complete(descriptions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 2686,
        "startColumnNumber" : 20,
        "endLineNumber" : 2694,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (descriptions.size() > 0) {\n  future.complete(descriptions);\n}\n else {\n  Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n  future.completeExceptionally(error.exception());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 2683,
        "startColumnNumber" : 78,
        "endLineNumber" : 2695,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  DescribeLogDirsResponse response=(DescribeLogDirsResponse)abstractResponse;\n  Map<String,LogDirDescription> descriptions=logDirDescriptions(response);\n  if (descriptions.size() > 0) {\n    future.complete(descriptions);\n  }\n else {\n    Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n    future.completeExceptionally(error.exception());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 2682,
        "startColumnNumber" : 16,
        "endLineNumber" : 2695,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void handleResponse(AbstractResponse abstractResponse){\n  DescribeLogDirsResponse response=(DescribeLogDirsResponse)abstractResponse;\n  Map<String,LogDirDescription> descriptions=logDirDescriptions(response);\n  if (descriptions.size() > 0) {\n    future.complete(descriptions);\n  }\n else {\n    Errors error=response.data().errorCode() == Errors.NONE.code() ? Errors.CLUSTER_AUTHORIZATION_FAILED : Errors.forCode(response.data().errorCode());\n    future.completeExceptionally(error.exception());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 2687,
        "startColumnNumber" : 24,
        "endLineNumber" : 2687,
        "endColumnNumber" : 54
      },
      "nodeContext" : "future.complete(descriptions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.kafka.clients.admin.LogDirDescription>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 2686,
    "startColumnNumber" : 24,
    "endLineNumber" : 2686,
    "endColumnNumber" : 36
  }, {
    "charLength" : 12,
    "startLineNumber" : 2687,
    "startColumnNumber" : 40,
    "endLineNumber" : 2687,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}