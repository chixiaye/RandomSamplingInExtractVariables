{
  "id" : 462,
  "expression" : "1",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/LegendRenderer.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 76,
      "startColumnNumber" : 89,
      "endLineNumber" : 76,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 76,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 90
      },
      "nodeContext" : "((BarDataSet)dataSet).getStackSize() > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 90
      },
      "nodeContext" : "dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1618,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n  BarDataSet bds=(BarDataSet)dataSet;\n  String[] sLabels=bds.getStackLabels();\n  for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n    labels.add(sLabels[j % sLabels.length]);\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(bds.getLabel());\n}\n else if (dataSet instanceof PieDataSet) {\n  ArrayList<String> xVals=data.getXVals();\n  PieDataSet pds=(PieDataSet)dataSet;\n  for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n    labels.add(xVals.get(j));\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(pds.getLabel());\n}\n else {\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 230,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 68,
        "startColumnNumber" : 57,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1936,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < data.getDataSetCount(); i++) {\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 275,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2689,
        "startLineNumber" : 62,
        "startColumnNumber" : 66,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 362,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2865,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Prepares the legend and calculates all needed forms and colors.\n * @param data\n */\npublic Legend computeLegend(ChartData<?> data,Legend legend){\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 378,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 90
      },
      "nodeContext" : "dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 111,
      "startColumnNumber" : 42,
      "endLineNumber" : 111,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 111,
        "startColumnNumber" : 28,
        "endLineNumber" : 111,
        "endColumnNumber" : 43
      },
      "nodeContext" : "clrs.size() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 111,
        "endColumnNumber" : 43
      },
      "nodeContext" : "j < clrs.size() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "j < clrs.size() - 1 && j < entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (j < clrs.size() - 1 && j < entryCount - 1) {\n  labels.add(null);\n}\n else {\n  String label=data.getDataSetByIndex(i).getLabel();\n  labels.add(label);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 108,
        "startColumnNumber" : 72,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (j < clrs.size() - 1 && j < entryCount - 1) {\n    labels.add(null);\n  }\n else {\n    String label=data.getDataSetByIndex(i).getLabel();\n    labels.add(label);\n  }\n  colors.add(clrs.get(j));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=0; j < clrs.size() && j < entryCount; j++) {\n  if (j < clrs.size() - 1 && j < entryCount - 1) {\n    labels.add(null);\n  }\n else {\n    String label=data.getDataSetByIndex(i).getLabel();\n    labels.add(label);\n  }\n  colors.add(clrs.get(j));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 91,
        "startColumnNumber" : 19,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSet instanceof PieDataSet) {\n  ArrayList<String> xVals=data.getXVals();\n  PieDataSet pds=(PieDataSet)dataSet;\n  for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n    labels.add(xVals.get(j));\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(pds.getLabel());\n}\n else {\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1618,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n  BarDataSet bds=(BarDataSet)dataSet;\n  String[] sLabels=bds.getStackLabels();\n  for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n    labels.add(sLabels[j % sLabels.length]);\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(bds.getLabel());\n}\n else if (dataSet instanceof PieDataSet) {\n  ArrayList<String> xVals=data.getXVals();\n  PieDataSet pds=(PieDataSet)dataSet;\n  for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n    labels.add(xVals.get(j));\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(pds.getLabel());\n}\n else {\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 230,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 68,
        "startColumnNumber" : 57,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1936,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < data.getDataSetCount(); i++) {\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 275,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2689,
        "startLineNumber" : 62,
        "startColumnNumber" : 66,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 362,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2865,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Prepares the legend and calculates all needed forms and colors.\n * @param data\n */\npublic Legend computeLegend(ChartData<?> data,Legend legend){\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 378,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "j < clrs.size() - 1 && j < entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 111,
      "startColumnNumber" : 64,
      "endLineNumber" : 111,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 51,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 111,
        "startColumnNumber" : 47,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "j < entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "j < clrs.size() - 1 && j < entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (j < clrs.size() - 1 && j < entryCount - 1) {\n  labels.add(null);\n}\n else {\n  String label=data.getDataSetByIndex(i).getLabel();\n  labels.add(label);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 108,
        "startColumnNumber" : 72,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (j < clrs.size() - 1 && j < entryCount - 1) {\n    labels.add(null);\n  }\n else {\n    String label=data.getDataSetByIndex(i).getLabel();\n    labels.add(label);\n  }\n  colors.add(clrs.get(j));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=0; j < clrs.size() && j < entryCount; j++) {\n  if (j < clrs.size() - 1 && j < entryCount - 1) {\n    labels.add(null);\n  }\n else {\n    String label=data.getDataSetByIndex(i).getLabel();\n    labels.add(label);\n  }\n  colors.add(clrs.get(j));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 91,
        "startColumnNumber" : 19,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSet instanceof PieDataSet) {\n  ArrayList<String> xVals=data.getXVals();\n  PieDataSet pds=(PieDataSet)dataSet;\n  for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n    labels.add(xVals.get(j));\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(pds.getLabel());\n}\n else {\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1618,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n  BarDataSet bds=(BarDataSet)dataSet;\n  String[] sLabels=bds.getStackLabels();\n  for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n    labels.add(sLabels[j % sLabels.length]);\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(bds.getLabel());\n}\n else if (dataSet instanceof PieDataSet) {\n  ArrayList<String> xVals=data.getXVals();\n  PieDataSet pds=(PieDataSet)dataSet;\n  for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n    labels.add(xVals.get(j));\n    colors.add(clrs.get(j));\n  }\n  colors.add(-2);\n  labels.add(pds.getLabel());\n}\n else {\n  for (int j=0; j < clrs.size() && j < entryCount; j++) {\n    if (j < clrs.size() - 1 && j < entryCount - 1) {\n      labels.add(null);\n    }\n else {\n      String label=data.getDataSetByIndex(i).getLabel();\n      labels.add(label);\n    }\n    colors.add(clrs.get(j));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 230,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 68,
        "startColumnNumber" : 57,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1936,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < data.getDataSetCount(); i++) {\n  DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n  ArrayList<Integer> clrs=dataSet.getColors();\n  int entryCount=dataSet.getEntryCount();\n  if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n    BarDataSet bds=(BarDataSet)dataSet;\n    String[] sLabels=bds.getStackLabels();\n    for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n      labels.add(sLabels[j % sLabels.length]);\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(bds.getLabel());\n  }\n else   if (dataSet instanceof PieDataSet) {\n    ArrayList<String> xVals=data.getXVals();\n    PieDataSet pds=(PieDataSet)dataSet;\n    for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n      labels.add(xVals.get(j));\n      colors.add(clrs.get(j));\n    }\n    colors.add(-2);\n    labels.add(pds.getLabel());\n  }\n else {\n    for (int j=0; j < clrs.size() && j < entryCount; j++) {\n      if (j < clrs.size() - 1 && j < entryCount - 1) {\n        labels.add(null);\n      }\n else {\n        String label=data.getDataSetByIndex(i).getLabel();\n        labels.add(label);\n      }\n      colors.add(clrs.get(j));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 275,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2689,
        "startLineNumber" : 62,
        "startColumnNumber" : 66,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 362,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2865,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Prepares the legend and calculates all needed forms and colors.\n * @param data\n */\npublic Legend computeLegend(ChartData<?> data,Legend legend){\n  ArrayList<String> labels=new ArrayList<String>();\n  ArrayList<Integer> colors=new ArrayList<Integer>();\n  for (int i=0; i < data.getDataSetCount(); i++) {\n    DataSet<? extends Entry> dataSet=data.getDataSetByIndex(i);\n    ArrayList<Integer> clrs=dataSet.getColors();\n    int entryCount=dataSet.getEntryCount();\n    if (dataSet instanceof BarDataSet && ((BarDataSet)dataSet).getStackSize() > 1) {\n      BarDataSet bds=(BarDataSet)dataSet;\n      String[] sLabels=bds.getStackLabels();\n      for (int j=0; j < clrs.size() && j < bds.getStackSize(); j++) {\n        labels.add(sLabels[j % sLabels.length]);\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(bds.getLabel());\n    }\n else     if (dataSet instanceof PieDataSet) {\n      ArrayList<String> xVals=data.getXVals();\n      PieDataSet pds=(PieDataSet)dataSet;\n      for (int j=0; j < clrs.size() && j < entryCount && j < xVals.size(); j++) {\n        labels.add(xVals.get(j));\n        colors.add(clrs.get(j));\n      }\n      colors.add(-2);\n      labels.add(pds.getLabel());\n    }\n else {\n      for (int j=0; j < clrs.size() && j < entryCount; j++) {\n        if (j < clrs.size() - 1 && j < entryCount - 1) {\n          labels.add(null);\n        }\n else {\n          String label=data.getDataSetByIndex(i).getLabel();\n          labels.add(label);\n        }\n        colors.add(clrs.get(j));\n      }\n    }\n  }\n  Legend l=new Legend(colors,labels);\n  if (legend != null) {\n    l.apply(legend);\n  }\n  Typeface tf=l.getTypeface();\n  if (tf != null)   mLegendLabelPaint.setTypeface(tf);\n  mLegendLabelPaint.setTextSize(l.getTextSize());\n  mLegendLabelPaint.setColor(l.getTextColor());\n  l.calculateDimensions(mLegendLabelPaint);\n  return l;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 378,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "j < clrs.size() - 1 && j < entryCount - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 76,
    "startColumnNumber" : 89,
    "endLineNumber" : 76,
    "endColumnNumber" : 90
  }, {
    "charLength" : 1,
    "startLineNumber" : 111,
    "startColumnNumber" : 42,
    "endLineNumber" : 111,
    "endColumnNumber" : 43
  }, {
    "charLength" : 1,
    "startLineNumber" : 111,
    "startColumnNumber" : 64,
    "endLineNumber" : 111,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}