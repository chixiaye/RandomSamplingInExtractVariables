{
  "id" : 441,
  "expression" : "\" but it was: \"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitoutil/ThrowableAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" but it was: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 31,
      "startColumnNumber" : 30,
      "endLineNumber" : 31,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 32,
        "endColumnNumber" : 74
      },
      "nodeContext" : "\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 28,
        "startColumnNumber" : 18,
        "endLineNumber" : 32,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 76
      },
      "nodeContext" : "throw new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 27,
        "startColumnNumber" : 58,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!exceptionType.isInstance(reportedException)) {\n  throw new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 26,
        "startColumnNumber" : 85,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!exceptionType.isInstance(reportedException)) {\n    throw new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName());\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ThrowableAssert throwsException(Class<? extends Throwable> exceptionType){\n  if (!exceptionType.isInstance(reportedException)) {\n    throw new AssertionError(\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName());\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 32,
        "endColumnNumber" : 74
      },
      "nodeContext" : "\"Exception should be of type: \" + exceptionType.getSimpleName() + \" but it was: \"+ reportedException.getClass().getSimpleName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 31,
    "startColumnNumber" : 30,
    "endLineNumber" : 31,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}