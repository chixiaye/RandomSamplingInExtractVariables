{
  "id" : 81,
  "expression" : "invokeMethod(\"hasWaiters\",conditionLikeObject)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/TestThread.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "invokeMethod(\"hasWaiters\",conditionLikeObject)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 163,
      "startColumnNumber" : 23,
      "endLineNumber" : 163,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(true,invokeMethod(\"hasWaiters\",conditionLikeObject))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(true,invokeMethod(\"hasWaiters\",conditionLikeObject));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 156,
        "startColumnNumber" : 97,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(methodName);\n  checkNotNull(conditionLikeObject);\n  sendRequest(methodName,conditionLikeObject);\n  Thread.sleep(DUE_DILIGENCE_MILLIS);\n  assertEquals(true,invokeMethod(\"hasWaiters\",conditionLikeObject));\n  assertNull(responseQueue.poll());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 149,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Causes this thread to call the named method, and asserts that this thread thereby waits on the given condition-like object. The lock-like object must have a method equivalent to  {@link java.util.concurrent.locks.ReentrantLock#hasWaiters(java.util.concurrent.locks.Condition)}, except that the method parameter must accept whatever condition-like object is passed into this method.\n */\npublic void callAndAssertWaits(String methodName,Object conditionLikeObject) throws Exception {\n  checkNotNull(methodName);\n  checkNotNull(conditionLikeObject);\n  sendRequest(methodName,conditionLikeObject);\n  Thread.sleep(DUE_DILIGENCE_MILLIS);\n  assertEquals(true,invokeMethod(\"hasWaiters\",conditionLikeObject));\n  assertNull(responseQueue.poll());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(true,invokeMethod(\"hasWaiters\",conditionLikeObject));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 163,
    "startColumnNumber" : 23,
    "endLineNumber" : 163,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}