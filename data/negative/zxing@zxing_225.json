{
  "id" : 225,
  "expression" : "i % 9 == 0",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/test/src/com/google/zxing/oned/rss/expanded/BinaryUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i % 9 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 54,
      "startColumnNumber" : 10,
      "endLineNumber" : 54,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i % 9 == 0) {\n  if (dotsAndXs.charAt(i) != ' ') {\n    throw new IllegalStateException(\"space expected\");\n  }\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 53,
        "startColumnNumber" : 47,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (i % 9 == 0) {\n    if (dotsAndXs.charAt(i) != ' ') {\n      throw new IllegalStateException(\"space expected\");\n    }\n    continue;\n  }\n  char currentChar=dotsAndXs.charAt(i);\n  if (currentChar == 'X' || currentChar == 'x') {\n    binary.set(counter);\n  }\n  counter++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < dotsAndXs.length(); ++i) {\n  if (i % 9 == 0) {\n    if (dotsAndXs.charAt(i) != ' ') {\n      throw new IllegalStateException(\"space expected\");\n    }\n    continue;\n  }\n  char currentChar=dotsAndXs.charAt(i);\n  if (currentChar == 'X' || currentChar == 'x') {\n    binary.set(counter);\n  }\n  counter++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 623,
        "startLineNumber" : 48,
        "startColumnNumber" : 68,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String dotsAndXs=ZERO.matcher(ONE.matcher(data).replaceAll(\"X\")).replaceAll(\".\");\n  BitArray binary=new BitArray(SPACE.matcher(dotsAndXs).replaceAll(\"\").length());\n  int counter=0;\n  for (int i=0; i < dotsAndXs.length(); ++i) {\n    if (i % 9 == 0) {\n      if (dotsAndXs.charAt(i) != ' ') {\n        throw new IllegalStateException(\"space expected\");\n      }\n      continue;\n    }\n    char currentChar=dotsAndXs.charAt(i);\n    if (currentChar == 'X' || currentChar == 'x') {\n      binary.set(counter);\n    }\n    counter++;\n  }\n  return binary;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static BitArray buildBitArrayFromString(CharSequence data){\n  String dotsAndXs=ZERO.matcher(ONE.matcher(data).replaceAll(\"X\")).replaceAll(\".\");\n  BitArray binary=new BitArray(SPACE.matcher(dotsAndXs).replaceAll(\"\").length());\n  int counter=0;\n  for (int i=0; i < dotsAndXs.length(); ++i) {\n    if (i % 9 == 0) {\n      if (dotsAndXs.charAt(i) != ' ') {\n        throw new IllegalStateException(\"space expected\");\n      }\n      continue;\n    }\n    char currentChar=dotsAndXs.charAt(i);\n    if (currentChar == 'X' || currentChar == 'x') {\n      binary.set(counter);\n    }\n    counter++;\n  }\n  return binary;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i % 9 == 0) {\n  if (dotsAndXs.charAt(i) != ' ') {\n    throw new IllegalStateException(\"space expected\");\n  }\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 54,
    "startColumnNumber" : 10,
    "endLineNumber" : 54,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}