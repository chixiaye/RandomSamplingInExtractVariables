{
  "id" : 134,
  "expression" : "\"brk_ml_cache_pool_active_allocations_tiny\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/stats/metrics/ManagedLedgerCacheMetrics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"brk_ml_cache_pool_active_allocations_tiny\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 87,
      "startColumnNumber" : 14,
      "endLineNumber" : 87,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 81
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 87,
    "startColumnNumber" : 14,
    "endLineNumber" : 87,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}