{
  "id" : 450,
  "expression" : "NO_OP",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/invocation/InvocationBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NO_OP",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 73,
      "startColumnNumber" : 24,
      "endLineNumber" : 73,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 26
      },
      "nodeContext" : "createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 75,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Invocation i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 45,
        "startColumnNumber" : 37,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (method == null) {\n    if (argTypes == null) {\n      argTypes=new LinkedList<Class<?>>();\n      for (      Object arg : args) {\n        if (arg == null) {\n          argTypes.add(Object.class);\n        }\n else {\n          argTypes.add(arg.getClass());\n        }\n      }\n    }\n    try {\n      method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n    }\n  }\n  Invocation i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1);\n  if (verified) {\n    i.markVerified();\n  }\n  return i;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Build the invocation <p> If the method was not specified, use IMethods methods.\n * @return invocation\n */\npublic Invocation toInvocation(){\n  if (method == null) {\n    if (argTypes == null) {\n      argTypes=new LinkedList<Class<?>>();\n      for (      Object arg : args) {\n        if (arg == null) {\n          argTypes.add(Object.class);\n        }\n else {\n          argTypes.add(arg.getClass());\n        }\n      }\n    }\n    try {\n      method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n    }\n  }\n  Invocation i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1);\n  if (verified) {\n    i.markVerified();\n  }\n  return i;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 26
      },
      "nodeContext" : "createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.mockito.internal.invocation.RealMethod"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 73,
    "startColumnNumber" : 24,
    "endLineNumber" : 73,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}