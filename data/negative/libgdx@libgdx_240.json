{
  "id" : 240,
  "expression" : "Usage.Position",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BasicBulletTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Usage.Position",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 112,
      "startColumnNumber" : 28,
      "endLineNumber" : 112,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 112,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Usage.Position | Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 95,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 58
      },
      "nodeContext" : "modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 48,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 95,
        "startColumnNumber" : 14,
        "endLineNumber" : 112,
        "endColumnNumber" : 58
      },
      "nodeContext" : "groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final Model groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 74,
        "startColumnNumber" : 23,
        "endLineNumber" : 169,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.create();\n  instructions=\"Swipe for next test\";\n  lights=new Environment();\n  lights.set(new ColorAttribute(ColorAttribute.AmbientLight,0.2f,0.2f,0.2f,1.f));\n  lights.add(new DirectionalLight().set(0.8f,0.8f,0.8f,-0.5f,-1f,-0.7f));\n  final float width=Gdx.graphics.getWidth();\n  final float height=Gdx.graphics.getHeight();\n  if (width > height)   camera=new PerspectiveCamera(67f,3f * width / height,3f);\n else   camera=new PerspectiveCamera(67f,3f,3f * height / width);\n  camera.position.set(10f,10f,10f);\n  camera.lookAt(0,0,0);\n  camera.update();\n  modelBatch=new ModelBatch();\n  final Model groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal);\n  models.add(groundModel);\n  final Model sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal);\n  models.add(sphereModel);\n  BaseBulletTest.init();\n  collisionConfiguration=new btDefaultCollisionConfiguration();\n  dispatcher=new btCollisionDispatcher(collisionConfiguration);\n  broadphase=new btDbvtBroadphase();\n  solver=new btSequentialImpulseConstraintSolver();\n  collisionWorld=new btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);\n  collisionWorld.setGravity(gravity);\n  btCollisionShape groundShape=new btBoxShape(tempVector.set(20,0,20));\n  shapes.add(groundShape);\n  btRigidBodyConstructionInfo groundInfo=new btRigidBodyConstructionInfo(0f,null,groundShape,Vector3.Zero);\n  bodyInfos.add(groundInfo);\n  btCollisionShape sphereShape=new btSphereShape(0.5f);\n  shapes.add(sphereShape);\n  sphereShape.calculateLocalInertia(1f,tempVector);\n  btRigidBodyConstructionInfo sphereInfo=new btRigidBodyConstructionInfo(1f,null,sphereShape,tempVector);\n  bodyInfos.add(sphereInfo);\n  ModelInstance ground=new ModelInstance(groundModel);\n  instances.add(ground);\n  btDefaultMotionState groundMotionState=new btDefaultMotionState();\n  groundMotionState.setWorldTransform(ground.transform);\n  motionStates.add(groundMotionState);\n  btRigidBody groundBody=new btRigidBody(groundInfo);\n  groundBody.setMotionState(groundMotionState);\n  bodies.add(groundBody);\n  collisionWorld.addRigidBody(groundBody);\n  for (float x=-10f; x <= 10f; x+=2f) {\n    for (float y=5f; y <= 15f; y+=2f) {\n      for (float z=0f; z <= 0f; z+=2f) {\n        ModelInstance sphere=new ModelInstance(sphereModel);\n        instances.add(sphere);\n        sphere.transform.trn(x + 0.1f * MathUtils.random(),y + 0.1f * MathUtils.random(),z + 0.1f * MathUtils.random());\n        btDefaultMotionState sphereMotionState=new btDefaultMotionState();\n        sphereMotionState.setWorldTransform(sphere.transform);\n        motionStates.add(sphereMotionState);\n        btRigidBody sphereBody=new btRigidBody(sphereInfo);\n        sphereBody.setMotionState(sphereMotionState);\n        bodies.add(sphereBody);\n        collisionWorld.addRigidBody(sphereBody);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 528,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3647,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 169,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  super.create();\n  instructions=\"Swipe for next test\";\n  lights=new Environment();\n  lights.set(new ColorAttribute(ColorAttribute.AmbientLight,0.2f,0.2f,0.2f,1.f));\n  lights.add(new DirectionalLight().set(0.8f,0.8f,0.8f,-0.5f,-1f,-0.7f));\n  final float width=Gdx.graphics.getWidth();\n  final float height=Gdx.graphics.getHeight();\n  if (width > height)   camera=new PerspectiveCamera(67f,3f * width / height,3f);\n else   camera=new PerspectiveCamera(67f,3f,3f * height / width);\n  camera.position.set(10f,10f,10f);\n  camera.lookAt(0,0,0);\n  camera.update();\n  modelBatch=new ModelBatch();\n  final Model groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal);\n  models.add(groundModel);\n  final Model sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal);\n  models.add(sphereModel);\n  BaseBulletTest.init();\n  collisionConfiguration=new btDefaultCollisionConfiguration();\n  dispatcher=new btCollisionDispatcher(collisionConfiguration);\n  broadphase=new btDbvtBroadphase();\n  solver=new btSequentialImpulseConstraintSolver();\n  collisionWorld=new btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);\n  collisionWorld.setGravity(gravity);\n  btCollisionShape groundShape=new btBoxShape(tempVector.set(20,0,20));\n  shapes.add(groundShape);\n  btRigidBodyConstructionInfo groundInfo=new btRigidBodyConstructionInfo(0f,null,groundShape,Vector3.Zero);\n  bodyInfos.add(groundInfo);\n  btCollisionShape sphereShape=new btSphereShape(0.5f);\n  shapes.add(sphereShape);\n  sphereShape.calculateLocalInertia(1f,tempVector);\n  btRigidBodyConstructionInfo sphereInfo=new btRigidBodyConstructionInfo(1f,null,sphereShape,tempVector);\n  bodyInfos.add(sphereInfo);\n  ModelInstance ground=new ModelInstance(groundModel);\n  instances.add(ground);\n  btDefaultMotionState groundMotionState=new btDefaultMotionState();\n  groundMotionState.setWorldTransform(ground.transform);\n  motionStates.add(groundMotionState);\n  btRigidBody groundBody=new btRigidBody(groundInfo);\n  groundBody.setMotionState(groundMotionState);\n  bodies.add(groundBody);\n  collisionWorld.addRigidBody(groundBody);\n  for (float x=-10f; x <= 10f; x+=2f) {\n    for (float y=5f; y <= 15f; y+=2f) {\n      for (float z=0f; z <= 0f; z+=2f) {\n        ModelInstance sphere=new ModelInstance(sphereModel);\n        instances.add(sphere);\n        sphere.transform.trn(x + 0.1f * MathUtils.random(),y + 0.1f * MathUtils.random(),z + 0.1f * MathUtils.random());\n        btDefaultMotionState sphereMotionState=new btDefaultMotionState();\n        sphereMotionState.setWorldTransform(sphere.transform);\n        motionStates.add(sphereMotionState);\n        btRigidBody sphereBody=new btRigidBody(sphereInfo);\n        sphereBody.setMotionState(sphereMotionState);\n        bodies.add(sphereBody);\n        collisionWorld.addRigidBody(sphereBody);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 534,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 112,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Usage.Position | Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "Usage.Position",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 121,
      "startColumnNumber" : 28,
      "endLineNumber" : 121,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 121,
        "startColumnNumber" : 28,
        "endLineNumber" : 121,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Usage.Position | Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 114,
        "startColumnNumber" : 28,
        "endLineNumber" : 121,
        "endColumnNumber" : 58
      },
      "nodeContext" : "modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 34,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 114,
        "startColumnNumber" : 14,
        "endLineNumber" : 121,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final Model sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 74,
        "startColumnNumber" : 23,
        "endLineNumber" : 169,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.create();\n  instructions=\"Swipe for next test\";\n  lights=new Environment();\n  lights.set(new ColorAttribute(ColorAttribute.AmbientLight,0.2f,0.2f,0.2f,1.f));\n  lights.add(new DirectionalLight().set(0.8f,0.8f,0.8f,-0.5f,-1f,-0.7f));\n  final float width=Gdx.graphics.getWidth();\n  final float height=Gdx.graphics.getHeight();\n  if (width > height)   camera=new PerspectiveCamera(67f,3f * width / height,3f);\n else   camera=new PerspectiveCamera(67f,3f,3f * height / width);\n  camera.position.set(10f,10f,10f);\n  camera.lookAt(0,0,0);\n  camera.update();\n  modelBatch=new ModelBatch();\n  final Model groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal);\n  models.add(groundModel);\n  final Model sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal);\n  models.add(sphereModel);\n  BaseBulletTest.init();\n  collisionConfiguration=new btDefaultCollisionConfiguration();\n  dispatcher=new btCollisionDispatcher(collisionConfiguration);\n  broadphase=new btDbvtBroadphase();\n  solver=new btSequentialImpulseConstraintSolver();\n  collisionWorld=new btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);\n  collisionWorld.setGravity(gravity);\n  btCollisionShape groundShape=new btBoxShape(tempVector.set(20,0,20));\n  shapes.add(groundShape);\n  btRigidBodyConstructionInfo groundInfo=new btRigidBodyConstructionInfo(0f,null,groundShape,Vector3.Zero);\n  bodyInfos.add(groundInfo);\n  btCollisionShape sphereShape=new btSphereShape(0.5f);\n  shapes.add(sphereShape);\n  sphereShape.calculateLocalInertia(1f,tempVector);\n  btRigidBodyConstructionInfo sphereInfo=new btRigidBodyConstructionInfo(1f,null,sphereShape,tempVector);\n  bodyInfos.add(sphereInfo);\n  ModelInstance ground=new ModelInstance(groundModel);\n  instances.add(ground);\n  btDefaultMotionState groundMotionState=new btDefaultMotionState();\n  groundMotionState.setWorldTransform(ground.transform);\n  motionStates.add(groundMotionState);\n  btRigidBody groundBody=new btRigidBody(groundInfo);\n  groundBody.setMotionState(groundMotionState);\n  bodies.add(groundBody);\n  collisionWorld.addRigidBody(groundBody);\n  for (float x=-10f; x <= 10f; x+=2f) {\n    for (float y=5f; y <= 15f; y+=2f) {\n      for (float z=0f; z <= 0f; z+=2f) {\n        ModelInstance sphere=new ModelInstance(sphereModel);\n        instances.add(sphere);\n        sphere.transform.trn(x + 0.1f * MathUtils.random(),y + 0.1f * MathUtils.random(),z + 0.1f * MathUtils.random());\n        btDefaultMotionState sphereMotionState=new btDefaultMotionState();\n        sphereMotionState.setWorldTransform(sphere.transform);\n        motionStates.add(sphereMotionState);\n        btRigidBody sphereBody=new btRigidBody(sphereInfo);\n        sphereBody.setMotionState(sphereMotionState);\n        bodies.add(sphereBody);\n        collisionWorld.addRigidBody(sphereBody);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 528,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3647,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 169,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  super.create();\n  instructions=\"Swipe for next test\";\n  lights=new Environment();\n  lights.set(new ColorAttribute(ColorAttribute.AmbientLight,0.2f,0.2f,0.2f,1.f));\n  lights.add(new DirectionalLight().set(0.8f,0.8f,0.8f,-0.5f,-1f,-0.7f));\n  final float width=Gdx.graphics.getWidth();\n  final float height=Gdx.graphics.getHeight();\n  if (width > height)   camera=new PerspectiveCamera(67f,3f * width / height,3f);\n else   camera=new PerspectiveCamera(67f,3f,3f * height / width);\n  camera.position.set(10f,10f,10f);\n  camera.lookAt(0,0,0);\n  camera.update();\n  modelBatch=new ModelBatch();\n  final Model groundModel=modelBuilder.createRect(20f,0f,-20f,-20f,0f,-20f,-20f,0f,20f,20f,0f,20f,0,1,0,new Material(ColorAttribute.createDiffuse(Color.BLUE),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(16f)),Usage.Position | Usage.Normal);\n  models.add(groundModel);\n  final Model sphereModel=modelBuilder.createSphere(1f,1f,1f,10,10,new Material(ColorAttribute.createDiffuse(Color.RED),ColorAttribute.createSpecular(Color.WHITE),FloatAttribute.createShininess(64f)),Usage.Position | Usage.Normal);\n  models.add(sphereModel);\n  BaseBulletTest.init();\n  collisionConfiguration=new btDefaultCollisionConfiguration();\n  dispatcher=new btCollisionDispatcher(collisionConfiguration);\n  broadphase=new btDbvtBroadphase();\n  solver=new btSequentialImpulseConstraintSolver();\n  collisionWorld=new btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);\n  collisionWorld.setGravity(gravity);\n  btCollisionShape groundShape=new btBoxShape(tempVector.set(20,0,20));\n  shapes.add(groundShape);\n  btRigidBodyConstructionInfo groundInfo=new btRigidBodyConstructionInfo(0f,null,groundShape,Vector3.Zero);\n  bodyInfos.add(groundInfo);\n  btCollisionShape sphereShape=new btSphereShape(0.5f);\n  shapes.add(sphereShape);\n  sphereShape.calculateLocalInertia(1f,tempVector);\n  btRigidBodyConstructionInfo sphereInfo=new btRigidBodyConstructionInfo(1f,null,sphereShape,tempVector);\n  bodyInfos.add(sphereInfo);\n  ModelInstance ground=new ModelInstance(groundModel);\n  instances.add(ground);\n  btDefaultMotionState groundMotionState=new btDefaultMotionState();\n  groundMotionState.setWorldTransform(ground.transform);\n  motionStates.add(groundMotionState);\n  btRigidBody groundBody=new btRigidBody(groundInfo);\n  groundBody.setMotionState(groundMotionState);\n  bodies.add(groundBody);\n  collisionWorld.addRigidBody(groundBody);\n  for (float x=-10f; x <= 10f; x+=2f) {\n    for (float y=5f; y <= 15f; y+=2f) {\n      for (float z=0f; z <= 0f; z+=2f) {\n        ModelInstance sphere=new ModelInstance(sphereModel);\n        instances.add(sphere);\n        sphere.transform.trn(x + 0.1f * MathUtils.random(),y + 0.1f * MathUtils.random(),z + 0.1f * MathUtils.random());\n        btDefaultMotionState sphereMotionState=new btDefaultMotionState();\n        sphereMotionState.setWorldTransform(sphere.transform);\n        motionStates.add(sphereMotionState);\n        btRigidBody sphereBody=new btRigidBody(sphereInfo);\n        sphereBody.setMotionState(sphereMotionState);\n        bodies.add(sphereBody);\n        collisionWorld.addRigidBody(sphereBody);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 534,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 121,
        "startColumnNumber" : 28,
        "endLineNumber" : 121,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Usage.Position | Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 112,
    "startColumnNumber" : 28,
    "endLineNumber" : 112,
    "endColumnNumber" : 42
  }, {
    "charLength" : 14,
    "startLineNumber" : 121,
    "startColumnNumber" : 28,
    "endLineNumber" : 121,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}