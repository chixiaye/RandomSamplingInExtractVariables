{
  "id" : 238,
  "expression" : "pairs.size()",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/expanded/BitArrayBuilder.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pairs.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 43,
      "startColumnNumber" : 22,
      "endLineNumber" : 43,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 43,
        "startColumnNumber" : 22,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pairs.size() << 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 43,
        "startColumnNumber" : 21,
        "endLineNumber" : 43,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(pairs.size() << 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 43,
        "startColumnNumber" : 21,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(pairs.size() << 1) - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "charNumber=(pairs.size() << 1) - 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int charNumber=(pairs.size() << 1) - 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 42,
        "startColumnNumber" : 58,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static BitArray buildBitArray(List<ExpandedPair> pairs){\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int charNumber=(pairs.size() << 1) - 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "pairs.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 44,
      "startColumnNumber" : 18,
      "endLineNumber" : 44,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 44,
        "endColumnNumber" : 34
      },
      "nodeContext" : "pairs.size() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pairs.get(pairs.size() - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 50
      },
      "nodeContext" : "pairs.get(pairs.size() - 1).getRightChar()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 58
      },
      "nodeContext" : "pairs.get(pairs.size() - 1).getRightChar() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n  charNumber-=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 42,
        "startColumnNumber" : 58,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static BitArray buildBitArray(List<ExpandedPair> pairs){\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 58
      },
      "nodeContext" : "pairs.get(pairs.size() - 1).getRightChar() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "pairs.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 62,
      "startColumnNumber" : 23,
      "endLineNumber" : 62,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 62,
        "startColumnNumber" : 19,
        "endLineNumber" : 62,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < pairs.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i < pairs.size(); ++i) {\n  ExpandedPair currentPair=pairs.get(i);\n  int leftValue=currentPair.getLeftChar().getValue();\n  for (int j=11; j >= 0; --j) {\n    if ((leftValue & (1 << j)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  if (currentPair.getRightChar() != null) {\n    int rightValue=currentPair.getRightChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((rightValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 42,
        "startColumnNumber" : 58,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static BitArray buildBitArray(List<ExpandedPair> pairs){\n  int charNumber=(pairs.size() << 1) - 1;\n  if (pairs.get(pairs.size() - 1).getRightChar() == null) {\n    charNumber-=1;\n  }\n  int size=12 * charNumber;\n  BitArray binary=new BitArray(size);\n  int accPos=0;\n  ExpandedPair firstPair=pairs.get(0);\n  int firstValue=firstPair.getRightChar().getValue();\n  for (int i=11; i >= 0; --i) {\n    if ((firstValue & (1 << i)) != 0) {\n      binary.set(accPos);\n    }\n    accPos++;\n  }\n  for (int i=1; i < pairs.size(); ++i) {\n    ExpandedPair currentPair=pairs.get(i);\n    int leftValue=currentPair.getLeftChar().getValue();\n    for (int j=11; j >= 0; --j) {\n      if ((leftValue & (1 << j)) != 0) {\n        binary.set(accPos);\n      }\n      accPos++;\n    }\n    if (currentPair.getRightChar() != null) {\n      int rightValue=currentPair.getRightChar().getValue();\n      for (int j=11; j >= 0; --j) {\n        if ((rightValue & (1 << j)) != 0) {\n          binary.set(accPos);\n        }\n        accPos++;\n      }\n    }\n  }\n  return binary;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 62,
        "startColumnNumber" : 19,
        "endLineNumber" : 62,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < pairs.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 43,
    "startColumnNumber" : 22,
    "endLineNumber" : 43,
    "endColumnNumber" : 34
  }, {
    "charLength" : 12,
    "startLineNumber" : 44,
    "startColumnNumber" : 18,
    "endLineNumber" : 44,
    "endColumnNumber" : 30
  }, {
    "charLength" : 12,
    "startLineNumber" : 62,
    "startColumnNumber" : 23,
    "endLineNumber" : 62,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}