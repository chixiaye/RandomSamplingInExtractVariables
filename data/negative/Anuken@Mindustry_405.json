{
  "id" : 405,
  "expression" : "can",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/comp/WeaponsComp.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "can",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 148,
      "startColumnNumber" : 65,
      "endLineNumber" : 148,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 148,
        "startColumnNumber" : 15,
        "endLineNumber" : 148,
        "endColumnNumber" : 68
      },
      "nodeContext" : "weapon.rotate && (mount.rotate || mount.shoot) && can",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 148,
        "startColumnNumber" : 12,
        "endLineNumber" : 157,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n  float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n  mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n  mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n}\n else if (!weapon.rotate) {\n  mount.rotation=0;\n  mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3991,
        "startLineNumber" : 106,
        "startColumnNumber" : 39,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Weapon weapon=mount.weapon;\n  mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n  float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n  float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n  float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n  float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n  if (weapon.continuous && mount.bullet != null) {\n    if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n      mount.bullet=null;\n    }\n else {\n      mount.bullet.rotation(weaponRotation + 90);\n      mount.bullet.set(shootX,shootY);\n      mount.reload=weapon.reload;\n      vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n      if (weapon.shootSound != Sounds.none && !headless) {\n        if (mount.sound == null)         mount.sound=new SoundLoop(weapon.shootSound,1f);\n        mount.sound.update(x,y,true);\n      }\n    }\n  }\n else {\n    mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n    if (mount.sound != null) {\n      mount.sound.update(x,y,false);\n    }\n  }\n  if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n    mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n    mount.side=!mount.side;\n  }\n  if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n    float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n    mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n  }\n else   if (!weapon.rotate) {\n    mount.rotation=0;\n    mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n  }\n  if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n    shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n    mount.reload=weapon.reload;\n    ammo--;\n    if (ammo < 0)     ammo=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 645,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4022,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (WeaponMount mount : mounts) {\n  Weapon weapon=mount.weapon;\n  mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n  float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n  float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n  float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n  float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n  if (weapon.continuous && mount.bullet != null) {\n    if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n      mount.bullet=null;\n    }\n else {\n      mount.bullet.rotation(weaponRotation + 90);\n      mount.bullet.set(shootX,shootY);\n      mount.reload=weapon.reload;\n      vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n      if (weapon.shootSound != Sounds.none && !headless) {\n        if (mount.sound == null)         mount.sound=new SoundLoop(weapon.shootSound,1f);\n        mount.sound.update(x,y,true);\n      }\n    }\n  }\n else {\n    mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n    if (mount.sound != null) {\n      mount.sound.update(x,y,false);\n    }\n  }\n  if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n    mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n    mount.side=!mount.side;\n  }\n  if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n    float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n    mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n  }\n else   if (!weapon.rotate) {\n    mount.rotation=0;\n    mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n  }\n  if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n    shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n    mount.reload=weapon.reload;\n    ammo--;\n    if (ammo < 0)     ammo=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 651,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4073,
        "startLineNumber" : 103,
        "startColumnNumber" : 24,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean can=canShoot();\n  for (  WeaponMount mount : mounts) {\n    Weapon weapon=mount.weapon;\n    mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n    float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n    float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n    float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n    if (weapon.continuous && mount.bullet != null) {\n      if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n        mount.bullet=null;\n      }\n else {\n        mount.bullet.rotation(weaponRotation + 90);\n        mount.bullet.set(shootX,shootY);\n        mount.reload=weapon.reload;\n        vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n        if (weapon.shootSound != Sounds.none && !headless) {\n          if (mount.sound == null)           mount.sound=new SoundLoop(weapon.shootSound,1f);\n          mount.sound.update(x,y,true);\n        }\n      }\n    }\n else {\n      mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n      if (mount.sound != null) {\n        mount.sound.update(x,y,false);\n      }\n    }\n    if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n      mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n      mount.side=!mount.side;\n    }\n    if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n      float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n      mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n      mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n    }\n else     if (!weapon.rotate) {\n      mount.rotation=0;\n      mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n    }\n    if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n      shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n      mount.reload=weapon.reload;\n      ammo--;\n      if (ammo < 0)       ammo=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 658,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4162,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update shooting and rotation for this unit. \n */\n@Override public void update(){\n  boolean can=canShoot();\n  for (  WeaponMount mount : mounts) {\n    Weapon weapon=mount.weapon;\n    mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n    float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n    float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n    float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n    if (weapon.continuous && mount.bullet != null) {\n      if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n        mount.bullet=null;\n      }\n else {\n        mount.bullet.rotation(weaponRotation + 90);\n        mount.bullet.set(shootX,shootY);\n        mount.reload=weapon.reload;\n        vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n        if (weapon.shootSound != Sounds.none && !headless) {\n          if (mount.sound == null)           mount.sound=new SoundLoop(weapon.shootSound,1f);\n          mount.sound.update(x,y,true);\n        }\n      }\n    }\n else {\n      mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n      if (mount.sound != null) {\n        mount.sound.update(x,y,false);\n      }\n    }\n    if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n      mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n      mount.side=!mount.side;\n    }\n    if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n      float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n      mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n      mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n    }\n else     if (!weapon.rotate) {\n      mount.rotation=0;\n      mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n    }\n    if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n      shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n      mount.reload=weapon.reload;\n      ammo--;\n      if (ammo < 0)       ammo=0;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 665,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 148,
        "startColumnNumber" : 15,
        "endLineNumber" : 148,
        "endColumnNumber" : 68
      },
      "nodeContext" : "weapon.rotate && (mount.rotate || mount.shoot) && can",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "can",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 161,
      "startColumnNumber" : 16,
      "endLineNumber" : 161,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 160,
        "startColumnNumber" : 15,
        "endLineNumber" : 166,
        "endColumnNumber" : 39
      },
      "nodeContext" : "mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 160,
        "startColumnNumber" : 15,
        "endLineNumber" : 167,
        "endColumnNumber" : 123
      },
      "nodeContext" : "mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 160,
        "startColumnNumber" : 12,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n  shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n  mount.reload=weapon.reload;\n  ammo--;\n  if (ammo < 0)   ammo=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3991,
        "startLineNumber" : 106,
        "startColumnNumber" : 39,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Weapon weapon=mount.weapon;\n  mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n  float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n  float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n  float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n  float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n  if (weapon.continuous && mount.bullet != null) {\n    if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n      mount.bullet=null;\n    }\n else {\n      mount.bullet.rotation(weaponRotation + 90);\n      mount.bullet.set(shootX,shootY);\n      mount.reload=weapon.reload;\n      vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n      if (weapon.shootSound != Sounds.none && !headless) {\n        if (mount.sound == null)         mount.sound=new SoundLoop(weapon.shootSound,1f);\n        mount.sound.update(x,y,true);\n      }\n    }\n  }\n else {\n    mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n    if (mount.sound != null) {\n      mount.sound.update(x,y,false);\n    }\n  }\n  if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n    mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n    mount.side=!mount.side;\n  }\n  if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n    float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n    mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n  }\n else   if (!weapon.rotate) {\n    mount.rotation=0;\n    mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n  }\n  if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n    shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n    mount.reload=weapon.reload;\n    ammo--;\n    if (ammo < 0)     ammo=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 645,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4022,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (WeaponMount mount : mounts) {\n  Weapon weapon=mount.weapon;\n  mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n  float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n  float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n  float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n  float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n  if (weapon.continuous && mount.bullet != null) {\n    if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n      mount.bullet=null;\n    }\n else {\n      mount.bullet.rotation(weaponRotation + 90);\n      mount.bullet.set(shootX,shootY);\n      mount.reload=weapon.reload;\n      vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n      if (weapon.shootSound != Sounds.none && !headless) {\n        if (mount.sound == null)         mount.sound=new SoundLoop(weapon.shootSound,1f);\n        mount.sound.update(x,y,true);\n      }\n    }\n  }\n else {\n    mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n    if (mount.sound != null) {\n      mount.sound.update(x,y,false);\n    }\n  }\n  if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n    mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n    mount.side=!mount.side;\n  }\n  if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n    float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n    mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n  }\n else   if (!weapon.rotate) {\n    mount.rotation=0;\n    mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n  }\n  if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n    shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n    mount.reload=weapon.reload;\n    ammo--;\n    if (ammo < 0)     ammo=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 651,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4073,
        "startLineNumber" : 103,
        "startColumnNumber" : 24,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean can=canShoot();\n  for (  WeaponMount mount : mounts) {\n    Weapon weapon=mount.weapon;\n    mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n    float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n    float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n    float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n    if (weapon.continuous && mount.bullet != null) {\n      if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n        mount.bullet=null;\n      }\n else {\n        mount.bullet.rotation(weaponRotation + 90);\n        mount.bullet.set(shootX,shootY);\n        mount.reload=weapon.reload;\n        vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n        if (weapon.shootSound != Sounds.none && !headless) {\n          if (mount.sound == null)           mount.sound=new SoundLoop(weapon.shootSound,1f);\n          mount.sound.update(x,y,true);\n        }\n      }\n    }\n else {\n      mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n      if (mount.sound != null) {\n        mount.sound.update(x,y,false);\n      }\n    }\n    if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n      mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n      mount.side=!mount.side;\n    }\n    if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n      float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n      mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n      mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n    }\n else     if (!weapon.rotate) {\n      mount.rotation=0;\n      mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n    }\n    if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n      shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n      mount.reload=weapon.reload;\n      ammo--;\n      if (ammo < 0)       ammo=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 658,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4162,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update shooting and rotation for this unit. \n */\n@Override public void update(){\n  boolean can=canShoot();\n  for (  WeaponMount mount : mounts) {\n    Weapon weapon=mount.weapon;\n    mount.reload=Math.max(mount.reload - Time.delta * reloadMultiplier,0);\n    float weaponRotation=this.rotation - 90 + (weapon.rotate ? mount.rotation : 0);\n    float mountX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), mountY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n    float shootX=mountX + Angles.trnsx(weaponRotation,weapon.shootX,weapon.shootY), shootY=mountY + Angles.trnsy(weaponRotation,weapon.shootX,weapon.shootY);\n    float shootAngle=weapon.rotate ? weaponRotation + 90 : Angles.angle(shootX,shootY,mount.aimX,mount.aimY) + (this.rotation - angleTo(mount.aimX,mount.aimY));\n    if (weapon.continuous && mount.bullet != null) {\n      if (!mount.bullet.isAdded() || mount.bullet.time >= mount.bullet.lifetime || mount.bullet.type != weapon.bullet) {\n        mount.bullet=null;\n      }\n else {\n        mount.bullet.rotation(weaponRotation + 90);\n        mount.bullet.set(shootX,shootY);\n        mount.reload=weapon.reload;\n        vel.add(Tmp.v1.trns(rotation + 180f,mount.bullet.type.recoil));\n        if (weapon.shootSound != Sounds.none && !headless) {\n          if (mount.sound == null)           mount.sound=new SoundLoop(weapon.shootSound,1f);\n          mount.sound.update(x,y,true);\n        }\n      }\n    }\n else {\n      mount.heat=Math.max(mount.heat - Time.delta * reloadMultiplier / mount.weapon.cooldownTime,0);\n      if (mount.sound != null) {\n        mount.sound.update(x,y,false);\n      }\n    }\n    if (weapon.otherSide != -1 && weapon.alternate && mount.side == weapon.flipSprite && mount.reload + Time.delta * reloadMultiplier > weapon.reload / 2f && mount.reload <= weapon.reload / 2f) {\n      mounts[weapon.otherSide].side=!mounts[weapon.otherSide].side;\n      mount.side=!mount.side;\n    }\n    if (weapon.rotate && (mount.rotate || mount.shoot) && can) {\n      float axisX=this.x + Angles.trnsx(this.rotation - 90,weapon.x,weapon.y), axisY=this.y + Angles.trnsy(this.rotation - 90,weapon.x,weapon.y);\n      mount.targetRotation=Angles.angle(axisX,axisY,mount.aimX,mount.aimY) - this.rotation;\n      mount.rotation=Angles.moveToward(mount.rotation,mount.targetRotation,weapon.rotateSpeed * Time.delta);\n    }\n else     if (!weapon.rotate) {\n      mount.rotation=0;\n      mount.targetRotation=angleTo(mount.aimX,mount.aimY);\n    }\n    if (mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f && Angles.within(weapon.rotate ? mount.rotation : this.rotation,mount.targetRotation,mount.weapon.shootCone)) {\n      shoot(mount,shootX,shootY,mount.aimX,mount.aimY,mountX,mountY,shootAngle,Mathf.sign(weapon.x));\n      mount.reload=weapon.reload;\n      ammo--;\n      if (ammo < 0)       ammo=0;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 665,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 160,
        "startColumnNumber" : 15,
        "endLineNumber" : 166,
        "endColumnNumber" : 39
      },
      "nodeContext" : "mount.shoot && can && (ammo > 0 || !state.rules.unitAmmo || team().rules().infiniteAmmo)&& (!weapon.alternate || mount.side == weapon.flipSprite)&& (vel.len() >= mount.weapon.minShootVelocity || (net.active() && !isLocal()))&& mount.reload <= 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 60,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 148,
    "startColumnNumber" : 65,
    "endLineNumber" : 148,
    "endColumnNumber" : 68
  }, {
    "charLength" : 3,
    "startLineNumber" : 161,
    "startColumnNumber" : 16,
    "endLineNumber" : 161,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}