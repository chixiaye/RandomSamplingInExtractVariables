{
  "id" : 2,
  "expression" : "','",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/serializer/MiscCodec.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "','",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 86,
      "startColumnNumber" : 30,
      "endLineNumber" : 86,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 34
      },
      "nodeContext" : "out.write(',')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "out.write(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 82,
        "startColumnNumber" : 52,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  out.write('{');\n  out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n  serializer.write(object.getClass().getName());\n  out.write(',');\n  out.writeFieldName(\"val\",false);\n  out.writeString(pattern);\n  out.write('}');\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (object.getClass() != fieldType) {\n  out.write('{');\n  out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n  serializer.write(object.getClass().getName());\n  out.write(',');\n  out.writeFieldName(\"val\",false);\n  out.writeString(pattern);\n  out.write('}');\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 81,
        "startColumnNumber" : 77,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (object.getClass() != fieldType) {\n    out.write('{');\n    out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n    serializer.write(object.getClass().getName());\n    out.write(',');\n    out.writeFieldName(\"val\",false);\n    out.writeString(pattern);\n    out.write('}');\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n  if (object.getClass() != fieldType) {\n    out.write('{');\n    out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n    serializer.write(object.getClass().getName());\n    out.write(',');\n    out.writeFieldName(\"val\",false);\n    out.writeString(pattern);\n    out.write('}');\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 78,
        "startColumnNumber" : 55,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2672,
        "startLineNumber" : 78,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 330,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2970,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 370,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3111,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 396,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3269,
        "startLineNumber" : 63,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 418,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3417,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof TimeZone) {\n  TimeZone timeZone=(TimeZone)object;\n  serializer.write(timeZone.getID());\n}\n else if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 440,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3550,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Pattern) {\n  Pattern p=(Pattern)object;\n  serializer.write(p.pattern());\n}\n else if (object instanceof TimeZone) {\n  TimeZone timeZone=(TimeZone)object;\n  serializer.write(timeZone.getID());\n}\n else if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 462,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4212,
        "startLineNumber" : 38,
        "startColumnNumber" : 117,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if (fieldType == char.class || fieldType == Character.class) {\n      serializer.write(\"\");\n    }\n else {\n      if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n        Class<?> fieldClass=TypeUtils.getClass(fieldType);\n        if (Enumeration.class.isAssignableFrom(fieldClass)) {\n          out.write(\"[]\");\n          return;\n        }\n      }\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Pattern) {\n    Pattern p=(Pattern)object;\n    serializer.write(p.pattern());\n  }\n else   if (object instanceof TimeZone) {\n    TimeZone timeZone=(TimeZone)object;\n    serializer.write(timeZone.getID());\n  }\n else   if (object instanceof Currency) {\n    Currency currency=(Currency)object;\n    serializer.write(currency.getCurrencyCode());\n  }\n else   if (object instanceof Class) {\n    Class<?> clazz=(Class<?>)object;\n    serializer.write(clazz.getName());\n  }\n else   if (object instanceof Character) {\n    Character value=(Character)object;\n    char c=value.charValue();\n    if (c == 0) {\n      serializer.write(\"\\u0000\");\n    }\n else {\n      serializer.write(value.toString());\n    }\n  }\n else   if (object instanceof SimpleDateFormat) {\n    String pattern=((SimpleDateFormat)object).toPattern();\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (object.getClass() != fieldType) {\n        out.write('{');\n        out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n        serializer.write(object.getClass().getName());\n        out.write(',');\n        out.writeFieldName(\"val\",false);\n        out.writeString(pattern);\n        out.write('}');\n        return;\n      }\n    }\n    out.writeString(pattern);\n  }\n else   if (object instanceof JSONStreamAware) {\n    JSONStreamAware aware=(JSONStreamAware)object;\n    aware.writeJSONString(serializer.out);\n  }\n else   if (object instanceof JSONAware) {\n    JSONAware aware=(JSONAware)object;\n    out.write(aware.toJSONString());\n  }\n else   if (object instanceof JSONSerializable) {\n    JSONSerializable jsonSerializable=((JSONSerializable)object);\n    jsonSerializable.write(serializer,fieldName,fieldType);\n  }\n else   if (object instanceof Enumeration) {\n    Type elementType=null;\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (fieldType instanceof ParameterizedType) {\n        ParameterizedType param=(ParameterizedType)fieldType;\n        elementType=param.getActualTypeArguments()[0];\n      }\n    }\n    Enumeration<?> e=(Enumeration<?>)object;\n    SerialContext context=serializer.context;\n    serializer.setContext(context,object,fieldName,0);\n    try {\n      int i=0;\n      out.write('[');\n      while (e.hasMoreElements()) {\n        Object item=e.nextElement();\n        if (i++ != 0) {\n          out.write(',');\n        }\n        if (item == null) {\n          out.writeNull();\n          continue;\n        }\n        Class<?> clazz=item.getClass();\n        ObjectSerializer itemSerializer=serializer.config.get(clazz);\n        itemSerializer.write(serializer,item,i - 1,elementType);\n      }\n      out.write(']');\n    }\n  finally {\n      serializer.context=context;\n    }\n  }\n else {\n    serializer.write(object.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 538,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4325,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if (fieldType == char.class || fieldType == Character.class) {\n      serializer.write(\"\");\n    }\n else {\n      if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n        Class<?> fieldClass=TypeUtils.getClass(fieldType);\n        if (Enumeration.class.isAssignableFrom(fieldClass)) {\n          out.write(\"[]\");\n          return;\n        }\n      }\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Pattern) {\n    Pattern p=(Pattern)object;\n    serializer.write(p.pattern());\n  }\n else   if (object instanceof TimeZone) {\n    TimeZone timeZone=(TimeZone)object;\n    serializer.write(timeZone.getID());\n  }\n else   if (object instanceof Currency) {\n    Currency currency=(Currency)object;\n    serializer.write(currency.getCurrencyCode());\n  }\n else   if (object instanceof Class) {\n    Class<?> clazz=(Class<?>)object;\n    serializer.write(clazz.getName());\n  }\n else   if (object instanceof Character) {\n    Character value=(Character)object;\n    char c=value.charValue();\n    if (c == 0) {\n      serializer.write(\"\\u0000\");\n    }\n else {\n      serializer.write(value.toString());\n    }\n  }\n else   if (object instanceof SimpleDateFormat) {\n    String pattern=((SimpleDateFormat)object).toPattern();\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (object.getClass() != fieldType) {\n        out.write('{');\n        out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n        serializer.write(object.getClass().getName());\n        out.write(',');\n        out.writeFieldName(\"val\",false);\n        out.writeString(pattern);\n        out.write('}');\n        return;\n      }\n    }\n    out.writeString(pattern);\n  }\n else   if (object instanceof JSONStreamAware) {\n    JSONStreamAware aware=(JSONStreamAware)object;\n    aware.writeJSONString(serializer.out);\n  }\n else   if (object instanceof JSONAware) {\n    JSONAware aware=(JSONAware)object;\n    out.write(aware.toJSONString());\n  }\n else   if (object instanceof JSONSerializable) {\n    JSONSerializable jsonSerializable=((JSONSerializable)object);\n    jsonSerializable.write(serializer,fieldName,fieldType);\n  }\n else   if (object instanceof Enumeration) {\n    Type elementType=null;\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (fieldType instanceof ParameterizedType) {\n        ParameterizedType param=(ParameterizedType)fieldType;\n        elementType=param.getActualTypeArguments()[0];\n      }\n    }\n    Enumeration<?> e=(Enumeration<?>)object;\n    SerialContext context=serializer.context;\n    serializer.setContext(context,object,fieldName,0);\n    try {\n      int i=0;\n      out.write('[');\n      while (e.hasMoreElements()) {\n        Object item=e.nextElement();\n        if (i++ != 0) {\n          out.write(',');\n        }\n        if (item == null) {\n          out.writeNull();\n          continue;\n        }\n        Class<?> clazz=item.getClass();\n        ObjectSerializer itemSerializer=serializer.config.get(clazz);\n        itemSerializer.write(serializer,item,i - 1,elementType);\n      }\n      out.write(']');\n    }\n  finally {\n      serializer.context=context;\n    }\n  }\n else {\n    serializer.write(object.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 560,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "out.write(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  }, {
    "nodeContext" : "','",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 124,
      "startColumnNumber" : 34,
      "endLineNumber" : 124,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 124,
        "endColumnNumber" : 38
      },
      "nodeContext" : "out.write(',')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 124,
        "endColumnNumber" : 39
      },
      "nodeContext" : "out.write(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 123,
        "startColumnNumber" : 34,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  out.write(',');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 123,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (i++ != 0) {\n  out.write(',');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 121,
        "startColumnNumber" : 44,
        "endLineNumber" : 136,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Object item=e.nextElement();\n  if (i++ != 0) {\n    out.write(',');\n  }\n  if (item == null) {\n    out.writeNull();\n    continue;\n  }\n  Class<?> clazz=item.getClass();\n  ObjectSerializer itemSerializer=serializer.config.get(clazz);\n  itemSerializer.write(serializer,item,i - 1,elementType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 136,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (e.hasMoreElements()) {\n  Object item=e.nextElement();\n  if (i++ != 0) {\n    out.write(',');\n  }\n  if (item == null) {\n    out.writeNull();\n    continue;\n  }\n  Class<?> clazz=item.getClass();\n  ObjectSerializer itemSerializer=serializer.config.get(clazz);\n  itemSerializer.write(serializer,item,i - 1,elementType);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int i=0;\n  out.write('[');\n  while (e.hasMoreElements()) {\n    Object item=e.nextElement();\n    if (i++ != 0) {\n      out.write(',');\n    }\n    if (item == null) {\n      out.writeNull();\n      continue;\n    }\n    Class<?> clazz=item.getClass();\n    ObjectSerializer itemSerializer=serializer.config.get(clazz);\n    itemSerializer.write(serializer,item,i - 1,elementType);\n  }\n  out.write(']');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  int i=0;\n  out.write('[');\n  while (e.hasMoreElements()) {\n    Object item=e.nextElement();\n    if (i++ != 0) {\n      out.write(',');\n    }\n    if (item == null) {\n      out.writeNull();\n      continue;\n    }\n    Class<?> clazz=item.getClass();\n    ObjectSerializer itemSerializer=serializer.config.get(clazz);\n    itemSerializer.write(serializer,item,i - 1,elementType);\n  }\n  out.write(']');\n}\n  finally {\n  serializer.context=context;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 104,
        "startColumnNumber" : 50,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 104,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1641,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1786,
        "startLineNumber" : 98,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 220,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1955,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 242,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2672,
        "startLineNumber" : 78,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 330,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2970,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 370,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3111,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 396,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3269,
        "startLineNumber" : 63,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 418,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3417,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof TimeZone) {\n  TimeZone timeZone=(TimeZone)object;\n  serializer.write(timeZone.getID());\n}\n else if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 440,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3550,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof Pattern) {\n  Pattern p=(Pattern)object;\n  serializer.write(p.pattern());\n}\n else if (object instanceof TimeZone) {\n  TimeZone timeZone=(TimeZone)object;\n  serializer.write(timeZone.getID());\n}\n else if (object instanceof Currency) {\n  Currency currency=(Currency)object;\n  serializer.write(currency.getCurrencyCode());\n}\n else if (object instanceof Class) {\n  Class<?> clazz=(Class<?>)object;\n  serializer.write(clazz.getName());\n}\n else if (object instanceof Character) {\n  Character value=(Character)object;\n  char c=value.charValue();\n  if (c == 0) {\n    serializer.write(\"\\u0000\");\n  }\n else {\n    serializer.write(value.toString());\n  }\n}\n else if (object instanceof SimpleDateFormat) {\n  String pattern=((SimpleDateFormat)object).toPattern();\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (object.getClass() != fieldType) {\n      out.write('{');\n      out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n      serializer.write(object.getClass().getName());\n      out.write(',');\n      out.writeFieldName(\"val\",false);\n      out.writeString(pattern);\n      out.write('}');\n      return;\n    }\n  }\n  out.writeString(pattern);\n}\n else if (object instanceof JSONStreamAware) {\n  JSONStreamAware aware=(JSONStreamAware)object;\n  aware.writeJSONString(serializer.out);\n}\n else if (object instanceof JSONAware) {\n  JSONAware aware=(JSONAware)object;\n  out.write(aware.toJSONString());\n}\n else if (object instanceof JSONSerializable) {\n  JSONSerializable jsonSerializable=((JSONSerializable)object);\n  jsonSerializable.write(serializer,fieldName,fieldType);\n}\n else if (object instanceof Enumeration) {\n  Type elementType=null;\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    if (fieldType instanceof ParameterizedType) {\n      ParameterizedType param=(ParameterizedType)fieldType;\n      elementType=param.getActualTypeArguments()[0];\n    }\n  }\n  Enumeration<?> e=(Enumeration<?>)object;\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    int i=0;\n    out.write('[');\n    while (e.hasMoreElements()) {\n      Object item=e.nextElement();\n      if (i++ != 0) {\n        out.write(',');\n      }\n      if (item == null) {\n        out.writeNull();\n        continue;\n      }\n      Class<?> clazz=item.getClass();\n      ObjectSerializer itemSerializer=serializer.config.get(clazz);\n      itemSerializer.write(serializer,item,i - 1,elementType);\n    }\n    out.write(']');\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n else {\n  serializer.write(object.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 462,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4212,
        "startLineNumber" : 38,
        "startColumnNumber" : 117,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if (fieldType == char.class || fieldType == Character.class) {\n      serializer.write(\"\");\n    }\n else {\n      if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n        Class<?> fieldClass=TypeUtils.getClass(fieldType);\n        if (Enumeration.class.isAssignableFrom(fieldClass)) {\n          out.write(\"[]\");\n          return;\n        }\n      }\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Pattern) {\n    Pattern p=(Pattern)object;\n    serializer.write(p.pattern());\n  }\n else   if (object instanceof TimeZone) {\n    TimeZone timeZone=(TimeZone)object;\n    serializer.write(timeZone.getID());\n  }\n else   if (object instanceof Currency) {\n    Currency currency=(Currency)object;\n    serializer.write(currency.getCurrencyCode());\n  }\n else   if (object instanceof Class) {\n    Class<?> clazz=(Class<?>)object;\n    serializer.write(clazz.getName());\n  }\n else   if (object instanceof Character) {\n    Character value=(Character)object;\n    char c=value.charValue();\n    if (c == 0) {\n      serializer.write(\"\\u0000\");\n    }\n else {\n      serializer.write(value.toString());\n    }\n  }\n else   if (object instanceof SimpleDateFormat) {\n    String pattern=((SimpleDateFormat)object).toPattern();\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (object.getClass() != fieldType) {\n        out.write('{');\n        out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n        serializer.write(object.getClass().getName());\n        out.write(',');\n        out.writeFieldName(\"val\",false);\n        out.writeString(pattern);\n        out.write('}');\n        return;\n      }\n    }\n    out.writeString(pattern);\n  }\n else   if (object instanceof JSONStreamAware) {\n    JSONStreamAware aware=(JSONStreamAware)object;\n    aware.writeJSONString(serializer.out);\n  }\n else   if (object instanceof JSONAware) {\n    JSONAware aware=(JSONAware)object;\n    out.write(aware.toJSONString());\n  }\n else   if (object instanceof JSONSerializable) {\n    JSONSerializable jsonSerializable=((JSONSerializable)object);\n    jsonSerializable.write(serializer,fieldName,fieldType);\n  }\n else   if (object instanceof Enumeration) {\n    Type elementType=null;\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (fieldType instanceof ParameterizedType) {\n        ParameterizedType param=(ParameterizedType)fieldType;\n        elementType=param.getActualTypeArguments()[0];\n      }\n    }\n    Enumeration<?> e=(Enumeration<?>)object;\n    SerialContext context=serializer.context;\n    serializer.setContext(context,object,fieldName,0);\n    try {\n      int i=0;\n      out.write('[');\n      while (e.hasMoreElements()) {\n        Object item=e.nextElement();\n        if (i++ != 0) {\n          out.write(',');\n        }\n        if (item == null) {\n          out.writeNull();\n          continue;\n        }\n        Class<?> clazz=item.getClass();\n        ObjectSerializer itemSerializer=serializer.config.get(clazz);\n        itemSerializer.write(serializer,item,i - 1,elementType);\n      }\n      out.write(']');\n    }\n  finally {\n      serializer.context=context;\n    }\n  }\n else {\n    serializer.write(object.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 538,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4325,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if (fieldType == char.class || fieldType == Character.class) {\n      serializer.write(\"\");\n    }\n else {\n      if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n        Class<?> fieldClass=TypeUtils.getClass(fieldType);\n        if (Enumeration.class.isAssignableFrom(fieldClass)) {\n          out.write(\"[]\");\n          return;\n        }\n      }\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Pattern) {\n    Pattern p=(Pattern)object;\n    serializer.write(p.pattern());\n  }\n else   if (object instanceof TimeZone) {\n    TimeZone timeZone=(TimeZone)object;\n    serializer.write(timeZone.getID());\n  }\n else   if (object instanceof Currency) {\n    Currency currency=(Currency)object;\n    serializer.write(currency.getCurrencyCode());\n  }\n else   if (object instanceof Class) {\n    Class<?> clazz=(Class<?>)object;\n    serializer.write(clazz.getName());\n  }\n else   if (object instanceof Character) {\n    Character value=(Character)object;\n    char c=value.charValue();\n    if (c == 0) {\n      serializer.write(\"\\u0000\");\n    }\n else {\n      serializer.write(value.toString());\n    }\n  }\n else   if (object instanceof SimpleDateFormat) {\n    String pattern=((SimpleDateFormat)object).toPattern();\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (object.getClass() != fieldType) {\n        out.write('{');\n        out.writeFieldName(JSON.DEFAULT_TYPE_KEY,false);\n        serializer.write(object.getClass().getName());\n        out.write(',');\n        out.writeFieldName(\"val\",false);\n        out.writeString(pattern);\n        out.write('}');\n        return;\n      }\n    }\n    out.writeString(pattern);\n  }\n else   if (object instanceof JSONStreamAware) {\n    JSONStreamAware aware=(JSONStreamAware)object;\n    aware.writeJSONString(serializer.out);\n  }\n else   if (object instanceof JSONAware) {\n    JSONAware aware=(JSONAware)object;\n    out.write(aware.toJSONString());\n  }\n else   if (object instanceof JSONSerializable) {\n    JSONSerializable jsonSerializable=((JSONSerializable)object);\n    jsonSerializable.write(serializer,fieldName,fieldType);\n  }\n else   if (object instanceof Enumeration) {\n    Type elementType=null;\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      if (fieldType instanceof ParameterizedType) {\n        ParameterizedType param=(ParameterizedType)fieldType;\n        elementType=param.getActualTypeArguments()[0];\n      }\n    }\n    Enumeration<?> e=(Enumeration<?>)object;\n    SerialContext context=serializer.context;\n    serializer.setContext(context,object,fieldName,0);\n    try {\n      int i=0;\n      out.write('[');\n      while (e.hasMoreElements()) {\n        Object item=e.nextElement();\n        if (i++ != 0) {\n          out.write(',');\n        }\n        if (item == null) {\n          out.writeNull();\n          continue;\n        }\n        Class<?> clazz=item.getClass();\n        ObjectSerializer itemSerializer=serializer.config.get(clazz);\n        itemSerializer.write(serializer,item,i - 1,elementType);\n      }\n      out.write(']');\n    }\n  finally {\n      serializer.context=context;\n    }\n  }\n else {\n    serializer.write(object.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 560,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 124,
        "endColumnNumber" : 39
      },
      "nodeContext" : "out.write(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 86,
    "startColumnNumber" : 30,
    "endLineNumber" : 86,
    "endColumnNumber" : 33
  }, {
    "charLength" : 3,
    "startLineNumber" : 124,
    "startColumnNumber" : 34,
    "endLineNumber" : 124,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 13
  } ]
}