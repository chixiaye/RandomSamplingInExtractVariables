{
  "id" : 259,
  "expression" : "stack.isEmpty()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/stack/StackTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stack.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 24,
      "startColumnNumber" : 17,
      "endLineNumber" : 24,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 24,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(stack.isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 24,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(stack.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 23,
        "startColumnNumber" : 31,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(stack.isEmpty());\n  assertEquals(stack.size(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Stack stack : stacks) {\n  assertTrue(stack.isEmpty());\n  assertEquals(stack.size(),0);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 22,
        "startColumnNumber" : 31,
        "endLineNumber" : 27,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  Stack stack : stacks) {\n    assertTrue(stack.isEmpty());\n    assertEquals(stack.size(),0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEmptyStack(){\n  for (  Stack stack : stacks) {\n    assertTrue(stack.isEmpty());\n    assertEquals(stack.size(),0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 24,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(stack.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 24,
    "startColumnNumber" : 17,
    "endLineNumber" : 24,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}