{
  "id" : 404,
  "expression" : "false",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/types/PrimitiveDataTypeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 116,
      "startColumnNumber" : 30,
      "endLineNumber" : 116,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Assert.assertTrue(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertTrue(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 115,
        "startColumnNumber" : 30,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertTrue(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 115,
        "startColumnNumber" : 10,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Assert.assertTrue(false);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  double0.write(mOut);\n  double2.write(mOut);\n  double3.write(mOut);\n  DoubleValue double1n=new DoubleValue();\n  DoubleValue double2n=new DoubleValue();\n  DoubleValue double3n=new DoubleValue();\n  double1n.read(mIn);\n  double2n.read(mIn);\n  double3n.read(mIn);\n  Assert.assertEquals(double0.compareTo(double1n),0);\n  Assert.assertEquals(double0.getValue(),double1n.getValue(),0.0001);\n  Assert.assertEquals(double2.compareTo(double2n),0);\n  Assert.assertEquals(double2.getValue(),double2n.getValue(),0.0001);\n  Assert.assertEquals(double3.compareTo(double3n),0);\n  Assert.assertEquals(double3.getValue(),double3n.getValue(),0.0001);\n}\n catch (Exception e) {\n  Assert.assertTrue(false);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 127,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1525,
        "startLineNumber" : 86,
        "startColumnNumber" : 34,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DoubleValue double0=new DoubleValue(10.2);\n  Assert.assertEquals(10.2,double0.getValue(),0.0001);\n  DoubleValue double1=new DoubleValue(10.2);\n  DoubleValue double2=new DoubleValue(-10.5);\n  DoubleValue double3=new DoubleValue(20.2);\n  Assert.assertEquals(double0.compareTo(double0),0);\n  Assert.assertEquals(double0.compareTo(double1),0);\n  Assert.assertEquals(double0.compareTo(double2),1);\n  Assert.assertEquals(double0.compareTo(double3),-1);\n  try {\n    double0.write(mOut);\n    double2.write(mOut);\n    double3.write(mOut);\n    DoubleValue double1n=new DoubleValue();\n    DoubleValue double2n=new DoubleValue();\n    DoubleValue double3n=new DoubleValue();\n    double1n.read(mIn);\n    double2n.read(mIn);\n    double3n.read(mIn);\n    Assert.assertEquals(double0.compareTo(double1n),0);\n    Assert.assertEquals(double0.getValue(),double1n.getValue(),0.0001);\n    Assert.assertEquals(double2.compareTo(double2n),0);\n    Assert.assertEquals(double2.getValue(),double2n.getValue(),0.0001);\n    Assert.assertEquals(double3.compareTo(double3n),0);\n    Assert.assertEquals(double3.getValue(),double3n.getValue(),0.0001);\n  }\n catch (  Exception e) {\n    Assert.assertTrue(false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDoubleValue(){\n  DoubleValue double0=new DoubleValue(10.2);\n  Assert.assertEquals(10.2,double0.getValue(),0.0001);\n  DoubleValue double1=new DoubleValue(10.2);\n  DoubleValue double2=new DoubleValue(-10.5);\n  DoubleValue double3=new DoubleValue(20.2);\n  Assert.assertEquals(double0.compareTo(double0),0);\n  Assert.assertEquals(double0.compareTo(double1),0);\n  Assert.assertEquals(double0.compareTo(double2),1);\n  Assert.assertEquals(double0.compareTo(double3),-1);\n  try {\n    double0.write(mOut);\n    double2.write(mOut);\n    double3.write(mOut);\n    DoubleValue double1n=new DoubleValue();\n    DoubleValue double2n=new DoubleValue();\n    DoubleValue double3n=new DoubleValue();\n    double1n.read(mIn);\n    double2n.read(mIn);\n    double3n.read(mIn);\n    Assert.assertEquals(double0.compareTo(double1n),0);\n    Assert.assertEquals(double0.getValue(),double1n.getValue(),0.0001);\n    Assert.assertEquals(double2.compareTo(double2n),0);\n    Assert.assertEquals(double2.getValue(),double2n.getValue(),0.0001);\n    Assert.assertEquals(double3.compareTo(double3n),0);\n    Assert.assertEquals(double3.getValue(),double3n.getValue(),0.0001);\n  }\n catch (  Exception e) {\n    Assert.assertTrue(false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertTrue(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 116,
    "startColumnNumber" : 30,
    "endLineNumber" : 116,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}