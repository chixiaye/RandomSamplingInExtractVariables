{
  "id" : 378,
  "expression" : "memoryCache",
  "projectName" : "bumptech@glide",
  "commitID" : "e0b93c361655b8a06621d4257f034c3cc9a94e8c",
  "filePath" : "library/src/main/java/com/bumptech/glide/Glide.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "memoryCache",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 164,
      "startColumnNumber" : 23,
      "endLineNumber" : 164,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 34
      },
      "nodeContext" : "this.memoryCache=memoryCache",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.memoryCache=memoryCache;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3842,
        "startLineNumber" : 162,
        "startColumnNumber" : 33,
        "endLineNumber" : 221,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.bitmapPool=bitmapPool;\n  this.memoryCache=memoryCache;\n  bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n  Resources resources=context.getResources();\n  registry=new Registry(context).register(InputStream.class,new StreamEncoder()).append(InputStream.class,Bitmap.class,new StreamBitmapDecoder(bitmapPool)).append(ParcelFileDescriptor.class,Bitmap.class,new FileDescriptorBitmapDecoder(bitmapPool)).register(Bitmap.class,new BitmapEncoder()).append(InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new StreamBitmapDecoder(bitmapPool))).append(ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new FileDescriptorBitmapDecoder(bitmapPool))).register(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,new BitmapEncoder())).prepend(InputStream.class,GifDrawable.class,new GifResourceDecoder(context,bitmapPool)).register(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,new UnitModelLoader.Factory<GifDecoder>()).append(GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,new UnitModelLoader.Factory<File>()).register(new InputStreamRewinder.Factory()).append(int.class,InputStream.class,new ResourceLoader.StreamFactory()).append(int.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(Integer.class,InputStream.class,new ResourceLoader.StreamFactory()).append(Integer.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new HttpUriLoader.Factory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory()).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory()).append(Uri.class,InputStream.class,new UriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources,bitmapPool)).register(Bitmap.class,byte[].class,new BitmapBytesTranscoder()).register(GifDrawable.class,byte[].class,new GifDrawableBytesTranscoder());\n  ImageViewTargetFactory imageViewTargetFactory=new ImageViewTargetFactory();\n  RequestOptions options=new RequestOptions().format(decodeFormat);\n  glideContext=new GlideContext(context,registry,imageViewTargetFactory,options,engine,this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 509,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4014,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) Glide(Engine engine,MemoryCache memoryCache,BitmapPool bitmapPool,Context context,DecodeFormat decodeFormat){\n  this.bitmapPool=bitmapPool;\n  this.memoryCache=memoryCache;\n  bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n  Resources resources=context.getResources();\n  registry=new Registry(context).register(InputStream.class,new StreamEncoder()).append(InputStream.class,Bitmap.class,new StreamBitmapDecoder(bitmapPool)).append(ParcelFileDescriptor.class,Bitmap.class,new FileDescriptorBitmapDecoder(bitmapPool)).register(Bitmap.class,new BitmapEncoder()).append(InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new StreamBitmapDecoder(bitmapPool))).append(ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new FileDescriptorBitmapDecoder(bitmapPool))).register(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,new BitmapEncoder())).prepend(InputStream.class,GifDrawable.class,new GifResourceDecoder(context,bitmapPool)).register(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,new UnitModelLoader.Factory<GifDecoder>()).append(GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,new UnitModelLoader.Factory<File>()).register(new InputStreamRewinder.Factory()).append(int.class,InputStream.class,new ResourceLoader.StreamFactory()).append(int.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(Integer.class,InputStream.class,new ResourceLoader.StreamFactory()).append(Integer.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new HttpUriLoader.Factory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory()).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory()).append(Uri.class,InputStream.class,new UriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources,bitmapPool)).register(Bitmap.class,byte[].class,new BitmapBytesTranscoder()).register(GifDrawable.class,byte[].class,new GifDrawableBytesTranscoder());\n  ImageViewTargetFactory imageViewTargetFactory=new ImageViewTargetFactory();\n  RequestOptions options=new RequestOptions().format(decodeFormat);\n  glideContext=new GlideContext(context,registry,imageViewTargetFactory,options,engine,this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 538,
      "astHeight" : 42
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.memoryCache=memoryCache;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.load.engine.cache.MemoryCache"
  }, {
    "nodeContext" : "memoryCache",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 165,
      "startColumnNumber" : 42,
      "endLineNumber" : 165,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 165,
        "startColumnNumber" : 22,
        "endLineNumber" : 165,
        "endColumnNumber" : 80
      },
      "nodeContext" : "new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 80
      },
      "nodeContext" : "bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 81
      },
      "nodeContext" : "bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3842,
        "startLineNumber" : 162,
        "startColumnNumber" : 33,
        "endLineNumber" : 221,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.bitmapPool=bitmapPool;\n  this.memoryCache=memoryCache;\n  bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n  Resources resources=context.getResources();\n  registry=new Registry(context).register(InputStream.class,new StreamEncoder()).append(InputStream.class,Bitmap.class,new StreamBitmapDecoder(bitmapPool)).append(ParcelFileDescriptor.class,Bitmap.class,new FileDescriptorBitmapDecoder(bitmapPool)).register(Bitmap.class,new BitmapEncoder()).append(InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new StreamBitmapDecoder(bitmapPool))).append(ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new FileDescriptorBitmapDecoder(bitmapPool))).register(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,new BitmapEncoder())).prepend(InputStream.class,GifDrawable.class,new GifResourceDecoder(context,bitmapPool)).register(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,new UnitModelLoader.Factory<GifDecoder>()).append(GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,new UnitModelLoader.Factory<File>()).register(new InputStreamRewinder.Factory()).append(int.class,InputStream.class,new ResourceLoader.StreamFactory()).append(int.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(Integer.class,InputStream.class,new ResourceLoader.StreamFactory()).append(Integer.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new HttpUriLoader.Factory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory()).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory()).append(Uri.class,InputStream.class,new UriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources,bitmapPool)).register(Bitmap.class,byte[].class,new BitmapBytesTranscoder()).register(GifDrawable.class,byte[].class,new GifDrawableBytesTranscoder());\n  ImageViewTargetFactory imageViewTargetFactory=new ImageViewTargetFactory();\n  RequestOptions options=new RequestOptions().format(decodeFormat);\n  glideContext=new GlideContext(context,registry,imageViewTargetFactory,options,engine,this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 509,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4014,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH) Glide(Engine engine,MemoryCache memoryCache,BitmapPool bitmapPool,Context context,DecodeFormat decodeFormat){\n  this.bitmapPool=bitmapPool;\n  this.memoryCache=memoryCache;\n  bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n  Resources resources=context.getResources();\n  registry=new Registry(context).register(InputStream.class,new StreamEncoder()).append(InputStream.class,Bitmap.class,new StreamBitmapDecoder(bitmapPool)).append(ParcelFileDescriptor.class,Bitmap.class,new FileDescriptorBitmapDecoder(bitmapPool)).register(Bitmap.class,new BitmapEncoder()).append(InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new StreamBitmapDecoder(bitmapPool))).append(ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,bitmapPool,new FileDescriptorBitmapDecoder(bitmapPool))).register(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,new BitmapEncoder())).prepend(InputStream.class,GifDrawable.class,new GifResourceDecoder(context,bitmapPool)).register(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,new UnitModelLoader.Factory<GifDecoder>()).append(GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,new UnitModelLoader.Factory<File>()).register(new InputStreamRewinder.Factory()).append(int.class,InputStream.class,new ResourceLoader.StreamFactory()).append(int.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(Integer.class,InputStream.class,new ResourceLoader.StreamFactory()).append(Integer.class,ParcelFileDescriptor.class,new ResourceLoader.FileDescriptorFactory()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new HttpUriLoader.Factory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory()).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory()).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory()).append(Uri.class,InputStream.class,new UriLoader.StreamFactory()).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources,bitmapPool)).register(Bitmap.class,byte[].class,new BitmapBytesTranscoder()).register(GifDrawable.class,byte[].class,new GifDrawableBytesTranscoder());\n  ImageViewTargetFactory imageViewTargetFactory=new ImageViewTargetFactory();\n  RequestOptions options=new RequestOptions().format(decodeFormat);\n  glideContext=new GlideContext(context,registry,imageViewTargetFactory,options,engine,this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 538,
      "astHeight" : 42
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 81
      },
      "nodeContext" : "bitmapPreFiller=new BitmapPreFiller(memoryCache,bitmapPool,decodeFormat);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.load.engine.cache.MemoryCache"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 164,
    "startColumnNumber" : 23,
    "endLineNumber" : 164,
    "endColumnNumber" : 34
  }, {
    "charLength" : 11,
    "startLineNumber" : 165,
    "startColumnNumber" : 42,
    "endLineNumber" : 165,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}