{
  "id" : 96,
  "expression" : "sources[0].read(buffer)",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/us/shandian/giga/postprocessing/TtmlConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sources[0].read(buffer)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 41,
      "startColumnNumber" : 27,
      "endLineNumber" : 41,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 41,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 50
      },
      "nodeContext" : "read=sources[0].read(buffer)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(read=sources[0].read(buffer))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(read=sources[0].read(buffer)) > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while ((read=sources[0].read(buffer)) > 0) {\n  out.write(buffer,0,read);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] buffer=new byte[8 * 1024];\n  int read;\n  while ((read=sources[0].read(buffer)) > 0) {\n    out.write(buffer,0,read);\n  }\n  return OK_RESULT;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (format.equals(\"srt\")) {\n  byte[] buffer=new byte[8 * 1024];\n  int read;\n  while ((read=sources[0].read(buffer)) > 0) {\n    out.write(buffer,0,read);\n  }\n  return OK_RESULT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (format == null || format.equals(\"ttml\")) {\n  SrtFromTtmlWriter writer=new SrtFromTtmlWriter(out,ignoreEmptyFrames);\n  try {\n    writer.build(sources[0]);\n  }\n catch (  Exception err) {\n    Log.e(TAG,\"subtitle parse failed\",err);\n    return err instanceof IOException ? 1 : 8;\n  }\n  return OK_RESULT;\n}\n else if (format.equals(\"srt\")) {\n  byte[] buffer=new byte[8 * 1024];\n  int read;\n  while ((read=sources[0].read(buffer)) > 0) {\n    out.write(buffer,0,read);\n  }\n  return OK_RESULT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1005,
        "startLineNumber" : 22,
        "startColumnNumber" : 76,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String format=getArgumentAt(0,null);\n  boolean ignoreEmptyFrames=getArgumentAt(1,\"true\").equals(\"true\");\n  if (format == null || format.equals(\"ttml\")) {\n    SrtFromTtmlWriter writer=new SrtFromTtmlWriter(out,ignoreEmptyFrames);\n    try {\n      writer.build(sources[0]);\n    }\n catch (    Exception err) {\n      Log.e(TAG,\"subtitle parse failed\",err);\n      return err instanceof IOException ? 1 : 8;\n    }\n    return OK_RESULT;\n  }\n else   if (format.equals(\"srt\")) {\n    byte[] buffer=new byte[8 * 1024];\n    int read;\n    while ((read=sources[0].read(buffer)) > 0) {\n      out.write(buffer,0,read);\n    }\n    return OK_RESULT;\n  }\n  throw new UnsupportedOperationException(\"Can't convert this subtitle, unimplemented format: \" + format);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override int process(SharpStream out,SharpStream... sources) throws IOException {\n  String format=getArgumentAt(0,null);\n  boolean ignoreEmptyFrames=getArgumentAt(1,\"true\").equals(\"true\");\n  if (format == null || format.equals(\"ttml\")) {\n    SrtFromTtmlWriter writer=new SrtFromTtmlWriter(out,ignoreEmptyFrames);\n    try {\n      writer.build(sources[0]);\n    }\n catch (    Exception err) {\n      Log.e(TAG,\"subtitle parse failed\",err);\n      return err instanceof IOException ? 1 : 8;\n    }\n    return OK_RESULT;\n  }\n else   if (format.equals(\"srt\")) {\n    byte[] buffer=new byte[8 * 1024];\n    int read;\n    while ((read=sources[0].read(buffer)) > 0) {\n      out.write(buffer,0,read);\n    }\n    return OK_RESULT;\n  }\n  throw new UnsupportedOperationException(\"Can't convert this subtitle, unimplemented format: \" + format);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(read=sources[0].read(buffer)) > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 41,
    "startColumnNumber" : 27,
    "endLineNumber" : 41,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}