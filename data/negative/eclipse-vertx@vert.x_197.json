{
  "id" : 197,
  "expression" : "ws.isRejected()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/http/impl/HttpServerImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ws.isRejected()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 743,
      "startColumnNumber" : 15,
      "endLineNumber" : 743,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 743,
        "startColumnNumber" : 14,
        "endLineNumber" : 743,
        "endColumnNumber" : 30
      },
      "nodeContext" : "!ws.isRejected()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 743,
        "startColumnNumber" : 10,
        "endLineNumber" : 752,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!ws.isRejected()) {\n  ChannelHandler handler=ctx.pipeline().get(HttpChunkContentCompressor.class);\n  if (handler != null) {\n    ctx.pipeline().remove(handler);\n  }\n  ws.connectNow();\n}\n else {\n  ch.writeAndFlush(new DefaultFullHttpResponse(HTTP_1_1,BAD_GATEWAY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 714,
        "startColumnNumber" : 46,
        "endLineNumber" : 753,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  URI theURI;\n  try {\n    theURI=new URI(request.getUri());\n  }\n catch (  URISyntaxException e2) {\n    throw new IllegalArgumentException(\"Invalid uri \" + request.getUri());\n  }\n  ServerConnection wsConn=new ServerConnection(vertx,HttpServerImpl.this,ch,wsHandler.context,serverOrigin,shake,metrics);\n  wsConn.metric(metrics.connected(wsConn.remoteAddress(),wsConn.remoteName()));\n  wsConn.wsHandler(wsHandler.handler);\n  Runnable connectRunnable=() -> {\n    connectionMap.put(ch,wsConn);\n    try {\n      shake.handshake(ch,request);\n    }\n catch (    WebSocketHandshakeException e) {\n      wsConn.handleException(e);\n    }\ncatch (    Exception e) {\n      log.error(\"Failed to generate shake response\",e);\n    }\n  }\n;\n  ServerWebSocketImpl ws=new ServerWebSocketImpl(vertx,theURI.toString(),theURI.getPath(),theURI.getQuery(),new HeadersAdaptor(request.headers()),wsConn,shake.version() != WebSocketVersion.V00,connectRunnable,options.getMaxWebsocketFrameSize());\n  ws.setMetric(metrics.connected(wsConn.metric(),ws));\n  wsConn.handleWebsocketConnect(ws);\n  if (!ws.isRejected()) {\n    ChannelHandler handler=ctx.pipeline().get(HttpChunkContentCompressor.class);\n    if (handler != null) {\n      ctx.pipeline().remove(handler);\n    }\n    ws.connectNow();\n  }\n else {\n    ch.writeAndFlush(new DefaultFullHttpResponse(HTTP_1_1,BAD_GATEWAY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 714,
        "startColumnNumber" : 40,
        "endLineNumber" : 753,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  URI theURI;\n  try {\n    theURI=new URI(request.getUri());\n  }\n catch (  URISyntaxException e2) {\n    throw new IllegalArgumentException(\"Invalid uri \" + request.getUri());\n  }\n  ServerConnection wsConn=new ServerConnection(vertx,HttpServerImpl.this,ch,wsHandler.context,serverOrigin,shake,metrics);\n  wsConn.metric(metrics.connected(wsConn.remoteAddress(),wsConn.remoteName()));\n  wsConn.wsHandler(wsHandler.handler);\n  Runnable connectRunnable=() -> {\n    connectionMap.put(ch,wsConn);\n    try {\n      shake.handshake(ch,request);\n    }\n catch (    WebSocketHandshakeException e) {\n      wsConn.handleException(e);\n    }\ncatch (    Exception e) {\n      log.error(\"Failed to generate shake response\",e);\n    }\n  }\n;\n  ServerWebSocketImpl ws=new ServerWebSocketImpl(vertx,theURI.toString(),theURI.getPath(),theURI.getQuery(),new HeadersAdaptor(request.headers()),wsConn,shake.version() != WebSocketVersion.V00,connectRunnable,options.getMaxWebsocketFrameSize());\n  ws.setMetric(metrics.connected(wsConn.metric(),ws));\n  wsConn.handleWebsocketConnect(ws);\n  if (!ws.isRejected()) {\n    ChannelHandler handler=ctx.pipeline().get(HttpChunkContentCompressor.class);\n    if (handler != null) {\n      ctx.pipeline().remove(handler);\n    }\n    ws.connectNow();\n  }\n else {\n    ch.writeAndFlush(new DefaultFullHttpResponse(HTTP_1_1,BAD_GATEWAY));\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 743,
        "startColumnNumber" : 14,
        "endLineNumber" : 743,
        "endColumnNumber" : 30
      },
      "nodeContext" : "!ws.isRejected()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 743,
    "startColumnNumber" : 15,
    "endLineNumber" : 743,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}