{
  "id" : 125,
  "expression" : "null",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "cf35da2613efdefd97c6267d80054b85a38af462",
  "filePath" : "src/main/java/com/google/devtools/build/lib/skyframe/RegisteredToolchainsFunction.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 62,
      "startColumnNumber" : 13,
      "endLineNumber" : 62,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 61,
        "startColumnNumber" : 29,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (env.valuesMissing()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 75,
      "startColumnNumber" : 28,
      "endLineNumber" : 75,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 32
      },
      "nodeContext" : "bzlmodToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bzlmodToolchains == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 32
      },
      "nodeContext" : "bzlmodToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 13,
      "endLineNumber" : 76,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bzlmodToolchains == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 82,
      "startColumnNumber" : 31,
      "endLineNumber" : 82,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 35
      },
      "nodeContext" : "workspaceToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (workspaceToolchains == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 35
      },
      "nodeContext" : "workspaceToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 13,
      "endLineNumber" : 83,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 82,
        "startColumnNumber" : 37,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (workspaceToolchains == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 15,
      "endLineNumber" : 96,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 95,
        "startColumnNumber" : 31,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (env.valuesMissing()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n  if (env.valuesMissing()) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n  if (env.valuesMissing()) {\n    return null;\n  }\n}\n catch (TargetPatternUtil.InvalidTargetPatternException e) {\n  throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 107,
      "startColumnNumber" : 13,
      "endLineNumber" : 107,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 106,
        "startColumnNumber" : 29,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (env.valuesMissing()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 62,
    "startColumnNumber" : 13,
    "endLineNumber" : 62,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 75,
    "startColumnNumber" : 28,
    "endLineNumber" : 75,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 13,
    "endLineNumber" : 76,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 82,
    "startColumnNumber" : 31,
    "endLineNumber" : 82,
    "endColumnNumber" : 35
  }, {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 13,
    "endLineNumber" : 83,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 15,
    "endLineNumber" : 96,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 107,
    "startColumnNumber" : 13,
    "endLineNumber" : 107,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}