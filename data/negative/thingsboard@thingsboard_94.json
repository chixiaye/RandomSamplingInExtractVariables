{
  "id" : 94,
  "expression" : "bd.stripTrailingZeros()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "b59c846885764bded676deab7949365728ad74c4",
  "filePath" : "common/transport/transport-api/src/main/java/org/thingsboard/server/common/transport/adaptor/JsonConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bd.stripTrailingZeros()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 234,
      "startColumnNumber" : 16,
      "endLineNumber" : 234,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 234,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 47
      },
      "nodeContext" : "bd.stripTrailingZeros().scale()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 234,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 52
      },
      "nodeContext" : "bd.stripTrailingZeros().scale() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 234,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (bd.stripTrailingZeros().scale() <= 0) {\n  try {\n    return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n  }\n catch (  ArithmeticException e) {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n  }\n}\n else {\n  return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 688,
        "startLineNumber" : 231,
        "startColumnNumber" : 72,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  var bd=new BigDecimal(valueAsString);\n  if (bd.stripTrailingZeros().scale() <= 0) {\n    try {\n      return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n    }\n catch (    ArithmeticException e) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n  }\n else {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueAsString.contains(\"e\") || valueAsString.contains(\"E\")) {\n  var bd=new BigDecimal(valueAsString);\n  if (bd.stripTrailingZeros().scale() <= 0) {\n    try {\n      return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n    }\n catch (    ArithmeticException e) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n  }\n else {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n  }\n}\n else if (valueAsString.contains(\".\")) {\n  return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(value.getAsDouble()).build();\n}\n else {\n  try {\n    long longValue=Long.parseLong(value.getAsString());\n    return builder.setType(KeyValueType.LONG_V).setLongV(longValue).build();\n  }\n catch (  NumberFormatException e) {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(new BigDecimal(valueAsString).doubleValue()).build();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1573,
        "startLineNumber" : 228,
        "startColumnNumber" : 92,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String valueAsString=value.getAsString();\n  KeyValueProto.Builder builder=KeyValueProto.newBuilder().setKey(key);\n  if (valueAsString.contains(\"e\") || valueAsString.contains(\"E\")) {\n    var bd=new BigDecimal(valueAsString);\n    if (bd.stripTrailingZeros().scale() <= 0) {\n      try {\n        return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n      }\n catch (      ArithmeticException e) {\n        return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n      }\n    }\n else {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n  }\n else   if (valueAsString.contains(\".\")) {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(value.getAsDouble()).build();\n  }\n else {\n    try {\n      long longValue=Long.parseLong(value.getAsString());\n      return builder.setType(KeyValueType.LONG_V).setLongV(longValue).build();\n    }\n catch (    NumberFormatException e) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(new BigDecimal(valueAsString).doubleValue()).build();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static KeyValueProto buildNumericKeyValueProto(JsonPrimitive value,String key){\n  String valueAsString=value.getAsString();\n  KeyValueProto.Builder builder=KeyValueProto.newBuilder().setKey(key);\n  if (valueAsString.contains(\"e\") || valueAsString.contains(\"E\")) {\n    var bd=new BigDecimal(valueAsString);\n    if (bd.stripTrailingZeros().scale() <= 0) {\n      try {\n        return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n      }\n catch (      ArithmeticException e) {\n        return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n      }\n    }\n else {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n  }\n else   if (valueAsString.contains(\".\")) {\n    return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(value.getAsDouble()).build();\n  }\n else {\n    try {\n      long longValue=Long.parseLong(value.getAsString());\n      return builder.setType(KeyValueType.LONG_V).setLongV(longValue).build();\n    }\n catch (    NumberFormatException e) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(new BigDecimal(valueAsString).doubleValue()).build();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 234,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 52
      },
      "nodeContext" : "bd.stripTrailingZeros().scale() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 234,
    "startColumnNumber" : 16,
    "endLineNumber" : 234,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}