{
  "id" : 167,
  "expression" : "realmTypes.getFieldObjectId()",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "realmTypes.getFieldObjectId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 135,
      "startColumnNumber" : 19,
      "endLineNumber" : 135,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertNull(realmTypes.getFieldObjectId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertNull(realmTypes.getFieldObjectId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2576,
        "startLineNumber" : 90,
        "startColumnNumber" : 25,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AllJavaTypes obj=new AllJavaTypes();\n  obj.setFieldIgnored(\"cookie\");\n  obj.setFieldId(42);\n  obj.setFieldLong(42);\n  obj.setFieldString(\"obj1\");\n  RealmList<AllJavaTypes> list=new RealmList<AllJavaTypes>();\n  list.add(obj);\n  Date date=new Date();\n  AllJavaTypes allTypes=new AllJavaTypes();\n  allTypes.setFieldString(\"String\");\n  allTypes.setFieldId(1L);\n  allTypes.setFieldLong(1L);\n  allTypes.setFieldFloat(1F);\n  allTypes.setFieldDouble(1D);\n  allTypes.setFieldBoolean(true);\n  allTypes.setFieldDate(date);\n  allTypes.setFieldBinary(new byte[]{1,2,3});\n  allTypes.setFieldObject(obj);\n  allTypes.setFieldList(list);\n  realm.beginTransaction();\n  realm.insert(allTypes);\n  realm.commitTransaction();\n  AllJavaTypes realmTypes=realm.where(AllJavaTypes.class).findFirst();\n  assertNotNull(realmTypes);\n  assertNotSame(allTypes,realmTypes);\n  assertEquals(allTypes.getFieldString(),realmTypes.getFieldString());\n  assertEquals(allTypes.getFieldLong(),realmTypes.getFieldLong());\n  assertEquals(allTypes.getFieldFloat(),realmTypes.getFieldFloat(),0);\n  assertEquals(allTypes.getFieldDouble(),realmTypes.getFieldDouble(),0);\n  assertEquals(allTypes.isFieldBoolean(),realmTypes.isFieldBoolean());\n  assertEquals(allTypes.getFieldDate(),realmTypes.getFieldDate());\n  assertArrayEquals(allTypes.getFieldBinary(),realmTypes.getFieldBinary());\n  assertEquals(allTypes.getFieldObject().getFieldString(),obj.getFieldString());\n  assertEquals(list.size(),realmTypes.getFieldList().size());\n  assertEquals(list.get(0).getFieldString(),realmTypes.getFieldList().get(0).getFieldString());\n  assertEquals(list.get(0).getFieldLong(),realmTypes.getFieldList().get(0).getFieldLong());\n  assertNull(realmTypes.getFieldList().get(0).getFieldIgnored());\n  assertNull(realmTypes.getFieldDecimal128());\n  assertNull(realmTypes.getFieldObjectId());\n  assertNull(realmTypes.getFieldUUID());\n  assertEquals(0,realmTypes.getFieldDecimal128List().size());\n  assertEquals(0,realmTypes.getFieldObjectIdList().size());\n  assertEquals(0,realmTypes.getFieldUUIDList().size());\n  assertEquals(2,realm.where(AllJavaTypes.class).findAll().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void insert(){\n  AllJavaTypes obj=new AllJavaTypes();\n  obj.setFieldIgnored(\"cookie\");\n  obj.setFieldId(42);\n  obj.setFieldLong(42);\n  obj.setFieldString(\"obj1\");\n  RealmList<AllJavaTypes> list=new RealmList<AllJavaTypes>();\n  list.add(obj);\n  Date date=new Date();\n  AllJavaTypes allTypes=new AllJavaTypes();\n  allTypes.setFieldString(\"String\");\n  allTypes.setFieldId(1L);\n  allTypes.setFieldLong(1L);\n  allTypes.setFieldFloat(1F);\n  allTypes.setFieldDouble(1D);\n  allTypes.setFieldBoolean(true);\n  allTypes.setFieldDate(date);\n  allTypes.setFieldBinary(new byte[]{1,2,3});\n  allTypes.setFieldObject(obj);\n  allTypes.setFieldList(list);\n  realm.beginTransaction();\n  realm.insert(allTypes);\n  realm.commitTransaction();\n  AllJavaTypes realmTypes=realm.where(AllJavaTypes.class).findFirst();\n  assertNotNull(realmTypes);\n  assertNotSame(allTypes,realmTypes);\n  assertEquals(allTypes.getFieldString(),realmTypes.getFieldString());\n  assertEquals(allTypes.getFieldLong(),realmTypes.getFieldLong());\n  assertEquals(allTypes.getFieldFloat(),realmTypes.getFieldFloat(),0);\n  assertEquals(allTypes.getFieldDouble(),realmTypes.getFieldDouble(),0);\n  assertEquals(allTypes.isFieldBoolean(),realmTypes.isFieldBoolean());\n  assertEquals(allTypes.getFieldDate(),realmTypes.getFieldDate());\n  assertArrayEquals(allTypes.getFieldBinary(),realmTypes.getFieldBinary());\n  assertEquals(allTypes.getFieldObject().getFieldString(),obj.getFieldString());\n  assertEquals(list.size(),realmTypes.getFieldList().size());\n  assertEquals(list.get(0).getFieldString(),realmTypes.getFieldList().get(0).getFieldString());\n  assertEquals(list.get(0).getFieldLong(),realmTypes.getFieldList().get(0).getFieldLong());\n  assertNull(realmTypes.getFieldList().get(0).getFieldIgnored());\n  assertNull(realmTypes.getFieldDecimal128());\n  assertNull(realmTypes.getFieldObjectId());\n  assertNull(realmTypes.getFieldUUID());\n  assertEquals(0,realmTypes.getFieldDecimal128List().size());\n  assertEquals(0,realmTypes.getFieldObjectIdList().size());\n  assertEquals(0,realmTypes.getFieldUUIDList().size());\n  assertEquals(2,realm.where(AllJavaTypes.class).findAll().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertNull(realmTypes.getFieldObjectId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.realm.entities.ObjectId"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 135,
    "startColumnNumber" : 19,
    "endLineNumber" : 135,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}