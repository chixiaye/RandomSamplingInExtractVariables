{
  "id" : 508,
  "expression" : "3",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/algorithms-miscellaneous-3/src/test/java/com/baeldung/algorithms/twopointertechnique/RotateArrayUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 39,
      "endLineNumber" : 18,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 18,
        "startColumnNumber" : 31,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "{1,2,3,4,5,6,7}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 18,
        "startColumnNumber" : 21,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "new int[]{1,2,3,4,5,6,7}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "inputArray=new int[]{1,2,3,4,5,6,7}",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 55
      },
      "nodeContext" : "inputArray=new int[]{1,2,3,4,5,6,7};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 16,
        "startColumnNumber" : 70,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  inputArray=new int[]{1,2,3,4,5,6,7};\n  step=4;\n  rotateArray.rotate(inputArray,step);\n  assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenAnArrayOfIntegers_whenRotateKsteps_thenCorrect(){\n  inputArray=new int[]{1,2,3,4,5,6,7};\n  step=4;\n  rotateArray.rotate(inputArray,step);\n  assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 55
      },
      "nodeContext" : "inputArray=new int[]{1,2,3,4,5,6,7};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 23,
      "startColumnNumber" : 77,
      "endLineNumber" : 23,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 23,
        "startColumnNumber" : 57,
        "endLineNumber" : 23,
        "endColumnNumber" : 80
      },
      "nodeContext" : "{4,5,6,7,1,2,3}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 23,
        "startColumnNumber" : 47,
        "endLineNumber" : 23,
        "endColumnNumber" : 80
      },
      "nodeContext" : "new int[]{4,5,6,7,1,2,3}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 16,
        "startColumnNumber" : 70,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  inputArray=new int[]{1,2,3,4,5,6,7};\n  step=4;\n  rotateArray.rotate(inputArray,step);\n  assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenAnArrayOfIntegers_whenRotateKsteps_thenCorrect(){\n  inputArray=new int[]{1,2,3,4,5,6,7};\n  step=4;\n  rotateArray.rotate(inputArray,step);\n  assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(inputArray).containsExactly(new int[]{4,5,6,7,1,2,3});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 39,
    "endLineNumber" : 18,
    "endColumnNumber" : 40
  }, {
    "charLength" : 1,
    "startLineNumber" : 23,
    "startColumnNumber" : 77,
    "endLineNumber" : 23,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}