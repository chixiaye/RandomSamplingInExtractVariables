{
  "id" : 101,
  "expression" : "c + 1",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/client/src/main/java/com/alibaba/nacos/client/naming/utils/CollectionUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 92,
      "startColumnNumber" : 31,
      "endLineNumber" : 92,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 37
      },
      "nodeContext" : "count.put(obj,c + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 38
      },
      "nodeContext" : "count.put(obj,c + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 91,
        "startColumnNumber" : 19,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  count.put(obj,c + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == null) {\n  count.put(obj,INTEGER_ONE);\n}\n else {\n  count.put(obj,c + 1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 86,
        "startColumnNumber" : 60,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Object obj=it.next();\n  Integer c=(Integer)(count.get(obj));\n  if (c == null) {\n    count.put(obj,INTEGER_ONE);\n  }\n else {\n    count.put(obj,c + 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Iterator it=coll.iterator(); it.hasNext(); ) {\n  Object obj=it.next();\n  Integer c=(Integer)(count.get(obj));\n  if (c == null) {\n    count.put(obj,INTEGER_ONE);\n  }\n else {\n    count.put(obj,c + 1);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 84,
        "startColumnNumber" : 63,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map count=new HashMap(coll.size());\n  for (Iterator it=coll.iterator(); it.hasNext(); ) {\n    Object obj=it.next();\n    Integer c=(Integer)(count.get(obj));\n    if (c == null) {\n      count.put(obj,INTEGER_ONE);\n    }\n else {\n      count.put(obj,c + 1);\n    }\n  }\n  return count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns a  {@link Map} mapping each unique element in the given {@link Collection} to an {@link Integer}representing the number of occurrences of that element in the  {@link Collection}. <p>Only those elements present in the collection will appear as keys in the map.\n * @param coll the collection to get the cardinality map for, must not be null\n * @return the populated cardinality map\n */\npublic static Map getCardinalityMap(final Collection coll){\n  Map count=new HashMap(coll.size());\n  for (Iterator it=coll.iterator(); it.hasNext(); ) {\n    Object obj=it.next();\n    Integer c=(Integer)(count.get(obj));\n    if (c == null) {\n      count.put(obj,INTEGER_ONE);\n    }\n else {\n      count.put(obj,c + 1);\n    }\n  }\n  return count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 38
      },
      "nodeContext" : "count.put(obj,c + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 92,
    "startColumnNumber" : 31,
    "endLineNumber" : 92,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}