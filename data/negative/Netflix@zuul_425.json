{
  "id" : 425,
  "expression" : "handleFilterException(inMesg,filter,t)",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "handleFilterException(inMesg,filter,t)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 193,
      "startColumnNumber" : 30,
      "endLineNumber" : 193,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 193,
        "startColumnNumber" : 20,
        "endLineNumber" : 193,
        "endColumnNumber" : 70
      },
      "nodeContext" : "outMesg=handleFilterException(inMesg,filter,t)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 71
      },
      "nodeContext" : "final O outMesg=handleFilterException(inMesg,filter,t);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 189,
        "startColumnNumber" : 28,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (resumer != null) {\n    resumer.decrementConcurrency();\n  }\n  final O outMesg=handleFilterException(inMesg,filter,t);\n  outMesg.finishBufferedBodyIfIncomplete();\n  recordFilterCompletion(FAILED,filter,startTime,inMesg,snapshot);\n  return outMesg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  if (resumer != null) {\n    resumer.decrementConcurrency();\n  }\n  final O outMesg=handleFilterException(inMesg,filter,t);\n  outMesg.finishBufferedBodyIfIncomplete();\n  recordFilterCompletion(FAILED,filter,startTime,inMesg,snapshot);\n  return outMesg;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2686,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ExecutionStatus filterRunStatus=null;\n  if (filter.filterType() == INBOUND && inMesg.getContext().shouldSendErrorResponse()) {\n    filterRunStatus=SKIPPED;\n  }\n  if (shouldSkipFilter(inMesg,filter)) {\n    filterRunStatus=SKIPPED;\n  }\n  if (filter.isDisabled()) {\n    filterRunStatus=DISABLED;\n  }\n  if (filterRunStatus != null) {\n    recordFilterCompletion(filterRunStatus,filter,startTime,inMesg,snapshot);\n    return filter.getDefaultOutput(inMesg);\n  }\n  if (!isMessageBodyReadyForFilter(filter,inMesg)) {\n    setFilterAwaitingBody(inMesg,true);\n    LOG.debug(\"Filter {} waiting for body, UUID {}\",filter.filterName(),inMesg.getContext().getUUID());\n    return null;\n  }\n  setFilterAwaitingBody(inMesg,false);\n  if (snapshot != null) {\n    Debug.addRoutingDebug(inMesg.getContext(),\"Filter \" + filter.filterType().toString() + \" \"+ filter.filterOrder()+ \" \"+ filter.filterName());\n  }\n  inMesg.runBufferedBodyContentThroughFilter(filter);\n  if (filter.getSyncType() == FilterSyncType.SYNC) {\n    final SyncZuulFilter<I,O> syncFilter=(SyncZuulFilter)filter;\n    final O outMesg=syncFilter.apply(inMesg);\n    recordFilterCompletion(SUCCESS,filter,startTime,inMesg,snapshot);\n    return (outMesg != null) ? outMesg : filter.getDefaultOutput(inMesg);\n  }\n  filter.incrementConcurrency();\n  resumer=new FilterChainResumer(inMesg,filter,snapshot,startTime);\n  filter.applyAsync(inMesg).observeOn(Schedulers.from(getChannelHandlerContext(inMesg).executor())).doOnUnsubscribe(resumer::decrementConcurrency).subscribe(resumer);\n  return null;\n}\n catch (Throwable t) {\n  if (resumer != null) {\n    resumer.decrementConcurrency();\n  }\n  final O outMesg=handleFilterException(inMesg,filter,t);\n  outMesg.finishBufferedBodyIfIncomplete();\n  recordFilterCompletion(FAILED,filter,startTime,inMesg,snapshot);\n  return outMesg;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 258,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2893,
        "startLineNumber" : 133,
        "startColumnNumber" : 76,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long startTime=System.nanoTime();\n  final ZuulMessage snapshot=inMesg.getContext().debugRouting() ? inMesg.clone() : null;\n  FilterChainResumer resumer=null;\n  try {\n    ExecutionStatus filterRunStatus=null;\n    if (filter.filterType() == INBOUND && inMesg.getContext().shouldSendErrorResponse()) {\n      filterRunStatus=SKIPPED;\n    }\n    if (shouldSkipFilter(inMesg,filter)) {\n      filterRunStatus=SKIPPED;\n    }\n    if (filter.isDisabled()) {\n      filterRunStatus=DISABLED;\n    }\n    if (filterRunStatus != null) {\n      recordFilterCompletion(filterRunStatus,filter,startTime,inMesg,snapshot);\n      return filter.getDefaultOutput(inMesg);\n    }\n    if (!isMessageBodyReadyForFilter(filter,inMesg)) {\n      setFilterAwaitingBody(inMesg,true);\n      LOG.debug(\"Filter {} waiting for body, UUID {}\",filter.filterName(),inMesg.getContext().getUUID());\n      return null;\n    }\n    setFilterAwaitingBody(inMesg,false);\n    if (snapshot != null) {\n      Debug.addRoutingDebug(inMesg.getContext(),\"Filter \" + filter.filterType().toString() + \" \"+ filter.filterOrder()+ \" \"+ filter.filterName());\n    }\n    inMesg.runBufferedBodyContentThroughFilter(filter);\n    if (filter.getSyncType() == FilterSyncType.SYNC) {\n      final SyncZuulFilter<I,O> syncFilter=(SyncZuulFilter)filter;\n      final O outMesg=syncFilter.apply(inMesg);\n      recordFilterCompletion(SUCCESS,filter,startTime,inMesg,snapshot);\n      return (outMesg != null) ? outMesg : filter.getDefaultOutput(inMesg);\n    }\n    filter.incrementConcurrency();\n    resumer=new FilterChainResumer(inMesg,filter,snapshot,startTime);\n    filter.applyAsync(inMesg).observeOn(Schedulers.from(getChannelHandlerContext(inMesg).executor())).doOnUnsubscribe(resumer::decrementConcurrency).subscribe(resumer);\n    return null;\n  }\n catch (  Throwable t) {\n    if (resumer != null) {\n      resumer.decrementConcurrency();\n    }\n    final O outMesg=handleFilterException(inMesg,filter,t);\n    outMesg.finishBufferedBodyIfIncomplete();\n    recordFilterCompletion(FAILED,filter,startTime,inMesg,snapshot);\n    return outMesg;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2965,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected final O filter(final ZuulFilter<I,O> filter,final I inMesg){\n  final long startTime=System.nanoTime();\n  final ZuulMessage snapshot=inMesg.getContext().debugRouting() ? inMesg.clone() : null;\n  FilterChainResumer resumer=null;\n  try {\n    ExecutionStatus filterRunStatus=null;\n    if (filter.filterType() == INBOUND && inMesg.getContext().shouldSendErrorResponse()) {\n      filterRunStatus=SKIPPED;\n    }\n    if (shouldSkipFilter(inMesg,filter)) {\n      filterRunStatus=SKIPPED;\n    }\n    if (filter.isDisabled()) {\n      filterRunStatus=DISABLED;\n    }\n    if (filterRunStatus != null) {\n      recordFilterCompletion(filterRunStatus,filter,startTime,inMesg,snapshot);\n      return filter.getDefaultOutput(inMesg);\n    }\n    if (!isMessageBodyReadyForFilter(filter,inMesg)) {\n      setFilterAwaitingBody(inMesg,true);\n      LOG.debug(\"Filter {} waiting for body, UUID {}\",filter.filterName(),inMesg.getContext().getUUID());\n      return null;\n    }\n    setFilterAwaitingBody(inMesg,false);\n    if (snapshot != null) {\n      Debug.addRoutingDebug(inMesg.getContext(),\"Filter \" + filter.filterType().toString() + \" \"+ filter.filterOrder()+ \" \"+ filter.filterName());\n    }\n    inMesg.runBufferedBodyContentThroughFilter(filter);\n    if (filter.getSyncType() == FilterSyncType.SYNC) {\n      final SyncZuulFilter<I,O> syncFilter=(SyncZuulFilter)filter;\n      final O outMesg=syncFilter.apply(inMesg);\n      recordFilterCompletion(SUCCESS,filter,startTime,inMesg,snapshot);\n      return (outMesg != null) ? outMesg : filter.getDefaultOutput(inMesg);\n    }\n    filter.incrementConcurrency();\n    resumer=new FilterChainResumer(inMesg,filter,snapshot,startTime);\n    filter.applyAsync(inMesg).observeOn(Schedulers.from(getChannelHandlerContext(inMesg).executor())).doOnUnsubscribe(resumer::decrementConcurrency).subscribe(resumer);\n    return null;\n  }\n catch (  Throwable t) {\n    if (resumer != null) {\n      resumer.decrementConcurrency();\n    }\n    final O outMesg=handleFilterException(inMesg,filter,t);\n    outMesg.finishBufferedBodyIfIncomplete();\n    recordFilterCompletion(FAILED,filter,startTime,inMesg,snapshot);\n    return outMesg;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 310,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 71
      },
      "nodeContext" : "final O outMesg=handleFilterException(inMesg,filter,t);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "O"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 193,
    "startColumnNumber" : 30,
    "endLineNumber" : 193,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}