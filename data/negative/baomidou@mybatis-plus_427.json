{
  "id" : 427,
  "expression" : "Pattern.compile(\".*[A-Z]+.*\")",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Pattern.compile(\".*[A-Z]+.*\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 415,
      "startColumnNumber" : 15,
      "endLineNumber" : 415,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 415,
        "startColumnNumber" : 15,
        "endLineNumber" : 415,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Pattern.compile(\".*[A-Z]+.*\").matcher(word)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 415,
        "startColumnNumber" : 15,
        "endLineNumber" : 415,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 415,
        "startColumnNumber" : 15,
        "endLineNumber" : 415,
        "endColumnNumber" : 124
      },
      "nodeContext" : "Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches() && Pattern.compile(\".*[/_]+.*\").matcher(word).matches()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 415,
        "startColumnNumber" : 8,
        "endLineNumber" : 415,
        "endColumnNumber" : 125
      },
      "nodeContext" : "return Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches() && Pattern.compile(\".*[/_]+.*\").matcher(word).matches();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 414,
        "startColumnNumber" : 51,
        "endLineNumber" : 416,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches() && Pattern.compile(\".*[/_]+.*\").matcher(word).matches();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 406,
        "startColumnNumber" : 4,
        "endLineNumber" : 416,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 是否为驼峰下划线混合命名 </p>\n * @param word 待判断字符串\n * @return\n */\npublic static boolean isMixedMode(String word){\n  return Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches() && Pattern.compile(\".*[/_]+.*\").matcher(word).matches();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 415,
        "startColumnNumber" : 8,
        "endLineNumber" : 415,
        "endColumnNumber" : 125
      },
      "nodeContext" : "return Pattern.compile(\".*[A-Z]+.*\").matcher(word).matches() && Pattern.compile(\".*[/_]+.*\").matcher(word).matches();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.util.regex.Pattern"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 415,
    "startColumnNumber" : 15,
    "endLineNumber" : 415,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}