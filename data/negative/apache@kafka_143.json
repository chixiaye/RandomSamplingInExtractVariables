{
  "id" : 143,
  "expression" : "Serdes.String()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSelectKeyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Serdes.String()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 59,
      "startColumnNumber" : 52,
      "endLineNumber" : 59,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 59,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Consumed.with(Serdes.String(),Serdes.Integer())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 87
      },
      "nodeContext" : "builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 58,
        "startColumnNumber" : 40,
        "endLineNumber" : 59,
        "endColumnNumber" : 87
      },
      "nodeContext" : "stream=builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 88
      },
      "nodeContext" : "final KStream<String,Integer> stream=builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 45,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamsBuilder builder=new StreamsBuilder();\n  final Map<Number,String> keyMap=new HashMap<>();\n  keyMap.put(1,\"ONE\");\n  keyMap.put(2,\"TWO\");\n  keyMap.put(3,\"THREE\");\n  final KeyValueTimestamp[] expected=new KeyValueTimestamp[]{new KeyValueTimestamp<>(\"ONE\",1,0),new KeyValueTimestamp<>(\"TWO\",2,0),new KeyValueTimestamp<>(\"THREE\",3,0)};\n  final int[] expectedValues=new int[]{1,2,3};\n  final KStream<String,Integer> stream=builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()));\n  final MockApiProcessorSupplier<String,Integer,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  stream.selectKey((key,value) -> keyMap.get(value)).process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    final TestInputTopic<String,Integer> inputTopic=driver.createInputTopic(topicName,new StringSerializer(),new IntegerSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n    for (    final int expectedValue : expectedValues) {\n      inputTopic.pipeInput(expectedValue);\n    }\n  }\n   assertEquals(3,supplier.theCapturedProcessor().processed().size());\n  for (int i=0; i < expected.length; i++) {\n    assertEquals(expected[i],supplier.theCapturedProcessor().processed().get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectKey(){\n  final StreamsBuilder builder=new StreamsBuilder();\n  final Map<Number,String> keyMap=new HashMap<>();\n  keyMap.put(1,\"ONE\");\n  keyMap.put(2,\"TWO\");\n  keyMap.put(3,\"THREE\");\n  final KeyValueTimestamp[] expected=new KeyValueTimestamp[]{new KeyValueTimestamp<>(\"ONE\",1,0),new KeyValueTimestamp<>(\"TWO\",2,0),new KeyValueTimestamp<>(\"THREE\",3,0)};\n  final int[] expectedValues=new int[]{1,2,3};\n  final KStream<String,Integer> stream=builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()));\n  final MockApiProcessorSupplier<String,Integer,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  stream.selectKey((key,value) -> keyMap.get(value)).process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    final TestInputTopic<String,Integer> inputTopic=driver.createInputTopic(topicName,new StringSerializer(),new IntegerSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n    for (    final int expectedValue : expectedValues) {\n      inputTopic.pipeInput(expectedValue);\n    }\n  }\n   assertEquals(3,supplier.theCapturedProcessor().processed().size());\n  for (int i=0; i < expected.length; i++) {\n    assertEquals(expected[i],supplier.theCapturedProcessor().processed().get(i));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 87
      },
      "nodeContext" : "builder.stream(topicName,Consumed.with(Serdes.String(),Serdes.Integer()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.common.serialization.Serde<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 59,
    "startColumnNumber" : 52,
    "endLineNumber" : 59,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}