{
  "id" : 436,
  "expression" : "policyFromBroker.isActive()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/AdminApiDelayedDelivery.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "policyFromBroker.isActive()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 174,
      "startColumnNumber" : 19,
      "endLineNumber" : 174,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2798,
        "startLineNumber" : 144,
        "startColumnNumber" : 62,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cleanup();\n  conf.setSystemTopicEnabled(true);\n  conf.setTopicLevelPoliciesEnabled(true);\n  setup();\n  final String namespace=\"delayed-delivery-messages/my-ns\";\n  final String topic=\"persistent://\" + namespace + \"/test\"+ UUID.randomUUID();\n  admin.namespaces().createNamespace(namespace);\n  pulsarClient.newProducer().topic(topic).create().close();\n  assertNull(admin.namespaces().getDelayedDelivery(namespace));\n  assertNull(admin.topics().getDelayedDeliveryPolicy(topic));\n  DelayedDeliveryPolicies brokerLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(conf.getDelayedDeliveryTickTimeMillis()).active(conf.isDelayedDeliveryEnabled()).build();\n  assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy);\n  DelayedDeliveryPolicies namespaceLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(100).active(true).build();\n  admin.namespaces().setDelayedDeliveryMessages(namespace,namespaceLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.namespaces().getDelayedDelivery(namespace)));\n  DelayedDeliveryPolicies policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),100);\n  assertTrue(policyFromBroker.isActive());\n  DelayedDeliveryPolicies topicLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(200).active(true).build();\n  admin.topics().setDelayedDeliveryPolicy(topic,topicLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.topics().getDelayedDeliveryPolicy(topic)));\n  policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),200);\n  assertTrue(policyFromBroker.isActive());\n  admin.topics().removeDelayedDeliveryPolicy(topic);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),namespaceLevelPolicy));\n  admin.namespaces().removeDelayedDeliveryMessages(namespace);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2883,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=30000) public void testDelayedDeliveryApplied() throws Exception {\n  cleanup();\n  conf.setSystemTopicEnabled(true);\n  conf.setTopicLevelPoliciesEnabled(true);\n  setup();\n  final String namespace=\"delayed-delivery-messages/my-ns\";\n  final String topic=\"persistent://\" + namespace + \"/test\"+ UUID.randomUUID();\n  admin.namespaces().createNamespace(namespace);\n  pulsarClient.newProducer().topic(topic).create().close();\n  assertNull(admin.namespaces().getDelayedDelivery(namespace));\n  assertNull(admin.topics().getDelayedDeliveryPolicy(topic));\n  DelayedDeliveryPolicies brokerLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(conf.getDelayedDeliveryTickTimeMillis()).active(conf.isDelayedDeliveryEnabled()).build();\n  assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy);\n  DelayedDeliveryPolicies namespaceLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(100).active(true).build();\n  admin.namespaces().setDelayedDeliveryMessages(namespace,namespaceLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.namespaces().getDelayedDelivery(namespace)));\n  DelayedDeliveryPolicies policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),100);\n  assertTrue(policyFromBroker.isActive());\n  DelayedDeliveryPolicies topicLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(200).active(true).build();\n  admin.topics().setDelayedDeliveryPolicy(topic,topicLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.topics().getDelayedDeliveryPolicy(topic)));\n  policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),200);\n  assertTrue(policyFromBroker.isActive());\n  admin.topics().removeDelayedDeliveryPolicy(topic);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),namespaceLevelPolicy));\n  admin.namespaces().removeDelayedDeliveryMessages(namespace);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "policyFromBroker.isActive()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 185,
      "startColumnNumber" : 19,
      "endLineNumber" : 185,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2798,
        "startLineNumber" : 144,
        "startColumnNumber" : 62,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cleanup();\n  conf.setSystemTopicEnabled(true);\n  conf.setTopicLevelPoliciesEnabled(true);\n  setup();\n  final String namespace=\"delayed-delivery-messages/my-ns\";\n  final String topic=\"persistent://\" + namespace + \"/test\"+ UUID.randomUUID();\n  admin.namespaces().createNamespace(namespace);\n  pulsarClient.newProducer().topic(topic).create().close();\n  assertNull(admin.namespaces().getDelayedDelivery(namespace));\n  assertNull(admin.topics().getDelayedDeliveryPolicy(topic));\n  DelayedDeliveryPolicies brokerLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(conf.getDelayedDeliveryTickTimeMillis()).active(conf.isDelayedDeliveryEnabled()).build();\n  assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy);\n  DelayedDeliveryPolicies namespaceLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(100).active(true).build();\n  admin.namespaces().setDelayedDeliveryMessages(namespace,namespaceLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.namespaces().getDelayedDelivery(namespace)));\n  DelayedDeliveryPolicies policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),100);\n  assertTrue(policyFromBroker.isActive());\n  DelayedDeliveryPolicies topicLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(200).active(true).build();\n  admin.topics().setDelayedDeliveryPolicy(topic,topicLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.topics().getDelayedDeliveryPolicy(topic)));\n  policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),200);\n  assertTrue(policyFromBroker.isActive());\n  admin.topics().removeDelayedDeliveryPolicy(topic);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),namespaceLevelPolicy));\n  admin.namespaces().removeDelayedDeliveryMessages(namespace);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2883,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=30000) public void testDelayedDeliveryApplied() throws Exception {\n  cleanup();\n  conf.setSystemTopicEnabled(true);\n  conf.setTopicLevelPoliciesEnabled(true);\n  setup();\n  final String namespace=\"delayed-delivery-messages/my-ns\";\n  final String topic=\"persistent://\" + namespace + \"/test\"+ UUID.randomUUID();\n  admin.namespaces().createNamespace(namespace);\n  pulsarClient.newProducer().topic(topic).create().close();\n  assertNull(admin.namespaces().getDelayedDelivery(namespace));\n  assertNull(admin.topics().getDelayedDeliveryPolicy(topic));\n  DelayedDeliveryPolicies brokerLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(conf.getDelayedDeliveryTickTimeMillis()).active(conf.isDelayedDeliveryEnabled()).build();\n  assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy);\n  DelayedDeliveryPolicies namespaceLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(100).active(true).build();\n  admin.namespaces().setDelayedDeliveryMessages(namespace,namespaceLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.namespaces().getDelayedDelivery(namespace)));\n  DelayedDeliveryPolicies policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),100);\n  assertTrue(policyFromBroker.isActive());\n  DelayedDeliveryPolicies topicLevelPolicy=DelayedDeliveryPolicies.builder().tickTime(200).active(true).build();\n  admin.topics().setDelayedDeliveryPolicy(topic,topicLevelPolicy);\n  Awaitility.await().untilAsserted(() -> assertNotNull(admin.topics().getDelayedDeliveryPolicy(topic)));\n  policyFromBroker=admin.topics().getDelayedDeliveryPolicy(topic,true);\n  assertEquals(policyFromBroker.getTickTime(),200);\n  assertTrue(policyFromBroker.isActive());\n  admin.topics().removeDelayedDeliveryPolicy(topic);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),namespaceLevelPolicy));\n  admin.namespaces().removeDelayedDeliveryMessages(namespace);\n  Awaitility.await().untilAsserted(() -> assertEquals(admin.topics().getDelayedDeliveryPolicy(topic,true),brokerLevelPolicy));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(policyFromBroker.isActive());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 174,
    "startColumnNumber" : 19,
    "endLineNumber" : 174,
    "endColumnNumber" : 46
  }, {
    "charLength" : 27,
    "startLineNumber" : 185,
    "startColumnNumber" : 19,
    "endLineNumber" : 185,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}