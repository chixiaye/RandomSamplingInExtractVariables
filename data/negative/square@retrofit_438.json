{
  "id" : 438,
  "expression" : "fetchHeaders",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-appengine/src/main/java/retrofit/appengine/UrlFetchClient.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fetchHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 95,
      "startColumnNumber" : 49,
      "endLineNumber" : 95,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 95,
        "startColumnNumber" : 49,
        "endLineNumber" : 95,
        "endColumnNumber" : 68
      },
      "nodeContext" : "fetchHeaders.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 95,
        "startColumnNumber" : 27,
        "endLineNumber" : 95,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new ArrayList<Header>(fetchHeaders.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 95,
        "endColumnNumber" : 69
      },
      "nodeContext" : "headers=new ArrayList<Header>(fetchHeaders.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 70
      },
      "nodeContext" : "List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 87,
        "startColumnNumber" : 84,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  URL responseUrl=response.getFinalUrl();\n  String urlString=(responseUrl != null ? responseUrl : creatingRequest.getURL()).toString();\n  int status=response.getResponseCode();\n  List<HTTPHeader> fetchHeaders=response.getHeaders();\n  List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n  String contentType=\"application/octet-stream\";\n  for (  HTTPHeader fetchHeader : fetchHeaders) {\n    String name=fetchHeader.getName();\n    String value=fetchHeader.getValue();\n    if (\"Content-Type\".equalsIgnoreCase(name)) {\n      contentType=value;\n    }\n    headers.add(new Header(name,value));\n  }\n  TypedByteArray body=null;\n  byte[] fetchBody=response.getContent();\n  if (fetchBody != null) {\n    body=new TypedByteArray(contentType,fetchBody);\n  }\n  return new Response(urlString,status,\"\",headers,body);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static Response parseResponse(HTTPResponse response,HTTPRequest creatingRequest){\n  URL responseUrl=response.getFinalUrl();\n  String urlString=(responseUrl != null ? responseUrl : creatingRequest.getURL()).toString();\n  int status=response.getResponseCode();\n  List<HTTPHeader> fetchHeaders=response.getHeaders();\n  List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n  String contentType=\"application/octet-stream\";\n  for (  HTTPHeader fetchHeader : fetchHeaders) {\n    String name=fetchHeader.getName();\n    String value=fetchHeader.getValue();\n    if (\"Content-Type\".equalsIgnoreCase(name)) {\n      contentType=value;\n    }\n    headers.add(new Header(name,value));\n  }\n  TypedByteArray body=null;\n  byte[] fetchBody=response.getContent();\n  if (fetchBody != null) {\n    body=new TypedByteArray(contentType,fetchBody);\n  }\n  return new Response(urlString,status,\"\",headers,body);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 70
      },
      "nodeContext" : "List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<retrofit.appengine.HTTPHeader>"
  }, {
    "nodeContext" : "fetchHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 97,
      "startColumnNumber" : 34,
      "endLineNumber" : 97,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (HTTPHeader fetchHeader : fetchHeaders) {\n  String name=fetchHeader.getName();\n  String value=fetchHeader.getValue();\n  if (\"Content-Type\".equalsIgnoreCase(name)) {\n    contentType=value;\n  }\n  headers.add(new Header(name,value));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 87,
        "startColumnNumber" : 84,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  URL responseUrl=response.getFinalUrl();\n  String urlString=(responseUrl != null ? responseUrl : creatingRequest.getURL()).toString();\n  int status=response.getResponseCode();\n  List<HTTPHeader> fetchHeaders=response.getHeaders();\n  List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n  String contentType=\"application/octet-stream\";\n  for (  HTTPHeader fetchHeader : fetchHeaders) {\n    String name=fetchHeader.getName();\n    String value=fetchHeader.getValue();\n    if (\"Content-Type\".equalsIgnoreCase(name)) {\n      contentType=value;\n    }\n    headers.add(new Header(name,value));\n  }\n  TypedByteArray body=null;\n  byte[] fetchBody=response.getContent();\n  if (fetchBody != null) {\n    body=new TypedByteArray(contentType,fetchBody);\n  }\n  return new Response(urlString,status,\"\",headers,body);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static Response parseResponse(HTTPResponse response,HTTPRequest creatingRequest){\n  URL responseUrl=response.getFinalUrl();\n  String urlString=(responseUrl != null ? responseUrl : creatingRequest.getURL()).toString();\n  int status=response.getResponseCode();\n  List<HTTPHeader> fetchHeaders=response.getHeaders();\n  List<Header> headers=new ArrayList<Header>(fetchHeaders.size());\n  String contentType=\"application/octet-stream\";\n  for (  HTTPHeader fetchHeader : fetchHeaders) {\n    String name=fetchHeader.getName();\n    String value=fetchHeader.getValue();\n    if (\"Content-Type\".equalsIgnoreCase(name)) {\n      contentType=value;\n    }\n    headers.add(new Header(name,value));\n  }\n  TypedByteArray body=null;\n  byte[] fetchBody=response.getContent();\n  if (fetchBody != null) {\n    body=new TypedByteArray(contentType,fetchBody);\n  }\n  return new Response(urlString,status,\"\",headers,body);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (HTTPHeader fetchHeader : fetchHeaders) {\n  String name=fetchHeader.getName();\n  String value=fetchHeader.getValue();\n  if (\"Content-Type\".equalsIgnoreCase(name)) {\n    contentType=value;\n  }\n  headers.add(new Header(name,value));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.List<retrofit.appengine.HTTPHeader>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 95,
    "startColumnNumber" : 49,
    "endLineNumber" : 95,
    "endColumnNumber" : 61
  }, {
    "charLength" : 12,
    "startLineNumber" : 97,
    "startColumnNumber" : 34,
    "endLineNumber" : 97,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}