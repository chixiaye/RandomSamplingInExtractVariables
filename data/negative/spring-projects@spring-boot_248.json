{
  "id" : 248,
  "expression" : "\"summary\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/groovytemplates/MessageControllerWebTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"summary\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 69,
      "startColumnNumber" : 65,
      "endLineNumber" : 69,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 69,
        "startColumnNumber" : 23,
        "endLineNumber" : 69,
        "endColumnNumber" : 82
      },
      "nodeContext" : "post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 83
      },
      "nodeContext" : "this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 34
      },
      "nodeContext" : "this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")).andExpect(status().isFound())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")).andExpect(status().isFound()).andExpect(header().string(\"location\",RegexMatcher.matches(\"/[0-9]+\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 77
      },
      "nodeContext" : "this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")).andExpect(status().isFound()).andExpect(header().string(\"location\",RegexMatcher.matches(\"/[0-9]+\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 68,
        "startColumnNumber" : 43,
        "endLineNumber" : 72,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")).andExpect(status().isFound()).andExpect(header().string(\"location\",RegexMatcher.matches(\"/[0-9]+\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 72,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testCreate() throws Exception {\n  this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\")).andExpect(status().isFound()).andExpect(header().string(\"location\",RegexMatcher.matches(\"/[0-9]+\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 83
      },
      "nodeContext" : "this.mockMvc.perform(post(\"/\").param(\"text\",\"FOO text\").param(\"summary\",\"FOO\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 69,
    "startColumnNumber" : 65,
    "endLineNumber" : 69,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}