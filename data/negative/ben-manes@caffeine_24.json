{
  "id" : 24,
  "expression" : "\"Guava\"",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/jmh/java/com/github/benmanes/caffeine/cache/ComputeBenchmark.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Guava\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 66,
      "startColumnNumber" : 45,
      "endLineNumber" : 66,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Objects.equals(computingType,\"Guava\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 66,
        "startColumnNumber" : 11,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Objects.equals(computingType,\"Guava\")) {\n  setupGuava();\n}\n else {\n  throw new AssertionError(\"Unknown computingType: \" + computingType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 64,
        "startColumnNumber" : 11,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Objects.equals(computingType,\"Caffeine\")) {\n  setupCaffeine();\n}\n else if (Objects.equals(computingType,\"Guava\")) {\n  setupGuava();\n}\n else {\n  throw new AssertionError(\"Unknown computingType: \" + computingType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Objects.equals(computingType,\"ConcurrentHashMap\")) {\n  setupConcurrentHashMap();\n}\n else if (Objects.equals(computingType,\"Caffeine\")) {\n  setupCaffeine();\n}\n else if (Objects.equals(computingType,\"Guava\")) {\n  setupGuava();\n}\n else {\n  throw new AssertionError(\"Unknown computingType: \" + computingType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 61,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (Objects.equals(computingType,\"ConcurrentHashMap\")) {\n    setupConcurrentHashMap();\n  }\n else   if (Objects.equals(computingType,\"Caffeine\")) {\n    setupCaffeine();\n  }\n else   if (Objects.equals(computingType,\"Guava\")) {\n    setupGuava();\n  }\n else {\n    throw new AssertionError(\"Unknown computingType: \" + computingType);\n  }\n  requireNonNull(benchmarkFunction);\n  ints=new Integer[SIZE];\n  IntegerGenerator generator=new ScrambledZipfianGenerator(SIZE);\n  for (int i=0; i < SIZE; i++) {\n    ints[i]=generator.nextInt();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Setup public void setup() throws Exception {\n  if (Objects.equals(computingType,\"ConcurrentHashMap\")) {\n    setupConcurrentHashMap();\n  }\n else   if (Objects.equals(computingType,\"Caffeine\")) {\n    setupCaffeine();\n  }\n else   if (Objects.equals(computingType,\"Guava\")) {\n    setupGuava();\n  }\n else {\n    throw new AssertionError(\"Unknown computingType: \" + computingType);\n  }\n  requireNonNull(benchmarkFunction);\n  ints=new Integer[SIZE];\n  IntegerGenerator generator=new ScrambledZipfianGenerator(SIZE);\n  for (int i=0; i < SIZE; i++) {\n    ints[i]=generator.nextInt();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Objects.equals(computingType,\"Guava\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 66,
    "startColumnNumber" : 45,
    "endLineNumber" : 66,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}