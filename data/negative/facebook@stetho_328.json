{
  "id" : 328,
  "expression" : "cause",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/MethodDispatcher.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cause",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 70,
      "startColumnNumber" : 42,
      "endLineNumber" : 70,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 72
      },
      "nodeContext" : "ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 73
      },
      "nodeContext" : "ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 68,
        "startColumnNumber" : 42,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return dispatchHelper.invoke(peer,params);\n}\n catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(e);\n}\ncatch (JSONException e) {\n  throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 59,
        "startColumnNumber" : 30,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MethodDispatchHelper dispatchHelper=findMethodDispatcher(methodName);\n  if (dispatchHelper == null) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.METHOD_NOT_FOUND,\"Not implemented: \" + methodName,null));\n  }\n  try {\n    return dispatchHelper.invoke(peer,params);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n    throw ExceptionUtil.propagate(cause);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  JSONException e) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public JSONObject dispatch(JsonRpcPeer peer,String methodName,@Nullable JSONObject params) throws JsonRpcException {\n  MethodDispatchHelper dispatchHelper=findMethodDispatcher(methodName);\n  if (dispatchHelper == null) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.METHOD_NOT_FOUND,\"Not implemented: \" + methodName,null));\n  }\n  try {\n    return dispatchHelper.invoke(peer,params);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n    throw ExceptionUtil.propagate(cause);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  JSONException e) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 73
      },
      "nodeContext" : "ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  }, {
    "nodeContext" : "cause",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 71,
      "startColumnNumber" : 36,
      "endLineNumber" : 71,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ExceptionUtil.propagate(cause)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 43
      },
      "nodeContext" : "throw ExceptionUtil.propagate(cause);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 68,
        "startColumnNumber" : 42,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return dispatchHelper.invoke(peer,params);\n}\n catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n  throw ExceptionUtil.propagate(cause);\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(e);\n}\ncatch (JSONException e) {\n  throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 59,
        "startColumnNumber" : 30,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MethodDispatchHelper dispatchHelper=findMethodDispatcher(methodName);\n  if (dispatchHelper == null) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.METHOD_NOT_FOUND,\"Not implemented: \" + methodName,null));\n  }\n  try {\n    return dispatchHelper.invoke(peer,params);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n    throw ExceptionUtil.propagate(cause);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  JSONException e) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public JSONObject dispatch(JsonRpcPeer peer,String methodName,@Nullable JSONObject params) throws JsonRpcException {\n  MethodDispatchHelper dispatchHelper=findMethodDispatcher(methodName);\n  if (dispatchHelper == null) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.METHOD_NOT_FOUND,\"Not implemented: \" + methodName,null));\n  }\n  try {\n    return dispatchHelper.invoke(peer,params);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    ExceptionUtil.propagateIfInstanceOf(cause,JsonRpcException.class);\n    throw ExceptionUtil.propagate(cause);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  JSONException e) {\n    throw new JsonRpcException(new JsonRpcError(JsonRpcError.ErrorCode.INTERNAL_ERROR,e.toString(),null));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 43
      },
      "nodeContext" : "throw ExceptionUtil.propagate(cause);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 70,
    "startColumnNumber" : 42,
    "endLineNumber" : 70,
    "endColumnNumber" : 47
  }, {
    "charLength" : 5,
    "startLineNumber" : 71,
    "startColumnNumber" : 36,
    "endLineNumber" : 71,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}