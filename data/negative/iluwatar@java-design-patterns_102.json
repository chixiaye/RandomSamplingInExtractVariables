{
  "id" : 102,
  "expression" : "exceptions",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/monad/src/main/java/com/iluwatar/monad/Validator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exceptions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 82,
      "startColumnNumber" : 6,
      "endLineNumber" : 82,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 56
      },
      "nodeContext" : "exceptions.add(new IllegalStateException(message))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "exceptions.add(new IllegalStateException(message));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 81,
        "startColumnNumber" : 31,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  exceptions.add(new IllegalStateException(message));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!validation.test(obj)) {\n  exceptions.add(new IllegalStateException(message));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 80,
        "startColumnNumber" : 72,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!validation.test(obj)) {\n    exceptions.add(new IllegalStateException(message));\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Checks if the validation is successful.\n * @param validation one argument boolean-valued function that represents one step of validation.Adds exception to main validation exception list when single step validation ends with failure.\n * @param message    error message when object is invalid\n * @return this\n */\npublic Validator<T> validate(Predicate<T> validation,String message){\n  if (!validation.test(obj)) {\n    exceptions.add(new IllegalStateException(message));\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "exceptions.add(new IllegalStateException(message));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Throwable>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 82,
    "startColumnNumber" : 6,
    "endLineNumber" : 82,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}