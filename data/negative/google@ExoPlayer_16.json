{
  "id" : 16,
  "expression" : "TrackGroupInfo",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/DashMediaPeriod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TrackGroupInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 225,
      "startColumnNumber" : 47,
      "endLineNumber" : 225,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 225,
        "startColumnNumber" : 47,
        "endLineNumber" : 225,
        "endColumnNumber" : 78
      },
      "nodeContext" : "TrackGroupInfo.CATEGORY_PRIMARY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 225,
        "startColumnNumber" : 10,
        "endLineNumber" : 225,
        "endColumnNumber" : 78
      },
      "nodeContext" : "trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 225,
        "startColumnNumber" : 6,
        "endLineNumber" : 228,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 222,
        "startColumnNumber" : 61,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int trackGroupIndex=trackGroups.indexOf(trackSelection.getTrackGroup());\n  TrackGroupInfo trackGroupInfo=trackGroupInfos[trackGroupIndex];\n  if (trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY) {\n    continue;\n  }\n  int[] adaptationSetIndices=trackGroupInfo.adaptationSetIndices;\n  int[] trackIndices=new int[trackSelection.length()];\n  for (int i=0; i < trackSelection.length(); i++) {\n    trackIndices[i]=trackSelection.getIndexInTrackGroup(i);\n  }\n  Arrays.sort(trackIndices);\n  int currentAdaptationSetIndex=0;\n  int totalTracksInPreviousAdaptationSets=0;\n  int tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[0]).representations.size();\n  for (  int trackIndex : trackIndices) {\n    while (trackIndex >= totalTracksInPreviousAdaptationSets + tracksInCurrentAdaptationSet) {\n      currentAdaptationSetIndex++;\n      totalTracksInPreviousAdaptationSets+=tracksInCurrentAdaptationSet;\n      tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[currentAdaptationSetIndex]).representations.size();\n    }\n    streamKeys.add(new StreamKey(periodIndex,adaptationSetIndices[currentAdaptationSetIndex],trackIndex - totalTracksInPreviousAdaptationSets));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 222,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ExoTrackSelection trackSelection : trackSelections) {\n  int trackGroupIndex=trackGroups.indexOf(trackSelection.getTrackGroup());\n  TrackGroupInfo trackGroupInfo=trackGroupInfos[trackGroupIndex];\n  if (trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY) {\n    continue;\n  }\n  int[] adaptationSetIndices=trackGroupInfo.adaptationSetIndices;\n  int[] trackIndices=new int[trackSelection.length()];\n  for (int i=0; i < trackSelection.length(); i++) {\n    trackIndices[i]=trackSelection.getIndexInTrackGroup(i);\n  }\n  Arrays.sort(trackIndices);\n  int currentAdaptationSetIndex=0;\n  int totalTracksInPreviousAdaptationSets=0;\n  int tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[0]).representations.size();\n  for (  int trackIndex : trackIndices) {\n    while (trackIndex >= totalTracksInPreviousAdaptationSets + tracksInCurrentAdaptationSet) {\n      currentAdaptationSetIndex++;\n      totalTracksInPreviousAdaptationSets+=tracksInCurrentAdaptationSet;\n      tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[currentAdaptationSetIndex]).representations.size();\n    }\n    streamKeys.add(new StreamKey(periodIndex,adaptationSetIndices[currentAdaptationSetIndex],trackIndex - totalTracksInPreviousAdaptationSets));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 156,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1767,
        "startLineNumber" : 219,
        "startColumnNumber" : 80,
        "endLineNumber" : 258,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<AdaptationSet> manifestAdaptationSets=manifest.getPeriod(periodIndex).adaptationSets;\n  List<StreamKey> streamKeys=new ArrayList<>();\n  for (  ExoTrackSelection trackSelection : trackSelections) {\n    int trackGroupIndex=trackGroups.indexOf(trackSelection.getTrackGroup());\n    TrackGroupInfo trackGroupInfo=trackGroupInfos[trackGroupIndex];\n    if (trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY) {\n      continue;\n    }\n    int[] adaptationSetIndices=trackGroupInfo.adaptationSetIndices;\n    int[] trackIndices=new int[trackSelection.length()];\n    for (int i=0; i < trackSelection.length(); i++) {\n      trackIndices[i]=trackSelection.getIndexInTrackGroup(i);\n    }\n    Arrays.sort(trackIndices);\n    int currentAdaptationSetIndex=0;\n    int totalTracksInPreviousAdaptationSets=0;\n    int tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[0]).representations.size();\n    for (    int trackIndex : trackIndices) {\n      while (trackIndex >= totalTracksInPreviousAdaptationSets + tracksInCurrentAdaptationSet) {\n        currentAdaptationSetIndex++;\n        totalTracksInPreviousAdaptationSets+=tracksInCurrentAdaptationSet;\n        tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[currentAdaptationSetIndex]).representations.size();\n      }\n      streamKeys.add(new StreamKey(periodIndex,adaptationSetIndices[currentAdaptationSetIndex],trackIndex - totalTracksInPreviousAdaptationSets));\n    }\n  }\n  return streamKeys;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1857,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 258,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public List<StreamKey> getStreamKeys(List<ExoTrackSelection> trackSelections){\n  List<AdaptationSet> manifestAdaptationSets=manifest.getPeriod(periodIndex).adaptationSets;\n  List<StreamKey> streamKeys=new ArrayList<>();\n  for (  ExoTrackSelection trackSelection : trackSelections) {\n    int trackGroupIndex=trackGroups.indexOf(trackSelection.getTrackGroup());\n    TrackGroupInfo trackGroupInfo=trackGroupInfos[trackGroupIndex];\n    if (trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY) {\n      continue;\n    }\n    int[] adaptationSetIndices=trackGroupInfo.adaptationSetIndices;\n    int[] trackIndices=new int[trackSelection.length()];\n    for (int i=0; i < trackSelection.length(); i++) {\n      trackIndices[i]=trackSelection.getIndexInTrackGroup(i);\n    }\n    Arrays.sort(trackIndices);\n    int currentAdaptationSetIndex=0;\n    int totalTracksInPreviousAdaptationSets=0;\n    int tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[0]).representations.size();\n    for (    int trackIndex : trackIndices) {\n      while (trackIndex >= totalTracksInPreviousAdaptationSets + tracksInCurrentAdaptationSet) {\n        currentAdaptationSetIndex++;\n        totalTracksInPreviousAdaptationSets+=tracksInCurrentAdaptationSet;\n        tracksInCurrentAdaptationSet=manifestAdaptationSets.get(adaptationSetIndices[currentAdaptationSetIndex]).representations.size();\n      }\n      streamKeys.add(new StreamKey(periodIndex,adaptationSetIndices[currentAdaptationSetIndex],trackIndex - totalTracksInPreviousAdaptationSets));\n    }\n  }\n  return streamKeys;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 225,
        "startColumnNumber" : 10,
        "endLineNumber" : 225,
        "endColumnNumber" : 78
      },
      "nodeContext" : "trackGroupInfo.trackGroupCategory != TrackGroupInfo.CATEGORY_PRIMARY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 225,
    "startColumnNumber" : 47,
    "endLineNumber" : 225,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}