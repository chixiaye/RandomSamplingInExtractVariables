{
  "id" : 34,
  "expression" : "','",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-kafka/src/main/java/com/netflix/eureka2/server/audit/kafka/KafkaAuditService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "','",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 164,
      "startColumnNumber" : 90,
      "endLineNumber" : 164,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 94
      },
      "nodeContext" : "sb.append(server.getHostString()).append(':').append(server.getPort()).append(',')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 95
      },
      "nodeContext" : "sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 163,
        "startColumnNumber" : 51,
        "endLineNumber" : 165,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (InetSocketAddress server : addresses) {\n  sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 161,
        "startColumnNumber" : 99,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder();\n  for (  InetSocketAddress server : addresses) {\n    sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n  }\n  String serverProperty=sb.substring(0,sb.length() - 1);\n  Properties props=new Properties();\n  props.setProperty(\"metadata.broker.list\",serverProperty);\n  props.setProperty(\"producer.type\",\"async\");\n  props.setProperty(\"request.required.acks\",\"0\");\n  return new Producer<String,byte[]>(new ProducerConfig(props));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Producer<String,byte[]> createKafkaProducer(List<InetSocketAddress> addresses){\n  StringBuilder sb=new StringBuilder();\n  for (  InetSocketAddress server : addresses) {\n    sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n  }\n  String serverProperty=sb.substring(0,sb.length() - 1);\n  Properties props=new Properties();\n  props.setProperty(\"metadata.broker.list\",serverProperty);\n  props.setProperty(\"producer.type\",\"async\");\n  props.setProperty(\"request.required.acks\",\"0\");\n  return new Producer<String,byte[]>(new ProducerConfig(props));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 95
      },
      "nodeContext" : "sb.append(server.getHostString()).append(':').append(server.getPort()).append(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 164,
    "startColumnNumber" : 90,
    "endLineNumber" : 164,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}