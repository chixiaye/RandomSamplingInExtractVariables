{
  "id" : 495,
  "expression" : "value",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/AbstractRSSReader.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 72,
      "startColumnNumber" : 24,
      "endLineNumber" : 72,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 24,
        "endLineNumber" : 72,
        "endColumnNumber" : 53
      },
      "nodeContext" : "value < finderPatterns.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int value=0; value < finderPatterns.length; value++) {\n  if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n    return value;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 71,
        "startColumnNumber" : 89,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected static int parseFinderValue(int[] counters,int[][] finderPatterns) throws NotFoundException {\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 24,
        "endLineNumber" : 72,
        "endColumnNumber" : 53
      },
      "nodeContext" : "value < finderPatterns.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 73,
      "startColumnNumber" : 56,
      "endLineNumber" : 73,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 41,
        "endLineNumber" : 73,
        "endColumnNumber" : 62
      },
      "nodeContext" : "finderPatterns[value]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 73,
        "startColumnNumber" : 10,
        "endLineNumber" : 73,
        "endColumnNumber" : 88
      },
      "nodeContext" : "patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 73,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 26
      },
      "nodeContext" : "patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n  return value;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 72,
        "startColumnNumber" : 64,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n    return value;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int value=0; value < finderPatterns.length; value++) {\n  if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n    return value;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 71,
        "startColumnNumber" : 89,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected static int parseFinderValue(int[] counters,int[][] finderPatterns) throws NotFoundException {\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 73,
        "startColumnNumber" : 10,
        "endLineNumber" : 73,
        "endColumnNumber" : 88
      },
      "nodeContext" : "patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 75,
      "startColumnNumber" : 15,
      "endLineNumber" : 75,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return value;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n  return value;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 72,
        "startColumnNumber" : 64,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n    return value;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int value=0; value < finderPatterns.length; value++) {\n  if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n    return value;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 71,
        "startColumnNumber" : 89,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected static int parseFinderValue(int[] counters,int[][] finderPatterns) throws NotFoundException {\n  for (int value=0; value < finderPatterns.length; value++) {\n    if (patternMatchVariance(counters,finderPatterns[value],MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {\n      return value;\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return value;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 72,
    "startColumnNumber" : 24,
    "endLineNumber" : 72,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 73,
    "startColumnNumber" : 56,
    "endLineNumber" : 73,
    "endColumnNumber" : 61
  }, {
    "charLength" : 5,
    "startLineNumber" : 75,
    "startColumnNumber" : 15,
    "endLineNumber" : 75,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}