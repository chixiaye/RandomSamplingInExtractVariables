{
  "id" : 309,
  "expression" : "oddSum & 0x01",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oddSum & 0x01",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 468,
      "startColumnNumber" : 9,
      "endLineNumber" : 468,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 23
      },
      "nodeContext" : "(oddSum & 0x01)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 28
      },
      "nodeContext" : "(oddSum & 0x01) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 43
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 13",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 468,
        "startColumnNumber" : 4,
        "endLineNumber" : 470,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 395,
        "startColumnNumber" : 79,
        "endLineNumber" : 482,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counters=this.getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (leftChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=17;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=1.0f * counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(numModules);\n  int weightRowNumber=4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    if (isNotA1left(pattern,isOddPattern,leftChar)) {\n      int weight=WEIGHTS[weightRowNumber][2 * i];\n      oddChecksumPortion+=oddCounts[i] * weight;\n    }\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    if (isNotA1left(pattern,isOddPattern,leftChar)) {\n      int weight=WEIGHTS[weightRowNumber][2 * i + 1];\n      evenChecksumPortion+=evenCounts[i] * weight;\n    }\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + evenChecksumPortion;\n  if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(13 - oddSum) / 2;\n  int oddWidest=SYMBOL_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n  int tEven=EVEN_TOTAL_SUBSET[group];\n  int gSum=GSUM[group];\n  int value=vOdd * tEven + vEven + gSum;\n  return new DataCharacter(value,checksumPortion);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 524,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3223,
        "startLineNumber" : 392,
        "startColumnNumber" : 2,
        "endLineNumber" : 482,
        "endColumnNumber" : 3
      },
      "nodeContext" : "DataCharacter decodeDataCharacter(BitArray row,FinderPattern pattern,boolean isOddPattern,boolean leftChar) throws NotFoundException {\n  int[] counters=this.getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (leftChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=17;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=1.0f * counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(numModules);\n  int weightRowNumber=4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    if (isNotA1left(pattern,isOddPattern,leftChar)) {\n      int weight=WEIGHTS[weightRowNumber][2 * i];\n      oddChecksumPortion+=oddCounts[i] * weight;\n    }\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    if (isNotA1left(pattern,isOddPattern,leftChar)) {\n      int weight=WEIGHTS[weightRowNumber][2 * i + 1];\n      evenChecksumPortion+=evenCounts[i] * weight;\n    }\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + evenChecksumPortion;\n  if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(13 - oddSum) / 2;\n  int oddWidest=SYMBOL_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n  int tEven=EVEN_TOTAL_SUBSET[group];\n  int gSum=GSUM[group];\n  int value=vOdd * tEven + vEven + gSum;\n  return new DataCharacter(value,checksumPortion);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 544,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 468,
    "startColumnNumber" : 9,
    "endLineNumber" : 468,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}