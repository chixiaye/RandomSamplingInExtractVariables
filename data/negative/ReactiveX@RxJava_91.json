{
  "id" : 91,
  "expression" : "2",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/single/SingleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 248,
      "startColumnNumber" : 56,
      "endLineNumber" : 248,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 248,
        "startColumnNumber" : 37,
        "endLineNumber" : 248,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new CountDownLatch(2)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 248,
        "startColumnNumber" : 29,
        "endLineNumber" : 248,
        "endColumnNumber" : 58
      },
      "nodeContext" : "latch=new CountDownLatch(2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch latch=new CountDownLatch(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1733,
        "startLineNumber" : 244,
        "startColumnNumber" : 62,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<String> ts=new TestSubscriber<String>();\n  final AtomicBoolean unsubscribed=new AtomicBoolean();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch latch=new CountDownLatch(2);\n  Single<String> s1=Single.<String>create(new SingleConsumable<String>(){\n    @Override public void subscribe(    final SingleSubscriber<? super String> s){\n      SerialDisposable sd=new SerialDisposable();\n      s.onSubscribe(sd);\n      final Thread t=new Thread(new Runnable(){\n        @Override public void run(){\n          try {\n            Thread.sleep(5000);\n            s.onSuccess(\"success\");\n          }\n catch (          InterruptedException e) {\n            interrupted.set(true);\n            latch.countDown();\n          }\n        }\n      }\n);\n      sd.replace(Disposables.from(new Runnable(){\n        @Override public void run(){\n          unsubscribed.set(true);\n          t.interrupt();\n          latch.countDown();\n        }\n      }\n));\n      t.start();\n    }\n  }\n);\n  s1.subscribe(ts);\n  Thread.sleep(100);\n  ts.dispose();\n  if (latch.await(1000,TimeUnit.MILLISECONDS)) {\n    assertTrue(unsubscribed.get());\n    assertTrue(interrupted.get());\n  }\n else {\n    fail(\"timed out waiting for latch\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnsubscribe() throws InterruptedException {\n  TestSubscriber<String> ts=new TestSubscriber<String>();\n  final AtomicBoolean unsubscribed=new AtomicBoolean();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch latch=new CountDownLatch(2);\n  Single<String> s1=Single.<String>create(new SingleConsumable<String>(){\n    @Override public void subscribe(    final SingleSubscriber<? super String> s){\n      SerialDisposable sd=new SerialDisposable();\n      s.onSubscribe(sd);\n      final Thread t=new Thread(new Runnable(){\n        @Override public void run(){\n          try {\n            Thread.sleep(5000);\n            s.onSuccess(\"success\");\n          }\n catch (          InterruptedException e) {\n            interrupted.set(true);\n            latch.countDown();\n          }\n        }\n      }\n);\n      sd.replace(Disposables.from(new Runnable(){\n        @Override public void run(){\n          unsubscribed.set(true);\n          t.interrupt();\n          latch.countDown();\n        }\n      }\n));\n      t.start();\n    }\n  }\n);\n  s1.subscribe(ts);\n  Thread.sleep(100);\n  ts.dispose();\n  if (latch.await(1000,TimeUnit.MILLISECONDS)) {\n    assertTrue(unsubscribed.get());\n    assertTrue(interrupted.get());\n  }\n else {\n    fail(\"timed out waiting for latch\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch latch=new CountDownLatch(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 248,
    "startColumnNumber" : 56,
    "endLineNumber" : 248,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}