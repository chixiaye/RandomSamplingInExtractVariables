{
  "id" : 352,
  "expression" : "Comparator.comparing(Computer::getAge)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lambdas/src/test/java/com/baeldung/doublecolon/ComputerUtilsUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Comparator.comparing(Computer::getAge)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 51,
      "startColumnNumber" : 23,
      "endLineNumber" : 51,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "inventory.sort(Comparator.comparing(Computer::getAge))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 63
      },
      "nodeContext" : "inventory.sort(Comparator.comparing(Computer::getAge));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 27,
        "startColumnNumber" : 43,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Computer c1=new Computer(2015,\"white\");\n  Computer c2=new Computer(2009,\"black\");\n  Computer c3=new Computer(2014,\"black\");\n  BiFunction<Integer,String,Computer> c4Function=Computer::new;\n  Computer c4=c4Function.apply(2013,\"white\");\n  BiFunction<Integer,String,Computer> c5Function=Computer::new;\n  Computer c5=c5Function.apply(2010,\"black\");\n  BiFunction<Integer,String,Computer> c6Function=Computer::new;\n  Computer c6=c6Function.apply(2008,\"black\");\n  List<Computer> inventory=Arrays.asList(c1,c2,c3,c4,c5,c6);\n  List<Computer> blackComputer=filter(inventory,blackPredicate);\n  Assert.assertEquals(\"The black Computers are: \",blackComputer.size(),4);\n  List<Computer> after2010Computer=filter(inventory,after2010Predicate);\n  Assert.assertEquals(\"The Computer bought after 2010 are: \",after2010Computer.size(),3);\n  List<Computer> before2011Computer=filter(inventory,c -> c.getAge() < 2011);\n  Assert.assertEquals(\"The Computer bought before 2011 are: \",before2011Computer.size(),3);\n  inventory.sort(Comparator.comparing(Computer::getAge));\n  Assert.assertEquals(\"Oldest Computer in inventory\",c6,inventory.get(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConstructorReference(){\n  Computer c1=new Computer(2015,\"white\");\n  Computer c2=new Computer(2009,\"black\");\n  Computer c3=new Computer(2014,\"black\");\n  BiFunction<Integer,String,Computer> c4Function=Computer::new;\n  Computer c4=c4Function.apply(2013,\"white\");\n  BiFunction<Integer,String,Computer> c5Function=Computer::new;\n  Computer c5=c5Function.apply(2010,\"black\");\n  BiFunction<Integer,String,Computer> c6Function=Computer::new;\n  Computer c6=c6Function.apply(2008,\"black\");\n  List<Computer> inventory=Arrays.asList(c1,c2,c3,c4,c5,c6);\n  List<Computer> blackComputer=filter(inventory,blackPredicate);\n  Assert.assertEquals(\"The black Computers are: \",blackComputer.size(),4);\n  List<Computer> after2010Computer=filter(inventory,after2010Predicate);\n  Assert.assertEquals(\"The Computer bought after 2010 are: \",after2010Computer.size(),3);\n  List<Computer> before2011Computer=filter(inventory,c -> c.getAge() < 2011);\n  Assert.assertEquals(\"The Computer bought before 2011 are: \",before2011Computer.size(),3);\n  inventory.sort(Comparator.comparing(Computer::getAge));\n  Assert.assertEquals(\"Oldest Computer in inventory\",c6,inventory.get(0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 63
      },
      "nodeContext" : "inventory.sort(Comparator.comparing(Computer::getAge));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.util.Comparator<com.baeldung.doublecolon.Computer>"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 51,
    "startColumnNumber" : 23,
    "endLineNumber" : 51,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}