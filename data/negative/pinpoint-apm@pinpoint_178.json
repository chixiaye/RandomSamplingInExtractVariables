{
  "id" : 178,
  "expression" : "Arrays.asList(tokens).subList(5,tokens.length - 1)",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/test/src/main/java/com/navercorp/pinpoint/test/plugin/PinpointPluginTestStatement.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(tokens).subList(5,tokens.length - 1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 95,
      "startColumnNumber" : 70,
      "endLineNumber" : 95,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 95,
        "startColumnNumber" : 50,
        "endLineNumber" : 95,
        "endColumnNumber" : 155
      },
      "nodeContext" : "tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 95,
        "startColumnNumber" : 37,
        "endLineNumber" : 95,
        "endColumnNumber" : 155
      },
      "nodeContext" : "stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 95,
        "startColumnNumber" : 24,
        "endLineNumber" : 95,
        "endColumnNumber" : 156
      },
      "nodeContext" : "List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 94,
        "startColumnNumber" : 60,
        "endLineNumber" : 98,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 94,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 88,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1569,
        "startLineNumber" : 86,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testRunFinished\".equals(event)) {\n  notifier.fireTestRunFinished(result);\n}\n else if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 197,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1706,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testRunStarted\".equals(event)) {\n  notifier.fireTestRunStarted(parentDescription);\n}\n else if (\"testRunFinished\".equals(event)) {\n  notifier.fireTestRunFinished(result);\n}\n else if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 208,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 79,
        "startColumnNumber" : 61,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  System.out.println(line);\n  String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n  String event=tokens[1];\n  if (\"testRunStarted\".equals(event)) {\n    notifier.fireTestRunStarted(parentDescription);\n  }\n else   if (\"testRunFinished\".equals(event)) {\n    notifier.fireTestRunFinished(result);\n  }\n else   if (\"testStarted\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestStarted(ofTest);\n  }\n else   if (\"testFinished\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestFinished(ofTest);\n  }\n else   if (\"testFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestFailure(failure);\n  }\n else   if (\"testAssumptionFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestAssumptionFailed(failure);\n  }\n else   if (\"testIgnored\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestIgnored(ofTest);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2040,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n  System.out.println(line);\n  String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n  String event=tokens[1];\n  if (\"testRunStarted\".equals(event)) {\n    notifier.fireTestRunStarted(parentDescription);\n  }\n else   if (\"testRunFinished\".equals(event)) {\n    notifier.fireTestRunFinished(result);\n  }\n else   if (\"testStarted\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestStarted(ofTest);\n  }\n else   if (\"testFinished\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestFinished(ofTest);\n  }\n else   if (\"testFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestFailure(failure);\n  }\n else   if (\"testAssumptionFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestAssumptionFailed(failure);\n  }\n else   if (\"testIgnored\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestIgnored(ofTest);\n  }\n}\n else {\n  System.out.println(line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2127,
        "startLineNumber" : 76,
        "startColumnNumber" : 42,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String line=scanner.nextLine();\n  if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n    System.out.println(line);\n    String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n    String event=tokens[1];\n    if (\"testRunStarted\".equals(event)) {\n      notifier.fireTestRunStarted(parentDescription);\n    }\n else     if (\"testRunFinished\".equals(event)) {\n      notifier.fireTestRunFinished(result);\n    }\n else     if (\"testStarted\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestStarted(ofTest);\n    }\n else     if (\"testFinished\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestFinished(ofTest);\n    }\n else     if (\"testFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestFailure(failure);\n    }\n else     if (\"testAssumptionFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestAssumptionFailed(failure);\n    }\n else     if (\"testIgnored\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestIgnored(ofTest);\n    }\n  }\n else {\n    System.out.println(line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2157,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (scanner.hasNextLine()) {\n  String line=scanner.nextLine();\n  if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n    System.out.println(line);\n    String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n    String event=tokens[1];\n    if (\"testRunStarted\".equals(event)) {\n      notifier.fireTestRunStarted(parentDescription);\n    }\n else     if (\"testRunFinished\".equals(event)) {\n      notifier.fireTestRunFinished(result);\n    }\n else     if (\"testStarted\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestStarted(ofTest);\n    }\n else     if (\"testFinished\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestFinished(ofTest);\n    }\n else     if (\"testFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestFailure(failure);\n    }\n else     if (\"testAssumptionFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestAssumptionFailed(failure);\n    }\n else     if (\"testIgnored\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestIgnored(ofTest);\n    }\n  }\n else {\n    System.out.println(line);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 261,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2241,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Scanner scanner=testCase.startTest(process);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n      System.out.println(line);\n      String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n      String event=tokens[1];\n      if (\"testRunStarted\".equals(event)) {\n        notifier.fireTestRunStarted(parentDescription);\n      }\n else       if (\"testRunFinished\".equals(event)) {\n        notifier.fireTestRunFinished(result);\n      }\n else       if (\"testStarted\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestStarted(ofTest);\n      }\n else       if (\"testFinished\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestFinished(ofTest);\n      }\n else       if (\"testFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestFailure(failure);\n      }\n else       if (\"testAssumptionFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestAssumptionFailed(failure);\n      }\n else       if (\"testIgnored\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestIgnored(ofTest);\n      }\n    }\n else {\n      System.out.println(line);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 271,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3020,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Scanner scanner=testCase.startTest(process);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n      System.out.println(line);\n      String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n      String event=tokens[1];\n      if (\"testRunStarted\".equals(event)) {\n        notifier.fireTestRunStarted(parentDescription);\n      }\n else       if (\"testRunFinished\".equals(event)) {\n        notifier.fireTestRunFinished(result);\n      }\n else       if (\"testStarted\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestStarted(ofTest);\n      }\n else       if (\"testFinished\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestFinished(ofTest);\n      }\n else       if (\"testFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestFailure(failure);\n      }\n else       if (\"testAssumptionFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestAssumptionFailed(failure);\n      }\n else       if (\"testIgnored\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestIgnored(ofTest);\n      }\n    }\n else {\n      System.out.println(line);\n    }\n  }\n}\n catch (Throwable t) {\n  System.err.println(\"Failed to execute test\");\n  t.printStackTrace();\n  throw t;\n}\n finally {\n  try {\n    testCase.endTest(process);\n  }\n  finally {\n    Timer timer=new Timer();\n    timer.schedule(new TimerTask(){\n      @Override public void run(){\n        process.destroy();\n      }\n    }\n,10 * 1000);\n    try {\n      process.waitFor();\n    }\n catch (    InterruptedException e) {\n    }\n    timer.cancel();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 346,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3531,
        "startLineNumber" : 59,
        "startColumnNumber" : 44,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProcessBuilder builder=new ProcessBuilder();\n  builder.command(buildCommand());\n  builder.redirectErrorStream(true);\n  builder.directory(testCase.getWorkingDirectory());\n  System.out.println(\"Working directory: \" + SystemProperty.INSTANCE.getProperty(\"user.dir\"));\n  System.out.println(\"Command: \" + builder.command());\n  Description parentDescription=runner.getDescription();\n  final Process process=builder.start();\n  try {\n    Scanner scanner=testCase.startTest(process);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n        System.out.println(line);\n        String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n        String event=tokens[1];\n        if (\"testRunStarted\".equals(event)) {\n          notifier.fireTestRunStarted(parentDescription);\n        }\n else         if (\"testRunFinished\".equals(event)) {\n          notifier.fireTestRunFinished(result);\n        }\n else         if (\"testStarted\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestStarted(ofTest);\n        }\n else         if (\"testFinished\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestFinished(ofTest);\n        }\n else         if (\"testFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestFailure(failure);\n        }\n else         if (\"testAssumptionFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestAssumptionFailed(failure);\n        }\n else         if (\"testIgnored\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestIgnored(ofTest);\n        }\n      }\n else {\n        System.out.println(line);\n      }\n    }\n  }\n catch (  Throwable t) {\n    System.err.println(\"Failed to execute test\");\n    t.printStackTrace();\n    throw t;\n  }\n finally {\n    try {\n      testCase.endTest(process);\n    }\n  finally {\n      Timer timer=new Timer();\n      timer.schedule(new TimerTask(){\n        @Override public void run(){\n          process.destroy();\n        }\n      }\n,10 * 1000);\n      try {\n        process.waitFor();\n      }\n catch (      InterruptedException e) {\n      }\n      timer.cancel();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 415,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3585,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void evaluate() throws Throwable {\n  ProcessBuilder builder=new ProcessBuilder();\n  builder.command(buildCommand());\n  builder.redirectErrorStream(true);\n  builder.directory(testCase.getWorkingDirectory());\n  System.out.println(\"Working directory: \" + SystemProperty.INSTANCE.getProperty(\"user.dir\"));\n  System.out.println(\"Command: \" + builder.command());\n  Description parentDescription=runner.getDescription();\n  final Process process=builder.start();\n  try {\n    Scanner scanner=testCase.startTest(process);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n        System.out.println(line);\n        String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n        String event=tokens[1];\n        if (\"testRunStarted\".equals(event)) {\n          notifier.fireTestRunStarted(parentDescription);\n        }\n else         if (\"testRunFinished\".equals(event)) {\n          notifier.fireTestRunFinished(result);\n        }\n else         if (\"testStarted\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestStarted(ofTest);\n        }\n else         if (\"testFinished\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestFinished(ofTest);\n        }\n else         if (\"testFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestFailure(failure);\n        }\n else         if (\"testAssumptionFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestAssumptionFailed(failure);\n        }\n else         if (\"testIgnored\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestIgnored(ofTest);\n        }\n      }\n else {\n        System.out.println(line);\n      }\n    }\n  }\n catch (  Throwable t) {\n    System.err.println(\"Failed to execute test\");\n    t.printStackTrace();\n    throw t;\n  }\n finally {\n    try {\n      testCase.endTest(process);\n    }\n  finally {\n      Timer timer=new Timer();\n      timer.schedule(new TimerTask(){\n        @Override public void run(){\n          process.destroy();\n        }\n      }\n,10 * 1000);\n      try {\n        process.waitFor();\n      }\n catch (      InterruptedException e) {\n      }\n      timer.cancel();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 423,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 95,
        "startColumnNumber" : 24,
        "endLineNumber" : 95,
        "endColumnNumber" : 156
      },
      "nodeContext" : "List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 9,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "Arrays.asList(tokens).subList(5,tokens.length - 1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 99,
      "startColumnNumber" : 70,
      "endLineNumber" : 99,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 99,
        "startColumnNumber" : 50,
        "endLineNumber" : 99,
        "endColumnNumber" : 155
      },
      "nodeContext" : "tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 99,
        "startColumnNumber" : 37,
        "endLineNumber" : 99,
        "endColumnNumber" : 155
      },
      "nodeContext" : "stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 99,
        "startColumnNumber" : 24,
        "endLineNumber" : 99,
        "endColumnNumber" : 156
      },
      "nodeContext" : "List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 98,
        "startColumnNumber" : 70,
        "endLineNumber" : 102,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 98,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 94,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 88,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1569,
        "startLineNumber" : 86,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testRunFinished\".equals(event)) {\n  notifier.fireTestRunFinished(result);\n}\n else if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 197,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1706,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"testRunStarted\".equals(event)) {\n  notifier.fireTestRunStarted(parentDescription);\n}\n else if (\"testRunFinished\".equals(event)) {\n  notifier.fireTestRunFinished(result);\n}\n else if (\"testStarted\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestStarted(ofTest);\n}\n else if (\"testFinished\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestFinished(ofTest);\n}\n else if (\"testFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestFailure(failure);\n}\n else if (\"testAssumptionFailure\".equals(event)) {\n  List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n  Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n  notifier.fireTestAssumptionFailed(failure);\n}\n else if (\"testIgnored\".equals(event)) {\n  Description ofTest=findDescription(parentDescription,tokens[2]);\n  notifier.fireTestIgnored(ofTest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 208,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 79,
        "startColumnNumber" : 61,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  System.out.println(line);\n  String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n  String event=tokens[1];\n  if (\"testRunStarted\".equals(event)) {\n    notifier.fireTestRunStarted(parentDescription);\n  }\n else   if (\"testRunFinished\".equals(event)) {\n    notifier.fireTestRunFinished(result);\n  }\n else   if (\"testStarted\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestStarted(ofTest);\n  }\n else   if (\"testFinished\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestFinished(ofTest);\n  }\n else   if (\"testFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestFailure(failure);\n  }\n else   if (\"testAssumptionFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestAssumptionFailed(failure);\n  }\n else   if (\"testIgnored\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestIgnored(ofTest);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2040,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n  System.out.println(line);\n  String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n  String event=tokens[1];\n  if (\"testRunStarted\".equals(event)) {\n    notifier.fireTestRunStarted(parentDescription);\n  }\n else   if (\"testRunFinished\".equals(event)) {\n    notifier.fireTestRunFinished(result);\n  }\n else   if (\"testStarted\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestStarted(ofTest);\n  }\n else   if (\"testFinished\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestFinished(ofTest);\n  }\n else   if (\"testFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestFailure(failure);\n  }\n else   if (\"testAssumptionFailure\".equals(event)) {\n    List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n    Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n    notifier.fireTestAssumptionFailed(failure);\n  }\n else   if (\"testIgnored\".equals(event)) {\n    Description ofTest=findDescription(parentDescription,tokens[2]);\n    notifier.fireTestIgnored(ofTest);\n  }\n}\n else {\n  System.out.println(line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2127,
        "startLineNumber" : 76,
        "startColumnNumber" : 42,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String line=scanner.nextLine();\n  if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n    System.out.println(line);\n    String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n    String event=tokens[1];\n    if (\"testRunStarted\".equals(event)) {\n      notifier.fireTestRunStarted(parentDescription);\n    }\n else     if (\"testRunFinished\".equals(event)) {\n      notifier.fireTestRunFinished(result);\n    }\n else     if (\"testStarted\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestStarted(ofTest);\n    }\n else     if (\"testFinished\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestFinished(ofTest);\n    }\n else     if (\"testFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestFailure(failure);\n    }\n else     if (\"testAssumptionFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestAssumptionFailed(failure);\n    }\n else     if (\"testIgnored\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestIgnored(ofTest);\n    }\n  }\n else {\n    System.out.println(line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2157,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (scanner.hasNextLine()) {\n  String line=scanner.nextLine();\n  if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n    System.out.println(line);\n    String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n    String event=tokens[1];\n    if (\"testRunStarted\".equals(event)) {\n      notifier.fireTestRunStarted(parentDescription);\n    }\n else     if (\"testRunFinished\".equals(event)) {\n      notifier.fireTestRunFinished(result);\n    }\n else     if (\"testStarted\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestStarted(ofTest);\n    }\n else     if (\"testFinished\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestFinished(ofTest);\n    }\n else     if (\"testFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestFailure(failure);\n    }\n else     if (\"testAssumptionFailure\".equals(event)) {\n      List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n      Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n      notifier.fireTestAssumptionFailed(failure);\n    }\n else     if (\"testIgnored\".equals(event)) {\n      Description ofTest=findDescription(parentDescription,tokens[2]);\n      notifier.fireTestIgnored(ofTest);\n    }\n  }\n else {\n    System.out.println(line);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 261,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2241,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Scanner scanner=testCase.startTest(process);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n      System.out.println(line);\n      String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n      String event=tokens[1];\n      if (\"testRunStarted\".equals(event)) {\n        notifier.fireTestRunStarted(parentDescription);\n      }\n else       if (\"testRunFinished\".equals(event)) {\n        notifier.fireTestRunFinished(result);\n      }\n else       if (\"testStarted\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestStarted(ofTest);\n      }\n else       if (\"testFinished\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestFinished(ofTest);\n      }\n else       if (\"testFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestFailure(failure);\n      }\n else       if (\"testAssumptionFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestAssumptionFailed(failure);\n      }\n else       if (\"testIgnored\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestIgnored(ofTest);\n      }\n    }\n else {\n      System.out.println(line);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 271,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3020,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Scanner scanner=testCase.startTest(process);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n      System.out.println(line);\n      String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n      String event=tokens[1];\n      if (\"testRunStarted\".equals(event)) {\n        notifier.fireTestRunStarted(parentDescription);\n      }\n else       if (\"testRunFinished\".equals(event)) {\n        notifier.fireTestRunFinished(result);\n      }\n else       if (\"testStarted\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestStarted(ofTest);\n      }\n else       if (\"testFinished\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestFinished(ofTest);\n      }\n else       if (\"testFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestFailure(failure);\n      }\n else       if (\"testAssumptionFailure\".equals(event)) {\n        List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n        Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n        notifier.fireTestAssumptionFailed(failure);\n      }\n else       if (\"testIgnored\".equals(event)) {\n        Description ofTest=findDescription(parentDescription,tokens[2]);\n        notifier.fireTestIgnored(ofTest);\n      }\n    }\n else {\n      System.out.println(line);\n    }\n  }\n}\n catch (Throwable t) {\n  System.err.println(\"Failed to execute test\");\n  t.printStackTrace();\n  throw t;\n}\n finally {\n  try {\n    testCase.endTest(process);\n  }\n  finally {\n    Timer timer=new Timer();\n    timer.schedule(new TimerTask(){\n      @Override public void run(){\n        process.destroy();\n      }\n    }\n,10 * 1000);\n    try {\n      process.waitFor();\n    }\n catch (    InterruptedException e) {\n    }\n    timer.cancel();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 346,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3531,
        "startLineNumber" : 59,
        "startColumnNumber" : 44,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProcessBuilder builder=new ProcessBuilder();\n  builder.command(buildCommand());\n  builder.redirectErrorStream(true);\n  builder.directory(testCase.getWorkingDirectory());\n  System.out.println(\"Working directory: \" + SystemProperty.INSTANCE.getProperty(\"user.dir\"));\n  System.out.println(\"Command: \" + builder.command());\n  Description parentDescription=runner.getDescription();\n  final Process process=builder.start();\n  try {\n    Scanner scanner=testCase.startTest(process);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n        System.out.println(line);\n        String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n        String event=tokens[1];\n        if (\"testRunStarted\".equals(event)) {\n          notifier.fireTestRunStarted(parentDescription);\n        }\n else         if (\"testRunFinished\".equals(event)) {\n          notifier.fireTestRunFinished(result);\n        }\n else         if (\"testStarted\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestStarted(ofTest);\n        }\n else         if (\"testFinished\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestFinished(ofTest);\n        }\n else         if (\"testFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestFailure(failure);\n        }\n else         if (\"testAssumptionFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestAssumptionFailed(failure);\n        }\n else         if (\"testIgnored\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestIgnored(ofTest);\n        }\n      }\n else {\n        System.out.println(line);\n      }\n    }\n  }\n catch (  Throwable t) {\n    System.err.println(\"Failed to execute test\");\n    t.printStackTrace();\n    throw t;\n  }\n finally {\n    try {\n      testCase.endTest(process);\n    }\n  finally {\n      Timer timer=new Timer();\n      timer.schedule(new TimerTask(){\n        @Override public void run(){\n          process.destroy();\n        }\n      }\n,10 * 1000);\n      try {\n        process.waitFor();\n      }\n catch (      InterruptedException e) {\n      }\n      timer.cancel();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 415,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3585,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void evaluate() throws Throwable {\n  ProcessBuilder builder=new ProcessBuilder();\n  builder.command(buildCommand());\n  builder.redirectErrorStream(true);\n  builder.directory(testCase.getWorkingDirectory());\n  System.out.println(\"Working directory: \" + SystemProperty.INSTANCE.getProperty(\"user.dir\"));\n  System.out.println(\"Command: \" + builder.command());\n  Description parentDescription=runner.getDescription();\n  final Process process=builder.start();\n  try {\n    Scanner scanner=testCase.startTest(process);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line.startsWith(JUNIT_OUTPUT_DELIMITER)) {\n        System.out.println(line);\n        String[] tokens=line.split(JUNIT_OUTPUT_DELIMITER_REGEXP);\n        String event=tokens[1];\n        if (\"testRunStarted\".equals(event)) {\n          notifier.fireTestRunStarted(parentDescription);\n        }\n else         if (\"testRunFinished\".equals(event)) {\n          notifier.fireTestRunFinished(result);\n        }\n else         if (\"testStarted\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestStarted(ofTest);\n        }\n else         if (\"testFinished\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestFinished(ofTest);\n        }\n else         if (\"testFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestFailure(failure);\n        }\n else         if (\"testAssumptionFailure\".equals(event)) {\n          List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n          Failure failure=toFailure(parentDescription,tokens[2],tokens[3],tokens[4],stackTrace);\n          notifier.fireTestAssumptionFailed(failure);\n        }\n else         if (\"testIgnored\".equals(event)) {\n          Description ofTest=findDescription(parentDescription,tokens[2]);\n          notifier.fireTestIgnored(ofTest);\n        }\n      }\n else {\n        System.out.println(line);\n      }\n    }\n  }\n catch (  Throwable t) {\n    System.err.println(\"Failed to execute test\");\n    t.printStackTrace();\n    throw t;\n  }\n finally {\n    try {\n      testCase.endTest(process);\n    }\n  finally {\n      Timer timer=new Timer();\n      timer.schedule(new TimerTask(){\n        @Override public void run(){\n          process.destroy();\n        }\n      }\n,10 * 1000);\n      try {\n        process.waitFor();\n      }\n catch (      InterruptedException e) {\n      }\n      timer.cancel();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 423,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 99,
        "startColumnNumber" : 24,
        "endLineNumber" : 99,
        "endColumnNumber" : 156
      },
      "nodeContext" : "List<String> stackTrace=tokens.length > 5 ? Arrays.asList(tokens).subList(5,tokens.length - 1) : Collections.<String>emptyList();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 9,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 95,
    "startColumnNumber" : 70,
    "endLineNumber" : 95,
    "endColumnNumber" : 121
  }, {
    "charLength" : 51,
    "startLineNumber" : 99,
    "startColumnNumber" : 70,
    "endLineNumber" : 99,
    "endColumnNumber" : 121
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}