{
  "id" : 515,
  "expression" : "\"The iterator returned is null\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/single/SingleAmbIterable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"The iterator returned is null\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 46,
      "startColumnNumber" : 47,
      "endLineNumber" : 46,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 46,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new NullPointerException(\"The iterator returned is null\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 80
      },
      "nodeContext" : "s.onError(new NullPointerException(\"The iterator returned is null\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 81
      },
      "nodeContext" : "s.onError(new NullPointerException(\"The iterator returned is null\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 45,
        "startColumnNumber" : 30,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  s.onError(new NullPointerException(\"The iterator returned is null\"));\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (iterator == null) {\n  s.onError(new NullPointerException(\"The iterator returned is null\"));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2529,
        "startLineNumber" : 32,
        "startColumnNumber" : 72,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompositeDisposable set=new CompositeDisposable();\n  s.onSubscribe(set);\n  Iterator<? extends SingleConsumable<? extends T>> iterator;\n  try {\n    iterator=sources.iterator();\n  }\n catch (  Throwable e) {\n    s.onError(e);\n    return;\n  }\n  if (iterator == null) {\n    s.onError(new NullPointerException(\"The iterator returned is null\"));\n    return;\n  }\n  final AtomicBoolean once=new AtomicBoolean();\n  int c=0;\n  for (; ; ) {\n    if (once.get()) {\n      return;\n    }\n    boolean b;\n    try {\n      b=iterator.hasNext();\n    }\n catch (    Throwable e) {\n      s.onError(e);\n      return;\n    }\n    if (once.get()) {\n      return;\n    }\n    if (!b) {\n      break;\n    }\n    if (once.get()) {\n      return;\n    }\n    SingleConsumable<? extends T> s1;\n    try {\n      s1=iterator.next();\n    }\n catch (    Throwable e) {\n      set.dispose();\n      s.onError(e);\n      return;\n    }\n    if (s1 == null) {\n      set.dispose();\n      s.onError(new NullPointerException(\"The single source returned by the iterator is null\"));\n      return;\n    }\n    s1.subscribe(new SingleSubscriber<T>(){\n      @Override public void onSubscribe(      Disposable d){\n        set.add(d);\n      }\n      @Override public void onSuccess(      T value){\n        if (once.compareAndSet(false,true)) {\n          s.onSuccess(value);\n        }\n      }\n      @Override public void onError(      Throwable e){\n        if (once.compareAndSet(false,true)) {\n          s.onError(e);\n        }\n else {\n          RxJavaPlugins.onError(e);\n        }\n      }\n    }\n);\n    c++;\n  }\n  if (c == 0 && !set.isDisposed()) {\n    s.onError(new NoSuchElementException());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 275,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2612,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void subscribeActual(final SingleSubscriber<? super T> s){\n  final CompositeDisposable set=new CompositeDisposable();\n  s.onSubscribe(set);\n  Iterator<? extends SingleConsumable<? extends T>> iterator;\n  try {\n    iterator=sources.iterator();\n  }\n catch (  Throwable e) {\n    s.onError(e);\n    return;\n  }\n  if (iterator == null) {\n    s.onError(new NullPointerException(\"The iterator returned is null\"));\n    return;\n  }\n  final AtomicBoolean once=new AtomicBoolean();\n  int c=0;\n  for (; ; ) {\n    if (once.get()) {\n      return;\n    }\n    boolean b;\n    try {\n      b=iterator.hasNext();\n    }\n catch (    Throwable e) {\n      s.onError(e);\n      return;\n    }\n    if (once.get()) {\n      return;\n    }\n    if (!b) {\n      break;\n    }\n    if (once.get()) {\n      return;\n    }\n    SingleConsumable<? extends T> s1;\n    try {\n      s1=iterator.next();\n    }\n catch (    Throwable e) {\n      set.dispose();\n      s.onError(e);\n      return;\n    }\n    if (s1 == null) {\n      set.dispose();\n      s.onError(new NullPointerException(\"The single source returned by the iterator is null\"));\n      return;\n    }\n    s1.subscribe(new SingleSubscriber<T>(){\n      @Override public void onSubscribe(      Disposable d){\n        set.add(d);\n      }\n      @Override public void onSuccess(      T value){\n        if (once.compareAndSet(false,true)) {\n          s.onSuccess(value);\n        }\n      }\n      @Override public void onError(      Throwable e){\n        if (once.compareAndSet(false,true)) {\n          s.onError(e);\n        }\n else {\n          RxJavaPlugins.onError(e);\n        }\n      }\n    }\n);\n    c++;\n  }\n  if (c == 0 && !set.isDisposed()) {\n    s.onError(new NoSuchElementException());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 81
      },
      "nodeContext" : "s.onError(new NullPointerException(\"The iterator returned is null\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 46,
    "startColumnNumber" : 47,
    "endLineNumber" : 46,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}