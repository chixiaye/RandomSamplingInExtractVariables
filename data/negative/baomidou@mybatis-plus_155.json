{
  "id" : 155,
  "expression" : "++i",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "c44a91feea9d6fa6d61acab58463fd0406fe6005",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/toolkit/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "++i",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 131,
      "startColumnNumber" : 8,
      "endLineNumber" : 131,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 17
      },
      "nodeContext" : "++i < len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (++i < len) {\n  sb.append(Character.toUpperCase(temp.charAt(i)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 130,
        "startColumnNumber" : 23,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (++i < len) {\n    sb.append(Character.toUpperCase(temp.charAt(i)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 130,
        "startColumnNumber" : 3,
        "endLineNumber" : 136,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (c == UNDERLINE) {\n  if (++i < len) {\n    sb.append(Character.toUpperCase(temp.charAt(i)));\n  }\n}\n else {\n  sb.append(c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 128,
        "startColumnNumber" : 32,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c=temp.charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(temp.charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  char c=temp.charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(temp.charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 121,
        "startColumnNumber" : 53,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String temp=param.toLowerCase();\n  int len=temp.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=temp.charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(temp.charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 112,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <p> 字符串下划线转驼峰格式 </p>\n * @param param 需要转换的字符串\n * @return 转换好的字符串\n */\npublic static String underlineToCamel(String param){\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String temp=param.toLowerCase();\n  int len=temp.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=temp.charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(temp.charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 17
      },
      "nodeContext" : "++i < len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 131,
    "startColumnNumber" : 8,
    "endLineNumber" : 131,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ ]
}