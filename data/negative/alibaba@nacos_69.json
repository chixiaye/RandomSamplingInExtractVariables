{
  "id" : 69,
  "expression" : "service",
  "projectName" : "alibaba@nacos",
  "commitID" : "ac73e7395ebf04141d94d7608551b2efa5e82de1",
  "filePath" : "naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 166,
      "startColumnNumber" : 52,
      "endLineNumber" : 166,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 82
      },
      "nodeContext" : "clientOperationService.subscribeService(service,subscriber,clientId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 83
      },
      "nodeContext" : "clientOperationService.subscribeService(service,subscriber,clientId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(clientId,true);\n  clientOperationService.subscribeService(service,subscriber,clientId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != subscriber) {\n  String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(clientId,true);\n  clientOperationService.subscribeService(service,subscriber,clientId);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(clientId,true);\n    clientOperationService.subscribeService(service,subscriber,clientId);\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ServiceInfo listInstance(String namespaceId,String serviceName,Subscriber subscriber,String cluster,boolean healthOnly){\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(clientId,true);\n    clientOperationService.subscribeService(service,subscriber,clientId);\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 83
      },
      "nodeContext" : "clientOperationService.subscribeService(service,subscriber,clientId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.v2.pojo.Service"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 168,
      "startColumnNumber" : 57,
      "endLineNumber" : 168,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 168,
        "startColumnNumber" : 34,
        "endLineNumber" : 168,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serviceStorage.getData(service)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serviceInfo=serviceStorage.getData(service)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 168,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ServiceInfo serviceInfo=serviceStorage.getData(service);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(clientId,true);\n    clientOperationService.subscribeService(service,subscriber,clientId);\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ServiceInfo listInstance(String namespaceId,String serviceName,Subscriber subscriber,String cluster,boolean healthOnly){\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String clientId=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(clientId,true);\n    clientOperationService.subscribeService(service,subscriber,clientId);\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 168,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ServiceInfo serviceInfo=serviceStorage.getData(service);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.v2.pojo.Service"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 166,
    "startColumnNumber" : 52,
    "endLineNumber" : 166,
    "endColumnNumber" : 59
  }, {
    "charLength" : 7,
    "startLineNumber" : 168,
    "startColumnNumber" : 57,
    "endLineNumber" : 168,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}