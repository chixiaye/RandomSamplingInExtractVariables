{
  "id" : 164,
  "expression" : "\"/auth/realms/demo/protocol/saml\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/test-apps/servlets/src/main/java/org/keycloak/testsuite/adapter/servlet/SamlSPFacade.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/auth/realms/demo/protocol/saml\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 103,
      "startColumnNumber" : 77,
      "endLineNumber" : 103,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 103,
        "endColumnNumber" : 110
      },
      "nodeContext" : "ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 103,
        "endColumnNumber" : 110
      },
      "nodeContext" : "authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 111
      },
      "nodeContext" : "String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BaseSAML2BindingBuilder binding=new BaseSAML2BindingBuilder();\n  SAML2Request samlReq=new SAML2Request();\n  String appServerUrl=ServletTestUtils.getUrlBase() + \"/employee/\";\n  String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n  AuthnRequestType loginReq;\n  loginReq=samlReq.createAuthnRequestType(UUID.randomUUID().toString(),appServerUrl,authServerUrl,\"http://localhost:8280/employee/\");\n  loginReq.getNameIDPolicy().setFormat(JBossSAMLURIConstants.NAMEID_FORMAT_UNSPECIFIED.getUri());\n  return binding.redirectBinding(SAML2Request.convert(loginReq)).requestURI(authServerUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  BaseSAML2BindingBuilder binding=new BaseSAML2BindingBuilder();\n  SAML2Request samlReq=new SAML2Request();\n  String appServerUrl=ServletTestUtils.getUrlBase() + \"/employee/\";\n  String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n  AuthnRequestType loginReq;\n  loginReq=samlReq.createAuthnRequestType(UUID.randomUUID().toString(),appServerUrl,authServerUrl,\"http://localhost:8280/employee/\");\n  loginReq.getNameIDPolicy().setFormat(JBossSAMLURIConstants.NAMEID_FORMAT_UNSPECIFIED.getUri());\n  return binding.redirectBinding(SAML2Request.convert(loginReq)).requestURI(authServerUrl);\n}\n catch (IOException|ConfigurationException|ParsingException|ProcessingException ex) {\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 98,
        "startColumnNumber" : 60,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    BaseSAML2BindingBuilder binding=new BaseSAML2BindingBuilder();\n    SAML2Request samlReq=new SAML2Request();\n    String appServerUrl=ServletTestUtils.getUrlBase() + \"/employee/\";\n    String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n    AuthnRequestType loginReq;\n    loginReq=samlReq.createAuthnRequestType(UUID.randomUUID().toString(),appServerUrl,authServerUrl,\"http://localhost:8280/employee/\");\n    loginReq.getNameIDPolicy().setFormat(JBossSAMLURIConstants.NAMEID_FORMAT_UNSPECIFIED.getUri());\n    return binding.redirectBinding(SAML2Request.convert(loginReq)).requestURI(authServerUrl);\n  }\n catch (  IOException|ConfigurationException|ParsingException|ProcessingException ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private URI getSamlAuthnRequest(HttpServletRequest req){\n  try {\n    BaseSAML2BindingBuilder binding=new BaseSAML2BindingBuilder();\n    SAML2Request samlReq=new SAML2Request();\n    String appServerUrl=ServletTestUtils.getUrlBase() + \"/employee/\";\n    String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n    AuthnRequestType loginReq;\n    loginReq=samlReq.createAuthnRequestType(UUID.randomUUID().toString(),appServerUrl,authServerUrl,\"http://localhost:8280/employee/\");\n    loginReq.getNameIDPolicy().setFormat(JBossSAMLURIConstants.NAMEID_FORMAT_UNSPECIFIED.getUri());\n    return binding.redirectBinding(SAML2Request.convert(loginReq)).requestURI(authServerUrl);\n  }\n catch (  IOException|ConfigurationException|ParsingException|ProcessingException ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 111
      },
      "nodeContext" : "String authServerUrl=ServletTestUtils.getAuthServerUrlBase() + \"/auth/realms/demo/protocol/saml\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 103,
    "startColumnNumber" : 77,
    "endLineNumber" : 103,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ ]
}