{
  "id" : 49,
  "expression" : "messageExtBatch.getReconsumeTimes()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/main/java/org/apache/rocketmq/store/CommitLog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "messageExtBatch.getReconsumeTimes()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 1511,
      "startColumnNumber" : 43,
      "endLineNumber" : 1511,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 1511,
        "startColumnNumber" : 16,
        "endLineNumber" : 1511,
        "endColumnNumber" : 79
      },
      "nodeContext" : "this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 1511,
        "startColumnNumber" : 16,
        "endLineNumber" : 1511,
        "endColumnNumber" : 80
      },
      "nodeContext" : "this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3869,
        "startLineNumber" : 1446,
        "startColumnNumber" : 52,
        "endLineNumber" : 1525,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  messagesByteBuff.getInt();\n  messagesByteBuff.getInt();\n  messagesByteBuff.getInt();\n  int flag=messagesByteBuff.getInt();\n  int bodyLen=messagesByteBuff.getInt();\n  int bodyPos=messagesByteBuff.position();\n  int bodyCrc=UtilAll.crc32(messagesByteBuff.array(),bodyPos,bodyLen);\n  messagesByteBuff.position(bodyPos + bodyLen);\n  short propertiesLen=messagesByteBuff.getShort();\n  int propertiesPos=messagesByteBuff.position();\n  messagesByteBuff.position(propertiesPos + propertiesLen);\n  final byte[] topicData=messageExtBatch.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);\n  final int topicLength=topicData.length;\n  final int msgLen=calMsgLength(bodyLen,topicLength,propertiesLen);\n  if (msgLen > this.maxMessageSize) {\n    CommitLog.log.warn(\"message size exceeded, msg total size: \" + msgLen + \", msg body size: \"+ bodyLen+ \", maxMessageSize: \"+ this.maxMessageSize);\n    throw new RuntimeException(\"message size exceeded\");\n  }\n  totalMsgLen+=msgLen;\n  if (totalMsgLen > maxMessageSize) {\n    throw new RuntimeException(\"message size exceeded\");\n  }\n  this.msgBatchMemory.putInt(msgLen);\n  this.msgBatchMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);\n  this.msgBatchMemory.putInt(bodyCrc);\n  this.msgBatchMemory.putInt(messageExtBatch.getQueueId());\n  this.msgBatchMemory.putInt(flag);\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putInt(messageExtBatch.getSysFlag());\n  this.msgBatchMemory.putLong(messageExtBatch.getBornTimestamp());\n  this.resetByteBuffer(hostHolder,8);\n  this.msgBatchMemory.put(messageExtBatch.getBornHostBytes(hostHolder));\n  this.msgBatchMemory.putLong(messageExtBatch.getStoreTimestamp());\n  this.resetByteBuffer(hostHolder,8);\n  this.msgBatchMemory.put(messageExtBatch.getStoreHostBytes(hostHolder));\n  this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putInt(bodyLen);\n  if (bodyLen > 0)   this.msgBatchMemory.put(messagesByteBuff.array(),bodyPos,bodyLen);\n  this.msgBatchMemory.put((byte)topicLength);\n  this.msgBatchMemory.put(topicData);\n  this.msgBatchMemory.putShort(propertiesLen);\n  if (propertiesLen > 0)   this.msgBatchMemory.put(messagesByteBuff.array(),propertiesPos,propertiesLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3909,
        "startLineNumber" : 1446,
        "startColumnNumber" : 12,
        "endLineNumber" : 1525,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (messagesByteBuff.hasRemaining()) {\n  messagesByteBuff.getInt();\n  messagesByteBuff.getInt();\n  messagesByteBuff.getInt();\n  int flag=messagesByteBuff.getInt();\n  int bodyLen=messagesByteBuff.getInt();\n  int bodyPos=messagesByteBuff.position();\n  int bodyCrc=UtilAll.crc32(messagesByteBuff.array(),bodyPos,bodyLen);\n  messagesByteBuff.position(bodyPos + bodyLen);\n  short propertiesLen=messagesByteBuff.getShort();\n  int propertiesPos=messagesByteBuff.position();\n  messagesByteBuff.position(propertiesPos + propertiesLen);\n  final byte[] topicData=messageExtBatch.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);\n  final int topicLength=topicData.length;\n  final int msgLen=calMsgLength(bodyLen,topicLength,propertiesLen);\n  if (msgLen > this.maxMessageSize) {\n    CommitLog.log.warn(\"message size exceeded, msg total size: \" + msgLen + \", msg body size: \"+ bodyLen+ \", maxMessageSize: \"+ this.maxMessageSize);\n    throw new RuntimeException(\"message size exceeded\");\n  }\n  totalMsgLen+=msgLen;\n  if (totalMsgLen > maxMessageSize) {\n    throw new RuntimeException(\"message size exceeded\");\n  }\n  this.msgBatchMemory.putInt(msgLen);\n  this.msgBatchMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);\n  this.msgBatchMemory.putInt(bodyCrc);\n  this.msgBatchMemory.putInt(messageExtBatch.getQueueId());\n  this.msgBatchMemory.putInt(flag);\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putInt(messageExtBatch.getSysFlag());\n  this.msgBatchMemory.putLong(messageExtBatch.getBornTimestamp());\n  this.resetByteBuffer(hostHolder,8);\n  this.msgBatchMemory.put(messageExtBatch.getBornHostBytes(hostHolder));\n  this.msgBatchMemory.putLong(messageExtBatch.getStoreTimestamp());\n  this.resetByteBuffer(hostHolder,8);\n  this.msgBatchMemory.put(messageExtBatch.getStoreHostBytes(hostHolder));\n  this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n  this.msgBatchMemory.putLong(0);\n  this.msgBatchMemory.putInt(bodyLen);\n  if (bodyLen > 0)   this.msgBatchMemory.put(messagesByteBuff.array(),bodyPos,bodyLen);\n  this.msgBatchMemory.put((byte)topicLength);\n  this.msgBatchMemory.put(topicData);\n  this.msgBatchMemory.putShort(propertiesLen);\n  if (propertiesLen > 0)   this.msgBatchMemory.put(messagesByteBuff.array(),propertiesPos,propertiesLen);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 340,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4156,
        "startLineNumber" : 1442,
        "startColumnNumber" : 72,
        "endLineNumber" : 1528,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  msgBatchMemory.clear();\n  int totalMsgLen=0;\n  ByteBuffer messagesByteBuff=messageExtBatch.wrap();\n  while (messagesByteBuff.hasRemaining()) {\n    messagesByteBuff.getInt();\n    messagesByteBuff.getInt();\n    messagesByteBuff.getInt();\n    int flag=messagesByteBuff.getInt();\n    int bodyLen=messagesByteBuff.getInt();\n    int bodyPos=messagesByteBuff.position();\n    int bodyCrc=UtilAll.crc32(messagesByteBuff.array(),bodyPos,bodyLen);\n    messagesByteBuff.position(bodyPos + bodyLen);\n    short propertiesLen=messagesByteBuff.getShort();\n    int propertiesPos=messagesByteBuff.position();\n    messagesByteBuff.position(propertiesPos + propertiesLen);\n    final byte[] topicData=messageExtBatch.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);\n    final int topicLength=topicData.length;\n    final int msgLen=calMsgLength(bodyLen,topicLength,propertiesLen);\n    if (msgLen > this.maxMessageSize) {\n      CommitLog.log.warn(\"message size exceeded, msg total size: \" + msgLen + \", msg body size: \"+ bodyLen+ \", maxMessageSize: \"+ this.maxMessageSize);\n      throw new RuntimeException(\"message size exceeded\");\n    }\n    totalMsgLen+=msgLen;\n    if (totalMsgLen > maxMessageSize) {\n      throw new RuntimeException(\"message size exceeded\");\n    }\n    this.msgBatchMemory.putInt(msgLen);\n    this.msgBatchMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);\n    this.msgBatchMemory.putInt(bodyCrc);\n    this.msgBatchMemory.putInt(messageExtBatch.getQueueId());\n    this.msgBatchMemory.putInt(flag);\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putInt(messageExtBatch.getSysFlag());\n    this.msgBatchMemory.putLong(messageExtBatch.getBornTimestamp());\n    this.resetByteBuffer(hostHolder,8);\n    this.msgBatchMemory.put(messageExtBatch.getBornHostBytes(hostHolder));\n    this.msgBatchMemory.putLong(messageExtBatch.getStoreTimestamp());\n    this.resetByteBuffer(hostHolder,8);\n    this.msgBatchMemory.put(messageExtBatch.getStoreHostBytes(hostHolder));\n    this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putInt(bodyLen);\n    if (bodyLen > 0)     this.msgBatchMemory.put(messagesByteBuff.array(),bodyPos,bodyLen);\n    this.msgBatchMemory.put((byte)topicLength);\n    this.msgBatchMemory.put(topicData);\n    this.msgBatchMemory.putShort(propertiesLen);\n    if (propertiesLen > 0)     this.msgBatchMemory.put(messagesByteBuff.array(),propertiesPos,propertiesLen);\n  }\n  msgBatchMemory.flip();\n  return msgBatchMemory;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4220,
        "startLineNumber" : 1442,
        "startColumnNumber" : 8,
        "endLineNumber" : 1528,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public ByteBuffer encode(final MessageExtBatch messageExtBatch){\n  msgBatchMemory.clear();\n  int totalMsgLen=0;\n  ByteBuffer messagesByteBuff=messageExtBatch.wrap();\n  while (messagesByteBuff.hasRemaining()) {\n    messagesByteBuff.getInt();\n    messagesByteBuff.getInt();\n    messagesByteBuff.getInt();\n    int flag=messagesByteBuff.getInt();\n    int bodyLen=messagesByteBuff.getInt();\n    int bodyPos=messagesByteBuff.position();\n    int bodyCrc=UtilAll.crc32(messagesByteBuff.array(),bodyPos,bodyLen);\n    messagesByteBuff.position(bodyPos + bodyLen);\n    short propertiesLen=messagesByteBuff.getShort();\n    int propertiesPos=messagesByteBuff.position();\n    messagesByteBuff.position(propertiesPos + propertiesLen);\n    final byte[] topicData=messageExtBatch.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);\n    final int topicLength=topicData.length;\n    final int msgLen=calMsgLength(bodyLen,topicLength,propertiesLen);\n    if (msgLen > this.maxMessageSize) {\n      CommitLog.log.warn(\"message size exceeded, msg total size: \" + msgLen + \", msg body size: \"+ bodyLen+ \", maxMessageSize: \"+ this.maxMessageSize);\n      throw new RuntimeException(\"message size exceeded\");\n    }\n    totalMsgLen+=msgLen;\n    if (totalMsgLen > maxMessageSize) {\n      throw new RuntimeException(\"message size exceeded\");\n    }\n    this.msgBatchMemory.putInt(msgLen);\n    this.msgBatchMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);\n    this.msgBatchMemory.putInt(bodyCrc);\n    this.msgBatchMemory.putInt(messageExtBatch.getQueueId());\n    this.msgBatchMemory.putInt(flag);\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putInt(messageExtBatch.getSysFlag());\n    this.msgBatchMemory.putLong(messageExtBatch.getBornTimestamp());\n    this.resetByteBuffer(hostHolder,8);\n    this.msgBatchMemory.put(messageExtBatch.getBornHostBytes(hostHolder));\n    this.msgBatchMemory.putLong(messageExtBatch.getStoreTimestamp());\n    this.resetByteBuffer(hostHolder,8);\n    this.msgBatchMemory.put(messageExtBatch.getStoreHostBytes(hostHolder));\n    this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n    this.msgBatchMemory.putLong(0);\n    this.msgBatchMemory.putInt(bodyLen);\n    if (bodyLen > 0)     this.msgBatchMemory.put(messagesByteBuff.array(),bodyPos,bodyLen);\n    this.msgBatchMemory.put((byte)topicLength);\n    this.msgBatchMemory.put(topicData);\n    this.msgBatchMemory.putShort(propertiesLen);\n    if (propertiesLen > 0)     this.msgBatchMemory.put(messagesByteBuff.array(),propertiesPos,propertiesLen);\n  }\n  msgBatchMemory.flip();\n  return msgBatchMemory;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 374,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 1511,
        "startColumnNumber" : 16,
        "endLineNumber" : 1511,
        "endColumnNumber" : 80
      },
      "nodeContext" : "this.msgBatchMemory.putInt(messageExtBatch.getReconsumeTimes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 1511,
    "startColumnNumber" : 43,
    "endLineNumber" : 1511,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}