{
  "id" : 98,
  "expression" : "Integer",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/RepeatStartupTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 55,
      "startColumnNumber" : 25,
      "endLineNumber" : 55,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 55,
        "startColumnNumber" : 25,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Integer.parseInt(hp.split(\":\")[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 55,
        "startColumnNumber" : 18,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "PORT=Integer.parseInt(hp.split(\":\")[1])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final int PORT=Integer.parseInt(hp.split(\":\")[1]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 40,
        "startColumnNumber" : 44,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  QuorumTest qt=new QuorumTest();\n  qt.setUp();\n  System.out.println(\"Comment: the servers are at \" + qt.hostPort);\n  ZooKeeper zk=qt.createClient();\n  zk.create(\"/test\",null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  zk.close();\n  qt.shutdown(qt.s1);\n  qt.shutdown(qt.s2);\n  qt.shutdown(qt.s3);\n  qt.shutdown(qt.s4);\n  qt.shutdown(qt.s5);\n  String hp=qt.hostPort.split(\",\")[0];\n  ZooKeeperServer zks=new ZooKeeperServer(qt.s1.getTxnFactory().getSnapDir(),qt.s1.getTxnFactory().getDataDir(),3000);\n  final int PORT=Integer.parseInt(hp.split(\":\")[1]);\n  NIOServerCnxn.Factory factory=null;\n  if (factory == null) {\n    factory=new NIOServerCnxn.Factory(PORT);\n  }\n  factory.startup(zks);\n  System.out.println(\"Comment: starting factory\");\n  assertTrue(\"waiting for server up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + PORT,QuorumTest.CONNECTION_TIMEOUT));\n  factory.shutdown();\n  assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + PORT,QuorumTest.CONNECTION_TIMEOUT));\n  System.out.println(\"Comment: shutting doen standalone\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1553,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * bring up 5 quorum peers and then shut them down and then bring one of the nodes as server\n * @throws Exception\n */\npublic void testFail() throws Exception {\n  QuorumTest qt=new QuorumTest();\n  qt.setUp();\n  System.out.println(\"Comment: the servers are at \" + qt.hostPort);\n  ZooKeeper zk=qt.createClient();\n  zk.create(\"/test\",null,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  zk.close();\n  qt.shutdown(qt.s1);\n  qt.shutdown(qt.s2);\n  qt.shutdown(qt.s3);\n  qt.shutdown(qt.s4);\n  qt.shutdown(qt.s5);\n  String hp=qt.hostPort.split(\",\")[0];\n  ZooKeeperServer zks=new ZooKeeperServer(qt.s1.getTxnFactory().getSnapDir(),qt.s1.getTxnFactory().getDataDir(),3000);\n  final int PORT=Integer.parseInt(hp.split(\":\")[1]);\n  NIOServerCnxn.Factory factory=null;\n  if (factory == null) {\n    factory=new NIOServerCnxn.Factory(PORT);\n  }\n  factory.startup(zks);\n  System.out.println(\"Comment: starting factory\");\n  assertTrue(\"waiting for server up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + PORT,QuorumTest.CONNECTION_TIMEOUT));\n  factory.shutdown();\n  assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + PORT,QuorumTest.CONNECTION_TIMEOUT));\n  System.out.println(\"Comment: shutting doen standalone\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final int PORT=Integer.parseInt(hp.split(\":\")[1]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 55,
    "startColumnNumber" : 25,
    "endLineNumber" : 55,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}