{
  "id" : 292,
  "expression" : "!config.jniDir.mkdirs()",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!config.jniDir.mkdirs()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 34,
      "startColumnNumber" : 7,
      "endLineNumber" : 34,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 34,
        "startColumnNumber" : 3,
        "endLineNumber" : 35,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (!config.jniDir.mkdirs()) throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 33,
        "startColumnNumber" : 31,
        "endLineNumber" : 36,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!config.jniDir.mkdirs())   throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!config.jniDir.exists()) {\n  if (!config.jniDir.mkdirs())   throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 25,
        "startColumnNumber" : 63,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (target.os != TargetOs.Android)   throw new IllegalArgumentException(\"target os must be Android\");\n  if (!config.libsDir.exists()) {\n    if (!config.libsDir.mkdirs())     throw new RuntimeException(\"Couldn't create directory for shared library files in '\" + config.libsDir + \"'\");\n  }\n  if (!config.jniDir.exists()) {\n    if (!config.jniDir.mkdirs())     throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n  }\n  ArrayList<FileDescriptor> files=new ArrayList<FileDescriptor>();\n  int idx=0;\n  String[] includes=new String[target.cIncludes.length + target.cppIncludes.length];\n  for (  String include : target.cIncludes)   includes[idx++]=config.jniDir + \"/\" + include;\n  for (  String include : target.cppIncludes)   includes[idx++]=config.jniDir + \"/\" + include;\n  idx=0;\n  String[] excludes=new String[target.cExcludes.length + target.cppExcludes.length + 1];\n  for (  String exclude : target.cExcludes)   excludes[idx++]=config.jniDir + \"/\" + exclude;\n  for (  String exclude : target.cppExcludes)   excludes[idx++]=config.jniDir + \"/\" + exclude;\n  excludes[idx]=\"**/target/*\";\n  gatherSourceFiles(config.jniDir,includes,excludes,files);\n  FileDescriptor application=config.jniDir.child(\"Application.mk\");\n  application.writeString(new FileDescriptor(\"com/badlogic/gdx/jnigen/resources/scripts/Application.mk.template\",FileType.Classpath).readString(),false);\n  String template=new FileDescriptor(\"com/badlogic/gdx/jnigen/resources/scripts/Android.mk.template\",FileType.Classpath).readString();\n  StringBuilder srcFiles=new StringBuilder();\n  for (int i=0; i < files.size(); i++) {\n    if (i > 0)     srcFiles.append(\"\\t\");\n    srcFiles.append(files.get(i).path().replace('\\\\','/').replace(config.jniDir.toString() + \"/\",\"\"));\n    if (i < files.size() - 1)     srcFiles.append(\"\\\\\\n\");\n else     srcFiles.append(\"\\n\");\n  }\n  StringBuilder headerDirs=new StringBuilder();\n  for (  String headerDir : target.headerDirs) {\n    headerDirs.append(headerDir);\n    headerDirs.append(\" \");\n  }\n  template=template.replace(\"%sharedLibName%\",config.sharedLibName);\n  template=template.replace(\"%headerDirs%\",headerDirs);\n  template=template.replace(\"%cFlags%\",target.cFlags);\n  template=template.replace(\"%cppFlags%\",target.cppFlags);\n  template=template.replace(\"%linkerFlags%\",target.linkerFlags);\n  template=template.replace(\"%srcFiles%\",srcFiles);\n  config.jniDir.child(\"Android.mk\").writeString(template,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 435,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2819,
        "startLineNumber" : 25,
        "startColumnNumber" : 1,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void generate(BuildConfig config,BuildTarget target){\n  if (target.os != TargetOs.Android)   throw new IllegalArgumentException(\"target os must be Android\");\n  if (!config.libsDir.exists()) {\n    if (!config.libsDir.mkdirs())     throw new RuntimeException(\"Couldn't create directory for shared library files in '\" + config.libsDir + \"'\");\n  }\n  if (!config.jniDir.exists()) {\n    if (!config.jniDir.mkdirs())     throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n  }\n  ArrayList<FileDescriptor> files=new ArrayList<FileDescriptor>();\n  int idx=0;\n  String[] includes=new String[target.cIncludes.length + target.cppIncludes.length];\n  for (  String include : target.cIncludes)   includes[idx++]=config.jniDir + \"/\" + include;\n  for (  String include : target.cppIncludes)   includes[idx++]=config.jniDir + \"/\" + include;\n  idx=0;\n  String[] excludes=new String[target.cExcludes.length + target.cppExcludes.length + 1];\n  for (  String exclude : target.cExcludes)   excludes[idx++]=config.jniDir + \"/\" + exclude;\n  for (  String exclude : target.cppExcludes)   excludes[idx++]=config.jniDir + \"/\" + exclude;\n  excludes[idx]=\"**/target/*\";\n  gatherSourceFiles(config.jniDir,includes,excludes,files);\n  FileDescriptor application=config.jniDir.child(\"Application.mk\");\n  application.writeString(new FileDescriptor(\"com/badlogic/gdx/jnigen/resources/scripts/Application.mk.template\",FileType.Classpath).readString(),false);\n  String template=new FileDescriptor(\"com/badlogic/gdx/jnigen/resources/scripts/Android.mk.template\",FileType.Classpath).readString();\n  StringBuilder srcFiles=new StringBuilder();\n  for (int i=0; i < files.size(); i++) {\n    if (i > 0)     srcFiles.append(\"\\t\");\n    srcFiles.append(files.get(i).path().replace('\\\\','/').replace(config.jniDir.toString() + \"/\",\"\"));\n    if (i < files.size() - 1)     srcFiles.append(\"\\\\\\n\");\n else     srcFiles.append(\"\\n\");\n  }\n  StringBuilder headerDirs=new StringBuilder();\n  for (  String headerDir : target.headerDirs) {\n    headerDirs.append(headerDir);\n    headerDirs.append(\" \");\n  }\n  template=template.replace(\"%sharedLibName%\",config.sharedLibName);\n  template=template.replace(\"%headerDirs%\",headerDirs);\n  template=template.replace(\"%cFlags%\",target.cFlags);\n  template=template.replace(\"%cppFlags%\",target.cppFlags);\n  template=template.replace(\"%linkerFlags%\",target.linkerFlags);\n  template=template.replace(\"%srcFiles%\",srcFiles);\n  config.jniDir.child(\"Android.mk\").writeString(template,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 447,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 34,
        "startColumnNumber" : 3,
        "endLineNumber" : 35,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (!config.jniDir.mkdirs()) throw new RuntimeException(\"Couldn't create native code directory '\" + config.jniDir + \"'\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 34,
    "startColumnNumber" : 7,
    "endLineNumber" : 34,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}