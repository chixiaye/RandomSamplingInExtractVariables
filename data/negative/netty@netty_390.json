{
  "id" : 390,
  "expression" : "ipv4Address3",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/test/java/io/netty/resolver/dns/PreferredAddressTypeComparatorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ipv4Address3",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 45,
      "startColumnNumber" : 30,
      "endLineNumber" : 45,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 33,
        "startColumnNumber" : 55,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InetAddress ipv4Address1=InetAddress.getByName(\"10.0.0.1\");\n  InetAddress ipv4Address2=InetAddress.getByName(\"10.0.0.2\");\n  InetAddress ipv4Address3=InetAddress.getByName(\"10.0.0.3\");\n  InetAddress ipv6Address1=InetAddress.getByName(\"::1\");\n  InetAddress ipv6Address2=InetAddress.getByName(\"::2\");\n  InetAddress ipv6Address3=InetAddress.getByName(\"::3\");\n  PreferredAddressTypeComparator ipv4=PreferredAddressTypeComparator.comparator(InternetProtocolFamily.IPv4);\n  List<InetAddress> addressList=new ArrayList<InetAddress>();\n  Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3);\n  Collections.sort(addressList,ipv4);\n  assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIpv4() throws UnknownHostException {\n  InetAddress ipv4Address1=InetAddress.getByName(\"10.0.0.1\");\n  InetAddress ipv4Address2=InetAddress.getByName(\"10.0.0.2\");\n  InetAddress ipv4Address3=InetAddress.getByName(\"10.0.0.3\");\n  InetAddress ipv6Address1=InetAddress.getByName(\"::1\");\n  InetAddress ipv6Address2=InetAddress.getByName(\"::2\");\n  InetAddress ipv6Address3=InetAddress.getByName(\"::3\");\n  PreferredAddressTypeComparator ipv4=PreferredAddressTypeComparator.comparator(InternetProtocolFamily.IPv4);\n  List<InetAddress> addressList=new ArrayList<InetAddress>();\n  Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3);\n  Collections.sort(addressList,ipv4);\n  assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.net.InetAddress"
  }, {
    "nodeContext" : "ipv4Address3",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 48,
      "startColumnNumber" : 63,
      "endLineNumber" : 48,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 48,
        "startColumnNumber" : 21,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 33,
        "startColumnNumber" : 55,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InetAddress ipv4Address1=InetAddress.getByName(\"10.0.0.1\");\n  InetAddress ipv4Address2=InetAddress.getByName(\"10.0.0.2\");\n  InetAddress ipv4Address3=InetAddress.getByName(\"10.0.0.3\");\n  InetAddress ipv6Address1=InetAddress.getByName(\"::1\");\n  InetAddress ipv6Address2=InetAddress.getByName(\"::2\");\n  InetAddress ipv6Address3=InetAddress.getByName(\"::3\");\n  PreferredAddressTypeComparator ipv4=PreferredAddressTypeComparator.comparator(InternetProtocolFamily.IPv4);\n  List<InetAddress> addressList=new ArrayList<InetAddress>();\n  Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3);\n  Collections.sort(addressList,ipv4);\n  assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIpv4() throws UnknownHostException {\n  InetAddress ipv4Address1=InetAddress.getByName(\"10.0.0.1\");\n  InetAddress ipv4Address2=InetAddress.getByName(\"10.0.0.2\");\n  InetAddress ipv4Address3=InetAddress.getByName(\"10.0.0.3\");\n  InetAddress ipv6Address1=InetAddress.getByName(\"::1\");\n  InetAddress ipv6Address2=InetAddress.getByName(\"::2\");\n  InetAddress ipv6Address3=InetAddress.getByName(\"::3\");\n  PreferredAddressTypeComparator ipv4=PreferredAddressTypeComparator.comparator(InternetProtocolFamily.IPv4);\n  List<InetAddress> addressList=new ArrayList<InetAddress>();\n  Collections.addAll(addressList,ipv4Address1,ipv4Address2,ipv6Address1,ipv6Address2,ipv4Address3,ipv6Address3);\n  Collections.sort(addressList,ipv4);\n  assertEquals(Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3),addressList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 48,
        "startColumnNumber" : 21,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Arrays.asList(ipv4Address1,ipv4Address2,ipv4Address3,ipv6Address1,ipv6Address2,ipv6Address3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.net.InetAddress"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 45,
    "startColumnNumber" : 30,
    "endLineNumber" : 45,
    "endColumnNumber" : 42
  }, {
    "charLength" : 12,
    "startLineNumber" : 48,
    "startColumnNumber" : 63,
    "endLineNumber" : 48,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}