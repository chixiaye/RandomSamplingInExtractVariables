{
  "id" : 262,
  "expression" : "new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e)",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/CreateJBangProjectCommandHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 83,
      "startLineNumber" : 71,
      "startColumnNumber" : 18,
      "endLineNumber" : 71,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 102
      },
      "nodeContext" : "throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 70,
        "startColumnNumber" : 32,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (IOException e) {\n  throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  invocation.log().info(\"-----------\");\n  if (!extensionsToAdd.isEmpty()) {\n    invocation.log().info(\"selected extensions: \\n\" + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\"+ e.getArtifactId()+ \"\\n\").collect(Collectors.joining()));\n  }\n  getCatalog(invocation.getQuarkusProject()).createProject(input).generate(projectDir);\n  invocation.log().info(\"\\n-----------\\n\" + MessageIcons.OK_ICON + \" \"+ \" jbang project has been successfully generated in:\\n--> \"+ invocation.getQuarkusProject().getProjectDirPath().toString()+ \"\\n-----------\");\n}\n catch (IOException e) {\n  throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2743,
        "startLineNumber" : 27,
        "startColumnNumber" : 109,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Set<String> extensionsQuery=invocation.getValue(ProjectGenerator.EXTENSIONS,Collections.emptySet());\n  final List<ArtifactCoords> extensionsToAdd=computeCoordsFromQuery(invocation,extensionsQuery);\n  if (extensionsToAdd == null) {\n    throw new QuarkusCommandException(\"Failed to create project because of invalid extensions\");\n  }\n  final ExtensionCatalog catalog=invocation.getExtensionsCatalog();\n  final boolean noWrapper=invocation.getValue(\"noJBangWrapper\",false) || invocation.getValue(CreateProject.NO_BUILDTOOL_WRAPPER,false);\n  final QuarkusJBangCodestartProjectInputBuilder builder=QuarkusJBangCodestartProjectInput.builder().addExtensions(extensionsToAdd).setNoJBangWrapper(noWrapper).addData(LegacySupport.convertFromLegacy(invocation.getValues())).putData(\"quarkus.version\",invocation.getExtensionsCatalog().getQuarkusCoreVersion());\n  if (catalog.getBom() != null) {\n    final ArtifactCoords firstBom=catalog.getBom();\n    builder.putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_GROUP_ID.key(),firstBom.getGroupId()).putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_ARTIFACT_ID.key(),firstBom.getArtifactId()).putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_VERSION.key(),firstBom.getVersion());\n  }\n  final QuarkusJBangCodestartProjectInput input=builder.build();\n  final Path projectDir=invocation.getQuarkusProject().getProjectDirPath();\n  try {\n    invocation.log().info(\"-----------\");\n    if (!extensionsToAdd.isEmpty()) {\n      invocation.log().info(\"selected extensions: \\n\" + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\"+ e.getArtifactId()+ \"\\n\").collect(Collectors.joining()));\n    }\n    getCatalog(invocation.getQuarkusProject()).createProject(input).generate(projectDir);\n    invocation.log().info(\"\\n-----------\\n\" + MessageIcons.OK_ICON + \" \"+ \" jbang project has been successfully generated in:\\n--> \"+ invocation.getQuarkusProject().getProjectDirPath().toString()+ \"\\n-----------\");\n  }\n catch (  IOException e) {\n    throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n  }\n  return QuarkusCommandOutcome.success();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2862,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws QuarkusCommandException {\n  final Set<String> extensionsQuery=invocation.getValue(ProjectGenerator.EXTENSIONS,Collections.emptySet());\n  final List<ArtifactCoords> extensionsToAdd=computeCoordsFromQuery(invocation,extensionsQuery);\n  if (extensionsToAdd == null) {\n    throw new QuarkusCommandException(\"Failed to create project because of invalid extensions\");\n  }\n  final ExtensionCatalog catalog=invocation.getExtensionsCatalog();\n  final boolean noWrapper=invocation.getValue(\"noJBangWrapper\",false) || invocation.getValue(CreateProject.NO_BUILDTOOL_WRAPPER,false);\n  final QuarkusJBangCodestartProjectInputBuilder builder=QuarkusJBangCodestartProjectInput.builder().addExtensions(extensionsToAdd).setNoJBangWrapper(noWrapper).addData(LegacySupport.convertFromLegacy(invocation.getValues())).putData(\"quarkus.version\",invocation.getExtensionsCatalog().getQuarkusCoreVersion());\n  if (catalog.getBom() != null) {\n    final ArtifactCoords firstBom=catalog.getBom();\n    builder.putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_GROUP_ID.key(),firstBom.getGroupId()).putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_ARTIFACT_ID.key(),firstBom.getArtifactId()).putData(QuarkusJBangCodestartCatalog.JBangDataKey.QUARKUS_BOM_VERSION.key(),firstBom.getVersion());\n  }\n  final QuarkusJBangCodestartProjectInput input=builder.build();\n  final Path projectDir=invocation.getQuarkusProject().getProjectDirPath();\n  try {\n    invocation.log().info(\"-----------\");\n    if (!extensionsToAdd.isEmpty()) {\n      invocation.log().info(\"selected extensions: \\n\" + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\"+ e.getArtifactId()+ \"\\n\").collect(Collectors.joining()));\n    }\n    getCatalog(invocation.getQuarkusProject()).createProject(input).generate(projectDir);\n    invocation.log().info(\"\\n-----------\\n\" + MessageIcons.OK_ICON + \" \"+ \" jbang project has been successfully generated in:\\n--> \"+ invocation.getQuarkusProject().getProjectDirPath().toString()+ \"\\n-----------\");\n  }\n catch (  IOException e) {\n    throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n  }\n  return QuarkusCommandOutcome.success();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 286,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 102
      },
      "nodeContext" : "throw new QuarkusCommandException(\"Failed to create JBang project: \" + e.getMessage(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "io.quarkus.devtools.commands.data.QuarkusCommandException"
  } ],
  "positionList" : [ {
    "charLength" : 83,
    "startLineNumber" : 71,
    "startColumnNumber" : 18,
    "endLineNumber" : 71,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}