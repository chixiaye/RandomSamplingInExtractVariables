{
  "id" : 468,
  "expression" : "tailLen + length < 4",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/state/internals/Murmur3.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tailLen + length < 4",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 467,
      "startColumnNumber" : 16,
      "endLineNumber" : 467,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 467,
        "startColumnNumber" : 12,
        "endLineNumber" : 471,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tailLen + length < 4) {\n  System.arraycopy(data,offset,tail,tailLen,length);\n  tailLen+=length;\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 464,
        "startColumnNumber" : 67,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (length == 0)   return;\n  totalLen+=length;\n  if (tailLen + length < 4) {\n    System.arraycopy(data,offset,tail,tailLen,length);\n    tailLen+=length;\n    return;\n  }\n  int offset2=0;\n  if (tailLen > 0) {\n    offset2=(4 - tailLen);\n    int k=-1;\nswitch (tailLen) {\ncase 1:      k=orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]);\n    break;\ncase 2:  k=orBytes(tail[0],tail[1],data[offset],data[offset + 1]);\nbreak;\ncase 3:k=orBytes(tail[0],tail[1],tail[2],data[offset]);\nbreak;\ndefault:throw new AssertionError(tailLen);\n}\nk*=C1_32;\nk=Integer.rotateLeft(k,R1_32);\nk*=C2_32;\nhash^=k;\nhash=Integer.rotateLeft(hash,R2_32) * M_32 + N_32;\n}\nint length2=length - offset2;\noffset+=offset2;\nfinal int nblocks=length2 >> 2;\nfor (int i=0; i < nblocks; i++) {\nint i_4=(i << 2) + offset;\nint k=orBytes(data[i_4],data[i_4 + 1],data[i_4 + 2],data[i_4 + 3]);\nk*=C1_32;\nk=Integer.rotateLeft(k,R1_32);\nk*=C2_32;\nhash^=k;\nhash=Integer.rotateLeft(hash,R2_32) * M_32 + N_32;\n}\nint consumed=(nblocks << 2);\ntailLen=length2 - consumed;\nif (consumed == length2) return;\nSystem.arraycopy(data,offset + consumed,tail,0,tailLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2016,
        "startLineNumber" : 464,
        "startColumnNumber" : 8,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public final void add(byte[] data,int offset,int length){\n  if (length == 0)   return;\n  totalLen+=length;\n  if (tailLen + length < 4) {\n    System.arraycopy(data,offset,tail,tailLen,length);\n    tailLen+=length;\n    return;\n  }\n  int offset2=0;\n  if (tailLen > 0) {\n    offset2=(4 - tailLen);\n    int k=-1;\nswitch (tailLen) {\ncase 1:      k=orBytes(tail[0],data[offset],data[offset + 1],data[offset + 2]);\n    break;\ncase 2:  k=orBytes(tail[0],tail[1],data[offset],data[offset + 1]);\nbreak;\ncase 3:k=orBytes(tail[0],tail[1],tail[2],data[offset]);\nbreak;\ndefault:throw new AssertionError(tailLen);\n}\nk*=C1_32;\nk=Integer.rotateLeft(k,R1_32);\nk*=C2_32;\nhash^=k;\nhash=Integer.rotateLeft(hash,R2_32) * M_32 + N_32;\n}\nint length2=length - offset2;\noffset+=offset2;\nfinal int nblocks=length2 >> 2;\nfor (int i=0; i < nblocks; i++) {\nint i_4=(i << 2) + offset;\nint k=orBytes(data[i_4],data[i_4 + 1],data[i_4 + 2],data[i_4 + 3]);\nk*=C1_32;\nk=Integer.rotateLeft(k,R1_32);\nk*=C2_32;\nhash^=k;\nhash=Integer.rotateLeft(hash,R2_32) * M_32 + N_32;\n}\nint consumed=(nblocks << 2);\ntailLen=length2 - consumed;\nif (consumed == length2) return;\nSystem.arraycopy(data,offset + consumed,tail,0,tailLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 303,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 467,
        "startColumnNumber" : 12,
        "endLineNumber" : 471,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tailLen + length < 4) {\n  System.arraycopy(data,offset,tail,tailLen,length);\n  tailLen+=length;\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 467,
    "startColumnNumber" : 16,
    "endLineNumber" : 467,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}