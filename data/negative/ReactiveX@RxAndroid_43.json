{
  "id" : 43,
  "expression" : "0L",
  "projectName" : "ReactiveX@RxAndroid",
  "commitID" : "6b7cfe2a0acb8903ea10014d2f66386954a37813",
  "filePath" : "/src/test/java/rx/android/schedulers/HandlerThreadSchedulerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 61,
      "startColumnNumber" : 59,
      "endLineNumber" : 61,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 61,
        "startColumnNumber" : 56,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "eq(0L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 63
      },
      "nodeContext" : "verify(handler).postDelayed(runnable.capture(),eq(0L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "verify(handler).postDelayed(runnable.capture(),eq(0L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 50,
        "startColumnNumber" : 63,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Handler handler=mock(Handler.class);\n  @SuppressWarnings(\"unchecked\") final Action0 action=mock(Action0.class);\n  Scheduler scheduler=new HandlerThreadScheduler(handler);\n  Worker inner=scheduler.createWorker();\n  inner.schedule(action);\n  ArgumentCaptor<Runnable> runnable=ArgumentCaptor.forClass(Runnable.class);\n  verify(handler).postDelayed(runnable.capture(),eq(0L));\n  runnable.getValue().run();\n  verify(action).call();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldScheduleImmediateActionOnHandlerThread(){\n  final Handler handler=mock(Handler.class);\n  @SuppressWarnings(\"unchecked\") final Action0 action=mock(Action0.class);\n  Scheduler scheduler=new HandlerThreadScheduler(handler);\n  Worker inner=scheduler.createWorker();\n  inner.schedule(action);\n  ArgumentCaptor<Runnable> runnable=ArgumentCaptor.forClass(Runnable.class);\n  verify(handler).postDelayed(runnable.capture(),eq(0L));\n  runnable.getValue().run();\n  verify(action).call();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "verify(handler).postDelayed(runnable.capture(),eq(0L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 61,
    "startColumnNumber" : 59,
    "endLineNumber" : 61,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}