{
  "id" : 153,
  "expression" : "StringUtils.isEmpty(charset)",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtils.isEmpty(charset)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 96,
      "startColumnNumber" : 40,
      "endLineNumber" : 96,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 96,
        "startColumnNumber" : 40,
        "endLineNumber" : 96,
        "endColumnNumber" : 97
      },
      "nodeContext" : "StringUtils.isEmpty(charset) ? Constants.ENCODE : charset",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 96,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new MediaType(values[0],StringUtils.isEmpty(charset) ? Constants.ENCODE : charset)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 99
      },
      "nodeContext" : "return new MediaType(values[0],StringUtils.isEmpty(charset) ? Constants.ENCODE : charset);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 91,
        "startColumnNumber" : 72,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(contentType)) {\n    throw new IllegalArgumentException(\"MediaType must not be empty\");\n  }\n  String[] values=contentType.split(\";\");\n  return new MediaType(values[0],StringUtils.isEmpty(charset) ? Constants.ENCODE : charset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Use the given contentType and charset to assemble into a  {@code MediaType} object.\n * @param contentType contentType\n * @param charset charset\n * @return MediaType\n */\npublic static MediaType valueOf(String contentType,String charset){\n  if (StringUtils.isEmpty(contentType)) {\n    throw new IllegalArgumentException(\"MediaType must not be empty\");\n  }\n  String[] values=contentType.split(\";\");\n  return new MediaType(values[0],StringUtils.isEmpty(charset) ? Constants.ENCODE : charset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 99
      },
      "nodeContext" : "return new MediaType(values[0],StringUtils.isEmpty(charset) ? Constants.ENCODE : charset);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 96,
    "startColumnNumber" : 40,
    "endLineNumber" : 96,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}