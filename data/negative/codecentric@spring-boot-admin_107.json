{
  "id" : 107,
  "expression" : "\"/api/applications\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "56cb7948a01a3733b8a796c09d645ba5f9f6f046",
  "filePath" : "spring-boot-starter-admin-client/src/main/java/de/codecentric/boot/admin/services/SpringBootAdminRegistratorTask.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/api/applications\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 63,
      "startColumnNumber" : 59,
      "endLineNumber" : 63,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 63,
        "startColumnNumber" : 48,
        "endLineNumber" : 63,
        "endColumnNumber" : 78
      },
      "nodeContext" : "adminUrl + \"/api/applications\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 63,
        "startColumnNumber" : 26,
        "endLineNumber" : 63,
        "endColumnNumber" : 102
      },
      "nodeContext" : "template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 63,
        "startColumnNumber" : 19,
        "endLineNumber" : 63,
        "endColumnNumber" : 102
      },
      "nodeContext" : "list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1151,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String id=env.getProperty(\"info.id\");\n  int port=env.getProperty(\"server.port\",Integer.class);\n  String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n  RestTemplate template=new RestTemplate();\n  template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n  ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n  for (  Application app : list) {\n    if (id.equals(app.getId())) {\n      LOGGER.debug(\"Application already registered with ID '{}'\",id);\n      return;\n    }\n  }\n  String managementPath=env.getProperty(\"management.context-path\",\"\");\n  String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n  Application app=new Application();\n  app.setId(id);\n  app.setUrl(url);\n  template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n  LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  String id=env.getProperty(\"info.id\");\n  int port=env.getProperty(\"server.port\",Integer.class);\n  String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n  RestTemplate template=new RestTemplate();\n  template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n  ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n  for (  Application app : list) {\n    if (id.equals(app.getId())) {\n      LOGGER.debug(\"Application already registered with ID '{}'\",id);\n      return;\n    }\n  }\n  String managementPath=env.getProperty(\"management.context-path\",\"\");\n  String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n  Application app=new Application();\n  app.setId(id);\n  app.setUrl(url);\n  template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n  LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n}\n catch (Exception e) {\n  LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    String id=env.getProperty(\"info.id\");\n    int port=env.getProperty(\"server.port\",Integer.class);\n    String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n    RestTemplate template=new RestTemplate();\n    template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n    ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n    for (    Application app : list) {\n      if (id.equals(app.getId())) {\n        LOGGER.debug(\"Application already registered with ID '{}'\",id);\n        return;\n      }\n    }\n    String managementPath=env.getProperty(\"management.context-path\",\"\");\n    String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n    Application app=new Application();\n    app.setId(id);\n    app.setUrl(url);\n    template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n    LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1362,
        "startLineNumber" : 52,
        "startColumnNumber" : 1,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see java.lang.Runnable#run()\n */\n@Override public void run(){\n  try {\n    String id=env.getProperty(\"info.id\");\n    int port=env.getProperty(\"server.port\",Integer.class);\n    String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n    RestTemplate template=new RestTemplate();\n    template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n    ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n    for (    Application app : list) {\n      if (id.equals(app.getId())) {\n        LOGGER.debug(\"Application already registered with ID '{}'\",id);\n        return;\n      }\n    }\n    String managementPath=env.getProperty(\"management.context-path\",\"\");\n    String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n    Application app=new Application();\n    app.setId(id);\n    app.setUrl(url);\n    template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n    LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"/api/applications\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 78,
      "startColumnNumber" : 37,
      "endLineNumber" : 78,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 78,
        "startColumnNumber" : 26,
        "endLineNumber" : 78,
        "endColumnNumber" : 56
      },
      "nodeContext" : "adminUrl + \"/api/applications\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 76
      },
      "nodeContext" : "template.postForObject(adminUrl + \"/api/applications\",app,String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 77
      },
      "nodeContext" : "template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1151,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String id=env.getProperty(\"info.id\");\n  int port=env.getProperty(\"server.port\",Integer.class);\n  String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n  RestTemplate template=new RestTemplate();\n  template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n  ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n  for (  Application app : list) {\n    if (id.equals(app.getId())) {\n      LOGGER.debug(\"Application already registered with ID '{}'\",id);\n      return;\n    }\n  }\n  String managementPath=env.getProperty(\"management.context-path\",\"\");\n  String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n  Application app=new Application();\n  app.setId(id);\n  app.setUrl(url);\n  template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n  LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  String id=env.getProperty(\"info.id\");\n  int port=env.getProperty(\"server.port\",Integer.class);\n  String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n  RestTemplate template=new RestTemplate();\n  template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n  ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n  for (  Application app : list) {\n    if (id.equals(app.getId())) {\n      LOGGER.debug(\"Application already registered with ID '{}'\",id);\n      return;\n    }\n  }\n  String managementPath=env.getProperty(\"management.context-path\",\"\");\n  String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n  Application app=new Application();\n  app.setId(id);\n  app.setUrl(url);\n  template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n  LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n}\n catch (Exception e) {\n  LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    String id=env.getProperty(\"info.id\");\n    int port=env.getProperty(\"server.port\",Integer.class);\n    String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n    RestTemplate template=new RestTemplate();\n    template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n    ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n    for (    Application app : list) {\n      if (id.equals(app.getId())) {\n        LOGGER.debug(\"Application already registered with ID '{}'\",id);\n        return;\n      }\n    }\n    String managementPath=env.getProperty(\"management.context-path\",\"\");\n    String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n    Application app=new Application();\n    app.setId(id);\n    app.setUrl(url);\n    template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n    LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1362,
        "startLineNumber" : 52,
        "startColumnNumber" : 1,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see java.lang.Runnable#run()\n */\n@Override public void run(){\n  try {\n    String id=env.getProperty(\"info.id\");\n    int port=env.getProperty(\"server.port\",Integer.class);\n    String adminUrl=env.getProperty(\"spring.boot.admin.url\");\n    RestTemplate template=new RestTemplate();\n    template.getMessageConverters().add(new MappingJackson2HttpMessageConverter());\n    ApplicationList list=template.getForObject(adminUrl + \"/api/applications\",ApplicationList.class);\n    for (    Application app : list) {\n      if (id.equals(app.getId())) {\n        LOGGER.debug(\"Application already registered with ID '{}'\",id);\n        return;\n      }\n    }\n    String managementPath=env.getProperty(\"management.context-path\",\"\");\n    String url=new URL(\"http\",InetAddress.getLocalHost().getCanonicalHostName(),port,managementPath).toString();\n    Application app=new Application();\n    app.setId(id);\n    app.setUrl(url);\n    template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n    LOGGER.info(\"Application registered itself at the admin application with ID '{}' and URL '{}'\",id,url);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"Failed to register application at spring-boot-admin, message={}\",e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 77
      },
      "nodeContext" : "template.postForObject(adminUrl + \"/api/applications\",app,String.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 63,
    "startColumnNumber" : 59,
    "endLineNumber" : 63,
    "endColumnNumber" : 78
  }, {
    "charLength" : 19,
    "startLineNumber" : 78,
    "startColumnNumber" : 37,
    "endLineNumber" : 78,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}