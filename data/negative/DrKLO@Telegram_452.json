{
  "id" : 452,
  "expression" : "0xFF",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/zxing/common/BitSource.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0xFF",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 18,
      "endLineNumber" : 74,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 74,
        "startColumnNumber" : 18,
        "endLineNumber" : 74,
        "endColumnNumber" : 38
      },
      "nodeContext" : "0xFF >> (8 - toRead)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 74,
        "startColumnNumber" : 17,
        "endLineNumber" : 74,
        "endColumnNumber" : 39
      },
      "nodeContext" : "(0xFF >> (8 - toRead))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 74,
        "startColumnNumber" : 17,
        "endLineNumber" : 74,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(0xFF >> (8 - toRead)) << bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mask=(0xFF >> (8 - toRead)) << bitsToNotRead",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 57
      },
      "nodeContext" : "int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 70,
        "startColumnNumber" : 23,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bitsLeft=8 - bitOffset;\n  int toRead=Math.min(numBits,bitsLeft);\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bitOffset > 0) {\n  int bitsLeft=8 - bitOffset;\n  int toRead=Math.min(numBits,bitsLeft);\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 57
      },
      "nodeContext" : "int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0xFF",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 87,
      "startColumnNumber" : 54,
      "endLineNumber" : 87,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 87,
        "endColumnNumber" : 58
      },
      "nodeContext" : "bytes[byteOffset] & 0xFF",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 87,
        "startColumnNumber" : 33,
        "endLineNumber" : 87,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(bytes[byteOffset] & 0xFF)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 87,
        "startColumnNumber" : 17,
        "endLineNumber" : 87,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(result << 8) | (bytes[byteOffset] & 0xFF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 59
      },
      "nodeContext" : "result=(result << 8) | (bytes[byteOffset] & 0xFF)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "result=(result << 8) | (bytes[byteOffset] & 0xFF);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 86,
        "startColumnNumber" : 27,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  result=(result << 8) | (bytes[byteOffset] & 0xFF);\n  byteOffset++;\n  numBits-=8;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (numBits >= 8) {\n  result=(result << 8) | (bytes[byteOffset] & 0xFF);\n  byteOffset++;\n  numBits-=8;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numBits > 0) {\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "result=(result << 8) | (bytes[byteOffset] & 0xFF);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0xFF",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 95,
      "startColumnNumber" : 20,
      "endLineNumber" : 95,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 41
      },
      "nodeContext" : "0xFF >> bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 95,
        "startColumnNumber" : 19,
        "endLineNumber" : 95,
        "endColumnNumber" : 42
      },
      "nodeContext" : "(0xFF >> bitsToNotRead)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 95,
        "startColumnNumber" : 19,
        "endLineNumber" : 95,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mask=(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 93,
        "startColumnNumber" : 23,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (numBits > 0) {\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numBits > 0) {\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32 || numBits > available()) {\n    throw new IllegalArgumentException(String.valueOf(numBits));\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=Math.min(numBits,bitsLeft);\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 18,
    "endLineNumber" : 74,
    "endColumnNumber" : 22
  }, {
    "charLength" : 4,
    "startLineNumber" : 87,
    "startColumnNumber" : 54,
    "endLineNumber" : 87,
    "endColumnNumber" : 58
  }, {
    "charLength" : 4,
    "startLineNumber" : 95,
    "startColumnNumber" : 20,
    "endLineNumber" : 95,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}