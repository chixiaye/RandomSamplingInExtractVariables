{
  "id" : 301,
  "expression" : "valueAndTimestampLeft.timestamp()",
  "projectName" : "apache@kafka",
  "commitID" : "807c5b4d282e7a7a16d0bb94aa2cda9566a7cc2d",
  "filePath" : "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableRightJoin.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valueAndTimestampLeft.timestamp()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 115,
      "startColumnNumber" : 59,
      "endLineNumber" : 115,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 115,
        "startColumnNumber" : 30,
        "endLineNumber" : 115,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Math.max(record.timestamp(),valueAndTimestampLeft.timestamp())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 93
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampLeft.timestamp())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 94
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampLeft.timestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 86,
        "startColumnNumber" : 64,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final VOut newValue;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampLeft=valueGetter.get(record.key());\n  final V2 valueLeft=getValueOrNull(valueAndTimestampLeft);\n  if (valueLeft == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampLeft.timestamp());\n  newValue=joiner.apply(record.value().newValue,valueLeft);\n  if (sendOldValues) {\n    oldValue=joiner.apply(record.value().oldValue,valueLeft);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<K,Change<V1>> record){\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final VOut newValue;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampLeft=valueGetter.get(record.key());\n  final V2 valueLeft=getValueOrNull(valueAndTimestampLeft);\n  if (valueLeft == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampLeft.timestamp());\n  newValue=joiner.apply(record.value().newValue,valueLeft);\n  if (sendOldValues) {\n    oldValue=joiner.apply(record.value().oldValue,valueLeft);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 94
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampLeft.timestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 115,
    "startColumnNumber" : 59,
    "endLineNumber" : 115,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}