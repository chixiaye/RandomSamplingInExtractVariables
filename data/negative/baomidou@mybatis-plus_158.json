{
  "id" : 158,
  "expression" : "null != table.getResultMap()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/mapper/AutoSqlInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null != table.getResultMap()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 624,
      "startColumnNumber" : 12,
      "endLineNumber" : 624,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2324,
        "startLineNumber" : 624,
        "startColumnNumber" : 8,
        "endLineNumber" : 685,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != table.getResultMap()) {\n  if (entityWrapper) {\n    columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n  }\n  columns.append(\"*\");\n  if (entityWrapper) {\n    columns.append(\"</otherwise></choose>\");\n  }\n}\n else {\n  if (entityWrapper) {\n    columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n  }\n  List<TableFieldInfo> fieldList=table.getFieldList();\n  int size=0;\n  if (null != fieldList) {\n    size=fieldList.size();\n  }\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    if (table.isKeyRelated()) {\n      columns.append(table.getKeyColumn()).append(\" AS \").append(sqlWordConvert(table.getKeyProperty()));\n    }\n else {\n      columns.append(sqlWordConvert(table.getKeyProperty()));\n    }\n    if (size >= 1) {\n      columns.append(\",\");\n    }\n  }\n  if (size >= 1) {\n    int i=0;\n    Iterator<TableFieldInfo> iterator=fieldList.iterator();\n    while (iterator.hasNext()) {\n      TableFieldInfo fieldInfo=iterator.next();\n      String wordConvert=sqlWordConvert(fieldInfo.getProperty());\n      if (fieldInfo.getColumn().equals(wordConvert)) {\n        columns.append(wordConvert);\n      }\n else {\n        columns.append(fieldInfo.getColumn());\n        columns.append(\" AS \").append(wordConvert);\n      }\n      if (i + 1 < size) {\n        columns.append(\",\");\n      }\n      i++;\n    }\n  }\n  if (entityWrapper) {\n    columns.append(\"</otherwise></choose>\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2462,
        "startLineNumber" : 622,
        "startColumnNumber" : 78,
        "endLineNumber" : 691,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder columns=new StringBuilder();\n  if (null != table.getResultMap()) {\n    if (entityWrapper) {\n      columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n    }\n    columns.append(\"*\");\n    if (entityWrapper) {\n      columns.append(\"</otherwise></choose>\");\n    }\n  }\n else {\n    if (entityWrapper) {\n      columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n    }\n    List<TableFieldInfo> fieldList=table.getFieldList();\n    int size=0;\n    if (null != fieldList) {\n      size=fieldList.size();\n    }\n    if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n      if (table.isKeyRelated()) {\n        columns.append(table.getKeyColumn()).append(\" AS \").append(sqlWordConvert(table.getKeyProperty()));\n      }\n else {\n        columns.append(sqlWordConvert(table.getKeyProperty()));\n      }\n      if (size >= 1) {\n        columns.append(\",\");\n      }\n    }\n    if (size >= 1) {\n      int i=0;\n      Iterator<TableFieldInfo> iterator=fieldList.iterator();\n      while (iterator.hasNext()) {\n        TableFieldInfo fieldInfo=iterator.next();\n        String wordConvert=sqlWordConvert(fieldInfo.getProperty());\n        if (fieldInfo.getColumn().equals(wordConvert)) {\n          columns.append(wordConvert);\n        }\n else {\n          columns.append(fieldInfo.getColumn());\n          columns.append(\" AS \").append(wordConvert);\n        }\n        if (i + 1 < size) {\n          columns.append(\",\");\n        }\n        i++;\n      }\n    }\n    if (entityWrapper) {\n      columns.append(\"</otherwise></choose>\");\n    }\n  }\n  return columns.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2674,
        "startLineNumber" : 613,
        "startColumnNumber" : 4,
        "endLineNumber" : 691,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> SQL 查询所有表字段 </p>\n * @param table\n * @param entityWrapper 是否为包装类型查询\n * @return\n */\nprotected String sqlSelectColumns(TableInfo table,boolean entityWrapper){\n  StringBuilder columns=new StringBuilder();\n  if (null != table.getResultMap()) {\n    if (entityWrapper) {\n      columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n    }\n    columns.append(\"*\");\n    if (entityWrapper) {\n      columns.append(\"</otherwise></choose>\");\n    }\n  }\n else {\n    if (entityWrapper) {\n      columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n    }\n    List<TableFieldInfo> fieldList=table.getFieldList();\n    int size=0;\n    if (null != fieldList) {\n      size=fieldList.size();\n    }\n    if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n      if (table.isKeyRelated()) {\n        columns.append(table.getKeyColumn()).append(\" AS \").append(sqlWordConvert(table.getKeyProperty()));\n      }\n else {\n        columns.append(sqlWordConvert(table.getKeyProperty()));\n      }\n      if (size >= 1) {\n        columns.append(\",\");\n      }\n    }\n    if (size >= 1) {\n      int i=0;\n      Iterator<TableFieldInfo> iterator=fieldList.iterator();\n      while (iterator.hasNext()) {\n        TableFieldInfo fieldInfo=iterator.next();\n        String wordConvert=sqlWordConvert(fieldInfo.getProperty());\n        if (fieldInfo.getColumn().equals(wordConvert)) {\n          columns.append(wordConvert);\n        }\n else {\n          columns.append(fieldInfo.getColumn());\n          columns.append(\" AS \").append(wordConvert);\n        }\n        if (i + 1 < size) {\n          columns.append(\",\");\n        }\n        i++;\n      }\n    }\n    if (entityWrapper) {\n      columns.append(\"</otherwise></choose>\");\n    }\n  }\n  return columns.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2324,
        "startLineNumber" : 624,
        "startColumnNumber" : 8,
        "endLineNumber" : 685,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != table.getResultMap()) {\n  if (entityWrapper) {\n    columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n  }\n  columns.append(\"*\");\n  if (entityWrapper) {\n    columns.append(\"</otherwise></choose>\");\n  }\n}\n else {\n  if (entityWrapper) {\n    columns.append(\"<choose><when test=\\\"ew != null and ew.sqlSelect != null\\\">${ew.sqlSelect}</when><otherwise>\");\n  }\n  List<TableFieldInfo> fieldList=table.getFieldList();\n  int size=0;\n  if (null != fieldList) {\n    size=fieldList.size();\n  }\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    if (table.isKeyRelated()) {\n      columns.append(table.getKeyColumn()).append(\" AS \").append(sqlWordConvert(table.getKeyProperty()));\n    }\n else {\n      columns.append(sqlWordConvert(table.getKeyProperty()));\n    }\n    if (size >= 1) {\n      columns.append(\",\");\n    }\n  }\n  if (size >= 1) {\n    int i=0;\n    Iterator<TableFieldInfo> iterator=fieldList.iterator();\n    while (iterator.hasNext()) {\n      TableFieldInfo fieldInfo=iterator.next();\n      String wordConvert=sqlWordConvert(fieldInfo.getProperty());\n      if (fieldInfo.getColumn().equals(wordConvert)) {\n        columns.append(wordConvert);\n      }\n else {\n        columns.append(fieldInfo.getColumn());\n        columns.append(\" AS \").append(wordConvert);\n      }\n      if (i + 1 < size) {\n        columns.append(\",\");\n      }\n      i++;\n    }\n  }\n  if (entityWrapper) {\n    columns.append(\"</otherwise></choose>\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 12
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 624,
    "startColumnNumber" : 12,
    "endLineNumber" : 624,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}