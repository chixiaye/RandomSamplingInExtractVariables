{
  "id" : 75,
  "expression" : "Collections",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/test/java/com/navercorp/pinpoint/web/mapper/stat/AgentStatMapperV2Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 107,
      "startColumnNumber" : 8,
      "endLineNumber" : 107,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Collections.sort(givenAgentStats,AgentStatMapperV2.REVERSE_TIMESTAMP_COMPARATOR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Collections.sort(givenAgentStats,AgentStatMapperV2.REVERSE_TIMESTAMP_COMPARATOR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 82,
        "startColumnNumber" : 46,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<TestAgentStat> givenAgentStats=new ArrayList<>();\n  List<Put> puts=new ArrayList<>();\n  long initialTimestamp=System.currentTimeMillis();\n  int numBatch=RANDOM.nextInt(10) + 1;\n  for (int i=0; i < numBatch; ++i) {\n    int batchSize=RANDOM.nextInt(10) + 1;\n    List<TestAgentStat> agentStatBatch=createAgentStats(initialTimestamp,COLLECT_INVERVAL,batchSize);\n    givenAgentStats.addAll(agentStatBatch);\n    puts.addAll(this.hbaseOperationFactory.createPuts(AGENT_ID,AGENT_STAT_TYPE,agentStatBatch,this.serializer));\n    initialTimestamp+=batchSize * COLLECT_INVERVAL;\n  }\n  List<Cell> cellsToPut=new ArrayList<>();\n  for (  Put put : puts) {\n    List<Cell> cells=put.getFamilyCellMap().get(HBaseTables.AGENT_STAT_CF_STATISTICS);\n    cellsToPut.addAll(cells);\n  }\n  Result result=Result.create(cellsToPut);\n  AgentStatMapperV2<TestAgentStat> mapper=new AgentStatMapperV2<>(this.hbaseOperationFactory,this.decoder,TEST_FILTER);\n  List<TestAgentStat> mappedAgentStats=mapper.mapRow(result,0);\n  Collections.sort(givenAgentStats,AgentStatMapperV2.REVERSE_TIMESTAMP_COMPARATOR);\n  Assert.assertEquals(givenAgentStats,mappedAgentStats);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mapperTest() throws Exception {\n  List<TestAgentStat> givenAgentStats=new ArrayList<>();\n  List<Put> puts=new ArrayList<>();\n  long initialTimestamp=System.currentTimeMillis();\n  int numBatch=RANDOM.nextInt(10) + 1;\n  for (int i=0; i < numBatch; ++i) {\n    int batchSize=RANDOM.nextInt(10) + 1;\n    List<TestAgentStat> agentStatBatch=createAgentStats(initialTimestamp,COLLECT_INVERVAL,batchSize);\n    givenAgentStats.addAll(agentStatBatch);\n    puts.addAll(this.hbaseOperationFactory.createPuts(AGENT_ID,AGENT_STAT_TYPE,agentStatBatch,this.serializer));\n    initialTimestamp+=batchSize * COLLECT_INVERVAL;\n  }\n  List<Cell> cellsToPut=new ArrayList<>();\n  for (  Put put : puts) {\n    List<Cell> cells=put.getFamilyCellMap().get(HBaseTables.AGENT_STAT_CF_STATISTICS);\n    cellsToPut.addAll(cells);\n  }\n  Result result=Result.create(cellsToPut);\n  AgentStatMapperV2<TestAgentStat> mapper=new AgentStatMapperV2<>(this.hbaseOperationFactory,this.decoder,TEST_FILTER);\n  List<TestAgentStat> mappedAgentStats=mapper.mapRow(result,0);\n  Collections.sort(givenAgentStats,AgentStatMapperV2.REVERSE_TIMESTAMP_COMPARATOR);\n  Assert.assertEquals(givenAgentStats,mappedAgentStats);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Collections.sort(givenAgentStats,AgentStatMapperV2.REVERSE_TIMESTAMP_COMPARATOR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 107,
    "startColumnNumber" : 8,
    "endLineNumber" : 107,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}