{
  "id" : 87,
  "expression" : "\"http-api\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/discovery/ApplicationDiscoveryListenerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http-api\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 170,
      "startColumnNumber" : 99,
      "endLineNumber" : 170,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 170,
        "startColumnNumber" : 34,
        "endLineNumber" : 170,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Registration.create(\"different-source\",\"http://health2\").source(\"http-api\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 170,
        "startColumnNumber" : 34,
        "endLineNumber" : 170,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 170,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 119
      },
      "nodeContext" : "registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 120
      },
      "nodeContext" : "StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 48
      },
      "nodeContext" : "StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())).consumeNextWith((id) -> {\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 172,
        "endColumnNumber" : 37
      },
      "nodeContext" : "StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())).consumeNextWith((id) -> {\n}\n).verifyComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 172,
        "endColumnNumber" : 38
      },
      "nodeContext" : "StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())).consumeNextWith((id) -> {\n}\n).verifyComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2491,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 212,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StepVerifier.create(registry.register(Registration.create(\"ignored\",\"http://health\").build())).consumeNextWith((id) -> {\n  }\n).verifyComplete();\n  StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())).consumeNextWith((id) -> {\n  }\n).verifyComplete();\n  listener.setIgnoredServices(singleton(\"ignored\"));\n  List<ServiceInstance> instances=new ArrayList<>();\n  instances.add(new DefaultServiceInstance(\"service\",\"localhost\",80,false));\n  instances.add(new DefaultServiceInstance(\"service\",\"example.net\",80,false));\n  when(discovery.getServices()).thenReturn(singletonList(\"service\"));\n  when(discovery.getInstances(\"service\")).thenReturn(instances);\n  listener.onApplicationEvent(new HeartbeatEvent(new Object(),new Object()));\n  StepVerifier.create(registry.getApplicationsByName(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"ignored\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"ignored\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"different-source\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"different-source\")).verifyComplete();\n  instances.remove(0);\n  listener.onApplicationEvent(new HeartbeatEvent(new Object(),new Object()));\n  StepVerifier.create(registry.getApplicationsByName(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"ignored\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"ignored\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"different-source\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"different-source\")).verifyComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2538,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 212,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void deregister_removed_app(){\n  StepVerifier.create(registry.register(Registration.create(\"ignored\",\"http://health\").build())).consumeNextWith((id) -> {\n  }\n).verifyComplete();\n  StepVerifier.create(registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())).consumeNextWith((id) -> {\n  }\n).verifyComplete();\n  listener.setIgnoredServices(singleton(\"ignored\"));\n  List<ServiceInstance> instances=new ArrayList<>();\n  instances.add(new DefaultServiceInstance(\"service\",\"localhost\",80,false));\n  instances.add(new DefaultServiceInstance(\"service\",\"example.net\",80,false));\n  when(discovery.getServices()).thenReturn(singletonList(\"service\"));\n  when(discovery.getInstances(\"service\")).thenReturn(instances);\n  listener.onApplicationEvent(new HeartbeatEvent(new Object(),new Object()));\n  StepVerifier.create(registry.getApplicationsByName(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"ignored\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"ignored\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"different-source\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"different-source\")).verifyComplete();\n  instances.remove(0);\n  listener.onApplicationEvent(new HeartbeatEvent(new Object(),new Object()));\n  StepVerifier.create(registry.getApplicationsByName(\"service\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"service\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"ignored\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"ignored\")).verifyComplete();\n  StepVerifier.create(registry.getApplicationsByName(\"different-source\")).assertNext(a -> assertThat(a.getRegistration().getName()).isEqualTo(\"different-source\")).verifyComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 170,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 119
      },
      "nodeContext" : "registry.register(Registration.create(\"different-source\",\"http://health2\").source(\"http-api\").build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 170,
    "startColumnNumber" : 99,
    "endLineNumber" : 170,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}