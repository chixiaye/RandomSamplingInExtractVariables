{
  "id" : 153,
  "expression" : "clazz",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/openmessaging/src/main/java/io/openmessaging/rocketmq/utils/BeanUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 89,
      "startColumnNumber" : 18,
      "endLineNumber" : 89,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 89,
        "startColumnNumber" : 18,
        "endLineNumber" : 89,
        "endColumnNumber" : 37
      },
      "nodeContext" : "clazz.newInstance()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 37
      },
      "nodeContext" : "obj=clazz.newInstance()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 38
      },
      "nodeContext" : "obj=clazz.newInstance();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  obj=clazz.newInstance();\n  return populate(properties,obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  obj=clazz.newInstance();\n  return populate(properties,obj);\n}\n catch (Throwable e) {\n  log.warn(\"Error occurs !\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 86,
        "startColumnNumber" : 84,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  T obj=null;\n  try {\n    obj=clazz.newInstance();\n    return populate(properties,obj);\n  }\n catch (  Throwable e) {\n    log.warn(\"Error occurs !\",e);\n  }\n  return obj;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1646,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p>Populate the JavaBeans properties of the specified bean, based on the specified name/value pairs.  This method uses Java reflection APIs to identify corresponding \"property setter\" method names, and deals with setter arguments of type <Code>String</Code>, <Code>boolean</Code>, <Code>int</Code>, <Code>long</Code>, <Code>float</Code>, and <Code>double</Code>.</p> <p>The particular setter method to be called for each property is determined using the usual JavaBeans introspection mechanisms.  Thus, you may identify custom setter methods using a BeanInfo class that is associated with the class of the bean itself.  If no such BeanInfo class is available, the standard method name conversion (\"set\" plus the capitalized name of the property in question) is used.</p> <p><strong>NOTE</strong>:  It is contrary to the JavaBeans Specification to have more than one setter method (with different argument signatures) for the same property.</p>\n * @param clazz JavaBean class whose properties are being populated\n * @param properties Map keyed by property name, with the corresponding (String or String[]) value(s) to be set\n * @param < T > Class type\n * @return Class instance\n */\npublic static <T>T populate(final Properties properties,final Class<T> clazz){\n  T obj=null;\n  try {\n    obj=clazz.newInstance();\n    return populate(properties,obj);\n  }\n catch (  Throwable e) {\n    log.warn(\"Error occurs !\",e);\n  }\n  return obj;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 38
      },
      "nodeContext" : "obj=clazz.newInstance();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<T>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 89,
    "startColumnNumber" : 18,
    "endLineNumber" : 89,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}