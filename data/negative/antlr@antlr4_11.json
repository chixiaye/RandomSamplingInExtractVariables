{
  "id" : 11,
  "expression" : "tag == null || tag.isEmpty()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/tree/pattern/TagChunk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tag == null || tag.isEmpty()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 60,
      "startColumnNumber" : 6,
      "endLineNumber" : 60,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (tag == null || tag.isEmpty()) {\n  throw new IllegalArgumentException(\"tag cannot be null or empty\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (tag == null || tag.isEmpty()) {\n    throw new IllegalArgumentException(\"tag cannot be null or empty\");\n  }\n  this.label=label;\n  this.tag=tag;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Construct a new instance of  {@link TagChunk} using the specified labeland tag.\n * @param label The label for the tag. If this is {@code null}, the {@link TagChunk} represents an unlabeled tag.\n * @param tag The tag, which should be the name of a parser rule or tokentype.\n * @exception IllegalArgumentException if {@code tag} is {@code null} orempty.\n */\npublic TagChunk(String label,String tag){\n  if (tag == null || tag.isEmpty()) {\n    throw new IllegalArgumentException(\"tag cannot be null or empty\");\n  }\n  this.label=label;\n  this.tag=tag;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (tag == null || tag.isEmpty()) {\n  throw new IllegalArgumentException(\"tag cannot be null or empty\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 60,
    "startColumnNumber" : 6,
    "endLineNumber" : 60,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}