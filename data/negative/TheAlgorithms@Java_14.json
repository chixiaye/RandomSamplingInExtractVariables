{
  "id" : 14,
  "expression" : "new int[size]",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "e5dd6eff0257cda48fe92fa5e905fc3c82f98bfd",
  "filePath" : "Sorts/BubbleSort.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new int[size]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 20,
      "startColumnNumber" : 14,
      "endLineNumber" : 20,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 27
      },
      "nodeContext" : "array[]=new int[size]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 20,
        "endColumnNumber" : 28
      },
      "nodeContext" : "int array[]=new int[size];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 18,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int size=6;\n  int array[]=new int[size];\n  boolean swap;\n  int last=size - 1;\n  Scanner input=new Scanner(System.in);\n  System.out.println(\"Enter any 6 Numbers for Unsorted Array : \");\n  for (int i=0; i < 6; i++) {\n    array[i]=input.nextInt();\n  }\n  do {\n    swap=false;\n    for (int count=0; count < last; count++) {\n      if (array[count] > array[count + 1]) {\n        int temp=array[count];\n        array[count]=array[count + 1];\n        array[count + 1]=temp;\n        swap=true;\n      }\n    }\n    last--;\n  }\n while (swap);\n  for (int i=0; i < 6; i++) {\n    System.out.print(array[i] + \"\\t\");\n  }\n  input.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 12,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Main Method\n * @param args Command line arguments\n */\npublic static void main(String[] args){\n  int size=6;\n  int array[]=new int[size];\n  boolean swap;\n  int last=size - 1;\n  Scanner input=new Scanner(System.in);\n  System.out.println(\"Enter any 6 Numbers for Unsorted Array : \");\n  for (int i=0; i < 6; i++) {\n    array[i]=input.nextInt();\n  }\n  do {\n    swap=false;\n    for (int count=0; count < last; count++) {\n      if (array[count] > array[count + 1]) {\n        int temp=array[count];\n        array[count]=array[count + 1];\n        array[count + 1]=temp;\n        swap=true;\n      }\n    }\n    last--;\n  }\n while (swap);\n  for (int i=0; i < 6; i++) {\n    System.out.print(array[i] + \"\\t\");\n  }\n  input.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 20,
        "endColumnNumber" : 28
      },
      "nodeContext" : "int array[]=new int[size];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 20,
    "startColumnNumber" : 14,
    "endLineNumber" : 20,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}