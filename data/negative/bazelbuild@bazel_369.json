{
  "id" : 369,
  "expression" : "Type",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/rules/test/TestSuite.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Type",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 53,
      "startColumnNumber" : 61,
      "endLineNumber" : 53,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 53,
        "startColumnNumber" : 61,
        "endLineNumber" : 53,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Type.STRING_LIST",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 53,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ruleContext.attributes().get(\"tags\",Type.STRING_LIST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 52,
        "startColumnNumber" : 17,
        "endLineNumber" : 53,
        "endColumnNumber" : 79
      },
      "nodeContext" : "tagsAttribute=new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "List<String> tagsAttribute=new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 42,
        "startColumnNumber" : 79,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkTestsAndSuites(ruleContext,\"tests\");\n  if (ruleContext.hasErrors()) {\n    return null;\n  }\n  List<String> tagsAttribute=new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST));\n  tagsAttribute.remove(\"manual\");\n  Pair<Collection<String>,Collection<String>> requiredExcluded=TestTargetUtils.sortTagsBySense(tagsAttribute);\n  List<TransitiveInfoCollection> directTestsAndSuitesBuilder=new ArrayList<>();\n  for (  TransitiveInfoCollection dep : Iterables.concat(getPrerequisites(ruleContext,\"tests\"),getPrerequisites(ruleContext,\"$implicit_tests\"))) {\n    if (dep.getProvider(TestTagsProvider.class) != null) {\n      List<String> tags=dep.getProvider(TestTagsProvider.class).getTestTags();\n      if (!TestTargetUtils.testMatchesFilters(tags,requiredExcluded.first,requiredExcluded.second)) {\n        continue;\n      }\n    }\n    directTestsAndSuitesBuilder.add(dep);\n  }\n  Runfiles runfiles=new Runfiles.Builder(ruleContext.getWorkspaceName(),ruleContext.getConfiguration().legacyExternalRunfiles()).addTargets(directTestsAndSuitesBuilder,RunfilesProvider.DATA_RUNFILES).build();\n  return new RuleConfiguredTargetBuilder(ruleContext).add(RunfilesProvider.class,RunfilesProvider.withData(Runfiles.EMPTY,runfiles)).add(TransitiveTestsProvider.class,new TransitiveTestsProvider()).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2155,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public ConfiguredTarget create(RuleContext ruleContext) throws InterruptedException, RuleErrorException, ActionConflictException {\n  checkTestsAndSuites(ruleContext,\"tests\");\n  if (ruleContext.hasErrors()) {\n    return null;\n  }\n  List<String> tagsAttribute=new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST));\n  tagsAttribute.remove(\"manual\");\n  Pair<Collection<String>,Collection<String>> requiredExcluded=TestTargetUtils.sortTagsBySense(tagsAttribute);\n  List<TransitiveInfoCollection> directTestsAndSuitesBuilder=new ArrayList<>();\n  for (  TransitiveInfoCollection dep : Iterables.concat(getPrerequisites(ruleContext,\"tests\"),getPrerequisites(ruleContext,\"$implicit_tests\"))) {\n    if (dep.getProvider(TestTagsProvider.class) != null) {\n      List<String> tags=dep.getProvider(TestTagsProvider.class).getTestTags();\n      if (!TestTargetUtils.testMatchesFilters(tags,requiredExcluded.first,requiredExcluded.second)) {\n        continue;\n      }\n    }\n    directTestsAndSuitesBuilder.add(dep);\n  }\n  Runfiles runfiles=new Runfiles.Builder(ruleContext.getWorkspaceName(),ruleContext.getConfiguration().legacyExternalRunfiles()).addTargets(directTestsAndSuitesBuilder,RunfilesProvider.DATA_RUNFILES).build();\n  return new RuleConfiguredTargetBuilder(ruleContext).add(RunfilesProvider.class,RunfilesProvider.withData(Runfiles.EMPTY,runfiles)).add(TransitiveTestsProvider.class,new TransitiveTestsProvider()).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new ArrayList<>(ruleContext.attributes().get(\"tags\",Type.STRING_LIST))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.packages.Type"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 53,
    "startColumnNumber" : 61,
    "endLineNumber" : 53,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}