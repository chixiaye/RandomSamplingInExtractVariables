{
  "id" : 375,
  "expression" : "e.getEnclosingElement()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/annotations/src/main/java/mindustry/annotations/impl/CallSuperProcess.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getEnclosingElement()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 38,
      "startColumnNumber" : 40,
      "endLineNumber" : 38,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 38,
        "startColumnNumber" : 26,
        "endLineNumber" : 38,
        "endColumnNumber" : 64
      },
      "nodeContext" : "trees.getPath(e.getEnclosingElement())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 38,
        "startColumnNumber" : 21,
        "endLineNumber" : 38,
        "endColumnNumber" : 64
      },
      "nodeContext" : "tp=trees.getPath(e.getEnclosingElement())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 65
      },
      "nodeContext" : "TreePath tp=trees.getPath(e.getEnclosingElement());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 32,
        "startColumnNumber" : 74,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e.getAnnotation(OverrideCallSuper.class) != null)   return false;\n  CodeAnalyzerTreeScanner codeScanner=new CodeAnalyzerTreeScanner();\n  codeScanner.methodName=e.getSimpleName().toString();\n  TreePath tp=trees.getPath(e.getEnclosingElement());\n  codeScanner.scan(tp,trees);\n  if (codeScanner.callSuperUsed) {\n    List list=codeScanner.method.getBody().getStatements();\n    if (!doesCallSuper(list,codeScanner.methodName)) {\n      processingEnv.getMessager().printMessage(Kind.ERROR,\"Overriding method '\" + codeScanner.methodName + \"' must explicitly call super method from its parent class.\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 818,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Element e : roundEnv.getElementsAnnotatedWith(Override.class)) {\n  if (e.getAnnotation(OverrideCallSuper.class) != null)   return false;\n  CodeAnalyzerTreeScanner codeScanner=new CodeAnalyzerTreeScanner();\n  codeScanner.methodName=e.getSimpleName().toString();\n  TreePath tp=trees.getPath(e.getEnclosingElement());\n  codeScanner.scan(tp,trees);\n  if (codeScanner.callSuperUsed) {\n    List list=codeScanner.method.getBody().getStatements();\n    if (!doesCallSuper(list,codeScanner.methodName)) {\n      processingEnv.getMessager().printMessage(Kind.ERROR,\"Overriding method '\" + codeScanner.methodName + \"' must explicitly call super method from its parent class.\",e);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 31,
        "startColumnNumber" : 93,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Element e : roundEnv.getElementsAnnotatedWith(Override.class)) {\n    if (e.getAnnotation(OverrideCallSuper.class) != null)     return false;\n    CodeAnalyzerTreeScanner codeScanner=new CodeAnalyzerTreeScanner();\n    codeScanner.methodName=e.getSimpleName().toString();\n    TreePath tp=trees.getPath(e.getEnclosingElement());\n    codeScanner.scan(tp,trees);\n    if (codeScanner.callSuperUsed) {\n      List list=codeScanner.method.getBody().getStatements();\n      if (!doesCallSuper(list,codeScanner.methodName)) {\n        processingEnv.getMessager().printMessage(Kind.ERROR,\"Overriding method '\" + codeScanner.methodName + \"' must explicitly call super method from its parent class.\",e);\n      }\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean process(Set<? extends TypeElement> annotations,RoundEnvironment roundEnv){\n  for (  Element e : roundEnv.getElementsAnnotatedWith(Override.class)) {\n    if (e.getAnnotation(OverrideCallSuper.class) != null)     return false;\n    CodeAnalyzerTreeScanner codeScanner=new CodeAnalyzerTreeScanner();\n    codeScanner.methodName=e.getSimpleName().toString();\n    TreePath tp=trees.getPath(e.getEnclosingElement());\n    codeScanner.scan(tp,trees);\n    if (codeScanner.callSuperUsed) {\n      List list=codeScanner.method.getBody().getStatements();\n      if (!doesCallSuper(list,codeScanner.methodName)) {\n        processingEnv.getMessager().printMessage(Kind.ERROR,\"Overriding method '\" + codeScanner.methodName + \"' must explicitly call super method from its parent class.\",e);\n      }\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 65
      },
      "nodeContext" : "TreePath tp=trees.getPath(e.getEnclosingElement());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "javax.lang.model.element.Element"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 38,
    "startColumnNumber" : 40,
    "endLineNumber" : 38,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}