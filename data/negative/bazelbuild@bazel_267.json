{
  "id" : 267,
  "expression" : "optimizedJsonInfo.jsonFieldIndices",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/optimize/gson/OptimizedJsonFieldCollector.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "optimizedJsonInfo.jsonFieldIndices",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 107,
      "startColumnNumber" : 12,
      "endLineNumber" : 107,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 67
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(fieldName,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n  optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n  classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n  optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n}\n else {\n  for (  String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n    optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  programField.attributesAccept(programClass,new AllAnnotationVisitor(new MultiAnnotationVisitor(new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_SERIALIZED_NAME,new SerializedNamesCollector(classJsonInfo)),new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_EXPOSE,new ExposedFieldsCollector(classJsonInfo,mode)))));\n  String fieldName=programField.getName(programClass);\n  if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n    classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n    optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n  }\n else {\n    for (    String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n      optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void visitProgramField(ProgramClass programClass,ProgramField programField){\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  programField.attributesAccept(programClass,new AllAnnotationVisitor(new MultiAnnotationVisitor(new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_SERIALIZED_NAME,new SerializedNamesCollector(classJsonInfo)),new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_EXPOSE,new ExposedFieldsCollector(classJsonInfo,mode)))));\n  String fieldName=programField.getName(programClass);\n  if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n    classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n    optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n  }\n else {\n    for (    String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n      optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Integer>"
  }, {
    "nodeContext" : "optimizedJsonInfo.jsonFieldIndices",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 113,
      "startColumnNumber" : 16,
      "endLineNumber" : 113,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 75
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 76
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n  optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n    optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n  classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n  optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n}\n else {\n  for (  String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n    optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  programField.attributesAccept(programClass,new AllAnnotationVisitor(new MultiAnnotationVisitor(new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_SERIALIZED_NAME,new SerializedNamesCollector(classJsonInfo)),new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_EXPOSE,new ExposedFieldsCollector(classJsonInfo,mode)))));\n  String fieldName=programField.getName(programClass);\n  if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n    classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n    optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n  }\n else {\n    for (    String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n      optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void visitProgramField(ProgramClass programClass,ProgramField programField){\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  programField.attributesAccept(programClass,new AllAnnotationVisitor(new MultiAnnotationVisitor(new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_SERIALIZED_NAME,new SerializedNamesCollector(classJsonInfo)),new AnnotationTypeFilter(GsonClassConstants.ANNOTATION_TYPE_EXPOSE,new ExposedFieldsCollector(classJsonInfo,mode)))));\n  String fieldName=programField.getName(programClass);\n  if (classJsonInfo.javaToJsonFieldNames.get(fieldName) == null) {\n    classJsonInfo.javaToJsonFieldNames.put(fieldName,new String[]{fieldName});\n    optimizedJsonInfo.jsonFieldIndices.put(fieldName,null);\n  }\n else {\n    for (    String jsonFieldName : classJsonInfo.javaToJsonFieldNames.get(fieldName)) {\n      optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 76
      },
      "nodeContext" : "optimizedJsonInfo.jsonFieldIndices.put(jsonFieldName,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 107,
    "startColumnNumber" : 12,
    "endLineNumber" : 107,
    "endColumnNumber" : 46
  }, {
    "charLength" : 34,
    "startLineNumber" : 113,
    "startColumnNumber" : 16,
    "endLineNumber" : 113,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}