{
  "id" : 692,
  "expression" : "httpData.length() + readableBytes",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpData.length() + readableBytes",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 1169,
      "startColumnNumber" : 44,
      "endLineNumber" : 1169,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 1169,
        "startColumnNumber" : 44,
        "endLineNumber" : 1169,
        "endColumnNumber" : 81
      },
      "nodeContext" : "httpData.length() + readableBytes - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 1169,
        "startColumnNumber" : 16,
        "endLineNumber" : 1169,
        "endColumnNumber" : 81
      },
      "nodeContext" : "httpData.definedLength() == httpData.length() + readableBytes - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 1168,
        "startColumnNumber" : 16,
        "endLineNumber" : 1169,
        "endColumnNumber" : 81
      },
      "nodeContext" : "posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 1168,
        "startColumnNumber" : 16,
        "endLineNumber" : 1170,
        "endColumnNumber" : 96
      },
      "nodeContext" : "posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 1168,
        "startColumnNumber" : 12,
        "endLineNumber" : 1174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR) {\n  lastPosition=0;\n  posDelimiter=readableBytes - 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2672,
        "startLineNumber" : 1154,
        "startColumnNumber" : 30,
        "endLineNumber" : 1202,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int readableBytes=undecodedChunk.readableBytes();\n  int lastPosition=readableBytes - bdelimiter.length - 1;\n  if (lastPosition < 0) {\n    lastPosition=0;\n  }\n  posDelimiter=HttpPostBodyUtil.findLastLineBreak(undecodedChunk,startReaderIndex + lastPosition);\n  if (posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR) {\n    lastPosition=0;\n    posDelimiter=readableBytes - 1;\n  }\n  if (posDelimiter < 0) {\n    ByteBuf content=undecodedChunk.copy();\n    try {\n      httpData.addContent(content,false);\n    }\n catch (    IOException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    undecodedChunk.readerIndex(startReaderIndex);\n    undecodedChunk.writerIndex(startReaderIndex);\n    return false;\n  }\n  posDelimiter+=lastPosition;\n  if (posDelimiter == 0) {\n    return false;\n  }\n  ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n  try {\n    httpData.addContent(content,false);\n  }\n catch (  IOException e) {\n    throw new ErrorDataDecoderException(e);\n  }\n  rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2694,
        "startLineNumber" : 1154,
        "startColumnNumber" : 8,
        "endLineNumber" : 1202,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (posDelimiter < 0) {\n  int readableBytes=undecodedChunk.readableBytes();\n  int lastPosition=readableBytes - bdelimiter.length - 1;\n  if (lastPosition < 0) {\n    lastPosition=0;\n  }\n  posDelimiter=HttpPostBodyUtil.findLastLineBreak(undecodedChunk,startReaderIndex + lastPosition);\n  if (posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR) {\n    lastPosition=0;\n    posDelimiter=readableBytes - 1;\n  }\n  if (posDelimiter < 0) {\n    ByteBuf content=undecodedChunk.copy();\n    try {\n      httpData.addContent(content,false);\n    }\n catch (    IOException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    undecodedChunk.readerIndex(startReaderIndex);\n    undecodedChunk.writerIndex(startReaderIndex);\n    return false;\n  }\n  posDelimiter+=lastPosition;\n  if (posDelimiter == 0) {\n    return false;\n  }\n  ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n  try {\n    httpData.addContent(content,false);\n  }\n catch (  IOException e) {\n    throw new ErrorDataDecoderException(e);\n  }\n  rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3477,
        "startLineNumber" : 1147,
        "startColumnNumber" : 115,
        "endLineNumber" : 1212,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!undecodedChunk.isReadable()) {\n    return false;\n  }\n  final int startReaderIndex=undecodedChunk.readerIndex();\n  final byte[] bdelimiter=delimiter.getBytes(httpData.getCharset());\n  int posDelimiter=HttpPostBodyUtil.findDelimiter(undecodedChunk,startReaderIndex,bdelimiter,true);\n  if (posDelimiter < 0) {\n    int readableBytes=undecodedChunk.readableBytes();\n    int lastPosition=readableBytes - bdelimiter.length - 1;\n    if (lastPosition < 0) {\n      lastPosition=0;\n    }\n    posDelimiter=HttpPostBodyUtil.findLastLineBreak(undecodedChunk,startReaderIndex + lastPosition);\n    if (posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR) {\n      lastPosition=0;\n      posDelimiter=readableBytes - 1;\n    }\n    if (posDelimiter < 0) {\n      ByteBuf content=undecodedChunk.copy();\n      try {\n        httpData.addContent(content,false);\n      }\n catch (      IOException e) {\n        throw new ErrorDataDecoderException(e);\n      }\n      undecodedChunk.readerIndex(startReaderIndex);\n      undecodedChunk.writerIndex(startReaderIndex);\n      return false;\n    }\n    posDelimiter+=lastPosition;\n    if (posDelimiter == 0) {\n      return false;\n    }\n    ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n    try {\n      httpData.addContent(content,false);\n    }\n catch (    IOException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n    return false;\n  }\n  ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n  try {\n    httpData.addContent(content,true);\n  }\n catch (  IOException e) {\n    throw new ErrorDataDecoderException(e);\n  }\n  rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3800,
        "startLineNumber" : 1142,
        "startColumnNumber" : 4,
        "endLineNumber" : 1212,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Load the field value or file data from a Multipart request\n * @return {@code true} if the last chunk is loaded (boundary delimiter found), {@code false} if need more chunks\n */\nprivate static boolean loadDataMultipartOptimized(ByteBuf undecodedChunk,String delimiter,HttpData httpData){\n  if (!undecodedChunk.isReadable()) {\n    return false;\n  }\n  final int startReaderIndex=undecodedChunk.readerIndex();\n  final byte[] bdelimiter=delimiter.getBytes(httpData.getCharset());\n  int posDelimiter=HttpPostBodyUtil.findDelimiter(undecodedChunk,startReaderIndex,bdelimiter,true);\n  if (posDelimiter < 0) {\n    int readableBytes=undecodedChunk.readableBytes();\n    int lastPosition=readableBytes - bdelimiter.length - 1;\n    if (lastPosition < 0) {\n      lastPosition=0;\n    }\n    posDelimiter=HttpPostBodyUtil.findLastLineBreak(undecodedChunk,startReaderIndex + lastPosition);\n    if (posDelimiter < 0 && httpData.definedLength() == httpData.length() + readableBytes - 1 && undecodedChunk.getByte(readableBytes + startReaderIndex - 1) == HttpConstants.CR) {\n      lastPosition=0;\n      posDelimiter=readableBytes - 1;\n    }\n    if (posDelimiter < 0) {\n      ByteBuf content=undecodedChunk.copy();\n      try {\n        httpData.addContent(content,false);\n      }\n catch (      IOException e) {\n        throw new ErrorDataDecoderException(e);\n      }\n      undecodedChunk.readerIndex(startReaderIndex);\n      undecodedChunk.writerIndex(startReaderIndex);\n      return false;\n    }\n    posDelimiter+=lastPosition;\n    if (posDelimiter == 0) {\n      return false;\n    }\n    ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n    try {\n      httpData.addContent(content,false);\n    }\n catch (    IOException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n    return false;\n  }\n  ByteBuf content=undecodedChunk.copy(startReaderIndex,posDelimiter);\n  try {\n    httpData.addContent(content,true);\n  }\n catch (  IOException e) {\n    throw new ErrorDataDecoderException(e);\n  }\n  rewriteCurrentBuffer(undecodedChunk,posDelimiter);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 1169,
        "startColumnNumber" : 16,
        "endLineNumber" : 1169,
        "endColumnNumber" : 81
      },
      "nodeContext" : "httpData.definedLength() == httpData.length() + readableBytes - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 1169,
    "startColumnNumber" : 44,
    "endLineNumber" : 1169,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}