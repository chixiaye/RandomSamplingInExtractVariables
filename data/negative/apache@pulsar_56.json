{
  "id" : 56,
  "expression" : "new File(configFile).toURI().toURL()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/PulsarStandalone.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(configFile).toURI().toURL()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 258,
      "startColumnNumber" : 34,
      "endLineNumber" : 258,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 258,
        "startColumnNumber" : 12,
        "endLineNumber" : 258,
        "endColumnNumber" : 71
      },
      "nodeContext" : "bkServerConf.loadConf(new File(configFile).toURI().toURL())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 258,
        "startColumnNumber" : 12,
        "endLineNumber" : 258,
        "endColumnNumber" : 72
      },
      "nodeContext" : "bkServerConf.loadConf(new File(configFile).toURI().toURL());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 256,
        "startColumnNumber" : 34,
        "endLineNumber" : 265,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServerConfiguration bkServerConf=new ServerConfiguration();\n  bkServerConf.loadConf(new File(configFile).toURI().toURL());\n  bkEnsemble=new LocalBookkeeperEnsemble(this.getNumOfBk(),this.getZkPort(),this.getBkPort(),this.getStreamStoragePort(),this.getZkDir(),this.getBkDir(),this.isWipeData(),\"127.0.0.1\");\n  bkEnsemble.startStandalone(bkServerConf,!this.isNoStreamStorage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 256,
        "startColumnNumber" : 8,
        "endLineNumber" : 265,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!this.isOnlyBroker()) {\n  ServerConfiguration bkServerConf=new ServerConfiguration();\n  bkServerConf.loadConf(new File(configFile).toURI().toURL());\n  bkEnsemble=new LocalBookkeeperEnsemble(this.getNumOfBk(),this.getZkPort(),this.getBkPort(),this.getStreamStoragePort(),this.getZkDir(),this.getBkDir(),this.isWipeData(),\"127.0.0.1\");\n  bkEnsemble.startStandalone(bkServerConf,!this.isNoStreamStorage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5420,
        "startLineNumber" : 248,
        "startColumnNumber" : 41,
        "endLineNumber" : 357,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config == null) {\n    System.exit(1);\n  }\n  log.debug(\"--- setup PulsarStandaloneStarter ---\");\n  if (!this.isOnlyBroker()) {\n    ServerConfiguration bkServerConf=new ServerConfiguration();\n    bkServerConf.loadConf(new File(configFile).toURI().toURL());\n    bkEnsemble=new LocalBookkeeperEnsemble(this.getNumOfBk(),this.getZkPort(),this.getBkPort(),this.getStreamStoragePort(),this.getZkDir(),this.getBkDir(),this.isWipeData(),\"127.0.0.1\");\n    bkEnsemble.startStandalone(bkServerConf,!this.isNoStreamStorage());\n  }\n  if (this.isNoBroker()) {\n    return;\n  }\n  if (!this.isNoFunctionsWorker()) {\n    workerConfig=PulsarService.initializeWorkerConfigFromBrokerConfig(config,this.getFnWorkerConfigFile());\n    if (this.isNoStreamStorage()) {\n      workerConfig.setStateStorageServiceUrl(null);\n    }\n else     if (workerConfig.getStateStorageServiceUrl() == null) {\n      workerConfig.setStateStorageServiceUrl(\"bk://127.0.0.1:\" + this.getStreamStoragePort());\n    }\n    fnWorkerService=WorkerServiceLoader.load(workerConfig);\n  }\n else {\n    workerConfig=new WorkerConfig();\n  }\n  broker=new PulsarService(config,workerConfig,Optional.ofNullable(fnWorkerService),(exitCode) -> {\n    log.info(\"Halting standalone process with code {}\",exitCode);\n    LogManager.shutdown();\n    Runtime.getRuntime().halt(exitCode);\n  }\n);\n  broker.start();\n  final String cluster=config.getClusterName();\n  if (!config.isTlsEnabled()) {\n    URL webServiceUrl=new URL(String.format(\"http://%s:%d\",config.getAdvertisedAddress(),config.getWebServicePort().get()));\n    String brokerServiceUrl=String.format(\"pulsar://%s:%d\",config.getAdvertisedAddress(),config.getBrokerServicePort().get());\n    admin=PulsarAdmin.builder().serviceHttpUrl(webServiceUrl.toString()).authentication(config.getBrokerClientAuthenticationPlugin(),config.getBrokerClientAuthenticationParameters()).build();\n    ClusterData clusterData=ClusterData.builder().serviceUrl(webServiceUrl.toString()).brokerServiceUrl(brokerServiceUrl).build();\n    createSampleNameSpace(clusterData,cluster);\n  }\n else {\n    URL webServiceUrlTls=new URL(String.format(\"https://%s:%d\",config.getAdvertisedAddress(),config.getWebServicePortTls().get()));\n    String brokerServiceUrlTls=String.format(\"pulsar+ssl://%s:%d\",config.getAdvertisedAddress(),config.getBrokerServicePortTls().get());\n    PulsarAdminBuilder builder=PulsarAdmin.builder().serviceHttpUrl(webServiceUrlTls.toString()).authentication(config.getBrokerClientAuthenticationPlugin(),config.getBrokerClientAuthenticationParameters());\n    if (config.isBrokerClientTlsEnabled()) {\n      if (config.isBrokerClientTlsEnabledWithKeyStore()) {\n        builder.useKeyStoreTls(true).tlsTrustStoreType(config.getBrokerClientTlsTrustStoreType()).tlsTrustStorePath(config.getBrokerClientTlsTrustStore()).tlsTrustStorePassword(config.getBrokerClientTlsTrustStorePassword());\n      }\n else {\n        builder.tlsTrustCertsFilePath(config.getBrokerClientTrustCertsFilePath());\n      }\n      builder.allowTlsInsecureConnection(config.isTlsAllowInsecureConnection());\n    }\n    admin=builder.build();\n    ClusterData clusterData=ClusterData.builder().serviceUrlTls(webServiceUrlTls.toString()).brokerServiceUrlTls(brokerServiceUrlTls).build();\n    createSampleNameSpace(clusterData,cluster);\n  }\n  createNameSpace(cluster,TopicName.PUBLIC_TENANT,TopicName.PUBLIC_TENANT + \"/\" + TopicName.DEFAULT_NAMESPACE);\n  createNameSpace(cluster,SYSTEM_NAMESPACE.getTenant(),SYSTEM_NAMESPACE.toString());\n  if (config.isTransactionCoordinatorEnabled() && !admin.namespaces().getTopics(SYSTEM_NAMESPACE.toString()).contains(TRANSACTION_COORDINATOR_ASSIGN.getPartition(0).toString())) {\n    admin.topics().createPartitionedTopic(TRANSACTION_COORDINATOR_ASSIGN.toString(),1);\n  }\n  log.debug(\"--- setup completed ---\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 470,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5457,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 357,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void start() throws Exception {\n  if (config == null) {\n    System.exit(1);\n  }\n  log.debug(\"--- setup PulsarStandaloneStarter ---\");\n  if (!this.isOnlyBroker()) {\n    ServerConfiguration bkServerConf=new ServerConfiguration();\n    bkServerConf.loadConf(new File(configFile).toURI().toURL());\n    bkEnsemble=new LocalBookkeeperEnsemble(this.getNumOfBk(),this.getZkPort(),this.getBkPort(),this.getStreamStoragePort(),this.getZkDir(),this.getBkDir(),this.isWipeData(),\"127.0.0.1\");\n    bkEnsemble.startStandalone(bkServerConf,!this.isNoStreamStorage());\n  }\n  if (this.isNoBroker()) {\n    return;\n  }\n  if (!this.isNoFunctionsWorker()) {\n    workerConfig=PulsarService.initializeWorkerConfigFromBrokerConfig(config,this.getFnWorkerConfigFile());\n    if (this.isNoStreamStorage()) {\n      workerConfig.setStateStorageServiceUrl(null);\n    }\n else     if (workerConfig.getStateStorageServiceUrl() == null) {\n      workerConfig.setStateStorageServiceUrl(\"bk://127.0.0.1:\" + this.getStreamStoragePort());\n    }\n    fnWorkerService=WorkerServiceLoader.load(workerConfig);\n  }\n else {\n    workerConfig=new WorkerConfig();\n  }\n  broker=new PulsarService(config,workerConfig,Optional.ofNullable(fnWorkerService),(exitCode) -> {\n    log.info(\"Halting standalone process with code {}\",exitCode);\n    LogManager.shutdown();\n    Runtime.getRuntime().halt(exitCode);\n  }\n);\n  broker.start();\n  final String cluster=config.getClusterName();\n  if (!config.isTlsEnabled()) {\n    URL webServiceUrl=new URL(String.format(\"http://%s:%d\",config.getAdvertisedAddress(),config.getWebServicePort().get()));\n    String brokerServiceUrl=String.format(\"pulsar://%s:%d\",config.getAdvertisedAddress(),config.getBrokerServicePort().get());\n    admin=PulsarAdmin.builder().serviceHttpUrl(webServiceUrl.toString()).authentication(config.getBrokerClientAuthenticationPlugin(),config.getBrokerClientAuthenticationParameters()).build();\n    ClusterData clusterData=ClusterData.builder().serviceUrl(webServiceUrl.toString()).brokerServiceUrl(brokerServiceUrl).build();\n    createSampleNameSpace(clusterData,cluster);\n  }\n else {\n    URL webServiceUrlTls=new URL(String.format(\"https://%s:%d\",config.getAdvertisedAddress(),config.getWebServicePortTls().get()));\n    String brokerServiceUrlTls=String.format(\"pulsar+ssl://%s:%d\",config.getAdvertisedAddress(),config.getBrokerServicePortTls().get());\n    PulsarAdminBuilder builder=PulsarAdmin.builder().serviceHttpUrl(webServiceUrlTls.toString()).authentication(config.getBrokerClientAuthenticationPlugin(),config.getBrokerClientAuthenticationParameters());\n    if (config.isBrokerClientTlsEnabled()) {\n      if (config.isBrokerClientTlsEnabledWithKeyStore()) {\n        builder.useKeyStoreTls(true).tlsTrustStoreType(config.getBrokerClientTlsTrustStoreType()).tlsTrustStorePath(config.getBrokerClientTlsTrustStore()).tlsTrustStorePassword(config.getBrokerClientTlsTrustStorePassword());\n      }\n else {\n        builder.tlsTrustCertsFilePath(config.getBrokerClientTrustCertsFilePath());\n      }\n      builder.allowTlsInsecureConnection(config.isTlsAllowInsecureConnection());\n    }\n    admin=builder.build();\n    ClusterData clusterData=ClusterData.builder().serviceUrlTls(webServiceUrlTls.toString()).brokerServiceUrlTls(brokerServiceUrlTls).build();\n    createSampleNameSpace(clusterData,cluster);\n  }\n  createNameSpace(cluster,TopicName.PUBLIC_TENANT,TopicName.PUBLIC_TENANT + \"/\" + TopicName.DEFAULT_NAMESPACE);\n  createNameSpace(cluster,SYSTEM_NAMESPACE.getTenant(),SYSTEM_NAMESPACE.toString());\n  if (config.isTransactionCoordinatorEnabled() && !admin.namespaces().getTopics(SYSTEM_NAMESPACE.toString()).contains(TRANSACTION_COORDINATOR_ASSIGN.getPartition(0).toString())) {\n    admin.topics().createPartitionedTopic(TRANSACTION_COORDINATOR_ASSIGN.toString(),1);\n  }\n  log.debug(\"--- setup completed ---\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 476,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 258,
        "startColumnNumber" : 12,
        "endLineNumber" : 258,
        "endColumnNumber" : 72
      },
      "nodeContext" : "bkServerConf.loadConf(new File(configFile).toURI().toURL());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.net.URL"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 258,
    "startColumnNumber" : 34,
    "endLineNumber" : 258,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}