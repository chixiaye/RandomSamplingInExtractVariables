{
  "id" : 175,
  "expression" : "in.length",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/priorityqueue/BinaryHeapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "in.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 117,
      "startColumnNumber" : 17,
      "endLineNumber" : 117,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(in.length,removeOrder.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(in.length,removeOrder.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 115,
        "startColumnNumber" : 70,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(in.length,removeOrder.length);\n  BinaryHeap<Integer> pq=new BinaryHeap<>(in);\n  PriorityQueue<Integer> PQ=new PriorityQueue<>();\n  for (  int value : in)   PQ.offer(value);\n  assertTrue(pq.isMinHeap(0));\n  for (int i=0; i < removeOrder.length; i++) {\n    int elem=removeOrder[i];\n    assertTrue(pq.peek() == PQ.peek());\n    assertEquals(pq.remove(elem),PQ.remove(elem));\n    assertTrue(pq.size() == PQ.size());\n    assertTrue(pq.isMinHeap(0));\n  }\n  assertTrue(pq.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void sequentialRemoving(Integer[] in,Integer[] removeOrder){\n  assertEquals(in.length,removeOrder.length);\n  BinaryHeap<Integer> pq=new BinaryHeap<>(in);\n  PriorityQueue<Integer> PQ=new PriorityQueue<>();\n  for (  int value : in)   PQ.offer(value);\n  assertTrue(pq.isMinHeap(0));\n  for (int i=0; i < removeOrder.length; i++) {\n    int elem=removeOrder[i];\n    assertTrue(pq.peek() == PQ.peek());\n    assertEquals(pq.remove(elem),PQ.remove(elem));\n    assertTrue(pq.size() == PQ.size());\n    assertTrue(pq.isMinHeap(0));\n  }\n  assertTrue(pq.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(in.length,removeOrder.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 117,
    "startColumnNumber" : 17,
    "endLineNumber" : 117,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}