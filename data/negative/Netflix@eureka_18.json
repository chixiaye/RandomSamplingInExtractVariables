{
  "id" : 18,
  "expression" : "Runtime.getRuntime()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/AbstractEurekaServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Runtime.getRuntime()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 131,
      "startColumnNumber" : 8,
      "endLineNumber" : 131,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Runtime.getRuntime().addShutdownHook(new Thread(){\n  @Override public void run(){\n    if (injectorShutdown.getCount() > 0) {\n      logger.info(\"Shutdown hook triggered - terminating the application\");\n      shutdown();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Runtime.getRuntime().addShutdownHook(new Thread(){\n  @Override public void run(){\n    if (injectorShutdown.getCount() > 0) {\n      logger.info(\"Shutdown hook triggered - terminating the application\");\n      shutdown();\n    }\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 130,
        "startColumnNumber" : 35,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void waitTillShutdown(){\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Runtime.getRuntime().addShutdownHook(new Thread(){\n  @Override public void run(){\n    if (injectorShutdown.getCount() > 0) {\n      logger.info(\"Shutdown hook triggered - terminating the application\");\n      shutdown();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 10
    },
    "tokenLength" : 2,
    "type" : "java.lang.Runtime"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 131,
    "startColumnNumber" : 8,
    "endLineNumber" : 131,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}