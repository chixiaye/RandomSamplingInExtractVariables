{
  "id" : 387,
  "expression" : "String.class",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/verification/VerificationUsingMatchersTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 72,
      "startColumnNumber" : 54,
      "endLineNumber" : 72,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 72,
        "startColumnNumber" : 50,
        "endLineNumber" : 72,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 94
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 95
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n catch (ArgumentsAreDifferent e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 66,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldVerifyUsingMixedMatchers(){\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 72,
        "startColumnNumber" : 50,
        "endLineNumber" : 72,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  }, {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 82,
      "startColumnNumber" : 54,
      "endLineNumber" : 82,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 82,
        "startColumnNumber" : 50,
        "endLineNumber" : 82,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 94
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 95
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n catch (ArgumentsAreDifferent e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 66,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldVerifyUsingMixedMatchers(){\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 82,
        "startColumnNumber" : 50,
        "endLineNumber" : 82,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  }, {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 92,
      "startColumnNumber" : 54,
      "endLineNumber" : 92,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 92,
        "startColumnNumber" : 50,
        "endLineNumber" : 92,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 94
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 95
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n  fail();\n}\n catch (ArgumentsAreDifferent e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 66,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldVerifyUsingMixedMatchers(){\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 92,
        "startColumnNumber" : 50,
        "endLineNumber" : 92,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  }, {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 101,
      "startColumnNumber" : 50,
      "endLineNumber" : 101,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 101,
        "startColumnNumber" : 46,
        "endLineNumber" : 101,
        "endColumnNumber" : 63
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 90
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 91
      },
      "nodeContext" : "verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 66,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldVerifyUsingMixedMatchers(){\n  mock.threeArgumentMethod(11,\"\",\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,new Object(),\"01234\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"no match\");\n  try {\n    verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n    fail();\n  }\n catch (  ArgumentsAreDifferent e) {\n  }\n  mock.threeArgumentMethod(8,\"\",\"123\");\n  verify(mock).threeArgumentMethod(and(geq(7),leq(10)),isA(String.class),Matchers.contains(\"123\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 101,
        "startColumnNumber" : 46,
        "endLineNumber" : 101,
        "endColumnNumber" : 63
      },
      "nodeContext" : "isA(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 72,
    "startColumnNumber" : 54,
    "endLineNumber" : 72,
    "endColumnNumber" : 66
  }, {
    "charLength" : 12,
    "startLineNumber" : 82,
    "startColumnNumber" : 54,
    "endLineNumber" : 82,
    "endColumnNumber" : 66
  }, {
    "charLength" : 12,
    "startLineNumber" : 92,
    "startColumnNumber" : 54,
    "endLineNumber" : 92,
    "endColumnNumber" : 66
  }, {
    "charLength" : 12,
    "startLineNumber" : 101,
    "startColumnNumber" : 50,
    "endLineNumber" : 101,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}