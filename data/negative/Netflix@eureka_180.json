{
  "id" : 180,
  "expression" : "registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests))",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/channel/InterestChannelImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 117,
      "startColumnNumber" : 8,
      "endLineNumber" : 117,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 10
      },
      "nodeContext" : "registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests)).subscribe(new Subscriber<InstanceInfo>(){\n  @Override public void onCompleted(){\n    logger.debug(\"Snapshot stream from registry completed. Sending SnapshotComplete to the client\");\n    Observable<Void> sendResult=transport.submit(SnapshotComplete.INSTANCE);\n    subscribeToTransportSend(sendResult,\"snapshotCompleted\");\n  }\n  @Override public void onError(  Throwable e){\n    logger.error(\"Snapshot subscription stream terminated due to an error\",e);\n  }\n  @Override public void onNext(  InstanceInfo instanceInfo){\n    handleChangeNotification(new ChangeNotification<InstanceInfo>(Kind.Add,instanceInfo));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 11
      },
      "nodeContext" : "registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests)).subscribe(new Subscriber<InstanceInfo>(){\n  @Override public void onCompleted(){\n    logger.debug(\"Snapshot stream from registry completed. Sending SnapshotComplete to the client\");\n    Observable<Void> sendResult=transport.submit(SnapshotComplete.INSTANCE);\n    subscribeToTransportSend(sendResult,\"snapshotCompleted\");\n  }\n  @Override public void onError(  Throwable e){\n    logger.error(\"Snapshot subscription stream terminated due to an error\",e);\n  }\n  @Override public void onNext(  InstanceInfo instanceInfo){\n    handleChangeNotification(new ChangeNotification<InstanceInfo>(Kind.Add,instanceInfo));\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 113,
        "startColumnNumber" : 66,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Void> toReturn=transport.acknowledge();\n  subscribeToTransportSend(toReturn,\"acknowledgment(SnapshotRegistration)\");\n  registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n      logger.debug(\"Snapshot stream from registry completed. Sending SnapshotComplete to the client\");\n      Observable<Void> sendResult=transport.submit(SnapshotComplete.INSTANCE);\n      subscribeToTransportSend(sendResult,\"snapshotCompleted\");\n    }\n    @Override public void onError(    Throwable e){\n      logger.error(\"Snapshot subscription stream terminated due to an error\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      handleChangeNotification(new ChangeNotification<InstanceInfo>(Kind.Add,instanceInfo));\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void sendSnapshot(Interest<InstanceInfo>[] interests){\n  Observable<Void> toReturn=transport.acknowledge();\n  subscribeToTransportSend(toReturn,\"acknowledgment(SnapshotRegistration)\");\n  registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n      logger.debug(\"Snapshot stream from registry completed. Sending SnapshotComplete to the client\");\n      Observable<Void> sendResult=transport.submit(SnapshotComplete.INSTANCE);\n      subscribeToTransportSend(sendResult,\"snapshotCompleted\");\n    }\n    @Override public void onError(    Throwable e){\n      logger.error(\"Snapshot subscription stream terminated due to an error\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      handleChangeNotification(new ChangeNotification<InstanceInfo>(Kind.Add,instanceInfo));\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 10
      },
      "nodeContext" : "registry.forSnapshot(new MultipleInterests<InstanceInfo>(interests)).subscribe(new Subscriber<InstanceInfo>(){\n  @Override public void onCompleted(){\n    logger.debug(\"Snapshot stream from registry completed. Sending SnapshotComplete to the client\");\n    Observable<Void> sendResult=transport.submit(SnapshotComplete.INSTANCE);\n    subscribeToTransportSend(sendResult,\"snapshotCompleted\");\n  }\n  @Override public void onError(  Throwable e){\n    logger.error(\"Snapshot subscription stream terminated due to an error\",e);\n  }\n  @Override public void onNext(  InstanceInfo instanceInfo){\n    handleChangeNotification(new ChangeNotification<InstanceInfo>(Kind.Add,instanceInfo));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 91,
      "astHeight" : 11
    },
    "tokenLength" : 4,
    "type" : "com.netflix.eureka2.registry.Observable<com.netflix.eureka2.registry.instance.InstanceInfo>"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 117,
    "startColumnNumber" : 8,
    "endLineNumber" : 117,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}