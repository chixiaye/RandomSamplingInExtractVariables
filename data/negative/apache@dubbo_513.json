{
  "id" : 513,
  "expression" : "i < paramSize",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/MethodDefinitionBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < paramSize",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 62,
      "startColumnNumber" : 24,
      "endLineNumber" : 62,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < paramSize; i++) {\n  TypeDefinition parameter=builder.build(genericParamTypes[i],paramTypes[i]);\n  parameterTypes[i]=parameter.getType();\n  parameters.add(parameter);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 50,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodDefinition md=new MethodDefinition();\n  md.setName(method.getName());\n  Class<?>[] paramTypes=method.getParameterTypes();\n  Type[] genericParamTypes=method.getGenericParameterTypes();\n  int paramSize=paramTypes.length;\n  String[] parameterTypes=new String[paramSize];\n  List<TypeDefinition> parameters=new ArrayList<>(paramSize);\n  for (int i=0; i < paramSize; i++) {\n    TypeDefinition parameter=builder.build(genericParamTypes[i],paramTypes[i]);\n    parameterTypes[i]=parameter.getType();\n    parameters.add(parameter);\n  }\n  md.setParameterTypes(parameterTypes);\n  md.setParameters(parameters);\n  TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n  md.setReturnType(td.getType());\n  return md;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Build the instance of  {@link MethodDefinition}\n * @param method {@link Method}\n * @return non-null\n */\npublic MethodDefinition build(Method method){\n  MethodDefinition md=new MethodDefinition();\n  md.setName(method.getName());\n  Class<?>[] paramTypes=method.getParameterTypes();\n  Type[] genericParamTypes=method.getGenericParameterTypes();\n  int paramSize=paramTypes.length;\n  String[] parameterTypes=new String[paramSize];\n  List<TypeDefinition> parameters=new ArrayList<>(paramSize);\n  for (int i=0; i < paramSize; i++) {\n    TypeDefinition parameter=builder.build(genericParamTypes[i],paramTypes[i]);\n    parameterTypes[i]=parameter.getType();\n    parameters.add(parameter);\n  }\n  md.setParameterTypes(parameterTypes);\n  md.setParameters(parameters);\n  TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n  md.setReturnType(td.getType());\n  return md;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < paramSize; i++) {\n  TypeDefinition parameter=builder.build(genericParamTypes[i],paramTypes[i]);\n  parameterTypes[i]=parameter.getType();\n  parameters.add(parameter);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 62,
    "startColumnNumber" : 24,
    "endLineNumber" : 62,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}