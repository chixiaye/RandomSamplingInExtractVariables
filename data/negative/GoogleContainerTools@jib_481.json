{
  "id" : 481,
  "expression" : "ex.getMessage()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/docker/DockerClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ex.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 110,
      "startColumnNumber" : 76,
      "endLineNumber" : 110,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 110,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 110,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 109,
        "startColumnNumber" : 29,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IOException ex) {\n  Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  testDockerClient.load(Blobs.from(\"jib\"));\n  Assert.fail(\"Write should have failed\");\n}\n catch (IOException ex) {\n  Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 90,
        "startColumnNumber" : 63,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DockerClient testDockerClient=new DockerClient(ignored -> mockProcessBuilder);\n  Mockito.when(mockProcess.getOutputStream()).thenReturn(new OutputStream(){\n    @Override public void write(    int b) throws IOException {\n      throw new IOException();\n    }\n  }\n);\n  Mockito.when(mockProcess.getErrorStream()).thenReturn(new ByteArrayInputStream(\"error\".getBytes(StandardCharsets.UTF_8)));\n  try {\n    testDockerClient.load(Blobs.from(\"jib\"));\n    Assert.fail(\"Write should have failed\");\n  }\n catch (  IOException ex) {\n    Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testLoad_stdinFail() throws InterruptedException {\n  DockerClient testDockerClient=new DockerClient(ignored -> mockProcessBuilder);\n  Mockito.when(mockProcess.getOutputStream()).thenReturn(new OutputStream(){\n    @Override public void write(    int b) throws IOException {\n      throw new IOException();\n    }\n  }\n);\n  Mockito.when(mockProcess.getErrorStream()).thenReturn(new ByteArrayInputStream(\"error\".getBytes(StandardCharsets.UTF_8)));\n  try {\n    testDockerClient.load(Blobs.from(\"jib\"));\n    Assert.fail(\"Write should have failed\");\n  }\n catch (  IOException ex) {\n    Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 110,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(\"'docker load' command failed with error: error\",ex.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 110,
    "startColumnNumber" : 76,
    "endLineNumber" : 110,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}