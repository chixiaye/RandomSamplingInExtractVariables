{
  "id" : 5,
  "expression" : "isSignificantlyOlder",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/subutil/src/main/java/com/blankj/subutil/util/LocationUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isSignificantlyOlder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 281,
      "startColumnNumber" : 19,
      "endLineNumber" : 281,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 281,
        "startColumnNumber" : 15,
        "endLineNumber" : 283,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSignificantlyOlder) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 278,
        "startColumnNumber" : 8,
        "endLineNumber" : 283,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSignificantlyNewer) {\n  return true;\n}\n else if (isSignificantlyOlder) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1715,
        "startLineNumber" : 264,
        "startColumnNumber" : 95,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentBestLocation == null) {\n    return true;\n  }\n  long timeDelta=newLocation.getTime() - currentBestLocation.getTime();\n  boolean isSignificantlyNewer=timeDelta > TWO_MINUTES;\n  boolean isSignificantlyOlder=timeDelta < -TWO_MINUTES;\n  boolean isNewer=timeDelta > 0;\n  if (isSignificantlyNewer) {\n    return true;\n  }\n else   if (isSignificantlyOlder) {\n    return false;\n  }\n  int accuracyDelta=(int)(newLocation.getAccuracy() - currentBestLocation.getAccuracy());\n  boolean isLessAccurate=accuracyDelta > 0;\n  boolean isMoreAccurate=accuracyDelta < 0;\n  boolean isSignificantlyLessAccurate=accuracyDelta > 200;\n  boolean isFromSameProvider=isSameProvider(newLocation.getProvider(),currentBestLocation.getProvider());\n  if (isMoreAccurate) {\n    return true;\n  }\n else   if (isNewer && !isLessAccurate) {\n    return true;\n  }\n else   if (isNewer && !isSignificantlyLessAccurate && isFromSameProvider) {\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 257,
        "startColumnNumber" : 4,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 是否更好的位置\n * @param newLocation         The new Location that you want to evaluate\n * @param currentBestLocation The current Location fix, to which you want to compare the new one\n * @return {@code true}: 是<br> {@code false}: 否\n */\npublic static boolean isBetterLocation(Location newLocation,Location currentBestLocation){\n  if (currentBestLocation == null) {\n    return true;\n  }\n  long timeDelta=newLocation.getTime() - currentBestLocation.getTime();\n  boolean isSignificantlyNewer=timeDelta > TWO_MINUTES;\n  boolean isSignificantlyOlder=timeDelta < -TWO_MINUTES;\n  boolean isNewer=timeDelta > 0;\n  if (isSignificantlyNewer) {\n    return true;\n  }\n else   if (isSignificantlyOlder) {\n    return false;\n  }\n  int accuracyDelta=(int)(newLocation.getAccuracy() - currentBestLocation.getAccuracy());\n  boolean isLessAccurate=accuracyDelta > 0;\n  boolean isMoreAccurate=accuracyDelta < 0;\n  boolean isSignificantlyLessAccurate=accuracyDelta > 200;\n  boolean isFromSameProvider=isSameProvider(newLocation.getProvider(),currentBestLocation.getProvider());\n  if (isMoreAccurate) {\n    return true;\n  }\n else   if (isNewer && !isLessAccurate) {\n    return true;\n  }\n else   if (isNewer && !isSignificantlyLessAccurate && isFromSameProvider) {\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 281,
        "startColumnNumber" : 15,
        "endLineNumber" : 283,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSignificantlyOlder) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 281,
    "startColumnNumber" : 19,
    "endLineNumber" : 281,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}