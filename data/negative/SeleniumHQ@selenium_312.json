{
  "id" : 312,
  "expression" : "Arrays.stream(query.split(\"&\")).map(q -> {\n  int i=q.indexOf(\"=\");\n  if (i == -1) {\n    return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n  }\n  return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n}\n)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/jre/server/JreMessages.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.stream(query.split(\"&\")).map(q -> {\n  int i=q.indexOf(\"=\");\n  if (i == -1) {\n    return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n  }\n  return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 295,
      "startLineNumber" : 38,
      "startColumnNumber" : 6,
      "endLineNumber" : 45,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 54,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Arrays.stream(query.split(\"&\")).map(q -> {\n  int i=q.indexOf(\"=\");\n  if (i == -1) {\n    return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n  }\n  return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n}\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Arrays.stream(query.split(\"&\")).map(q -> {\n  int i=q.indexOf(\"=\");\n  if (i == -1) {\n    return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n  }\n  return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n}\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 37,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Arrays.stream(query.split(\"&\")).map(q -> {\n    int i=q.indexOf(\"=\");\n    if (i == -1) {\n      return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n    }\n    return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n  }\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (query != null) {\n  Arrays.stream(query.split(\"&\")).map(q -> {\n    int i=q.indexOf(\"=\");\n    if (i == -1) {\n      return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n    }\n    return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n  }\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 31,
        "startColumnNumber" : 54,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpRequest request=new HttpRequest(HttpMethod.valueOf(exchange.getRequestMethod()),exchange.getRequestURI().getPath());\n  String query=exchange.getRequestURI().getQuery();\n  if (query != null) {\n    Arrays.stream(query.split(\"&\")).map(q -> {\n      int i=q.indexOf(\"=\");\n      if (i == -1) {\n        return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n      }\n      return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n    }\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()));\n  }\n  exchange.getRequestHeaders().forEach((name,values) -> values.forEach(value -> request.addHeader(name,value)));\n  request.setContent(memoize(exchange::getRequestBody));\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static HttpRequest asRequest(HttpExchange exchange){\n  HttpRequest request=new HttpRequest(HttpMethod.valueOf(exchange.getRequestMethod()),exchange.getRequestURI().getPath());\n  String query=exchange.getRequestURI().getQuery();\n  if (query != null) {\n    Arrays.stream(query.split(\"&\")).map(q -> {\n      int i=q.indexOf(\"=\");\n      if (i == -1) {\n        return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n      }\n      return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n    }\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()));\n  }\n  exchange.getRequestHeaders().forEach((name,values) -> values.forEach(value -> request.addHeader(name,value)));\n  request.setContent(memoize(exchange::getRequestBody));\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Arrays.stream(query.split(\"&\")).map(q -> {\n  int i=q.indexOf(\"=\");\n  if (i == -1) {\n    return new AbstractMap.SimpleImmutableEntry<>(q,\"\");\n  }\n  return new AbstractMap.SimpleImmutableEntry<>(q.substring(0,i),q.substring(i + 1));\n}\n).forEach(entry -> request.addQueryParameter(entry.getKey(),entry.getValue()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 12
    },
    "tokenLength" : 28,
    "type" : "java.util.stream.Stream<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 295,
    "startLineNumber" : 38,
    "startColumnNumber" : 6,
    "endLineNumber" : 45,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}