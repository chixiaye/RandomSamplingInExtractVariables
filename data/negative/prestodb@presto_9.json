{
  "id" : 9,
  "expression" : "-1",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-local-file/src/test/java/com/facebook/presto/localfile/TestLocalFileRecordSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 58,
      "startColumnNumber" : 157,
      "endLineNumber" : 58,
      "endColumnNumber" : 159
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 58,
        "startColumnNumber" : 142,
        "endLineNumber" : 58,
        "endColumnNumber" : 160
      },
      "nodeContext" : "OptionalInt.of(-1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 58,
        "startColumnNumber" : 87,
        "endLineNumber" : 58,
        "endColumnNumber" : 161
      },
      "nodeContext" : "new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 58,
        "endColumnNumber" : 162
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 25
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 34
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 80
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 60,
        "endColumnNumber" : 45
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 58,
        "startColumnNumber" : 36,
        "endLineNumber" : 60,
        "endColumnNumber" : 45
      },
      "nodeContext" : "columnHandles=metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 46
      },
      "nodeContext" : "List<LocalFileColumnHandle> columnHandles=metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2159,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SchemaTableName tableName=getSchemaTableName();\n  List<LocalFileColumnHandle> columnHandles=metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column).collect(Collectors.toList());\n  LocalFileRecordSet recordSet=new LocalFileRecordSet(localFileTables,new LocalFileSplit(address,tableName,TupleDomain.all()),columnHandles);\n  RecordCursor cursor=recordSet.cursor();\n  for (int i=0; i < columnHandles.size(); i++) {\n    assertEquals(cursor.getType(i),columnHandles.get(i).getColumnType());\n  }\n  assertTrue(cursor.advanceNextPosition());\n  assertEquals(cursor.getSlice(0).toStringUtf8(),address.toString());\n  assertEquals(cursor.getSlice(2).toStringUtf8(),\"127.0.0.1\");\n  assertEquals(cursor.getSlice(3).toStringUtf8(),\"POST\");\n  assertEquals(cursor.getSlice(4).toStringUtf8(),\"/v1/memory\");\n  assertTrue(cursor.isNull(5));\n  assertTrue(cursor.isNull(6));\n  assertEquals(cursor.getLong(7),200);\n  assertEquals(cursor.getLong(8),0);\n  assertEquals(cursor.getLong(9),1000);\n  assertEquals(cursor.getLong(10),10);\n  assertTrue(cursor.isNull(11));\n  assertTrue(cursor.advanceNextPosition());\n  assertEquals(cursor.getSlice(0).toStringUtf8(),address.toString());\n  assertEquals(cursor.getSlice(2).toStringUtf8(),\"127.0.0.1\");\n  assertEquals(cursor.getSlice(3).toStringUtf8(),\"GET\");\n  assertEquals(cursor.getSlice(4).toStringUtf8(),\"/v1/service/presto/general\");\n  assertEquals(cursor.getSlice(5).toStringUtf8(),\"foo\");\n  assertEquals(cursor.getSlice(6).toStringUtf8(),\"ffffffff-ffff-ffff-ffff-ffffffffffff\");\n  assertEquals(cursor.getLong(7),200);\n  assertEquals(cursor.getLong(8),0);\n  assertEquals(cursor.getLong(9),37);\n  assertEquals(cursor.getLong(10),1094);\n  assertEquals(cursor.getSlice(11).toStringUtf8(),\"a7229d56-5cbd-4e23-81ff-312ba6be0f12\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2255,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void assertData(LocalFileTables localFileTables,LocalFileMetadata metadata){\n  SchemaTableName tableName=getSchemaTableName();\n  List<LocalFileColumnHandle> columnHandles=metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1))).values().stream().map(column -> (LocalFileColumnHandle)column).collect(Collectors.toList());\n  LocalFileRecordSet recordSet=new LocalFileRecordSet(localFileTables,new LocalFileSplit(address,tableName,TupleDomain.all()),columnHandles);\n  RecordCursor cursor=recordSet.cursor();\n  for (int i=0; i < columnHandles.size(); i++) {\n    assertEquals(cursor.getType(i),columnHandles.get(i).getColumnType());\n  }\n  assertTrue(cursor.advanceNextPosition());\n  assertEquals(cursor.getSlice(0).toStringUtf8(),address.toString());\n  assertEquals(cursor.getSlice(2).toStringUtf8(),\"127.0.0.1\");\n  assertEquals(cursor.getSlice(3).toStringUtf8(),\"POST\");\n  assertEquals(cursor.getSlice(4).toStringUtf8(),\"/v1/memory\");\n  assertTrue(cursor.isNull(5));\n  assertTrue(cursor.isNull(6));\n  assertEquals(cursor.getLong(7),200);\n  assertEquals(cursor.getLong(8),0);\n  assertEquals(cursor.getLong(9),1000);\n  assertEquals(cursor.getLong(10),10);\n  assertTrue(cursor.isNull(11));\n  assertTrue(cursor.advanceNextPosition());\n  assertEquals(cursor.getSlice(0).toStringUtf8(),address.toString());\n  assertEquals(cursor.getSlice(2).toStringUtf8(),\"127.0.0.1\");\n  assertEquals(cursor.getSlice(3).toStringUtf8(),\"GET\");\n  assertEquals(cursor.getSlice(4).toStringUtf8(),\"/v1/service/presto/general\");\n  assertEquals(cursor.getSlice(5).toStringUtf8(),\"foo\");\n  assertEquals(cursor.getSlice(6).toStringUtf8(),\"ffffffff-ffff-ffff-ffff-ffffffffffff\");\n  assertEquals(cursor.getLong(7),200);\n  assertEquals(cursor.getLong(8),0);\n  assertEquals(cursor.getLong(9),37);\n  assertEquals(cursor.getLong(10),1094);\n  assertEquals(cursor.getSlice(11).toStringUtf8(),\"a7229d56-5cbd-4e23-81ff-312ba6be0f12\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 58,
        "endColumnNumber" : 162
      },
      "nodeContext" : "metadata.getColumnHandles(SESSION,new LocalFileTableHandle(tableName,OptionalInt.of(0),OptionalInt.of(-1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 58,
    "startColumnNumber" : 157,
    "endLineNumber" : 58,
    "endColumnNumber" : 159
  } ],
  "layoutRelationDataList" : [ ]
}