{
  "id" : 463,
  "expression" : "choices.get(i)",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/RouterActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "choices.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 333,
      "startColumnNumber" : 42,
      "endLineNumber" : 333,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 333,
        "startColumnNumber" : 38,
        "endLineNumber" : 333,
        "endColumnNumber" : 56
      },
      "nodeContext" : "c=choices.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 333,
        "startColumnNumber" : 20,
        "endLineNumber" : 333,
        "endColumnNumber" : 57
      },
      "nodeContext" : "AdapterChoiceItem c=choices.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 332,
        "startColumnNumber" : 57,
        "endLineNumber" : 338,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  AdapterChoiceItem c=choices.get(i);\n  if (lastSelectedPlayer.equals(c.key)) {\n    selectedRadioPosition=i;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 332,
        "startColumnNumber" : 16,
        "endLineNumber" : 338,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < choices.size(); i++) {\n  AdapterChoiceItem c=choices.get(i);\n  if (lastSelectedPlayer.equals(c.key)) {\n    selectedRadioPosition=i;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 331,
        "startColumnNumber" : 56,
        "endLineNumber" : 339,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int i=0; i < choices.size(); i++) {\n    AdapterChoiceItem c=choices.get(i);\n    if (lastSelectedPlayer.equals(c.key)) {\n      selectedRadioPosition=i;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 331,
        "startColumnNumber" : 12,
        "endLineNumber" : 339,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!TextUtils.isEmpty(lastSelectedPlayer)) {\n  for (int i=0; i < choices.size(); i++) {\n    AdapterChoiceItem c=choices.get(i);\n    if (lastSelectedPlayer.equals(c.key)) {\n      selectedRadioPosition=i;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 328,
        "startColumnNumber" : 41,
        "endLineNumber" : 340,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String lastSelectedPlayer=preferences.getString(getString(R.string.preferred_open_action_last_selected_key),null);\n  if (!TextUtils.isEmpty(lastSelectedPlayer)) {\n    for (int i=0; i < choices.size(); i++) {\n      AdapterChoiceItem c=choices.get(i);\n      if (lastSelectedPlayer.equals(c.key)) {\n        selectedRadioPosition=i;\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 340,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (selectedRadioPosition == -1) {\n  final String lastSelectedPlayer=preferences.getString(getString(R.string.preferred_open_action_last_selected_key),null);\n  if (!TextUtils.isEmpty(lastSelectedPlayer)) {\n    for (int i=0; i < choices.size(); i++) {\n      AdapterChoiceItem c=choices.get(i);\n      if (lastSelectedPlayer.equals(c.key)) {\n        selectedRadioPosition=i;\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4323,
        "startLineNumber" : 255,
        "startColumnNumber" : 67,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SharedPreferences preferences=PreferenceManager.getDefaultSharedPreferences(this);\n  final Context themeWrapperContext=getThemeWrapperContext();\n  final LayoutInflater inflater=LayoutInflater.from(themeWrapperContext);\n  final LinearLayout rootLayout=(LinearLayout)inflater.inflate(R.layout.preferred_player_dialog_view,null,false);\n  final RadioGroup radioGroup=rootLayout.findViewById(android.R.id.list);\n  final DialogInterface.OnClickListener dialogButtonsClickListener=(dialog,which) -> {\n    final int indexOfChild=radioGroup.indexOfChild(radioGroup.findViewById(radioGroup.getCheckedRadioButtonId()));\n    final AdapterChoiceItem choice=choices.get(indexOfChild);\n    handleChoice(choice.key);\n    if (which == DialogInterface.BUTTON_POSITIVE) {\n      preferences.edit().putString(getString(R.string.preferred_open_action_key),choice.key).apply();\n    }\n  }\n;\n  final AlertDialog alertDialog=new AlertDialog.Builder(themeWrapperContext).setTitle(R.string.preferred_open_action_share_menu_title).setView(radioGroup).setCancelable(true).setNegativeButton(R.string.just_once,dialogButtonsClickListener).setPositiveButton(R.string.always,dialogButtonsClickListener).setOnDismissListener((dialog) -> {\n    if (!selectionIsDownload) {\n      finish();\n    }\n  }\n).create();\n  alertDialog.setOnShowListener(dialog -> {\n    setDialogButtonsState(alertDialog,radioGroup.getCheckedRadioButtonId() != -1);\n  }\n);\n  radioGroup.setOnCheckedChangeListener((group,checkedId) -> setDialogButtonsState(alertDialog,true));\n  final View.OnClickListener radioButtonsClickListener=v -> {\n    final int indexOfChild=radioGroup.indexOfChild(v);\n    if (indexOfChild == -1) {\n      return;\n    }\n    selectedPreviously=selectedRadioPosition;\n    selectedRadioPosition=indexOfChild;\n    if (selectedPreviously == selectedRadioPosition) {\n      handleChoice(choices.get(selectedRadioPosition).key);\n    }\n  }\n;\n  int id=12345;\n  for (  AdapterChoiceItem item : choices) {\n    final RadioButton radioButton=(RadioButton)inflater.inflate(R.layout.list_radio_icon_item,null);\n    radioButton.setText(item.description);\n    radioButton.setCompoundDrawablesWithIntrinsicBounds(AppCompatResources.getDrawable(getApplicationContext(),item.icon),null,null,null);\n    radioButton.setChecked(false);\n    radioButton.setId(id++);\n    radioButton.setLayoutParams(new RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT));\n    radioButton.setOnClickListener(radioButtonsClickListener);\n    radioGroup.addView(radioButton);\n  }\n  if (selectedRadioPosition == -1) {\n    final String lastSelectedPlayer=preferences.getString(getString(R.string.preferred_open_action_last_selected_key),null);\n    if (!TextUtils.isEmpty(lastSelectedPlayer)) {\n      for (int i=0; i < choices.size(); i++) {\n        AdapterChoiceItem c=choices.get(i);\n        if (lastSelectedPlayer.equals(c.key)) {\n          selectedRadioPosition=i;\n          break;\n        }\n      }\n    }\n  }\n  selectedRadioPosition=Math.min(Math.max(-1,selectedRadioPosition),choices.size() - 1);\n  if (selectedRadioPosition != -1) {\n    ((RadioButton)radioGroup.getChildAt(selectedRadioPosition)).setChecked(true);\n  }\n  selectedPreviously=selectedRadioPosition;\n  alertDialog.show();\n  if (DeviceUtils.isTv(this)) {\n    FocusOverlayView.setupFocusObserver(alertDialog);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 482,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4386,
        "startLineNumber" : 255,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void showDialog(final List<AdapterChoiceItem> choices){\n  final SharedPreferences preferences=PreferenceManager.getDefaultSharedPreferences(this);\n  final Context themeWrapperContext=getThemeWrapperContext();\n  final LayoutInflater inflater=LayoutInflater.from(themeWrapperContext);\n  final LinearLayout rootLayout=(LinearLayout)inflater.inflate(R.layout.preferred_player_dialog_view,null,false);\n  final RadioGroup radioGroup=rootLayout.findViewById(android.R.id.list);\n  final DialogInterface.OnClickListener dialogButtonsClickListener=(dialog,which) -> {\n    final int indexOfChild=radioGroup.indexOfChild(radioGroup.findViewById(radioGroup.getCheckedRadioButtonId()));\n    final AdapterChoiceItem choice=choices.get(indexOfChild);\n    handleChoice(choice.key);\n    if (which == DialogInterface.BUTTON_POSITIVE) {\n      preferences.edit().putString(getString(R.string.preferred_open_action_key),choice.key).apply();\n    }\n  }\n;\n  final AlertDialog alertDialog=new AlertDialog.Builder(themeWrapperContext).setTitle(R.string.preferred_open_action_share_menu_title).setView(radioGroup).setCancelable(true).setNegativeButton(R.string.just_once,dialogButtonsClickListener).setPositiveButton(R.string.always,dialogButtonsClickListener).setOnDismissListener((dialog) -> {\n    if (!selectionIsDownload) {\n      finish();\n    }\n  }\n).create();\n  alertDialog.setOnShowListener(dialog -> {\n    setDialogButtonsState(alertDialog,radioGroup.getCheckedRadioButtonId() != -1);\n  }\n);\n  radioGroup.setOnCheckedChangeListener((group,checkedId) -> setDialogButtonsState(alertDialog,true));\n  final View.OnClickListener radioButtonsClickListener=v -> {\n    final int indexOfChild=radioGroup.indexOfChild(v);\n    if (indexOfChild == -1) {\n      return;\n    }\n    selectedPreviously=selectedRadioPosition;\n    selectedRadioPosition=indexOfChild;\n    if (selectedPreviously == selectedRadioPosition) {\n      handleChoice(choices.get(selectedRadioPosition).key);\n    }\n  }\n;\n  int id=12345;\n  for (  AdapterChoiceItem item : choices) {\n    final RadioButton radioButton=(RadioButton)inflater.inflate(R.layout.list_radio_icon_item,null);\n    radioButton.setText(item.description);\n    radioButton.setCompoundDrawablesWithIntrinsicBounds(AppCompatResources.getDrawable(getApplicationContext(),item.icon),null,null,null);\n    radioButton.setChecked(false);\n    radioButton.setId(id++);\n    radioButton.setLayoutParams(new RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT));\n    radioButton.setOnClickListener(radioButtonsClickListener);\n    radioGroup.addView(radioButton);\n  }\n  if (selectedRadioPosition == -1) {\n    final String lastSelectedPlayer=preferences.getString(getString(R.string.preferred_open_action_last_selected_key),null);\n    if (!TextUtils.isEmpty(lastSelectedPlayer)) {\n      for (int i=0; i < choices.size(); i++) {\n        AdapterChoiceItem c=choices.get(i);\n        if (lastSelectedPlayer.equals(c.key)) {\n          selectedRadioPosition=i;\n          break;\n        }\n      }\n    }\n  }\n  selectedRadioPosition=Math.min(Math.max(-1,selectedRadioPosition),choices.size() - 1);\n  if (selectedRadioPosition != -1) {\n    ((RadioButton)radioGroup.getChildAt(selectedRadioPosition)).setChecked(true);\n  }\n  selectedPreviously=selectedRadioPosition;\n  alertDialog.show();\n  if (DeviceUtils.isTv(this)) {\n    FocusOverlayView.setupFocusObserver(alertDialog);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 494,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 333,
        "startColumnNumber" : 20,
        "endLineNumber" : 333,
        "endColumnNumber" : 57
      },
      "nodeContext" : "AdapterChoiceItem c=choices.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.schabi.newpipe.RouterActivity.AdapterChoiceItem"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 333,
    "startColumnNumber" : 42,
    "endLineNumber" : 333,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}