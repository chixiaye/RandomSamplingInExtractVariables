{
  "id" : 266,
  "expression" : "new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true)",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/cli/impl/DefaultParserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 109,
      "startLineNumber" : 316,
      "startColumnNumber" : 8,
      "endLineNumber" : 317,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 17,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 316,
        "startColumnNumber" : 8,
        "endLineNumber" : 317,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 313,
        "startColumnNumber" : 35,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 188,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1304,
        "startLineNumber" : 313,
        "startColumnNumber" : 23,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new Option[]{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 193,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 1314,
        "startLineNumber" : 313,
        "startColumnNumber" : 13,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "options=new Option[]{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 313,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Option[] options=new Option[]{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 200,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6344,
        "startLineNumber" : 311,
        "startColumnNumber" : 49,
        "endLineNumber" : 417,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CLI cli=new DefaultCLI().setName(\"test\");\n  Option[] options=new Option[]{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)};\n  cli.addOptions(Arrays.asList(options));\n  cli.addArgument(new TypedArgument<String>().setType(String.class).setArgName(\"verticle\").setIndex(0).setRequired(false));\n  CommandLine evaluated=cli.parse(Collections.singletonList(\"-ha\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isNull();\n  assertThat((String)evaluated.getArgumentValue(0)).isNull();\n  evaluated=cli.parse(Arrays.asList(\"-ha\",\"true\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Collections.singletonList(\"-ha=true\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Collections.singletonList(\"--ha\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"--ha\",\"false\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isFalse();\n  evaluated=cli.parse(Collections.singletonList(\"--ha=no\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isFalse();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-instances=4\",\"-cp\",\".\" + File.pathSeparator + \"my.jar\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  int instances=evaluated.getOptionValue(\"instances\");\n  List<String> classpath=evaluated.getOptionValues(\"classpath\");\n  assertThat(instances).isEqualTo(4);\n  assertThat(classpath).containsExactly(\".\",\"my.jar\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"--cluster\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host\",\"127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"--cluster-host\",\"127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host=127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host\",\"127.0.0.1\",\"-cluster-port\",\"1234\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  assertThat((int)evaluated.getOptionValue(\"cluster-port\")).isEqualTo(1234);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 909,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6399,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 417,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testVertxRun() throws CLIException {\n  CLI cli=new DefaultCLI().setName(\"test\");\n  Option[] options=new Option[]{new TypedOption<String>().setLongName(\"conf\").setType(String.class).setSingleValued(true),new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\"),new TypedOption<Boolean>().setLongName(\"worker\").setType(Boolean.class).setFlag(true),new TypedOption<String>().setLongName(\"classpath\").setShortName(\"cp\").setListSeparator(File.pathSeparator).setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"cluster\").setType(Boolean.class).setFlag(true),new TypedOption<Integer>().setLongName(\"cluster-port\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"cluster-host\").setType(String.class).setSingleValued(true),new TypedOption<Boolean>().setLongName(\"ha\").setType(Boolean.class).setFlag(true).setSingleValued(true),new TypedOption<Integer>().setLongName(\"quorum\").setType(Integer.class).setSingleValued(true),new TypedOption<String>().setLongName(\"ha-group\").setType(String.class).setDefaultValue(\"__DEFAULT__\").setSingleValued(true)};\n  cli.addOptions(Arrays.asList(options));\n  cli.addArgument(new TypedArgument<String>().setType(String.class).setArgName(\"verticle\").setIndex(0).setRequired(false));\n  CommandLine evaluated=cli.parse(Collections.singletonList(\"-ha\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isNull();\n  assertThat((String)evaluated.getArgumentValue(0)).isNull();\n  evaluated=cli.parse(Arrays.asList(\"-ha\",\"true\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Collections.singletonList(\"-ha=true\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Collections.singletonList(\"--ha\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"--ha\",\"false\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isFalse();\n  evaluated=cli.parse(Collections.singletonList(\"--ha=no\"));\n  assertThat((boolean)evaluated.getOptionValue(\"ha\")).isFalse();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-instances=4\",\"-cp\",\".\" + File.pathSeparator + \"my.jar\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  int instances=evaluated.getOptionValue(\"instances\");\n  List<String> classpath=evaluated.getOptionValues(\"classpath\");\n  assertThat(instances).isEqualTo(4);\n  assertThat(classpath).containsExactly(\".\",\"my.jar\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"--cluster\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host\",\"127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"--cluster-host\",\"127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host=127.0.0.1\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  evaluated=cli.parse(Arrays.asList(\"org.acme.FooVerticle\",\"-cluster\",\"-cluster-host\",\"127.0.0.1\",\"-cluster-port\",\"1234\"));\n  assertThat(evaluated.allArguments()).hasSize(1).containsExactly(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(\"verticle\")).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((String)evaluated.getArgumentValue(0)).isEqualTo(\"org.acme.FooVerticle\");\n  assertThat((boolean)evaluated.getOptionValue(\"cluster\")).isTrue();\n  assertThat((String)evaluated.getOptionValue(\"cluster-host\")).isEqualTo(\"127.0.0.1\");\n  assertThat((int)evaluated.getOptionValue(\"cluster-port\")).isEqualTo(1234);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 917,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 316,
        "startColumnNumber" : 8,
        "endLineNumber" : 317,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new TypedOption<Integer>().setLongName(\"instances\").setType(Integer.class).setSingleValued(true).setDefaultValue(\"1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : "io.vertx.core.cli.TypedOption<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 109,
    "startLineNumber" : 316,
    "startColumnNumber" : 8,
    "endLineNumber" : 317,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}