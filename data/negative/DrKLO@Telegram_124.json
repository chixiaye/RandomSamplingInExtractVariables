{
  "id" : 124,
  "expression" : "Build",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/webrtc/NetworkMonitorAutoDetect.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 224,
      "startColumnNumber" : 12,
      "endLineNumber" : 224,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Build.VERSION",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Build.VERSION.SDK_INT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 224,
        "startColumnNumber" : 8,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n  NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n  if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 223,
        "startColumnNumber" : 65,
        "endLineNumber" : 239,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n    NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n    if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n      return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n    }\n  }\n  return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 223,
        "startColumnNumber" : 6,
        "endLineNumber" : 239,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n    NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n    if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n      return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n    }\n  }\n  return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4252,
        "startLineNumber" : 176,
        "startColumnNumber" : 60,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (network == null || connectivityManager == null) {\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  NetworkInfo networkInfo=connectivityManager.getNetworkInfo(network);\n  if (networkInfo == null) {\n    Logging.w(TAG,\"Couldn't retrieve information from network \" + network.toString());\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  if (networkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    NetworkCapabilities networkCapabilities=connectivityManager.getNetworkCapabilities(network);\n    if (networkCapabilities == null || !networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {\n      return getNetworkState(networkInfo);\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,networkInfo.getType(),networkInfo.getSubtype());\n  }\n  if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n      NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n      if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n        return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n      }\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n  }\n  return getNetworkState(networkInfo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4476,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns connection type and status information about |network|. Only callable on Lollipop and newer releases.\n */\n@SuppressLint(\"NewApi\") NetworkState getNetworkState(@Nullable Network network){\n  if (network == null || connectivityManager == null) {\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  NetworkInfo networkInfo=connectivityManager.getNetworkInfo(network);\n  if (networkInfo == null) {\n    Logging.w(TAG,\"Couldn't retrieve information from network \" + network.toString());\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  if (networkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    NetworkCapabilities networkCapabilities=connectivityManager.getNetworkCapabilities(network);\n    if (networkCapabilities == null || !networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {\n      return getNetworkState(networkInfo);\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,networkInfo.getType(),networkInfo.getSubtype());\n  }\n  if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n      NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n      if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n        return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n      }\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n  }\n  return getNetworkState(networkInfo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 224,
      "startColumnNumber" : 37,
      "endLineNumber" : 224,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 224,
        "startColumnNumber" : 37,
        "endLineNumber" : 224,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Build.VERSION_CODES",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 224,
        "startColumnNumber" : 37,
        "endLineNumber" : 224,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Build.VERSION_CODES.M",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 224,
        "startColumnNumber" : 8,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n  NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n  if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 223,
        "startColumnNumber" : 65,
        "endLineNumber" : 239,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n    NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n    if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n      return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n    }\n  }\n  return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 223,
        "startColumnNumber" : 6,
        "endLineNumber" : 239,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n    NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n    if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n      return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n    }\n  }\n  return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4252,
        "startLineNumber" : 176,
        "startColumnNumber" : 60,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (network == null || connectivityManager == null) {\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  NetworkInfo networkInfo=connectivityManager.getNetworkInfo(network);\n  if (networkInfo == null) {\n    Logging.w(TAG,\"Couldn't retrieve information from network \" + network.toString());\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  if (networkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    NetworkCapabilities networkCapabilities=connectivityManager.getNetworkCapabilities(network);\n    if (networkCapabilities == null || !networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {\n      return getNetworkState(networkInfo);\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,networkInfo.getType(),networkInfo.getSubtype());\n  }\n  if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n      NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n      if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n        return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n      }\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n  }\n  return getNetworkState(networkInfo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4476,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns connection type and status information about |network|. Only callable on Lollipop and newer releases.\n */\n@SuppressLint(\"NewApi\") NetworkState getNetworkState(@Nullable Network network){\n  if (network == null || connectivityManager == null) {\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  NetworkInfo networkInfo=connectivityManager.getNetworkInfo(network);\n  if (networkInfo == null) {\n    Logging.w(TAG,\"Couldn't retrieve information from network \" + network.toString());\n    return new NetworkState(false,-1,-1,-1,-1);\n  }\n  if (networkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n    NetworkCapabilities networkCapabilities=connectivityManager.getNetworkCapabilities(network);\n    if (networkCapabilities == null || !networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {\n      return getNetworkState(networkInfo);\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,networkInfo.getType(),networkInfo.getSubtype());\n  }\n  if (networkInfo.getType() == ConnectivityManager.TYPE_VPN) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && network.equals(connectivityManager.getActiveNetwork())) {\n      NetworkInfo underlyingActiveNetworkInfo=connectivityManager.getActiveNetworkInfo();\n      if (underlyingActiveNetworkInfo != null && underlyingActiveNetworkInfo.getType() != ConnectivityManager.TYPE_VPN) {\n        return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,underlyingActiveNetworkInfo.getType(),underlyingActiveNetworkInfo.getSubtype());\n      }\n    }\n    return new NetworkState(networkInfo.isConnected(),ConnectivityManager.TYPE_VPN,-1,-1,-1);\n  }\n  return getNetworkState(networkInfo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.M",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 224,
    "startColumnNumber" : 12,
    "endLineNumber" : 224,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 224,
    "startColumnNumber" : 37,
    "endLineNumber" : 224,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}