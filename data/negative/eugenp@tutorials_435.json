{
  "id" : 435,
  "expression" : "\", greaterThan=\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-spel/src/main/java/com/baeldung/spring/spel/examples/SpelRelational.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\", greaterThan=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 217,
      "startColumnNumber" : 16,
      "endLineNumber" : 217,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 208,
        "startColumnNumber" : 15,
        "endLineNumber" : 227,
        "endColumnNumber" : 19
      },
      "nodeContext" : "\"SpelRelational{\" + \"equal=\" + equal + \", equalAlphabetic=\"+ equalAlphabetic+ \", notEqual=\"+ notEqual+ \", notEqualAlphabetic=\"+ notEqualAlphabetic+ \", lessThan=\"+ lessThan+ \", lessThanAlphabetic=\"+ lessThanAlphabetic+ \", lessThanOrEqual=\"+ lessThanOrEqual+ \", lessThanOrEqualAlphabetic=\"+ lessThanOrEqualAlphabetic+ \", greaterThan=\"+ greaterThan+ \", greaterThanAlphabetic=\"+ greaterThanAlphabetic+ \", greaterThanOrEqual=\"+ greaterThanOrEqual+ \", greaterThanOrEqualAlphabetic=\"+ greaterThanOrEqualAlphabetic+ \", and=\"+ and+ \", andAlphabetic=\"+ andAlphabetic+ \", or=\"+ or+ \", orAlphabetic=\"+ orAlphabetic+ \", not=\"+ not+ \", notAlphabetic=\"+ notAlphabetic+ '}'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 40,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1003,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return \"SpelRelational{\" + \"equal=\" + equal + \", equalAlphabetic=\"+ equalAlphabetic+ \", notEqual=\"+ notEqual+ \", notEqualAlphabetic=\"+ notEqualAlphabetic+ \", lessThan=\"+ lessThan+ \", lessThanAlphabetic=\"+ lessThanAlphabetic+ \", lessThanOrEqual=\"+ lessThanOrEqual+ \", lessThanOrEqualAlphabetic=\"+ lessThanOrEqualAlphabetic+ \", greaterThan=\"+ greaterThan+ \", greaterThanAlphabetic=\"+ greaterThanAlphabetic+ \", greaterThanOrEqual=\"+ greaterThanOrEqual+ \", greaterThanOrEqualAlphabetic=\"+ greaterThanOrEqualAlphabetic+ \", and=\"+ and+ \", andAlphabetic=\"+ andAlphabetic+ \", or=\"+ or+ \", orAlphabetic=\"+ orAlphabetic+ \", not=\"+ not+ \", notAlphabetic=\"+ notAlphabetic+ '}';\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 41,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 207,
        "startColumnNumber" : 29,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return \"SpelRelational{\" + \"equal=\" + equal + \", equalAlphabetic=\"+ equalAlphabetic+ \", notEqual=\"+ notEqual+ \", notEqualAlphabetic=\"+ notEqualAlphabetic+ \", lessThan=\"+ lessThan+ \", lessThanAlphabetic=\"+ lessThanAlphabetic+ \", lessThanOrEqual=\"+ lessThanOrEqual+ \", lessThanOrEqualAlphabetic=\"+ lessThanOrEqualAlphabetic+ \", greaterThan=\"+ greaterThan+ \", greaterThanAlphabetic=\"+ greaterThanAlphabetic+ \", greaterThanOrEqual=\"+ greaterThanOrEqual+ \", greaterThanOrEqualAlphabetic=\"+ greaterThanOrEqualAlphabetic+ \", and=\"+ and+ \", andAlphabetic=\"+ andAlphabetic+ \", or=\"+ or+ \", orAlphabetic=\"+ orAlphabetic+ \", not=\"+ not+ \", notAlphabetic=\"+ notAlphabetic+ '}';\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String toString(){\n  return \"SpelRelational{\" + \"equal=\" + equal + \", equalAlphabetic=\"+ equalAlphabetic+ \", notEqual=\"+ notEqual+ \", notEqualAlphabetic=\"+ notEqualAlphabetic+ \", lessThan=\"+ lessThan+ \", lessThanAlphabetic=\"+ lessThanAlphabetic+ \", lessThanOrEqual=\"+ lessThanOrEqual+ \", lessThanOrEqualAlphabetic=\"+ lessThanOrEqualAlphabetic+ \", greaterThan=\"+ greaterThan+ \", greaterThanAlphabetic=\"+ greaterThanAlphabetic+ \", greaterThanOrEqual=\"+ greaterThanOrEqual+ \", greaterThanOrEqualAlphabetic=\"+ greaterThanOrEqualAlphabetic+ \", and=\"+ and+ \", andAlphabetic=\"+ andAlphabetic+ \", or=\"+ or+ \", orAlphabetic=\"+ orAlphabetic+ \", not=\"+ not+ \", notAlphabetic=\"+ notAlphabetic+ '}';\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 208,
        "startColumnNumber" : 15,
        "endLineNumber" : 227,
        "endColumnNumber" : 19
      },
      "nodeContext" : "\"SpelRelational{\" + \"equal=\" + equal + \", equalAlphabetic=\"+ equalAlphabetic+ \", notEqual=\"+ notEqual+ \", notEqualAlphabetic=\"+ notEqualAlphabetic+ \", lessThan=\"+ lessThan+ \", lessThanAlphabetic=\"+ lessThanAlphabetic+ \", lessThanOrEqual=\"+ lessThanOrEqual+ \", lessThanOrEqualAlphabetic=\"+ lessThanOrEqualAlphabetic+ \", greaterThan=\"+ greaterThan+ \", greaterThanAlphabetic=\"+ greaterThanAlphabetic+ \", greaterThanOrEqual=\"+ greaterThanOrEqual+ \", greaterThanOrEqualAlphabetic=\"+ greaterThanOrEqualAlphabetic+ \", and=\"+ and+ \", andAlphabetic=\"+ andAlphabetic+ \", or=\"+ or+ \", orAlphabetic=\"+ orAlphabetic+ \", not=\"+ not+ \", notAlphabetic=\"+ notAlphabetic+ '}'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 40,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 217,
    "startColumnNumber" : 16,
    "endLineNumber" : 217,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}