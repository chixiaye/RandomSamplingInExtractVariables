{
  "id" : 95,
  "expression" : "a",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/plugin/preinstalled/ShowAllStrings.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 24,
      "endLineNumber" : 84,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "a instanceof LdcInsnNode",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (a instanceof LdcInsnNode) {\n  if (((LdcInsnNode)a).cst instanceof String) {\n    final String s=(String)((LdcInsnNode)a).cst;\n    if (!s.isEmpty())     sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (AbstractInsnNode a : iList.toArray()) {\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Object o : classNode.methods.toArray()) {\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 116,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2188,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ClassNode classNode : classNodeList) {\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 304,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2404,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2478,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(ArrayList<ClassNode> classNodeList){\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 347,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "a instanceof LdcInsnNode",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.plugin.preinstalled.AbstractInsnNode"
  }, {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 43,
      "endLineNumber" : 86,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 86,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(LdcInsnNode)a",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 45
      },
      "nodeContext" : "((LdcInsnNode)a)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 49
      },
      "nodeContext" : "((LdcInsnNode)a).cst",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 67
      },
      "nodeContext" : "((LdcInsnNode)a).cst instanceof String",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 86,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (((LdcInsnNode)a).cst instanceof String) {\n  final String s=(String)((LdcInsnNode)a).cst;\n  if (!s.isEmpty())   sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 85,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (((LdcInsnNode)a).cst instanceof String) {\n    final String s=(String)((LdcInsnNode)a).cst;\n    if (!s.isEmpty())     sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (a instanceof LdcInsnNode) {\n  if (((LdcInsnNode)a).cst instanceof String) {\n    final String s=(String)((LdcInsnNode)a).cst;\n    if (!s.isEmpty())     sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (AbstractInsnNode a : iList.toArray()) {\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Object o : classNode.methods.toArray()) {\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 116,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2188,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ClassNode classNode : classNodeList) {\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 304,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2404,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2478,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(ArrayList<ClassNode> classNodeList){\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 347,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 67
      },
      "nodeContext" : "((LdcInsnNode)a).cst instanceof String",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.plugin.preinstalled.AbstractInsnNode"
  }, {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 88,
      "startColumnNumber" : 69,
      "endLineNumber" : 88,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 88,
        "startColumnNumber" : 55,
        "endLineNumber" : 88,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(LdcInsnNode)a",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 88,
        "startColumnNumber" : 54,
        "endLineNumber" : 88,
        "endColumnNumber" : 71
      },
      "nodeContext" : "((LdcInsnNode)a)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 88,
        "startColumnNumber" : 54,
        "endLineNumber" : 88,
        "endColumnNumber" : 75
      },
      "nodeContext" : "((LdcInsnNode)a).cst",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 88,
        "startColumnNumber" : 45,
        "endLineNumber" : 88,
        "endColumnNumber" : 75
      },
      "nodeContext" : "(String)((LdcInsnNode)a).cst",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 88,
        "startColumnNumber" : 41,
        "endLineNumber" : 88,
        "endColumnNumber" : 75
      },
      "nodeContext" : "s=(String)((LdcInsnNode)a).cst",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 88,
        "startColumnNumber" : 28,
        "endLineNumber" : 88,
        "endColumnNumber" : 76
      },
      "nodeContext" : "final String s=(String)((LdcInsnNode)a).cst;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  final String s=(String)((LdcInsnNode)a).cst;\n  if (!s.isEmpty())   sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 86,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (((LdcInsnNode)a).cst instanceof String) {\n  final String s=(String)((LdcInsnNode)a).cst;\n  if (!s.isEmpty())   sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 85,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (((LdcInsnNode)a).cst instanceof String) {\n    final String s=(String)((LdcInsnNode)a).cst;\n    if (!s.isEmpty())     sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (a instanceof LdcInsnNode) {\n  if (((LdcInsnNode)a).cst instanceof String) {\n    final String s=(String)((LdcInsnNode)a).cst;\n    if (!s.isEmpty())     sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (AbstractInsnNode a : iList.toArray()) {\n  if (a instanceof LdcInsnNode) {\n    if (((LdcInsnNode)a).cst instanceof String) {\n      final String s=(String)((LdcInsnNode)a).cst;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Object o : classNode.methods.toArray()) {\n  MethodNode m=(MethodNode)o;\n  InsnList iList=m.instructions;\n  for (  AbstractInsnNode a : iList.toArray()) {\n    if (a instanceof LdcInsnNode) {\n      if (((LdcInsnNode)a).cst instanceof String) {\n        final String s=(String)((LdcInsnNode)a).cst;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 116,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2188,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ClassNode classNode : classNodeList) {\n  for (  Object o : classNode.fields.toArray()) {\n    FieldNode f=(FieldNode)o;\n    Object v=f.value;\n    if (v instanceof String) {\n      String s=(String)v;\n      if (!s.isEmpty())       sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n    }\n    if (v instanceof String[]) {\n      for (int i=0; i < ((String[])v).length; i++) {\n        String s=((String[])v)[i];\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n    }\n  }\n  for (  Object o : classNode.methods.toArray()) {\n    MethodNode m=(MethodNode)o;\n    InsnList iList=m.instructions;\n    for (    AbstractInsnNode a : iList.toArray()) {\n      if (a instanceof LdcInsnNode) {\n        if (((LdcInsnNode)a).cst instanceof String) {\n          final String s=(String)((LdcInsnNode)a).cst;\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 304,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2404,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2478,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(ArrayList<ClassNode> classNodeList){\n  PluginConsole frame=new PluginConsole(\"Show All Strings\");\n  StringBuilder sb=new StringBuilder();\n  for (  ClassNode classNode : classNodeList) {\n    for (    Object o : classNode.fields.toArray()) {\n      FieldNode f=(FieldNode)o;\n      Object v=f.value;\n      if (v instanceof String) {\n        String s=(String)v;\n        if (!s.isEmpty())         sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n      }\n      if (v instanceof String[]) {\n        for (int i=0; i < ((String[])v).length; i++) {\n          String s=((String[])v)[i];\n          if (!s.isEmpty())           sb.append(classNode.name).append(\".\").append(f.name).append(f.desc).append(\"[\").append(i).append(\"] -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n        }\n      }\n    }\n    for (    Object o : classNode.methods.toArray()) {\n      MethodNode m=(MethodNode)o;\n      InsnList iList=m.instructions;\n      for (      AbstractInsnNode a : iList.toArray()) {\n        if (a instanceof LdcInsnNode) {\n          if (((LdcInsnNode)a).cst instanceof String) {\n            final String s=(String)((LdcInsnNode)a).cst;\n            if (!s.isEmpty())             sb.append(classNode.name).append(\".\").append(m.name).append(m.desc).append(\" -> \\\"\").append(s.replaceAll(\"\\\\n\",\"\\\\\\\\n\").replaceAll(\"\\\\r\",\"\\\\\\\\r\")).append(\"\\\"\").append(nl);\n          }\n        }\n      }\n    }\n  }\n  frame.appendText(sb.toString());\n  frame.setVisible(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 347,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 88,
        "startColumnNumber" : 28,
        "endLineNumber" : 88,
        "endColumnNumber" : 76
      },
      "nodeContext" : "final String s=(String)((LdcInsnNode)a).cst;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.plugin.preinstalled.AbstractInsnNode"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 24,
    "endLineNumber" : 84,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 43,
    "endLineNumber" : 86,
    "endColumnNumber" : 44
  }, {
    "charLength" : 1,
    "startLineNumber" : 88,
    "startColumnNumber" : 69,
    "endLineNumber" : 88,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}