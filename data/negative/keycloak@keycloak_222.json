{
  "id" : 222,
  "expression" : "Constants.DEFAULT_LABELS",
  "projectName" : "keycloak@keycloak",
  "commitID" : "f93a7d63f7df1259eb5277bad58310accdbd91ab",
  "filePath" : "operator/src/main/java/org/keycloak/operator/v2alpha1/KeycloakDeployment.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Constants.DEFAULT_LABELS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 400,
      "startColumnNumber" : 62,
      "endLineNumber" : 400,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 87
      },
      "nodeContext" : "baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 88
      },
      "nodeContext" : "baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 394,
        "startColumnNumber" : 46,
        "endLineNumber" : 420,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var is=this.getClass().getResourceAsStream(\"/base-keycloak-deployment.yaml\");\n  Deployment baseDeployment=Serialization.unmarshal(is,Deployment.class);\n  baseDeployment.getMetadata().setName(getName());\n  baseDeployment.getMetadata().setNamespace(getNamespace());\n  baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n  baseDeployment.getSpec().setReplicas(keycloakCR.getSpec().getInstances());\n  baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n  Container container=baseDeployment.getSpec().getTemplate().getSpec().getContainers().get(0);\n  var customImage=Optional.ofNullable(keycloakCR.getSpec().getImage());\n  container.setImage(customImage.orElse(config.keycloak().image()));\n  if (customImage.isEmpty()) {\n    container.getArgs().add(\"--auto-build\");\n  }\n  container.setImagePullPolicy(config.keycloak().imagePullPolicy());\n  container.setEnv(getEnvVars());\n  configureHostname(baseDeployment);\n  configureTLS(baseDeployment);\n  mergePodTemplate(baseDeployment.getSpec().getTemplate());\n  return baseDeployment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1271,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 420,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Deployment createBaseDeployment(){\n  var is=this.getClass().getResourceAsStream(\"/base-keycloak-deployment.yaml\");\n  Deployment baseDeployment=Serialization.unmarshal(is,Deployment.class);\n  baseDeployment.getMetadata().setName(getName());\n  baseDeployment.getMetadata().setNamespace(getNamespace());\n  baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n  baseDeployment.getSpec().setReplicas(keycloakCR.getSpec().getInstances());\n  baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n  Container container=baseDeployment.getSpec().getTemplate().getSpec().getContainers().get(0);\n  var customImage=Optional.ofNullable(keycloakCR.getSpec().getImage());\n  container.setImage(customImage.orElse(config.keycloak().image()));\n  if (customImage.isEmpty()) {\n    container.getArgs().add(\"--auto-build\");\n  }\n  container.setImagePullPolicy(config.keycloak().imagePullPolicy());\n  container.setEnv(getEnvVars());\n  configureHostname(baseDeployment);\n  configureTLS(baseDeployment);\n  mergePodTemplate(baseDeployment.getSpec().getTemplate());\n  return baseDeployment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 88
      },
      "nodeContext" : "baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "Constants.DEFAULT_LABELS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 402,
      "startColumnNumber" : 71,
      "endLineNumber" : 402,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 402,
        "startColumnNumber" : 8,
        "endLineNumber" : 402,
        "endColumnNumber" : 96
      },
      "nodeContext" : "baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 402,
        "startColumnNumber" : 8,
        "endLineNumber" : 402,
        "endColumnNumber" : 97
      },
      "nodeContext" : "baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 394,
        "startColumnNumber" : 46,
        "endLineNumber" : 420,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var is=this.getClass().getResourceAsStream(\"/base-keycloak-deployment.yaml\");\n  Deployment baseDeployment=Serialization.unmarshal(is,Deployment.class);\n  baseDeployment.getMetadata().setName(getName());\n  baseDeployment.getMetadata().setNamespace(getNamespace());\n  baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n  baseDeployment.getSpec().setReplicas(keycloakCR.getSpec().getInstances());\n  baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n  Container container=baseDeployment.getSpec().getTemplate().getSpec().getContainers().get(0);\n  var customImage=Optional.ofNullable(keycloakCR.getSpec().getImage());\n  container.setImage(customImage.orElse(config.keycloak().image()));\n  if (customImage.isEmpty()) {\n    container.getArgs().add(\"--auto-build\");\n  }\n  container.setImagePullPolicy(config.keycloak().imagePullPolicy());\n  container.setEnv(getEnvVars());\n  configureHostname(baseDeployment);\n  configureTLS(baseDeployment);\n  mergePodTemplate(baseDeployment.getSpec().getTemplate());\n  return baseDeployment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1271,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 420,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Deployment createBaseDeployment(){\n  var is=this.getClass().getResourceAsStream(\"/base-keycloak-deployment.yaml\");\n  Deployment baseDeployment=Serialization.unmarshal(is,Deployment.class);\n  baseDeployment.getMetadata().setName(getName());\n  baseDeployment.getMetadata().setNamespace(getNamespace());\n  baseDeployment.getSpec().getSelector().setMatchLabels(Constants.DEFAULT_LABELS);\n  baseDeployment.getSpec().setReplicas(keycloakCR.getSpec().getInstances());\n  baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n  Container container=baseDeployment.getSpec().getTemplate().getSpec().getContainers().get(0);\n  var customImage=Optional.ofNullable(keycloakCR.getSpec().getImage());\n  container.setImage(customImage.orElse(config.keycloak().image()));\n  if (customImage.isEmpty()) {\n    container.getArgs().add(\"--auto-build\");\n  }\n  container.setImagePullPolicy(config.keycloak().imagePullPolicy());\n  container.setEnv(getEnvVars());\n  configureHostname(baseDeployment);\n  configureTLS(baseDeployment);\n  mergePodTemplate(baseDeployment.getSpec().getTemplate());\n  return baseDeployment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 402,
        "startColumnNumber" : 8,
        "endLineNumber" : 402,
        "endColumnNumber" : 97
      },
      "nodeContext" : "baseDeployment.getSpec().getTemplate().getMetadata().setLabels(Constants.DEFAULT_LABELS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 400,
    "startColumnNumber" : 62,
    "endLineNumber" : 400,
    "endColumnNumber" : 86
  }, {
    "charLength" : 24,
    "startLineNumber" : 402,
    "startColumnNumber" : 71,
    "endLineNumber" : 402,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}