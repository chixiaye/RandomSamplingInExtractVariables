{
  "id" : 264,
  "expression" : "blockFileBytes.get().equals(fileBytes)",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/Memory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "blockFileBytes.get().equals(fileBytes)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 864,
      "startColumnNumber" : 38,
      "endLineNumber" : 864,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 864,
        "startColumnNumber" : 8,
        "endLineNumber" : 864,
        "endColumnNumber" : 76
      },
      "nodeContext" : "blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 864,
        "startColumnNumber" : 4,
        "endLineNumber" : 869,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n  Address addr=info.locateAddressForFileOffset(offset);\n  if (addr != null) {\n    list.add(addr);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 862,
        "startColumnNumber" : 64,
        "endLineNumber" : 870,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Optional<FileBytes> blockFileBytes=info.getFileBytes();\n  if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n    Address addr=info.locateAddressForFileOffset(offset);\n    if (addr != null) {\n      list.add(addr);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 862,
        "startColumnNumber" : 3,
        "endLineNumber" : 870,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (MemoryBlockSourceInfo info : memBlock.getSourceInfos()) {\n  Optional<FileBytes> blockFileBytes=info.getFileBytes();\n  if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n    Address addr=info.locateAddressForFileOffset(offset);\n    if (addr != null) {\n      list.add(addr);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 861,
        "startColumnNumber" : 43,
        "endLineNumber" : 871,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  MemoryBlockSourceInfo info : memBlock.getSourceInfos()) {\n    Optional<FileBytes> blockFileBytes=info.getFileBytes();\n    if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n      Address addr=info.locateAddressForFileOffset(offset);\n      if (addr != null) {\n        list.add(addr);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 861,
        "startColumnNumber" : 2,
        "endLineNumber" : 871,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (MemoryBlock memBlock : getBlocks()) {\n  for (  MemoryBlockSourceInfo info : memBlock.getSourceInfos()) {\n    Optional<FileBytes> blockFileBytes=info.getFileBytes();\n    if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n      Address addr=info.locateAddressForFileOffset(offset);\n      if (addr != null) {\n        list.add(addr);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 859,
        "startColumnNumber" : 98,
        "endLineNumber" : 873,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<Address> list=new ArrayList<>();\n  for (  MemoryBlock memBlock : getBlocks()) {\n    for (    MemoryBlockSourceInfo info : memBlock.getSourceInfos()) {\n      Optional<FileBytes> blockFileBytes=info.getFileBytes();\n      if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n        Address addr=info.locateAddressForFileOffset(offset);\n        if (addr != null) {\n          list.add(addr);\n        }\n      }\n    }\n  }\n  return list;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 850,
        "startColumnNumber" : 1,
        "endLineNumber" : 873,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Gets a list of addresses where the byte at the given offset from the given FileBytes was loaded into memory.\n * @param offset the file offset in the given FileBytes of the byte that is to be located in memory\n * @param fileBytes the FileBytesobject whose byte is to be located in memory\n * @return a list of addresses that are associated with the givenFileBytes and offset \n */\npublic default List<Address> locateAddressesForFileBytesOffset(FileBytes fileBytes,long offset){\n  List<Address> list=new ArrayList<>();\n  for (  MemoryBlock memBlock : getBlocks()) {\n    for (    MemoryBlockSourceInfo info : memBlock.getSourceInfos()) {\n      Optional<FileBytes> blockFileBytes=info.getFileBytes();\n      if (blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)) {\n        Address addr=info.locateAddressForFileOffset(offset);\n        if (addr != null) {\n          list.add(addr);\n        }\n      }\n    }\n  }\n  return list;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 864,
        "startColumnNumber" : 8,
        "endLineNumber" : 864,
        "endColumnNumber" : 76
      },
      "nodeContext" : "blockFileBytes.isPresent() && blockFileBytes.get().equals(fileBytes)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 864,
    "startColumnNumber" : 38,
    "endLineNumber" : 864,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}