{
  "id" : 287,
  "expression" : "InstrumentClassPool.class",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "9a795603268f8130d6bff3fbcc867d8b81adf2d3",
  "filePath" : "profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjectorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InstrumentClassPool.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 56,
      "startColumnNumber" : 48,
      "endLineNumber" : 56,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 35,
        "endLineNumber" : 56,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Mockito.mock(InstrumentClassPool.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 56,
        "startColumnNumber" : 28,
        "endLineNumber" : 56,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pool=Mockito.mock(InstrumentClassPool.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 75
      },
      "nodeContext" : "InstrumentClassPool pool=Mockito.mock(InstrumentClassPool.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1347,
        "startLineNumber" : 51,
        "startColumnNumber" : 51,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final URL sampleJar=getSampleJar(\"org.slf4j.impl.Log4jLoggerAdapter\");\n  final ClassLoader contextTypeMatchClassLoader=createContextTypeMatchClassLoader(new URL[]{sampleJar});\n  InstrumentClassPool pool=Mockito.mock(InstrumentClassPool.class);\n  final Instrumentation instrumentation=Mockito.mock(Instrumentation.class);\n  final ProfilerPlugin profilerPlugin=Mockito.mock(ProfilerPlugin.class);\n  final PluginPackageFilter pluginPackageFilter=new PluginPackageFilter(Arrays.asList(LOG4_IMPL));\n  List<String> bootstrapJarPaths=Arrays.asList(sampleJar.getPath());\n  PluginConfig pluginConfig=new PluginConfig(sampleJar,profilerPlugin,instrumentation,pool,bootstrapJarPaths,pluginPackageFilter);\n  logger.debug(\"pluginConfig:{}\",pluginConfig);\n  PlainClassLoaderHandler injector=new PlainClassLoaderHandler(pluginConfig);\n  final Class<?> loggerClass=injector.injectClass(contextTypeMatchClassLoader,logger.getClass().getName());\n  logger.debug(\"ClassLoader{}\",loggerClass.getClassLoader());\n  Assert.assertEquals(\"check className\",loggerClass.getName(),\"org.slf4j.impl.Log4jLoggerAdapter\");\n  Assert.assertEquals(\"check ClassLoader\",loggerClass.getClassLoader().getClass().getName(),CONTEXT_TYPE_MATCH_CLASS_LOADER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1404,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInjectClass() throws Exception {\n  final URL sampleJar=getSampleJar(\"org.slf4j.impl.Log4jLoggerAdapter\");\n  final ClassLoader contextTypeMatchClassLoader=createContextTypeMatchClassLoader(new URL[]{sampleJar});\n  InstrumentClassPool pool=Mockito.mock(InstrumentClassPool.class);\n  final Instrumentation instrumentation=Mockito.mock(Instrumentation.class);\n  final ProfilerPlugin profilerPlugin=Mockito.mock(ProfilerPlugin.class);\n  final PluginPackageFilter pluginPackageFilter=new PluginPackageFilter(Arrays.asList(LOG4_IMPL));\n  List<String> bootstrapJarPaths=Arrays.asList(sampleJar.getPath());\n  PluginConfig pluginConfig=new PluginConfig(sampleJar,profilerPlugin,instrumentation,pool,bootstrapJarPaths,pluginPackageFilter);\n  logger.debug(\"pluginConfig:{}\",pluginConfig);\n  PlainClassLoaderHandler injector=new PlainClassLoaderHandler(pluginConfig);\n  final Class<?> loggerClass=injector.injectClass(contextTypeMatchClassLoader,logger.getClass().getName());\n  logger.debug(\"ClassLoader{}\",loggerClass.getClassLoader());\n  Assert.assertEquals(\"check className\",loggerClass.getName(),\"org.slf4j.impl.Log4jLoggerAdapter\");\n  Assert.assertEquals(\"check ClassLoader\",loggerClass.getClassLoader().getClass().getName(),CONTEXT_TYPE_MATCH_CLASS_LOADER);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 75
      },
      "nodeContext" : "InstrumentClassPool pool=Mockito.mock(InstrumentClassPool.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.navercorp.pinpoint.bootstrap.instrument.InstrumentClassPool>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 56,
    "startColumnNumber" : 48,
    "endLineNumber" : 56,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}