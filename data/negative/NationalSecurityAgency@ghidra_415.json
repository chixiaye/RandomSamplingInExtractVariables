{
  "id" : 415,
  "expression" : "!contextReg.followsFlow()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/AbstractProgramContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!contextReg.followsFlow()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 56,
      "startColumnNumber" : 6,
      "endLineNumber" : 56,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!contextReg.followsFlow()) {\n  hasNonFlowingContext=true;\n  for (int i=0; i < nonFlowingContextRegisterMask.length; i++) {\n    nonFlowingContextRegisterMask[i]|=subMask[i];\n    flowingContextRegisterMask[i]&=~subMask[i];\n  }\n}\n else {\n  for (int i=0; i < flowingContextRegisterMask.length; i++) {\n    flowingContextRegisterMask[i]|=subMask[i];\n  }\n  if (contextReg.hasChildren()) {\n    for (    Register childReg : contextReg.getChildRegisters()) {\n      initContextBitMasks(childReg);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 591,
        "startLineNumber" : 54,
        "startColumnNumber" : 55,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  byte[] subMask=contextReg.getBaseMask();\n  if (!contextReg.followsFlow()) {\n    hasNonFlowingContext=true;\n    for (int i=0; i < nonFlowingContextRegisterMask.length; i++) {\n      nonFlowingContextRegisterMask[i]|=subMask[i];\n      flowingContextRegisterMask[i]&=~subMask[i];\n    }\n  }\n else {\n    for (int i=0; i < flowingContextRegisterMask.length; i++) {\n      flowingContextRegisterMask[i]|=subMask[i];\n    }\n    if (contextReg.hasChildren()) {\n      for (      Register childReg : contextReg.getChildRegisters()) {\n        initContextBitMasks(childReg);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Set those bits in the nonFlowingContextRegisterMask which should not  flow with context.\n * @param contextReg context register piece\n */\nprivate void initContextBitMasks(Register contextReg){\n  byte[] subMask=contextReg.getBaseMask();\n  if (!contextReg.followsFlow()) {\n    hasNonFlowingContext=true;\n    for (int i=0; i < nonFlowingContextRegisterMask.length; i++) {\n      nonFlowingContextRegisterMask[i]|=subMask[i];\n      flowingContextRegisterMask[i]&=~subMask[i];\n    }\n  }\n else {\n    for (int i=0; i < flowingContextRegisterMask.length; i++) {\n      flowingContextRegisterMask[i]|=subMask[i];\n    }\n    if (contextReg.hasChildren()) {\n      for (      Register childReg : contextReg.getChildRegisters()) {\n        initContextBitMasks(childReg);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!contextReg.followsFlow()) {\n  hasNonFlowingContext=true;\n  for (int i=0; i < nonFlowingContextRegisterMask.length; i++) {\n    nonFlowingContextRegisterMask[i]|=subMask[i];\n    flowingContextRegisterMask[i]&=~subMask[i];\n  }\n}\n else {\n  for (int i=0; i < flowingContextRegisterMask.length; i++) {\n    flowingContextRegisterMask[i]|=subMask[i];\n  }\n  if (contextReg.hasChildren()) {\n    for (    Register childReg : contextReg.getChildRegisters()) {\n      initContextBitMasks(childReg);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 56,
    "startColumnNumber" : 6,
    "endLineNumber" : 56,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}