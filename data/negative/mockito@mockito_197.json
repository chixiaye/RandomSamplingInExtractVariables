{
  "id" : 197,
  "expression" : "annotation.getSimpleName()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/injection/scanner/InjectMocksScanner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "annotation.getSimpleName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 66,
      "startColumnNumber" : 24,
      "endLineNumber" : 66,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 65,
        "startColumnNumber" : 22,
        "endLineNumber" : 66,
        "endColumnNumber" : 86
      },
      "nodeContext" : "unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 87
      },
      "nodeContext" : "throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 64,
        "startColumnNumber" : 55,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (field.isAnnotationPresent(annotation)) {\n  throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 63,
        "startColumnNumber" : 67,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (field.isAnnotationPresent(annotation)) {\n    throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Class<? extends Annotation> annotation : annotations) {\n  if (field.isAnnotationPresent(annotation)) {\n    throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 62,
        "startColumnNumber" : 69,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Class<? extends Annotation> annotation : annotations) {\n    if (field.isAnnotationPresent(annotation)) {\n      throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void assertNoAnnotations(Field field,Class<? extends Annotation>... annotations){\n  for (  Class<? extends Annotation> annotation : annotations) {\n    if (field.isAnnotationPresent(annotation)) {\n      throw unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 65,
        "startColumnNumber" : 22,
        "endLineNumber" : 66,
        "endColumnNumber" : 86
      },
      "nodeContext" : "unsupportedCombinationOfAnnotations(annotation.getSimpleName(),InjectMocks.class.getSimpleName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 66,
    "startColumnNumber" : 24,
    "endLineNumber" : 66,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}