{
  "id" : 332,
  "expression" : "srcHeight / widthScale",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/utils/ImageSizeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "srcHeight / widthScale",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 191,
      "startColumnNumber" : 23,
      "endLineNumber" : 191,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 191,
        "startColumnNumber" : 22,
        "endLineNumber" : 191,
        "endColumnNumber" : 46
      },
      "nodeContext" : "(srcHeight / widthScale)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 191,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 46
      },
      "nodeContext" : "(int)(srcHeight / widthScale)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 191,
        "startColumnNumber" : 3,
        "endLineNumber" : 191,
        "endColumnNumber" : 46
      },
      "nodeContext" : "destHeight=(int)(srcHeight / widthScale)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 191,
        "startColumnNumber" : 3,
        "endLineNumber" : 191,
        "endColumnNumber" : 47
      },
      "nodeContext" : "destHeight=(int)(srcHeight / widthScale);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 189,
        "startColumnNumber" : 149,
        "endLineNumber" : 192,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  destWidth=targetWidth;\n  destHeight=(int)(srcHeight / widthScale);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 189,
        "startColumnNumber" : 2,
        "endLineNumber" : 195,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((viewScaleType == ViewScaleType.FIT_INSIDE && widthScale >= heightScale) || (viewScaleType == ViewScaleType.CROP && widthScale < heightScale)) {\n  destWidth=targetWidth;\n  destHeight=(int)(srcHeight / widthScale);\n}\n else {\n  destWidth=(int)(srcWidth / heightScale);\n  destHeight=targetHeight;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 178,
        "startColumnNumber" : 20,
        "endLineNumber" : 203,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int srcWidth=srcSize.getWidth();\n  int srcHeight=srcSize.getHeight();\n  int targetWidth=targetSize.getWidth();\n  int targetHeight=targetSize.getHeight();\n  float widthScale=(float)srcWidth / targetWidth;\n  float heightScale=(float)srcHeight / targetHeight;\n  int destWidth;\n  int destHeight;\n  if ((viewScaleType == ViewScaleType.FIT_INSIDE && widthScale >= heightScale) || (viewScaleType == ViewScaleType.CROP && widthScale < heightScale)) {\n    destWidth=targetWidth;\n    destHeight=(int)(srcHeight / widthScale);\n  }\n else {\n    destWidth=(int)(srcWidth / heightScale);\n    destHeight=targetHeight;\n  }\n  float scale=1;\n  if ((!stretch && destWidth < srcWidth && destHeight < srcHeight) || (stretch && destWidth != srcWidth && destHeight != srcHeight)) {\n    scale=(float)destWidth / srcWidth;\n  }\n  return scale;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1920,
        "startLineNumber" : 155,
        "startColumnNumber" : 1,
        "endLineNumber" : 203,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes scale of target size (<b>targetSize</b>) to source size (<b>srcSize</b>).<br /> <br /> <b>Examples:</b><br /> <p/> <pre> srcSize(40x40), targetSize(10x10) -> scale = 0.25 srcSize(10x10), targetSize(20x20), stretch = false -> scale = 1 srcSize(10x10), targetSize(20x20), stretch = true  -> scale = 2 srcSize(100x100), targetSize(20x40), viewScaleType = FIT_INSIDE -> scale = 0.2 srcSize(100x100), targetSize(20x40), viewScaleType = CROP       -> scale = 0.4 </pre>\n * @param srcSize       Source (image) size\n * @param targetSize    Target (view) size\n * @param viewScaleType {@linkplain ViewScaleType Scale type} for placing image in view\n * @param stretch       Whether source size should be stretched if target size is larger than source size. If <b>false</b>then result scale value can't be greater than 1.\n * @return Computed scale\n */\npublic static float computeImageScale(ImageSize srcSize,ImageSize targetSize,ViewScaleType viewScaleType,boolean stretch){\n  int srcWidth=srcSize.getWidth();\n  int srcHeight=srcSize.getHeight();\n  int targetWidth=targetSize.getWidth();\n  int targetHeight=targetSize.getHeight();\n  float widthScale=(float)srcWidth / targetWidth;\n  float heightScale=(float)srcHeight / targetHeight;\n  int destWidth;\n  int destHeight;\n  if ((viewScaleType == ViewScaleType.FIT_INSIDE && widthScale >= heightScale) || (viewScaleType == ViewScaleType.CROP && widthScale < heightScale)) {\n    destWidth=targetWidth;\n    destHeight=(int)(srcHeight / widthScale);\n  }\n else {\n    destWidth=(int)(srcWidth / heightScale);\n    destHeight=targetHeight;\n  }\n  float scale=1;\n  if ((!stretch && destWidth < srcWidth && destHeight < srcHeight) || (stretch && destWidth != srcWidth && destHeight != srcHeight)) {\n    scale=(float)destWidth / srcWidth;\n  }\n  return scale;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 191,
        "startColumnNumber" : 3,
        "endLineNumber" : 191,
        "endColumnNumber" : 47
      },
      "nodeContext" : "destHeight=(int)(srcHeight / widthScale);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 191,
    "startColumnNumber" : 23,
    "endLineNumber" : 191,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}