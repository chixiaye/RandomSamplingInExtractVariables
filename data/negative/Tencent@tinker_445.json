{
  "id" : 445,
  "expression" : "(info.isProtectedApp ? 1 : 0)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/SharePatchInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(info.isProtectedApp ? 1 : 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 191,
      "startColumnNumber" : 14,
      "endLineNumber" : 191,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 184,
        "startColumnNumber" : 30,
        "endLineNumber" : 199,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 49,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2780,
        "startLineNumber" : 173,
        "startColumnNumber" : 88,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pathInfoFile == null || info == null) {\n    return false;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.fingerPrint)) {\n    info.fingerPrint=Build.FINGERPRINT;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.oatDir)) {\n    info.oatDir=DEFAULT_DIR;\n  }\n  ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0));\n  boolean isWritePatchSuccessful=false;\n  int numAttempts=0;\n  File parentFile=pathInfoFile.getParentFile();\n  if (!parentFile.exists()) {\n    parentFile.mkdirs();\n  }\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isWritePatchSuccessful) {\n    numAttempts++;\n    Properties newProperties=new Properties();\n    newProperties.put(OLD_VERSION,info.oldVersion);\n    newProperties.put(NEW_VERSION,info.newVersion);\n    newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n    newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n    newProperties.put(FINGER_PRINT,info.fingerPrint);\n    newProperties.put(OAT_DIR,info.oatDir);\n    newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n    FileOutputStream outputStream=null;\n    try {\n      outputStream=new FileOutputStream(pathInfoFile,false);\n      String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n      newProperties.store(outputStream,comment);\n    }\n catch (    Exception e) {\n      ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(outputStream);\n    }\n    SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n    isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n    if (!isWritePatchSuccessful) {\n      pathInfoFile.delete();\n    }\n  }\n  return isWritePatchSuccessful;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2864,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean rewritePatchInfoFile(File pathInfoFile,SharePatchInfo info){\n  if (pathInfoFile == null || info == null) {\n    return false;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.fingerPrint)) {\n    info.fingerPrint=Build.FINGERPRINT;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.oatDir)) {\n    info.oatDir=DEFAULT_DIR;\n  }\n  ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0));\n  boolean isWritePatchSuccessful=false;\n  int numAttempts=0;\n  File parentFile=pathInfoFile.getParentFile();\n  if (!parentFile.exists()) {\n    parentFile.mkdirs();\n  }\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isWritePatchSuccessful) {\n    numAttempts++;\n    Properties newProperties=new Properties();\n    newProperties.put(OLD_VERSION,info.oldVersion);\n    newProperties.put(NEW_VERSION,info.newVersion);\n    newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n    newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n    newProperties.put(FINGER_PRINT,info.fingerPrint);\n    newProperties.put(OAT_DIR,info.oatDir);\n    newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n    FileOutputStream outputStream=null;\n    try {\n      outputStream=new FileOutputStream(pathInfoFile,false);\n      String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n      newProperties.store(outputStream,comment);\n    }\n catch (    Exception e) {\n      ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(outputStream);\n    }\n    SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n    isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n    if (!isWritePatchSuccessful) {\n      pathInfoFile.delete();\n    }\n  }\n  return isWritePatchSuccessful;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 318,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 184,
        "startColumnNumber" : 30,
        "endLineNumber" : 199,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 45,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 191,
    "startColumnNumber" : 14,
    "endLineNumber" : 191,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}