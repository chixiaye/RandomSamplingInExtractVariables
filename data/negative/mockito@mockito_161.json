{
  "id" : 161,
  "expression" : "sf.createSocket(\"google.com\",80).getPort()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/DeepStubbingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sf.createSocket(\"google.com\",80).getPort()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 221,
      "startColumnNumber" : 24,
      "endLineNumber" : 221,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(b,sf.createSocket(\"google.com\",80).getPort())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(b,sf.createSocket(\"google.com\",80).getPort());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 213,
        "startColumnNumber" : 56,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int a=12, b=23, c=34;\n  SocketFactory sf=mock(SocketFactory.class,RETURNS_DEEP_STUBS);\n  when(sf.createSocket(eq(\"stackoverflow.com\"),eq(80)).getPort()).thenReturn(a);\n  when(sf.createSocket(eq(\"google.com\"),anyInt()).getPort()).thenReturn(b);\n  when(sf.createSocket(eq(\"stackoverflow.com\"),eq(8080)).getPort()).thenReturn(c);\n  assertEquals(b,sf.createSocket(\"google.com\",80).getPort());\n  assertEquals(c,sf.createSocket(\"stackoverflow.com\",8080).getPort());\n  assertEquals(a,sf.createSocket(\"stackoverflow.com\",80).getPort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test that deep stubbing work with primitive expected values with pattern method arguments\n */\n@Test public void withPatternPrimitive() throws Exception {\n  int a=12, b=23, c=34;\n  SocketFactory sf=mock(SocketFactory.class,RETURNS_DEEP_STUBS);\n  when(sf.createSocket(eq(\"stackoverflow.com\"),eq(80)).getPort()).thenReturn(a);\n  when(sf.createSocket(eq(\"google.com\"),anyInt()).getPort()).thenReturn(b);\n  when(sf.createSocket(eq(\"stackoverflow.com\"),eq(8080)).getPort()).thenReturn(c);\n  assertEquals(b,sf.createSocket(\"google.com\",80).getPort());\n  assertEquals(c,sf.createSocket(\"stackoverflow.com\",8080).getPort());\n  assertEquals(a,sf.createSocket(\"stackoverflow.com\",80).getPort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(b,sf.createSocket(\"google.com\",80).getPort());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 221,
    "startColumnNumber" : 24,
    "endLineNumber" : 221,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}