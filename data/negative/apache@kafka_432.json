{
  "id" : 432,
  "expression" : "response.destination()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/NetworkClientUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response.destination()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 99,
      "startColumnNumber" : 69,
      "endLineNumber" : 99,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 99,
        "startColumnNumber" : 50,
        "endLineNumber" : 99,
        "endColumnNumber" : 142
      },
      "nodeContext" : "\"Connection to \" + response.destination() + \" was disconnected before the response was read\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 99,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 143
      },
      "nodeContext" : "new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 144
      },
      "nodeContext" : "throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 98,
        "startColumnNumber" : 56,
        "endLineNumber" : 100,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (response.wasDisconnected()) {\n  throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 97,
        "startColumnNumber" : 93,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (response.wasDisconnected()) {\n    throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n  }\n  if (response.versionMismatch() != null) {\n    throw response.versionMismatch();\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 97,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (response.requestHeader().correlationId() == request.correlationId()) {\n  if (response.wasDisconnected()) {\n    throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n  }\n  if (response.versionMismatch() != null) {\n    throw response.versionMismatch();\n  }\n  return response;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 96,
        "startColumnNumber" : 58,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (response.requestHeader().correlationId() == request.correlationId()) {\n    if (response.wasDisconnected()) {\n      throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n    }\n    if (response.versionMismatch() != null) {\n      throw response.versionMismatch();\n    }\n    return response;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (ClientResponse response : responses) {\n  if (response.requestHeader().correlationId() == request.correlationId()) {\n    if (response.wasDisconnected()) {\n      throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n    }\n    if (response.versionMismatch() != null) {\n      throw response.versionMismatch();\n    }\n    return response;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 94,
        "startColumnNumber" : 36,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n  for (  ClientResponse response : responses) {\n    if (response.requestHeader().correlationId() == request.correlationId()) {\n      if (response.wasDisconnected()) {\n        throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n      }\n      if (response.versionMismatch() != null) {\n        throw response.versionMismatch();\n      }\n      return response;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (client.active()) {\n  List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n  for (  ClientResponse response : responses) {\n    if (response.requestHeader().correlationId() == request.correlationId()) {\n      if (response.wasDisconnected()) {\n        throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n      }\n      if (response.versionMismatch() != null) {\n        throw response.versionMismatch();\n      }\n      return response;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 68,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.send(request,time.milliseconds());\n  while (client.active()) {\n    List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n    for (    ClientResponse response : responses) {\n      if (response.requestHeader().correlationId() == request.correlationId()) {\n        if (response.wasDisconnected()) {\n          throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n        }\n        if (response.versionMismatch() != null) {\n          throw response.versionMismatch();\n        }\n        return response;\n      }\n    }\n  }\n  throw new IOException(\"Client was shutdown before response was read\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  client.send(request,time.milliseconds());\n  while (client.active()) {\n    List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n    for (    ClientResponse response : responses) {\n      if (response.requestHeader().correlationId() == request.correlationId()) {\n        if (response.wasDisconnected()) {\n          throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n        }\n        if (response.versionMismatch() != null) {\n          throw response.versionMismatch();\n        }\n        return response;\n      }\n    }\n  }\n  throw new IOException(\"Client was shutdown before response was read\");\n}\n catch (DisconnectException e) {\n  if (client.active())   throw e;\n else   throw new IOException(\"Client was shutdown before response was read\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 100,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1144,
        "startLineNumber" : 91,
        "startColumnNumber" : 121,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    client.send(request,time.milliseconds());\n    while (client.active()) {\n      List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n      for (      ClientResponse response : responses) {\n        if (response.requestHeader().correlationId() == request.correlationId()) {\n          if (response.wasDisconnected()) {\n            throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n          }\n          if (response.versionMismatch() != null) {\n            throw response.versionMismatch();\n          }\n          return response;\n        }\n      }\n    }\n    throw new IOException(\"Client was shutdown before response was read\");\n  }\n catch (  DisconnectException e) {\n    if (client.active())     throw e;\n else     throw new IOException(\"Client was shutdown before response was read\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Invokes `client.send` followed by 1 or more `client.poll` invocations until a response is received or a disconnection happens (which can happen for a number of reasons including a request timeout). In case of a disconnection, an `IOException` is thrown. If shutdown is initiated on the client during this method, an IOException is thrown. This method is useful for implementing blocking behaviour on top of the non-blocking `NetworkClient`, use it with care.\n */\npublic static ClientResponse sendAndReceive(KafkaClient client,ClientRequest request,Time time) throws IOException {\n  try {\n    client.send(request,time.milliseconds());\n    while (client.active()) {\n      List<ClientResponse> responses=client.poll(Long.MAX_VALUE,time.milliseconds());\n      for (      ClientResponse response : responses) {\n        if (response.requestHeader().correlationId() == request.correlationId()) {\n          if (response.wasDisconnected()) {\n            throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n          }\n          if (response.versionMismatch() != null) {\n            throw response.versionMismatch();\n          }\n          return response;\n        }\n      }\n    }\n    throw new IOException(\"Client was shutdown before response was read\");\n  }\n catch (  DisconnectException e) {\n    if (client.active())     throw e;\n else     throw new IOException(\"Client was shutdown before response was read\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 144
      },
      "nodeContext" : "throw new IOException(\"Connection to \" + response.destination() + \" was disconnected before the response was read\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 99,
    "startColumnNumber" : 69,
    "endLineNumber" : 99,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}