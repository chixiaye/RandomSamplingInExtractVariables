{
  "id" : 18,
  "expression" : "start",
  "projectName" : "libgdx@libgdx",
  "commitID" : "0912b5e8e7e596893a920f77c8b392b0f448e4de",
  "filePath" : "gdx/src/com/badlogic/gdx/utils/ByteArray.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 221,
      "startColumnNumber" : 6,
      "endLineNumber" : 221,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 221,
        "startColumnNumber" : 6,
        "endLineNumber" : 221,
        "endColumnNumber" : 17
      },
      "nodeContext" : "start > end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 103
      },
      "nodeContext" : "if (start > end) throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 103
      },
      "nodeContext" : "if (start > end) throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 221,
      "startColumnNumber" : 82,
      "endLineNumber" : 221,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 221,
        "startColumnNumber" : 55,
        "endLineNumber" : 221,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"start can't be > end: \" + start + \" > \"+ end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 221,
        "startColumnNumber" : 25,
        "endLineNumber" : 221,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 221,
        "startColumnNumber" : 19,
        "endLineNumber" : 221,
        "endColumnNumber" : 103
      },
      "nodeContext" : "throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 103
      },
      "nodeContext" : "if (start > end) throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 221,
        "endColumnNumber" : 103
      },
      "nodeContext" : "if (start > end) throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 222,
      "startColumnNumber" : 20,
      "endLineNumber" : 222,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 222,
        "startColumnNumber" : 14,
        "endLineNumber" : 222,
        "endColumnNumber" : 25
      },
      "nodeContext" : "end - start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 222,
        "startColumnNumber" : 14,
        "endLineNumber" : 222,
        "endColumnNumber" : 29
      },
      "nodeContext" : "end - start + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 222,
        "startColumnNumber" : 6,
        "endLineNumber" : 222,
        "endColumnNumber" : 29
      },
      "nodeContext" : "count=end - start + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int count=end - start + 1, lastIndex=n - count;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int count=end - start + 1, lastIndex=n - count;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 224,
      "startColumnNumber" : 27,
      "endLineNumber" : 224,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 224,
        "startColumnNumber" : 27,
        "endLineNumber" : 224,
        "endColumnNumber" : 40
      },
      "nodeContext" : "start + count",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 76
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 228,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 224,
      "startColumnNumber" : 49,
      "endLineNumber" : 224,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 76
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 228,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 224,
      "startColumnNumber" : 61,
      "endLineNumber" : 224,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 224,
        "startColumnNumber" : 61,
        "endLineNumber" : 224,
        "endColumnNumber" : 74
      },
      "nodeContext" : "start + count",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 224,
        "startColumnNumber" : 60,
        "endLineNumber" : 224,
        "endColumnNumber" : 75
      },
      "nodeContext" : "(start + count)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 224,
        "startColumnNumber" : 56,
        "endLineNumber" : 224,
        "endColumnNumber" : 75
      },
      "nodeContext" : "n - (start + count)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 76
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 228,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 224,
        "startColumnNumber" : 3,
        "endLineNumber" : 224,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.arraycopy(items,start + count,items,start,n - (start + count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "start",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 227,
      "startColumnNumber" : 37,
      "endLineNumber" : 227,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 227,
        "startColumnNumber" : 3,
        "endLineNumber" : 227,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.arraycopy(items,i,items,start,n - i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 227,
        "startColumnNumber" : 3,
        "endLineNumber" : 227,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.arraycopy(items,i,items,start,n - i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 225,
        "startColumnNumber" : 7,
        "endLineNumber" : 228,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 228,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 218,
        "startColumnNumber" : 46,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 217,
        "startColumnNumber" : 1,
        "endLineNumber" : 230,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int count=end - start + 1, lastIndex=n - count;\n  if (ordered)   System.arraycopy(items,start + count,items,start,n - (start + count));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - count;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 227,
        "startColumnNumber" : 3,
        "endLineNumber" : 227,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.arraycopy(items,i,items,start,n - i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 221,
    "startColumnNumber" : 6,
    "endLineNumber" : 221,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 221,
    "startColumnNumber" : 82,
    "endLineNumber" : 221,
    "endColumnNumber" : 87
  }, {
    "charLength" : 5,
    "startLineNumber" : 222,
    "startColumnNumber" : 20,
    "endLineNumber" : 222,
    "endColumnNumber" : 25
  }, {
    "charLength" : 5,
    "startLineNumber" : 224,
    "startColumnNumber" : 27,
    "endLineNumber" : 224,
    "endColumnNumber" : 32
  }, {
    "charLength" : 5,
    "startLineNumber" : 224,
    "startColumnNumber" : 49,
    "endLineNumber" : 224,
    "endColumnNumber" : 54
  }, {
    "charLength" : 5,
    "startLineNumber" : 224,
    "startColumnNumber" : 61,
    "endLineNumber" : 224,
    "endColumnNumber" : 66
  }, {
    "charLength" : 5,
    "startLineNumber" : 227,
    "startColumnNumber" : 37,
    "endLineNumber" : 227,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}