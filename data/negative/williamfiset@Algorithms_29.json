{
  "id" : 29,
  "expression" : "j < suffixArrays.length",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j < suffixArrays.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 120,
      "startColumnNumber" : 26,
      "endLineNumber" : 120,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 120,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=i + 1; j < suffixArrays.length; j++) {\n  SuffixArray s1=suffixArrays[i];\n  SuffixArray s2=suffixArrays[j];\n  for (int k=0; k < s1.getSa().length; k++) {\n    assertEquals(s1.getSa()[k],s2.getSa()[k]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 119,
        "startColumnNumber" : 50,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int j=i + 1; j < suffixArrays.length; j++) {\n    SuffixArray s1=suffixArrays[i];\n    SuffixArray s2=suffixArrays[j];\n    for (int k=0; k < s1.getSa().length; k++) {\n      assertEquals(s1.getSa()[k],s2.getSa()[k]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < suffixArrays.length; i++) {\n  for (int j=i + 1; j < suffixArrays.length; j++) {\n    SuffixArray s1=suffixArrays[i];\n    SuffixArray s2=suffixArrays[j];\n    for (int k=0; k < s1.getSa().length; k++) {\n      assertEquals(s1.getSa()[k],s2.getSa()[k]);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 109,
        "startColumnNumber" : 31,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String text=\"BAAAAB0ABAAAAB1BABA2ABA3AAB4BBBB5BB\";\n  SuffixArray sa1=new SuffixArraySlow(text);\n  SuffixArray sa2=new SuffixArrayMed(text);\n  SuffixArray sa3=new SuffixArrayFast(text);\n  SuffixArray[] suffixArrays={sa1,sa2,sa3};\n  for (int i=0; i < suffixArrays.length; i++) {\n    for (int j=i + 1; j < suffixArrays.length; j++) {\n      SuffixArray s1=suffixArrays[i];\n      SuffixArray s2=suffixArrays[j];\n      for (int k=0; k < s1.getSa().length; k++) {\n        assertEquals(s1.getSa()[k],s2.getSa()[k]);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void saConstruction(){\n  String text=\"BAAAAB0ABAAAAB1BABA2ABA3AAB4BBBB5BB\";\n  SuffixArray sa1=new SuffixArraySlow(text);\n  SuffixArray sa2=new SuffixArrayMed(text);\n  SuffixArray sa3=new SuffixArrayFast(text);\n  SuffixArray[] suffixArrays={sa1,sa2,sa3};\n  for (int i=0; i < suffixArrays.length; i++) {\n    for (int j=i + 1; j < suffixArrays.length; j++) {\n      SuffixArray s1=suffixArrays[i];\n      SuffixArray s2=suffixArrays[j];\n      for (int k=0; k < s1.getSa().length; k++) {\n        assertEquals(s1.getSa()[k],s2.getSa()[k]);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 120,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=i + 1; j < suffixArrays.length; j++) {\n  SuffixArray s1=suffixArrays[i];\n  SuffixArray s2=suffixArrays[j];\n  for (int k=0; k < s1.getSa().length; k++) {\n    assertEquals(s1.getSa()[k],s2.getSa()[k]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 120,
    "startColumnNumber" : 26,
    "endLineNumber" : 120,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}