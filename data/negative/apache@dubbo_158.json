{
  "id" : 158,
  "expression" : "classname",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/bytecode/CustomizedLoaderClassPath.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "classname",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 64,
      "startColumnNumber" : 23,
      "endLineNumber" : 64,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 64,
        "startColumnNumber" : 23,
        "endLineNumber" : 64,
        "endColumnNumber" : 50
      },
      "nodeContext" : "classname.replace('.','/')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 23,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "classname.replace('.','/') + \".class\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "cname=classname.replace('.','/') + \".class\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String cname=classname.replace('.','/') + \".class\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 63,
        "startColumnNumber" : 55,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String cname=classname.replace('.','/') + \".class\";\n  ClassLoader cl=(ClassLoader)clref.get();\n  if (cl == null) {\n    return null;\n  }\n else {\n    InputStream result;\n    if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n      result=this.getClass().getClassLoader().getResourceAsStream(cname);\n      if (result != null) {\n        return result;\n      }\n else {\n        return cl.getResourceAsStream(cname);\n      }\n    }\n else {\n      result=cl.getResourceAsStream(cname);\n      if (result == null && (cl != this.getClass().getClassLoader())) {\n        return this.getClass().getClassLoader().getResourceAsStream(cname);\n      }\n      return result;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Obtains a class file from the class loader. This method calls <code>getResourceAsStream(String)</code> on the class loader.\n */\npublic InputStream openClassfile(String classname){\n  String cname=classname.replace('.','/') + \".class\";\n  ClassLoader cl=(ClassLoader)clref.get();\n  if (cl == null) {\n    return null;\n  }\n else {\n    InputStream result;\n    if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n      result=this.getClass().getClassLoader().getResourceAsStream(cname);\n      if (result != null) {\n        return result;\n      }\n else {\n        return cl.getResourceAsStream(cname);\n      }\n    }\n else {\n      result=cl.getResourceAsStream(cname);\n      if (result == null && (cl != this.getClass().getClassLoader())) {\n        return this.getClass().getClassLoader().getResourceAsStream(cname);\n      }\n      return result;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String cname=classname.replace('.','/') + \".class\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "classname",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 71,
      "startColumnNumber" : 16,
      "endLineNumber" : 71,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 56
      },
      "nodeContext" : "classname.startsWith(\"org.apache.dubbo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 98
      },
      "nodeContext" : "classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n  result=this.getClass().getClassLoader().getResourceAsStream(cname);\n  if (result != null) {\n    return result;\n  }\n else {\n    return cl.getResourceAsStream(cname);\n  }\n}\n else {\n  result=cl.getResourceAsStream(cname);\n  if (result == null && (cl != this.getClass().getClassLoader())) {\n    return this.getClass().getClassLoader().getResourceAsStream(cname);\n  }\n  return result;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  InputStream result;\n  if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n    result=this.getClass().getClassLoader().getResourceAsStream(cname);\n    if (result != null) {\n      return result;\n    }\n else {\n      return cl.getResourceAsStream(cname);\n    }\n  }\n else {\n    result=cl.getResourceAsStream(cname);\n    if (result == null && (cl != this.getClass().getClassLoader())) {\n      return this.getClass().getClassLoader().getResourceAsStream(cname);\n    }\n    return result;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cl == null) {\n  return null;\n}\n else {\n  InputStream result;\n  if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n    result=this.getClass().getClassLoader().getResourceAsStream(cname);\n    if (result != null) {\n      return result;\n    }\n else {\n      return cl.getResourceAsStream(cname);\n    }\n  }\n else {\n    result=cl.getResourceAsStream(cname);\n    if (result == null && (cl != this.getClass().getClassLoader())) {\n      return this.getClass().getClassLoader().getResourceAsStream(cname);\n    }\n    return result;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 63,
        "startColumnNumber" : 55,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String cname=classname.replace('.','/') + \".class\";\n  ClassLoader cl=(ClassLoader)clref.get();\n  if (cl == null) {\n    return null;\n  }\n else {\n    InputStream result;\n    if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n      result=this.getClass().getClassLoader().getResourceAsStream(cname);\n      if (result != null) {\n        return result;\n      }\n else {\n        return cl.getResourceAsStream(cname);\n      }\n    }\n else {\n      result=cl.getResourceAsStream(cname);\n      if (result == null && (cl != this.getClass().getClassLoader())) {\n        return this.getClass().getClassLoader().getResourceAsStream(cname);\n      }\n      return result;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Obtains a class file from the class loader. This method calls <code>getResourceAsStream(String)</code> on the class loader.\n */\npublic InputStream openClassfile(String classname){\n  String cname=classname.replace('.','/') + \".class\";\n  ClassLoader cl=(ClassLoader)clref.get();\n  if (cl == null) {\n    return null;\n  }\n else {\n    InputStream result;\n    if (classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()) {\n      result=this.getClass().getClassLoader().getResourceAsStream(cname);\n      if (result != null) {\n        return result;\n      }\n else {\n        return cl.getResourceAsStream(cname);\n      }\n    }\n else {\n      result=cl.getResourceAsStream(cname);\n      if (result == null && (cl != this.getClass().getClassLoader())) {\n        return this.getClass().getClassLoader().getResourceAsStream(cname);\n      }\n      return result;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 98
      },
      "nodeContext" : "classname.startsWith(\"org.apache.dubbo\") && cl != this.getClass().getClassLoader()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 64,
    "startColumnNumber" : 23,
    "endLineNumber" : 64,
    "endColumnNumber" : 32
  }, {
    "charLength" : 9,
    "startLineNumber" : 71,
    "startColumnNumber" : 16,
    "endLineNumber" : 71,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}