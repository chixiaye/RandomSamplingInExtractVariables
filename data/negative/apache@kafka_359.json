{
  "id" : 359,
  "expression" : "DataException.class",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/api/src/test/java/org/apache/kafka/connect/data/DateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DataException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 60,
      "startColumnNumber" : 21,
      "endLineNumber" : 60,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThrows(DataException.class,() -> Date.fromLogical(Date.builder().name(\"invalid\").build(),EPOCH.getTime()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertThrows(DataException.class,() -> Date.fromLogical(Date.builder().name(\"invalid\").build(),EPOCH.getTime()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 59,
        "startColumnNumber" : 47,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThrows(DataException.class,() -> Date.fromLogical(Date.builder().name(\"invalid\").build(),EPOCH.getTime()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFromLogicalInvalidSchema(){\n  assertThrows(DataException.class,() -> Date.fromLogical(Date.builder().name(\"invalid\").build(),EPOCH.getTime()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 28,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThrows(DataException.class,() -> Date.fromLogical(Date.builder().name(\"invalid\").build(),EPOCH.getTime()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.kafka.connect.errors.DataException>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 60,
    "startColumnNumber" : 21,
    "endLineNumber" : 60,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}