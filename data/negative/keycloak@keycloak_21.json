{
  "id" : 21,
  "expression" : "logger",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/federation/sssd/src/main/java/org/keycloak/federation/sssd/SSSDFederationProvider.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 90,
      "startColumnNumber" : 12,
      "endLineNumber" : 90,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 94
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 95
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 89,
        "startColumnNumber" : 26,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (user != null) {\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 87,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called after successful authentication\n * @param realm    realm\n * @param username username without realm prefix\n * @return user if found or successfully created. Null if user with same username already exists, but is not linked to this provider\n */\nprotected UserModel findOrCreateAuthenticatedUser(RealmModel realm,String username){\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 95
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.federation.sssd.Logger"
  }, {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 93,
      "startColumnNumber" : 16,
      "endLineNumber" : 93,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 138
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 139
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 92,
        "startColumnNumber" : 65,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!model.getId().equals(user.getFederationLink())) {\n  logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n  return null;\n}\n else {\n  UserModel proxied=validateAndProxy(realm,user);\n  if (proxied != null) {\n    return proxied;\n  }\n else {\n    logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n    logger.warn(\"Will re-create user\");\n    new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 89,
        "startColumnNumber" : 26,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (user != null) {\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 87,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called after successful authentication\n * @param realm    realm\n * @param username username without realm prefix\n * @return user if found or successfully created. Null if user with same username already exists, but is not linked to this provider\n */\nprotected UserModel findOrCreateAuthenticatedUser(RealmModel realm,String username){\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 139
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.federation.sssd.Logger"
  }, {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 100,
      "startColumnNumber" : 20,
      "endLineNumber" : 100,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 62
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 63
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 99,
        "startColumnNumber" : 23,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n  logger.warn(\"Will re-create user\");\n  new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (proxied != null) {\n  return proxied;\n}\n else {\n  logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n  logger.warn(\"Will re-create user\");\n  new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 95,
        "startColumnNumber" : 19,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  UserModel proxied=validateAndProxy(realm,user);\n  if (proxied != null) {\n    return proxied;\n  }\n else {\n    logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n    logger.warn(\"Will re-create user\");\n    new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!model.getId().equals(user.getFederationLink())) {\n  logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n  return null;\n}\n else {\n  UserModel proxied=validateAndProxy(realm,user);\n  if (proxied != null) {\n    return proxied;\n  }\n else {\n    logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n    logger.warn(\"Will re-create user\");\n    new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 89,
        "startColumnNumber" : 26,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (user != null) {\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 87,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called after successful authentication\n * @param realm    realm\n * @param username username without realm prefix\n * @return user if found or successfully created. Null if user with same username already exists, but is not linked to this provider\n */\nprotected UserModel findOrCreateAuthenticatedUser(RealmModel realm,String username){\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 62
      },
      "nodeContext" : "logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.federation.sssd.Logger"
  }, {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 102,
      "startColumnNumber" : 20,
      "endLineNumber" : 102,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 54
      },
      "nodeContext" : "logger.warn(\"Will re-create user\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 55
      },
      "nodeContext" : "logger.warn(\"Will re-create user\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 99,
        "startColumnNumber" : 23,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n  logger.warn(\"Will re-create user\");\n  new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (proxied != null) {\n  return proxied;\n}\n else {\n  logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n  logger.warn(\"Will re-create user\");\n  new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 95,
        "startColumnNumber" : 19,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  UserModel proxied=validateAndProxy(realm,user);\n  if (proxied != null) {\n    return proxied;\n  }\n else {\n    logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n    logger.warn(\"Will re-create user\");\n    new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!model.getId().equals(user.getFederationLink())) {\n  logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n  return null;\n}\n else {\n  UserModel proxied=validateAndProxy(realm,user);\n  if (proxied != null) {\n    return proxied;\n  }\n else {\n    logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n    logger.warn(\"Will re-create user\");\n    new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 89,
        "startColumnNumber" : 26,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (user != null) {\n  logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n  if (!model.getId().equals(user.getFederationLink())) {\n    logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n    return null;\n  }\n else {\n    UserModel proxied=validateAndProxy(realm,user);\n    if (proxied != null) {\n      return proxied;\n    }\n else {\n      logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n      logger.warn(\"Will re-create user\");\n      new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 87,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called after successful authentication\n * @param realm    realm\n * @param username username without realm prefix\n * @return user if found or successfully created. Null if user with same username already exists, but is not linked to this provider\n */\nprotected UserModel findOrCreateAuthenticatedUser(RealmModel realm,String username){\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 55
      },
      "nodeContext" : "logger.warn(\"Will re-create user\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.federation.sssd.Logger"
  }, {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 108,
      "startColumnNumber" : 8,
      "endLineNumber" : 108,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 101
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 102
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 87,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called after successful authentication\n * @param realm    realm\n * @param username username without realm prefix\n * @return user if found or successfully created. Null if user with same username already exists, but is not linked to this provider\n */\nprotected UserModel findOrCreateAuthenticatedUser(RealmModel realm,String username){\n  UserModel user=session.userLocalStorage().getUserByUsername(realm,username);\n  if (user != null) {\n    logger.debug(\"SSSD authenticated user \" + username + \" found in Keycloak storage\");\n    if (!model.getId().equals(user.getFederationLink())) {\n      logger.warn(\"User with username \" + username + \" already exists, but is not linked to provider [\"+ model.getName()+ \"]\");\n      return null;\n    }\n else {\n      UserModel proxied=validateAndProxy(realm,user);\n      if (proxied != null) {\n        return proxied;\n      }\n else {\n        logger.warn(\"User with username \" + username + \" already exists and is linked to provider [\"+ model.getName()+ \"] but principal is not correct.\");\n        logger.warn(\"Will re-create user\");\n        new UserManager(session).removeUser(realm,user,session.userLocalStorage());\n      }\n    }\n  }\n  logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n  return importUserToKeycloak(realm,username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 102
      },
      "nodeContext" : "logger.debug(\"SSSD authenticated user \" + username + \" not in Keycloak storage. Creating...\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.federation.sssd.Logger"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 90,
    "startColumnNumber" : 12,
    "endLineNumber" : 90,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 93,
    "startColumnNumber" : 16,
    "endLineNumber" : 93,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 100,
    "startColumnNumber" : 20,
    "endLineNumber" : 100,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 102,
    "startColumnNumber" : 20,
    "endLineNumber" : 102,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 108,
    "startColumnNumber" : 8,
    "endLineNumber" : 108,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}