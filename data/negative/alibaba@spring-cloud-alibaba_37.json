{
  "id" : 37,
  "expression" : "Assert",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-dubbo/src/test/java/com/alibaba/cloud/dubbo/http/matcher/ConsumeMediaTypeExpressionTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 34,
      "startColumnNumber" : 8,
      "endLineNumber" : 34,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 31,
        "startColumnNumber" : 28,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatch(){\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 37,
      "startColumnNumber" : 8,
      "endLineNumber" : 37,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 31,
        "startColumnNumber" : 28,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatch(){\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 40,
      "startColumnNumber" : 8,
      "endLineNumber" : 40,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 31,
        "startColumnNumber" : 28,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatch(){\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 43,
      "startColumnNumber" : 8,
      "endLineNumber" : 43,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 31,
        "startColumnNumber" : 28,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMatch(){\n  ConsumeMediaTypeExpression expression=createExpression(MediaType.ALL_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.APPLICATION_JSON_VALUE + \";q=0.7\");\n  Assert.assertTrue(expression.match(MediaType.APPLICATION_JSON_UTF8));\n  expression=createExpression(MediaType.TEXT_HTML_VALUE);\n  Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertFalse(expression.match(MediaType.APPLICATION_JSON_UTF8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 34,
    "startColumnNumber" : 8,
    "endLineNumber" : 34,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 37,
    "startColumnNumber" : 8,
    "endLineNumber" : 37,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 40,
    "startColumnNumber" : 8,
    "endLineNumber" : 40,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 43,
    "startColumnNumber" : 8,
    "endLineNumber" : 43,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}