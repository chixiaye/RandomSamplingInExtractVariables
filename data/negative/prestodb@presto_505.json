{
  "id" : 505,
  "expression" : "stateMachine.getSession().getTransactionId().isPresent()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/execution/TestRollbackTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stateMachine.getSession().getTransactionId().isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 68,
      "startColumnNumber" : 19,
      "endLineNumber" : 68,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertTrue(stateMachine.getSession().getTransactionId().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertTrue(stateMachine.getSession().getTransactionId().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TransactionManager transactionManager=createTestTransactionManager();\n  Session session=sessionBuilder().setTransactionId(transactionManager.beginTransaction(false)).build();\n  QueryStateMachine stateMachine=createQueryStateMachine(\"ROLLBACK\",session,true,transactionManager,executor,metadata);\n  WarningCollector warningCollector=stateMachine.getWarningCollector();\n  RollbackTask rollbackTask=new RollbackTask();\n  assertTrue(stateMachine.getSession().getTransactionId().isPresent());\n  assertEquals(transactionManager.getAllTransactionInfos().size(),1);\n  getFutureValue(rollbackTask.execute(new Rollback(),transactionManager,metadata,new AllowAllAccessControl(),stateMachine,emptyList()));\n  assertTrue(stateMachine.getQueryInfo(Optional.empty()).isClearTransactionId());\n  assertFalse(stateMachine.getQueryInfo(Optional.empty()).getStartedTransactionId().isPresent());\n  assertTrue(transactionManager.getAllTransactionInfos().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1117,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRollback(){\n  TransactionManager transactionManager=createTestTransactionManager();\n  Session session=sessionBuilder().setTransactionId(transactionManager.beginTransaction(false)).build();\n  QueryStateMachine stateMachine=createQueryStateMachine(\"ROLLBACK\",session,true,transactionManager,executor,metadata);\n  WarningCollector warningCollector=stateMachine.getWarningCollector();\n  RollbackTask rollbackTask=new RollbackTask();\n  assertTrue(stateMachine.getSession().getTransactionId().isPresent());\n  assertEquals(transactionManager.getAllTransactionInfos().size(),1);\n  getFutureValue(rollbackTask.execute(new Rollback(),transactionManager,metadata,new AllowAllAccessControl(),stateMachine,emptyList()));\n  assertTrue(stateMachine.getQueryInfo(Optional.empty()).isClearTransactionId());\n  assertFalse(stateMachine.getQueryInfo(Optional.empty()).getStartedTransactionId().isPresent());\n  assertTrue(transactionManager.getAllTransactionInfos().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertTrue(stateMachine.getSession().getTransactionId().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 68,
    "startColumnNumber" : 19,
    "endLineNumber" : 68,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}