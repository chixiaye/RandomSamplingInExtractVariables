{
  "id" : 395,
  "expression" : "ex",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/test-framework/amazon-lambda/src/main/java/io/quarkus/amazon/lambda/test/LambdaClient.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 92,
      "startColumnNumber" : 20,
      "endLineNumber" : 92,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 50
      },
      "nodeContext" : "ex instanceof RuntimeException",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (ex instanceof RuntimeException) {\n  throw (RuntimeException)ex;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 90,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (e instanceof ExecutionException) {\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 89,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 89,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n  CompletableFuture<String> result=new CompletableFuture<>();\n  REQUESTS.put(id,result);\n  StringBuilder requestBody=new StringBuilder();\n  int i=0;\n  while ((i=inputStream.read()) != -1) {\n    requestBody.append((char)i);\n  }\n  REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n    @Override public String getKey(){\n      return id;\n    }\n    @Override public String getValue(){\n      return requestBody.toString();\n    }\n    @Override public String setValue(    String value){\n      return null;\n    }\n  }\n);\n  String output=result.get();\n  outputStream.write(output.getBytes());\n}\n catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 55,
        "startColumnNumber" : 82,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1722,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Deprecated public static void invoke(InputStream inputStream,OutputStream outputStream){\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 50
      },
      "nodeContext" : "ex instanceof RuntimeException",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  }, {
    "nodeContext" : "ex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 93,
      "startColumnNumber" : 45,
      "endLineNumber" : 93,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(RuntimeException)ex",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 48
      },
      "nodeContext" : "throw (RuntimeException)ex;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 92,
        "startColumnNumber" : 52,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  throw (RuntimeException)ex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (ex instanceof RuntimeException) {\n  throw (RuntimeException)ex;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 90,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (e instanceof ExecutionException) {\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 89,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 89,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n  CompletableFuture<String> result=new CompletableFuture<>();\n  REQUESTS.put(id,result);\n  StringBuilder requestBody=new StringBuilder();\n  int i=0;\n  while ((i=inputStream.read()) != -1) {\n    requestBody.append((char)i);\n  }\n  REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n    @Override public String getKey(){\n      return id;\n    }\n    @Override public String getValue(){\n      return requestBody.toString();\n    }\n    @Override public String setValue(    String value){\n      return null;\n    }\n  }\n);\n  String output=result.get();\n  outputStream.write(output.getBytes());\n}\n catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 55,
        "startColumnNumber" : 82,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1722,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Deprecated public static void invoke(InputStream inputStream,OutputStream outputStream){\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 48
      },
      "nodeContext" : "throw (RuntimeException)ex;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  }, {
    "nodeContext" : "ex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 95,
      "startColumnNumber" : 43,
      "endLineNumber" : 95,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 95,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new RuntimeException(ex)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 47
      },
      "nodeContext" : "throw new RuntimeException(ex);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 90,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (e instanceof ExecutionException) {\n  Throwable ex=e.getCause();\n  if (ex instanceof RuntimeException) {\n    throw (RuntimeException)ex;\n  }\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 89,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 89,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n  CompletableFuture<String> result=new CompletableFuture<>();\n  REQUESTS.put(id,result);\n  StringBuilder requestBody=new StringBuilder();\n  int i=0;\n  while ((i=inputStream.read()) != -1) {\n    requestBody.append((char)i);\n  }\n  REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n    @Override public String getKey(){\n      return id;\n    }\n    @Override public String getValue(){\n      return requestBody.toString();\n    }\n    @Override public String setValue(    String value){\n      return null;\n    }\n  }\n);\n  String output=result.get();\n  outputStream.write(output.getBytes());\n}\n catch (Exception e) {\n  if (e instanceof ExecutionException) {\n    Throwable ex=e.getCause();\n    if (ex instanceof RuntimeException) {\n      throw (RuntimeException)ex;\n    }\n    throw new RuntimeException(ex);\n  }\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 55,
        "startColumnNumber" : 82,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1722,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Deprecated public static void invoke(InputStream inputStream,OutputStream outputStream){\n  log.warn(\"LambdaClient has been deprecated and will be removed in future Quarkus versions.  You can now invoke using a built in test http server.  See docs for more details\");\n  if (problem != null) {\n    throw new RuntimeException(problem);\n  }\n  try {\n    String id=\"aws-request-\" + REQUEST_ID_GENERATOR.incrementAndGet();\n    CompletableFuture<String> result=new CompletableFuture<>();\n    REQUESTS.put(id,result);\n    StringBuilder requestBody=new StringBuilder();\n    int i=0;\n    while ((i=inputStream.read()) != -1) {\n      requestBody.append((char)i);\n    }\n    REQUEST_QUEUE.add(new Map.Entry<String,String>(){\n      @Override public String getKey(){\n        return id;\n      }\n      @Override public String getValue(){\n        return requestBody.toString();\n      }\n      @Override public String setValue(      String value){\n        return null;\n      }\n    }\n);\n    String output=result.get();\n    outputStream.write(output.getBytes());\n  }\n catch (  Exception e) {\n    if (e instanceof ExecutionException) {\n      Throwable ex=e.getCause();\n      if (ex instanceof RuntimeException) {\n        throw (RuntimeException)ex;\n      }\n      throw new RuntimeException(ex);\n    }\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 47
      },
      "nodeContext" : "throw new RuntimeException(ex);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 92,
    "startColumnNumber" : 20,
    "endLineNumber" : 92,
    "endColumnNumber" : 22
  }, {
    "charLength" : 2,
    "startLineNumber" : 93,
    "startColumnNumber" : 45,
    "endLineNumber" : 93,
    "endColumnNumber" : 47
  }, {
    "charLength" : 2,
    "startLineNumber" : 95,
    "startColumnNumber" : 43,
    "endLineNumber" : 95,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}