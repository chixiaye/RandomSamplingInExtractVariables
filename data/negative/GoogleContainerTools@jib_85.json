{
  "id" : 85,
  "expression" : "\"a/b\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/GradleProjectPropertiesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"a/b\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 88,
      "startColumnNumber" : 24,
      "endLineNumber" : 88,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertEquals(\"a/b\",result.getRepository())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertEquals(\"a/b\",result.getRepository());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 84,
        "startColumnNumber" : 82,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockJibExtension.getTargetImage()).thenReturn(\"a/b:c\");\n  ImageReference result=gradleProjectProperties.getGeneratedTargetDockerTag(mockJibExtension,mockGradleJibLogger);\n  Assert.assertEquals(\"a/b\",result.getRepository());\n  Assert.assertEquals(\"c\",result.getTag());\n  Mockito.verify(mockGradleJibLogger,Mockito.never()).lifecycle(Mockito.any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGetDockerTag_configured() throws InvalidImageReferenceException {\n  Mockito.when(mockJibExtension.getTargetImage()).thenReturn(\"a/b:c\");\n  ImageReference result=gradleProjectProperties.getGeneratedTargetDockerTag(mockJibExtension,mockGradleJibLogger);\n  Assert.assertEquals(\"a/b\",result.getRepository());\n  Assert.assertEquals(\"c\",result.getTag());\n  Mockito.verify(mockGradleJibLogger,Mockito.never()).lifecycle(Mockito.any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertEquals(\"a/b\",result.getRepository());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 88,
    "startColumnNumber" : 24,
    "endLineNumber" : 88,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}