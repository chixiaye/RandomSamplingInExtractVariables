{
  "id" : 155,
  "expression" : "false",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "6f6da699a38ca374d4b29d0aed400a2518e97a66",
  "filePath" : "app/src/main/java/org/thoughtcrime/securesms/groups/v2/processing/GroupsV2StateProcessor.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 509,
      "startColumnNumber" : 142,
      "endLineNumber" : 509,
      "endColumnNumber" : 147
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 509,
        "startColumnNumber" : 55,
        "endLineNumber" : 509,
        "endColumnNumber" : 229
      },
      "nodeContext" : "new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 509,
        "startColumnNumber" : 37,
        "endLineNumber" : 509,
        "endColumnNumber" : 229
      },
      "nodeContext" : "outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 509,
        "startColumnNumber" : 10,
        "endLineNumber" : 509,
        "endColumnNumber" : 230
      },
      "nodeContext" : "OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 504,
        "startColumnNumber" : 12,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 504,
        "startColumnNumber" : 8,
        "endLineNumber" : 517,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n catch (MmsException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 503,
        "startColumnNumber" : 20,
        "endLineNumber" : 518,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 509,
        "startColumnNumber" : 10,
        "endLineNumber" : 509,
        "endColumnNumber" : 230
      },
      "nodeContext" : "OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 511,
      "startColumnNumber" : 114,
      "endLineNumber" : 511,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 511,
        "startColumnNumber" : 55,
        "endLineNumber" : 511,
        "endColumnNumber" : 126
      },
      "nodeContext" : "mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 511,
        "startColumnNumber" : 37,
        "endLineNumber" : 511,
        "endColumnNumber" : 126
      },
      "nodeContext" : "messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 511,
        "startColumnNumber" : 10,
        "endLineNumber" : 511,
        "endColumnNumber" : 127
      },
      "nodeContext" : "long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 504,
        "startColumnNumber" : 12,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 504,
        "startColumnNumber" : 8,
        "endLineNumber" : 517,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n catch (MmsException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 503,
        "startColumnNumber" : 20,
        "endLineNumber" : 518,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 511,
        "startColumnNumber" : 10,
        "endLineNumber" : 511,
        "endColumnNumber" : 127
      },
      "nodeContext" : "long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 514,
      "startColumnNumber" : 42,
      "endLineNumber" : 514,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 55
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 56
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 504,
        "startColumnNumber" : 12,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 504,
        "startColumnNumber" : 8,
        "endLineNumber" : 517,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n catch (MmsException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 503,
        "startColumnNumber" : 20,
        "endLineNumber" : 518,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 56
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 514,
      "startColumnNumber" : 49,
      "endLineNumber" : 514,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 55
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 56
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 504,
        "startColumnNumber" : 12,
        "endLineNumber" : 515,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 504,
        "startColumnNumber" : 8,
        "endLineNumber" : 517,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n  ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n  RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n  Recipient recipient=Recipient.resolved(recipientId);\n  OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n  long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n  long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n  mmsDatabase.markAsSent(messageId,true);\n  threadDatabase.update(threadId,false,false);\n}\n catch (MmsException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 503,
        "startColumnNumber" : 20,
        "endLineNumber" : 518,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 514,
        "startColumnNumber" : 10,
        "endLineNumber" : 514,
        "endColumnNumber" : 56
      },
      "nodeContext" : "threadDatabase.update(threadId,false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 521,
      "startColumnNumber" : 160,
      "endLineNumber" : 521,
      "endColumnNumber" : 165
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 521,
        "startColumnNumber" : 62,
        "endLineNumber" : 521,
        "endColumnNumber" : 172
      },
      "nodeContext" : "new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 17,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 521,
        "startColumnNumber" : 47,
        "endLineNumber" : 521,
        "endColumnNumber" : 172
      },
      "nodeContext" : "incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 521,
        "startColumnNumber" : 8,
        "endLineNumber" : 521,
        "endColumnNumber" : 173
      },
      "nodeContext" : "IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 518,
        "startColumnNumber" : 13,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 521,
        "startColumnNumber" : 8,
        "endLineNumber" : 521,
        "endColumnNumber" : 173
      },
      "nodeContext" : "IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 526,
      "startColumnNumber" : 94,
      "endLineNumber" : 526,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 107
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 108
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 525,
        "startColumnNumber" : 38,
        "endLineNumber" : 527,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 525,
        "startColumnNumber" : 8,
        "endLineNumber" : 529,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (insertResult.isPresent()) {\n  DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n}\n else {\n  Log.w(TAG,\"Could not insert update message\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 518,
        "startColumnNumber" : 13,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 108
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 526,
      "startColumnNumber" : 101,
      "endLineNumber" : 526,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 107
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 108
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 525,
        "startColumnNumber" : 38,
        "endLineNumber" : 527,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 525,
        "startColumnNumber" : 8,
        "endLineNumber" : 529,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (insertResult.isPresent()) {\n  DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n}\n else {\n  Log.w(TAG,\"Could not insert update message\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 518,
        "startColumnNumber" : 13,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 503,
        "startColumnNumber" : 6,
        "endLineNumber" : 530,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (outgoing) {\n  try {\n    MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n    ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n    RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n    Recipient recipient=Recipient.resolved(recipientId);\n    OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n    long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n    long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n    mmsDatabase.markAsSent(messageId,true);\n    threadDatabase.update(threadId,false,false);\n  }\n catch (  MmsException e) {\n    Log.w(TAG,e);\n  }\n}\n else {\n  MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n  RecipientId sender=RecipientId.from(editor.get(),null);\n  IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n  IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n  Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n  if (insertResult.isPresent()) {\n    DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n  }\n else {\n    Log.w(TAG,\"Could not insert update message\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 498,
        "startColumnNumber" : 104,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 498,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void storeMessage(@NonNull DecryptedGroupV2Context decryptedGroupV2Context,long timestamp){\n  Optional<UUID> editor=getEditor(decryptedGroupV2Context);\n  boolean outgoing=!editor.isPresent() || Recipient.self().requireUuid().equals(editor.get());\n  if (outgoing) {\n    try {\n      MessageDatabase mmsDatabase=DatabaseFactory.getMmsDatabase(context);\n      ThreadDatabase threadDatabase=DatabaseFactory.getThreadDatabase(context);\n      RecipientId recipientId=recipientDatabase.getOrInsertFromGroupId(groupId);\n      Recipient recipient=Recipient.resolved(recipientId);\n      OutgoingGroupUpdateMessage outgoingMessage=new OutgoingGroupUpdateMessage(recipient,decryptedGroupV2Context,null,timestamp,0,false,null,Collections.emptyList(),Collections.emptyList(),Collections.emptyList());\n      long threadId=threadDatabase.getOrCreateThreadIdFor(recipient);\n      long messageId=mmsDatabase.insertMessageOutbox(outgoingMessage,threadId,false,null);\n      mmsDatabase.markAsSent(messageId,true);\n      threadDatabase.update(threadId,false,false);\n    }\n catch (    MmsException e) {\n      Log.w(TAG,e);\n    }\n  }\n else {\n    MessageDatabase smsDatabase=DatabaseFactory.getSmsDatabase(context);\n    RecipientId sender=RecipientId.from(editor.get(),null);\n    IncomingTextMessage incoming=new IncomingTextMessage(sender,-1,timestamp,timestamp,timestamp,\"\",Optional.of(groupId),0,false,null);\n    IncomingGroupUpdateMessage groupMessage=new IncomingGroupUpdateMessage(incoming,decryptedGroupV2Context);\n    Optional<MessageDatabase.InsertResult> insertResult=smsDatabase.insertMessageInbox(groupMessage);\n    if (insertResult.isPresent()) {\n      DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n    }\n else {\n      Log.w(TAG,\"Could not insert update message\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 526,
        "startColumnNumber" : 10,
        "endLineNumber" : 526,
        "endColumnNumber" : 108
      },
      "nodeContext" : "DatabaseFactory.getThreadDatabase(context).update(insertResult.get().getThreadId(),false,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 509,
    "startColumnNumber" : 142,
    "endLineNumber" : 509,
    "endColumnNumber" : 147
  }, {
    "charLength" : 5,
    "startLineNumber" : 511,
    "startColumnNumber" : 114,
    "endLineNumber" : 511,
    "endColumnNumber" : 119
  }, {
    "charLength" : 5,
    "startLineNumber" : 514,
    "startColumnNumber" : 42,
    "endLineNumber" : 514,
    "endColumnNumber" : 47
  }, {
    "charLength" : 5,
    "startLineNumber" : 514,
    "startColumnNumber" : 49,
    "endLineNumber" : 514,
    "endColumnNumber" : 54
  }, {
    "charLength" : 5,
    "startLineNumber" : 521,
    "startColumnNumber" : 160,
    "endLineNumber" : 521,
    "endColumnNumber" : 165
  }, {
    "charLength" : 5,
    "startLineNumber" : 526,
    "startColumnNumber" : 94,
    "endLineNumber" : 526,
    "endColumnNumber" : 99
  }, {
    "charLength" : 5,
    "startLineNumber" : 526,
    "startColumnNumber" : 101,
    "endLineNumber" : 526,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 0
  } ]
}