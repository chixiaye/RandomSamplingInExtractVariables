{
  "id" : 268,
  "expression" : "entry.getKey()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/testers/CollectionIteratorTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 91,
      "startColumnNumber" : 25,
      "endLineNumber" : 91,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 58
      },
      "nodeContext" : "mapEntry(entry.getKey(),entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 58
      },
      "nodeContext" : "element=mapEntry(entry.getKey(),entry.getValue())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 59
      },
      "nodeContext" : "element=mapEntry(entry.getKey(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 89,
        "startColumnNumber" : 34,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Entry<?,?> entry=(Entry<?,?>)element;\n  element=mapEntry(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (element instanceof Entry) {\n  Entry<?,?> entry=(Entry<?,?>)element;\n  element=mapEntry(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 84,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int originalSize=collection.size();\n  Iterator<E> iterator=collection.iterator();\n  Object element=iterator.next();\n  if (element instanceof Entry) {\n    Entry<?,?> entry=(Entry<?,?>)element;\n    element=mapEntry(entry.getKey(),entry.getValue());\n  }\n  assertTrue(collection.contains(element));\n  iterator.remove();\n  assertFalse(collection.contains(element));\n  assertEquals(originalSize - 1,collection.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@CollectionFeature.Require(SUPPORTS_ITERATOR_REMOVE) @CollectionSize.Require(absent=ZERO) public void testIterator_removeAffectsBackingCollection(){\n  int originalSize=collection.size();\n  Iterator<E> iterator=collection.iterator();\n  Object element=iterator.next();\n  if (element instanceof Entry) {\n    Entry<?,?> entry=(Entry<?,?>)element;\n    element=mapEntry(entry.getKey(),entry.getValue());\n  }\n  assertTrue(collection.contains(element));\n  iterator.remove();\n  assertFalse(collection.contains(element));\n  assertEquals(originalSize - 1,collection.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 59
      },
      "nodeContext" : "element=mapEntry(entry.getKey(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 91,
    "startColumnNumber" : 25,
    "endLineNumber" : 91,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}