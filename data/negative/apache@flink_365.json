{
  "id" : 365,
  "expression" : "windowSizeAndSlideSize.f0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/batch/BatchExecPythonGroupWindowAggregate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "windowSizeAndSlideSize.f0",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 124,
      "startColumnNumber" : 24,
      "endLineNumber" : 124,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 31
      },
      "nodeContext" : "createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 118,
        "startColumnNumber" : 49,
        "endLineNumber" : 127,
        "endColumnNumber" : 31
      },
      "nodeContext" : "transform=createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 32
      },
      "nodeContext" : "OneInputTransformation<RowData,RowData> transform=createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1423,
        "startLineNumber" : 104,
        "startColumnNumber" : 56,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ExecEdge inputEdge=getInputEdges().get(0);\n  final Transformation<RowData> inputTransform=(Transformation<RowData>)inputEdge.translateToPlan(planner);\n  final RowType inputRowType=(RowType)inputEdge.getOutputType();\n  final RowType outputRowType=InternalTypeInfo.of(getOutputType()).toRowType();\n  final Tuple2<Long,Long> windowSizeAndSlideSize=WindowCodeGenerator.getWindowDef(window);\n  final Configuration pythonConfig=CommonPythonUtil.getMergedConfig(planner.getExecEnv(),config.getTableConfig());\n  int groupBufferLimitSize=pythonConfig.getInteger(ExecutionConfigOptions.TABLE_EXEC_WINDOW_AGG_BUFFER_SIZE_LIMIT);\n  OneInputTransformation<RowData,RowData> transform=createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config);\n  if (CommonPythonUtil.isPythonWorkerUsingManagedMemory(pythonConfig)) {\n    transform.declareManagedMemoryUseCaseAtSlotScope(ManagedMemoryUseCase.PYTHON);\n  }\n  return transform;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1587,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override protected Transformation<RowData> translateToPlanInternal(PlannerBase planner,ExecNodeConfig config){\n  final ExecEdge inputEdge=getInputEdges().get(0);\n  final Transformation<RowData> inputTransform=(Transformation<RowData>)inputEdge.translateToPlan(planner);\n  final RowType inputRowType=(RowType)inputEdge.getOutputType();\n  final RowType outputRowType=InternalTypeInfo.of(getOutputType()).toRowType();\n  final Tuple2<Long,Long> windowSizeAndSlideSize=WindowCodeGenerator.getWindowDef(window);\n  final Configuration pythonConfig=CommonPythonUtil.getMergedConfig(planner.getExecEnv(),config.getTableConfig());\n  int groupBufferLimitSize=pythonConfig.getInteger(ExecutionConfigOptions.TABLE_EXEC_WINDOW_AGG_BUFFER_SIZE_LIMIT);\n  OneInputTransformation<RowData,RowData> transform=createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config);\n  if (CommonPythonUtil.isPythonWorkerUsingManagedMemory(pythonConfig)) {\n    transform.declareManagedMemoryUseCaseAtSlotScope(ManagedMemoryUseCase.PYTHON);\n  }\n  return transform;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 31
      },
      "nodeContext" : "createPythonOneInputTransformation(inputTransform,inputRowType,outputRowType,groupBufferLimitSize,windowSizeAndSlideSize.f0,windowSizeAndSlideSize.f1,pythonConfig,config)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 124,
    "startColumnNumber" : 24,
    "endLineNumber" : 124,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}