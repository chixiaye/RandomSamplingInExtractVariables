{
  "id" : 185,
  "expression" : "\"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/test/java/com/baomidou/mybatisplus/test/sql/SqlBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 78,
      "startColumnNumber" : 12,
      "endLineNumber" : 78,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 74,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\",sql)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\",sql);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1922,
        "startLineNumber" : 31,
        "startColumnNumber" : 23,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String sql=new SQL().SELECT(\"id, name\").FROM(\"PERSON A\").WHERE(\"name like ?\").WHERE(\"id = ?\").toString();\n  assertEquals(\"\" + \"SELECT id, name\\n\" + \"FROM PERSON A\\n\"+ \"WHERE (name like ? AND id = ?)\",sql);\n  sql=new SQL(){\n{\n      SELECT(\"id, name\");\n      FROM(\"PERSON A\");\n      WHERE(\"name like ?\").WHERE(\"id = ?\");\n    }\n  }\n.toString();\n  assertEquals(\"\" + \"SELECT id, name\\n\" + \"FROM PERSON A\\n\"+ \"WHERE (name like ? AND id = ?)\",sql);\n  sql=new SQL(){\n{\n      SELECT(\"P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME\");\n      SELECT(\"P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\");\n      FROM(\"PERSON P\");\n      FROM(\"ACCOUNT A\");\n      INNER_JOIN(\"DEPARTMENT D on D.ID = P.DEPARTMENT_ID\");\n      INNER_JOIN(\"COMPANY C on D.COMPANY_ID = C.ID\");\n      WHERE(\"P.ID = A.ID\");\n      WHERE(\"P.FIRST_NAME like ?\");\n      OR();\n      WHERE(\"P.LAST_NAME like ?\");\n      GROUP_BY(\"P.ID\");\n      HAVING(\"P.LAST_NAME like ?\");\n      OR();\n      HAVING(\"P.FIRST_NAME like ?\");\n      ORDER_BY(\"P.ID\");\n      ORDER_BY(\"P.FULL_NAME\");\n    }\n  }\n.toString();\n  assertEquals(\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\",sql);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1951,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test(){\n  String sql=new SQL().SELECT(\"id, name\").FROM(\"PERSON A\").WHERE(\"name like ?\").WHERE(\"id = ?\").toString();\n  assertEquals(\"\" + \"SELECT id, name\\n\" + \"FROM PERSON A\\n\"+ \"WHERE (name like ? AND id = ?)\",sql);\n  sql=new SQL(){\n{\n      SELECT(\"id, name\");\n      FROM(\"PERSON A\");\n      WHERE(\"name like ?\").WHERE(\"id = ?\");\n    }\n  }\n.toString();\n  assertEquals(\"\" + \"SELECT id, name\\n\" + \"FROM PERSON A\\n\"+ \"WHERE (name like ? AND id = ?)\",sql);\n  sql=new SQL(){\n{\n      SELECT(\"P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME\");\n      SELECT(\"P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\");\n      FROM(\"PERSON P\");\n      FROM(\"ACCOUNT A\");\n      INNER_JOIN(\"DEPARTMENT D on D.ID = P.DEPARTMENT_ID\");\n      INNER_JOIN(\"COMPANY C on D.COMPANY_ID = C.ID\");\n      WHERE(\"P.ID = A.ID\");\n      WHERE(\"P.FIRST_NAME like ?\");\n      OR();\n      WHERE(\"P.LAST_NAME like ?\");\n      GROUP_BY(\"P.ID\");\n      HAVING(\"P.LAST_NAME like ?\");\n      OR();\n      HAVING(\"P.FIRST_NAME like ?\");\n      ORDER_BY(\"P.ID\");\n      ORDER_BY(\"P.FULL_NAME\");\n    }\n  }\n.toString();\n  assertEquals(\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\",sql);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 74,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"SELECT P.ID, P.USERNAME, P.PASSWORD, P.FULL_NAME, P.LAST_NAME, P.CREATED_ON, P.UPDATED_ON\\n\" + \"FROM PERSON P, ACCOUNT A\\n\" + \"INNER JOIN DEPARTMENT D on D.ID = P.DEPARTMENT_ID\\n\"+ \"INNER JOIN COMPANY C on D.COMPANY_ID = C.ID\\n\"+ \"WHERE (P.ID = A.ID AND P.FIRST_NAME like ?) \\n\"+ \"OR (P.LAST_NAME like ?)\\n\"+ \"GROUP BY P.ID\\n\"+ \"HAVING (P.LAST_NAME like ?) \\n\"+ \"OR (P.FIRST_NAME like ?)\\n\"+ \"ORDER BY P.ID, P.FULL_NAME\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 78,
    "startColumnNumber" : 12,
    "endLineNumber" : 78,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}