{
  "id" : 132,
  "expression" : "running.get()",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/WorkProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "running.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 118,
      "startColumnNumber" : 21,
      "endLineNumber" : 118,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 34
      },
      "nodeContext" : "!running.get()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!running.get()) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!running.get()) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (final AlertException ex) {\n  if (!running.get()) {\n    break;\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (processedSequence) {\n    processedSequence=false;\n    nextSequence=workSequence.incrementAndGet();\n    sequence.set(nextSequence - 1L);\n  }\n  sequenceBarrier.waitFor(nextSequence);\n  event=ringBuffer.getPublished(nextSequence);\n  workHandler.onEvent(event);\n  processedSequence=true;\n}\n catch (final AlertException ex) {\n  if (!running.get()) {\n    break;\n  }\n}\ncatch (final Throwable ex) {\n  exceptionHandler.handleEventException(ex,nextSequence,event);\n  processedSequence=true;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1306,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (processedSequence) {\n      processedSequence=false;\n      nextSequence=workSequence.incrementAndGet();\n      sequence.set(nextSequence - 1L);\n    }\n    sequenceBarrier.waitFor(nextSequence);\n    event=ringBuffer.getPublished(nextSequence);\n    workHandler.onEvent(event);\n    processedSequence=true;\n  }\n catch (  final AlertException ex) {\n    if (!running.get()) {\n      break;\n    }\n  }\ncatch (  final Throwable ex) {\n    exceptionHandler.handleEventException(ex,nextSequence,event);\n    processedSequence=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  try {\n    if (processedSequence) {\n      processedSequence=false;\n      nextSequence=workSequence.incrementAndGet();\n      sequence.set(nextSequence - 1L);\n    }\n    sequenceBarrier.waitFor(nextSequence);\n    event=ringBuffer.getPublished(nextSequence);\n    workHandler.onEvent(event);\n    processedSequence=true;\n  }\n catch (  final AlertException ex) {\n    if (!running.get()) {\n      break;\n    }\n  }\ncatch (  final Throwable ex) {\n    exceptionHandler.handleEventException(ex,nextSequence,event);\n    processedSequence=true;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1715,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!running.compareAndSet(false,true)) {\n    throw new IllegalStateException(\"Thread is already running\");\n  }\n  sequenceBarrier.clearAlert();\n  notifyStart();\n  boolean processedSequence=true;\n  long nextSequence=sequence.get();\n  T event=null;\n  while (true) {\n    try {\n      if (processedSequence) {\n        processedSequence=false;\n        nextSequence=workSequence.incrementAndGet();\n        sequence.set(nextSequence - 1L);\n      }\n      sequenceBarrier.waitFor(nextSequence);\n      event=ringBuffer.getPublished(nextSequence);\n      workHandler.onEvent(event);\n      processedSequence=true;\n    }\n catch (    final AlertException ex) {\n      if (!running.get()) {\n        break;\n      }\n    }\ncatch (    final Throwable ex) {\n      exceptionHandler.handleEventException(ex,nextSequence,event);\n      processedSequence=true;\n    }\n  }\n  notifyShutdown();\n  running.set(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1922,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * It is ok to have another thread re-run this method after a halt().\n * @throws IllegalStateException if this processor is already running\n */\n@Override public void run(){\n  if (!running.compareAndSet(false,true)) {\n    throw new IllegalStateException(\"Thread is already running\");\n  }\n  sequenceBarrier.clearAlert();\n  notifyStart();\n  boolean processedSequence=true;\n  long nextSequence=sequence.get();\n  T event=null;\n  while (true) {\n    try {\n      if (processedSequence) {\n        processedSequence=false;\n        nextSequence=workSequence.incrementAndGet();\n        sequence.set(nextSequence - 1L);\n      }\n      sequenceBarrier.waitFor(nextSequence);\n      event=ringBuffer.getPublished(nextSequence);\n      workHandler.onEvent(event);\n      processedSequence=true;\n    }\n catch (    final AlertException ex) {\n      if (!running.get()) {\n        break;\n      }\n    }\ncatch (    final Throwable ex) {\n      exceptionHandler.handleEventException(ex,nextSequence,event);\n      processedSequence=true;\n    }\n  }\n  notifyShutdown();\n  running.set(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 34
      },
      "nodeContext" : "!running.get()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 118,
    "startColumnNumber" : 21,
    "endLineNumber" : 118,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}