{
  "id" : 481,
  "expression" : "\" \"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/AbstractMonitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 143,
      "startColumnNumber" : 33,
      "endLineNumber" : 143,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 143,
        "startColumnNumber" : 26,
        "endLineNumber" : 143,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rate + \" \" + _(\"baud\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 49
      },
      "nodeContext" : "serialRates.addItem(rate + \" \" + _(\"baud\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 50
      },
      "nodeContext" : "serialRates.addItem(rate + \" \" + _(\"baud\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 142,
        "startColumnNumber" : 42,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  serialRates.addItem(rate + \" \" + _(\"baud\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String rate : serialRateStrings) {\n  serialRates.addItem(rate + \" \" + _(\"baud\"));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4757,
        "startLineNumber" : 51,
        "startColumnNumber" : 39,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(title);\n  addWindowListener(new WindowAdapter(){\n    public void windowClosing(    WindowEvent event){\n      try {\n        close();\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n);\n  KeyStroke wc=Editor.WINDOW_CLOSE_KEYSTROKE;\n  getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(wc,\"close\");\n  getRootPane().getActionMap().put(\"close\",(new AbstractAction(){\n    public void actionPerformed(    ActionEvent event){\n      try {\n        close();\n      }\n catch (      Exception e) {\n      }\n      setVisible(false);\n    }\n  }\n));\n  getContentPane().setLayout(new BorderLayout());\n  Font consoleFont=Theme.getFont(\"console.font\");\n  Font editorFont=Preferences.getFont(\"editor.font\");\n  Font font=new Font(consoleFont.getName(),consoleFont.getStyle(),editorFont.getSize());\n  textArea=new TextAreaFIFO(8000000);\n  textArea.setRows(16);\n  textArea.setColumns(40);\n  textArea.setEditable(false);\n  textArea.setFont(font);\n  ((DefaultCaret)textArea.getCaret()).setUpdatePolicy(DefaultCaret.NEVER_UPDATE);\n  scrollPane=new JScrollPane(textArea);\n  getContentPane().add(scrollPane,BorderLayout.CENTER);\n  JPanel upperPane=new JPanel();\n  upperPane.setLayout(new BoxLayout(upperPane,BoxLayout.X_AXIS));\n  upperPane.setBorder(new EmptyBorder(4,4,4,4));\n  textField=new JTextField(40);\n  sendButton=new JButton(_(\"Send\"));\n  upperPane.add(textField);\n  upperPane.add(Box.createRigidArea(new Dimension(4,0)));\n  upperPane.add(sendButton);\n  getContentPane().add(upperPane,BorderLayout.NORTH);\n  final JPanel pane=new JPanel();\n  pane.setLayout(new BoxLayout(pane,BoxLayout.X_AXIS));\n  pane.setBorder(new EmptyBorder(4,4,4,4));\n  autoscrollBox=new JCheckBox(_(\"Autoscroll\"),true);\n  noLineEndingAlert=new JLabel(I18n.format(_(\"You've pressed {0} but nothing was sent. Should you select a line ending?\"),_(\"Send\")));\n  noLineEndingAlert.setToolTipText(noLineEndingAlert.getText());\n  noLineEndingAlert.setForeground(pane.getBackground());\n  Dimension minimumSize=new Dimension(noLineEndingAlert.getMinimumSize());\n  minimumSize.setSize(minimumSize.getWidth() / 3,minimumSize.getHeight());\n  noLineEndingAlert.setMinimumSize(minimumSize);\n  lineEndings=new JComboBox(new String[]{_(\"No line ending\"),_(\"Newline\"),_(\"Carriage return\"),_(\"Both NL & CR\")});\n  lineEndings.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent event){\n      Preferences.setInteger(\"serial.line_ending\",lineEndings.getSelectedIndex());\n      noLineEndingAlert.setForeground(pane.getBackground());\n    }\n  }\n);\n  if (Preferences.get(\"serial.line_ending\") != null) {\n    lineEndings.setSelectedIndex(Preferences.getInteger(\"serial.line_ending\"));\n  }\n  lineEndings.setMaximumSize(lineEndings.getMinimumSize());\n  String[] serialRateStrings={\"300\",\"1200\",\"2400\",\"4800\",\"9600\",\"19200\",\"38400\",\"57600\",\"115200\"};\n  serialRates=new JComboBox();\n  for (  String rate : serialRateStrings) {\n    serialRates.addItem(rate + \" \" + _(\"baud\"));\n  }\n  serialRates.setMaximumSize(serialRates.getMinimumSize());\n  pane.add(autoscrollBox);\n  pane.add(Box.createHorizontalGlue());\n  pane.add(noLineEndingAlert);\n  pane.add(Box.createRigidArea(new Dimension(8,0)));\n  pane.add(lineEndings);\n  pane.add(Box.createRigidArea(new Dimension(8,0)));\n  pane.add(serialRates);\n  this.setMinimumSize(new Dimension(pane.getMinimumSize().width,this.getPreferredSize().height));\n  getContentPane().add(pane,BorderLayout.SOUTH);\n  pack();\n  Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();\n  if (Preferences.get(\"last.screen.height\") != null) {\n    int screenW=Preferences.getInteger(\"last.screen.width\");\n    int screenH=Preferences.getInteger(\"last.screen.height\");\n    if ((screen.width == screenW) && (screen.height == screenH)) {\n      String locationStr=Preferences.get(\"last.serial.location\");\n      if (locationStr != null) {\n        int[] location=PApplet.parseInt(PApplet.split(locationStr,','));\n        setPlacement(location);\n      }\n    }\n  }\n  updateBuffer=new StringBuffer(1048576);\n  updateTimer=new Timer(33,this);\n  updateTimer.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 667,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4794,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AbstractMonitor(String title){\n  super(title);\n  addWindowListener(new WindowAdapter(){\n    public void windowClosing(    WindowEvent event){\n      try {\n        close();\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n);\n  KeyStroke wc=Editor.WINDOW_CLOSE_KEYSTROKE;\n  getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(wc,\"close\");\n  getRootPane().getActionMap().put(\"close\",(new AbstractAction(){\n    public void actionPerformed(    ActionEvent event){\n      try {\n        close();\n      }\n catch (      Exception e) {\n      }\n      setVisible(false);\n    }\n  }\n));\n  getContentPane().setLayout(new BorderLayout());\n  Font consoleFont=Theme.getFont(\"console.font\");\n  Font editorFont=Preferences.getFont(\"editor.font\");\n  Font font=new Font(consoleFont.getName(),consoleFont.getStyle(),editorFont.getSize());\n  textArea=new TextAreaFIFO(8000000);\n  textArea.setRows(16);\n  textArea.setColumns(40);\n  textArea.setEditable(false);\n  textArea.setFont(font);\n  ((DefaultCaret)textArea.getCaret()).setUpdatePolicy(DefaultCaret.NEVER_UPDATE);\n  scrollPane=new JScrollPane(textArea);\n  getContentPane().add(scrollPane,BorderLayout.CENTER);\n  JPanel upperPane=new JPanel();\n  upperPane.setLayout(new BoxLayout(upperPane,BoxLayout.X_AXIS));\n  upperPane.setBorder(new EmptyBorder(4,4,4,4));\n  textField=new JTextField(40);\n  sendButton=new JButton(_(\"Send\"));\n  upperPane.add(textField);\n  upperPane.add(Box.createRigidArea(new Dimension(4,0)));\n  upperPane.add(sendButton);\n  getContentPane().add(upperPane,BorderLayout.NORTH);\n  final JPanel pane=new JPanel();\n  pane.setLayout(new BoxLayout(pane,BoxLayout.X_AXIS));\n  pane.setBorder(new EmptyBorder(4,4,4,4));\n  autoscrollBox=new JCheckBox(_(\"Autoscroll\"),true);\n  noLineEndingAlert=new JLabel(I18n.format(_(\"You've pressed {0} but nothing was sent. Should you select a line ending?\"),_(\"Send\")));\n  noLineEndingAlert.setToolTipText(noLineEndingAlert.getText());\n  noLineEndingAlert.setForeground(pane.getBackground());\n  Dimension minimumSize=new Dimension(noLineEndingAlert.getMinimumSize());\n  minimumSize.setSize(minimumSize.getWidth() / 3,minimumSize.getHeight());\n  noLineEndingAlert.setMinimumSize(minimumSize);\n  lineEndings=new JComboBox(new String[]{_(\"No line ending\"),_(\"Newline\"),_(\"Carriage return\"),_(\"Both NL & CR\")});\n  lineEndings.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent event){\n      Preferences.setInteger(\"serial.line_ending\",lineEndings.getSelectedIndex());\n      noLineEndingAlert.setForeground(pane.getBackground());\n    }\n  }\n);\n  if (Preferences.get(\"serial.line_ending\") != null) {\n    lineEndings.setSelectedIndex(Preferences.getInteger(\"serial.line_ending\"));\n  }\n  lineEndings.setMaximumSize(lineEndings.getMinimumSize());\n  String[] serialRateStrings={\"300\",\"1200\",\"2400\",\"4800\",\"9600\",\"19200\",\"38400\",\"57600\",\"115200\"};\n  serialRates=new JComboBox();\n  for (  String rate : serialRateStrings) {\n    serialRates.addItem(rate + \" \" + _(\"baud\"));\n  }\n  serialRates.setMaximumSize(serialRates.getMinimumSize());\n  pane.add(autoscrollBox);\n  pane.add(Box.createHorizontalGlue());\n  pane.add(noLineEndingAlert);\n  pane.add(Box.createRigidArea(new Dimension(8,0)));\n  pane.add(lineEndings);\n  pane.add(Box.createRigidArea(new Dimension(8,0)));\n  pane.add(serialRates);\n  this.setMinimumSize(new Dimension(pane.getMinimumSize().width,this.getPreferredSize().height));\n  getContentPane().add(pane,BorderLayout.SOUTH);\n  pack();\n  Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();\n  if (Preferences.get(\"last.screen.height\") != null) {\n    int screenW=Preferences.getInteger(\"last.screen.width\");\n    int screenH=Preferences.getInteger(\"last.screen.height\");\n    if ((screen.width == screenW) && (screen.height == screenH)) {\n      String locationStr=Preferences.get(\"last.serial.location\");\n      if (locationStr != null) {\n        int[] location=PApplet.parseInt(PApplet.split(locationStr,','));\n        setPlacement(location);\n      }\n    }\n  }\n  updateBuffer=new StringBuffer(1048576);\n  updateTimer=new Timer(33,this);\n  updateTimer.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 674,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 50
      },
      "nodeContext" : "serialRates.addItem(rate + \" \" + _(\"baud\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 143,
    "startColumnNumber" : 33,
    "endLineNumber" : 143,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}