{
  "id" : 288,
  "expression" : "RenderScript.setupDiskCache",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "b1f42ae67f44daf99e89effc9bca8e50fefb5e64",
  "filePath" : "VirtualApp/lib/src/main/java/com/lody/virtual/client/VClientImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RenderScript.setupDiskCache",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 256,
      "startColumnNumber" : 16,
      "endLineNumber" : 256,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 256,
        "startColumnNumber" : 16,
        "endLineNumber" : 256,
        "endColumnNumber" : 51
      },
      "nodeContext" : "RenderScript.setupDiskCache != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 258,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (RenderScript.setupDiskCache != null) {\n  RenderScript.setupDiskCache.call(codeCacheDir);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 255,
        "startColumnNumber" : 76,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 255,
        "startColumnNumber" : 15,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n  if (RenderScriptCacheDir.setupDiskCache != null) {\n    RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n  }\n}\n else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5164,
        "startLineNumber" : 185,
        "startColumnNumber" : 104,
        "endLineNumber" : 298,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mTempLock=lock;\n  try {\n    setupUncaughtHandler();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  try {\n    fixInstalledProviders();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  ActivityThread.mInitialApplication.set(VirtualCore.mainThread(),null);\n  AppBindData data=new AppBindData();\n  data.appInfo=VPackageManager.get().getApplicationInfo(packageName,0,getUserId(vuid));\n  data.processName=processName;\n  data.providers=VPackageManager.get().queryContentProviders(processName,getVUid(),PackageManager.GET_META_DATA);\n  mBoundApplication=data;\n  VirtualRuntime.setupRuntime(data.processName,data.appInfo);\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public synchronized void start(){\n      new Exception().printStackTrace();\n      super.start();\n    }\n  }\n);\n  int targetSdkVersion=data.appInfo.targetSdkVersion;\n  if (targetSdkVersion < Build.VERSION_CODES.GINGERBREAD) {\n    StrictMode.ThreadPolicy newPolicy=new StrictMode.ThreadPolicy.Builder(StrictMode.getThreadPolicy()).permitNetwork().build();\n    StrictMode.setThreadPolicy(newPolicy);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n    if (mirror.android.os.StrictMode.sVmPolicyMask != null) {\n      mirror.android.os.StrictMode.sVmPolicyMask.set(0);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && targetSdkVersion < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.os.Message.updateCheckRecycle.call(targetSdkVersion);\n  }\n  if (StubManifest.ENABLE_IO_REDIRECT) {\n    startIOUniformer();\n  }\n  IOHook.hookNative();\n  Object mainThread=VirtualCore.mainThread();\n  IOHook.startDexOverride();\n  Context context=createPackageContext(data.appInfo.packageName);\n  System.setProperty(\"java.io.tmpdir\",context.getCacheDir().getAbsolutePath());\n  File codeCacheDir;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    codeCacheDir=context.getCodeCacheDir();\n  }\n else {\n    codeCacheDir=context.getCacheDir();\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n    if (HardwareRenderer.setupDiskCache != null) {\n      HardwareRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else {\n    if (ThreadedRenderer.setupDiskCache != null) {\n      ThreadedRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    if (RenderScriptCacheDir.setupDiskCache != null) {\n      RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n    if (RenderScript.setupDiskCache != null) {\n      RenderScript.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  Object boundApp=fixBoundApp(mBoundApplication);\n  mBoundApplication.info=ContextImpl.mPackageInfo.get(context);\n  mirror.android.app.ActivityThread.AppBindData.info.set(boundApp,data.info);\n  VMRuntime.setTargetSdkVersion.call(VMRuntime.getRuntime.call(),data.appInfo.targetSdkVersion);\n  boolean conflict=SpecialComponentList.isConflictingInstrumentation(packageName);\n  if (!conflict) {\n    PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n  }\n  mInitialApplication=LoadedApk.makeApplication.call(data.info,false,null);\n  mirror.android.app.ActivityThread.mInitialApplication.set(mainThread,mInitialApplication);\n  ContextFixer.fixContext(mInitialApplication);\n  List<ProviderInfo> providers=VPackageManager.get().queryContentProviders(data.processName,vuid,PackageManager.GET_META_DATA);\n  if (providers != null) {\n    installContentProviders(mInitialApplication,providers);\n  }\n  if (lock != null) {\n    lock.open();\n    mTempLock=null;\n  }\n  try {\n    mInstrumentation.callApplicationOnCreate(mInitialApplication);\n    PatchManager.getInstance().checkEnv(HCallbackHook.class);\n    if (conflict) {\n      PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n    }\n    Application createdApp=ActivityThread.mInitialApplication.get(mainThread);\n    if (createdApp != null) {\n      mInitialApplication=createdApp;\n    }\n  }\n catch (  Exception e) {\n    if (!mInstrumentation.onException(mInitialApplication,e)) {\n      throw new RuntimeException(\"Unable to create application \" + mInitialApplication.getClass().getName() + \": \"+ e.toString(),e);\n    }\n  }\n  VActivityManager.get().appDoneExecuting();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 654,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5264,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void bindApplicationNoCheck(String packageName,String processName,ConditionVariable lock){\n  mTempLock=lock;\n  try {\n    setupUncaughtHandler();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  try {\n    fixInstalledProviders();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  ActivityThread.mInitialApplication.set(VirtualCore.mainThread(),null);\n  AppBindData data=new AppBindData();\n  data.appInfo=VPackageManager.get().getApplicationInfo(packageName,0,getUserId(vuid));\n  data.processName=processName;\n  data.providers=VPackageManager.get().queryContentProviders(processName,getVUid(),PackageManager.GET_META_DATA);\n  mBoundApplication=data;\n  VirtualRuntime.setupRuntime(data.processName,data.appInfo);\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public synchronized void start(){\n      new Exception().printStackTrace();\n      super.start();\n    }\n  }\n);\n  int targetSdkVersion=data.appInfo.targetSdkVersion;\n  if (targetSdkVersion < Build.VERSION_CODES.GINGERBREAD) {\n    StrictMode.ThreadPolicy newPolicy=new StrictMode.ThreadPolicy.Builder(StrictMode.getThreadPolicy()).permitNetwork().build();\n    StrictMode.setThreadPolicy(newPolicy);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n    if (mirror.android.os.StrictMode.sVmPolicyMask != null) {\n      mirror.android.os.StrictMode.sVmPolicyMask.set(0);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && targetSdkVersion < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.os.Message.updateCheckRecycle.call(targetSdkVersion);\n  }\n  if (StubManifest.ENABLE_IO_REDIRECT) {\n    startIOUniformer();\n  }\n  IOHook.hookNative();\n  Object mainThread=VirtualCore.mainThread();\n  IOHook.startDexOverride();\n  Context context=createPackageContext(data.appInfo.packageName);\n  System.setProperty(\"java.io.tmpdir\",context.getCacheDir().getAbsolutePath());\n  File codeCacheDir;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    codeCacheDir=context.getCodeCacheDir();\n  }\n else {\n    codeCacheDir=context.getCacheDir();\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n    if (HardwareRenderer.setupDiskCache != null) {\n      HardwareRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else {\n    if (ThreadedRenderer.setupDiskCache != null) {\n      ThreadedRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    if (RenderScriptCacheDir.setupDiskCache != null) {\n      RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n    if (RenderScript.setupDiskCache != null) {\n      RenderScript.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  Object boundApp=fixBoundApp(mBoundApplication);\n  mBoundApplication.info=ContextImpl.mPackageInfo.get(context);\n  mirror.android.app.ActivityThread.AppBindData.info.set(boundApp,data.info);\n  VMRuntime.setTargetSdkVersion.call(VMRuntime.getRuntime.call(),data.appInfo.targetSdkVersion);\n  boolean conflict=SpecialComponentList.isConflictingInstrumentation(packageName);\n  if (!conflict) {\n    PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n  }\n  mInitialApplication=LoadedApk.makeApplication.call(data.info,false,null);\n  mirror.android.app.ActivityThread.mInitialApplication.set(mainThread,mInitialApplication);\n  ContextFixer.fixContext(mInitialApplication);\n  List<ProviderInfo> providers=VPackageManager.get().queryContentProviders(data.processName,vuid,PackageManager.GET_META_DATA);\n  if (providers != null) {\n    installContentProviders(mInitialApplication,providers);\n  }\n  if (lock != null) {\n    lock.open();\n    mTempLock=null;\n  }\n  try {\n    mInstrumentation.callApplicationOnCreate(mInitialApplication);\n    PatchManager.getInstance().checkEnv(HCallbackHook.class);\n    if (conflict) {\n      PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n    }\n    Application createdApp=ActivityThread.mInitialApplication.get(mainThread);\n    if (createdApp != null) {\n      mInitialApplication=createdApp;\n    }\n  }\n catch (  Exception e) {\n    if (!mInstrumentation.onException(mInitialApplication,e)) {\n      throw new RuntimeException(\"Unable to create application \" + mInitialApplication.getClass().getName() + \": \"+ e.toString(),e);\n    }\n  }\n  VActivityManager.get().appDoneExecuting();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 670,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 256,
        "startColumnNumber" : 16,
        "endLineNumber" : 256,
        "endColumnNumber" : 51
      },
      "nodeContext" : "RenderScript.setupDiskCache != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "mirror.RefStaticMethod<java.lang.Void>"
  }, {
    "nodeContext" : "RenderScript.setupDiskCache",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 257,
      "startColumnNumber" : 16,
      "endLineNumber" : 257,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 257,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 62
      },
      "nodeContext" : "RenderScript.setupDiskCache.call(codeCacheDir)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 257,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 63
      },
      "nodeContext" : "RenderScript.setupDiskCache.call(codeCacheDir);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 256,
        "startColumnNumber" : 53,
        "endLineNumber" : 258,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RenderScript.setupDiskCache.call(codeCacheDir);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 258,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (RenderScript.setupDiskCache != null) {\n  RenderScript.setupDiskCache.call(codeCacheDir);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 255,
        "startColumnNumber" : 76,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 255,
        "startColumnNumber" : 15,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n  if (RenderScriptCacheDir.setupDiskCache != null) {\n    RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n  }\n}\n else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n  if (RenderScript.setupDiskCache != null) {\n    RenderScript.setupDiskCache.call(codeCacheDir);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5164,
        "startLineNumber" : 185,
        "startColumnNumber" : 104,
        "endLineNumber" : 298,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mTempLock=lock;\n  try {\n    setupUncaughtHandler();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  try {\n    fixInstalledProviders();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  ActivityThread.mInitialApplication.set(VirtualCore.mainThread(),null);\n  AppBindData data=new AppBindData();\n  data.appInfo=VPackageManager.get().getApplicationInfo(packageName,0,getUserId(vuid));\n  data.processName=processName;\n  data.providers=VPackageManager.get().queryContentProviders(processName,getVUid(),PackageManager.GET_META_DATA);\n  mBoundApplication=data;\n  VirtualRuntime.setupRuntime(data.processName,data.appInfo);\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public synchronized void start(){\n      new Exception().printStackTrace();\n      super.start();\n    }\n  }\n);\n  int targetSdkVersion=data.appInfo.targetSdkVersion;\n  if (targetSdkVersion < Build.VERSION_CODES.GINGERBREAD) {\n    StrictMode.ThreadPolicy newPolicy=new StrictMode.ThreadPolicy.Builder(StrictMode.getThreadPolicy()).permitNetwork().build();\n    StrictMode.setThreadPolicy(newPolicy);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n    if (mirror.android.os.StrictMode.sVmPolicyMask != null) {\n      mirror.android.os.StrictMode.sVmPolicyMask.set(0);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && targetSdkVersion < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.os.Message.updateCheckRecycle.call(targetSdkVersion);\n  }\n  if (StubManifest.ENABLE_IO_REDIRECT) {\n    startIOUniformer();\n  }\n  IOHook.hookNative();\n  Object mainThread=VirtualCore.mainThread();\n  IOHook.startDexOverride();\n  Context context=createPackageContext(data.appInfo.packageName);\n  System.setProperty(\"java.io.tmpdir\",context.getCacheDir().getAbsolutePath());\n  File codeCacheDir;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    codeCacheDir=context.getCodeCacheDir();\n  }\n else {\n    codeCacheDir=context.getCacheDir();\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n    if (HardwareRenderer.setupDiskCache != null) {\n      HardwareRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else {\n    if (ThreadedRenderer.setupDiskCache != null) {\n      ThreadedRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    if (RenderScriptCacheDir.setupDiskCache != null) {\n      RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n    if (RenderScript.setupDiskCache != null) {\n      RenderScript.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  Object boundApp=fixBoundApp(mBoundApplication);\n  mBoundApplication.info=ContextImpl.mPackageInfo.get(context);\n  mirror.android.app.ActivityThread.AppBindData.info.set(boundApp,data.info);\n  VMRuntime.setTargetSdkVersion.call(VMRuntime.getRuntime.call(),data.appInfo.targetSdkVersion);\n  boolean conflict=SpecialComponentList.isConflictingInstrumentation(packageName);\n  if (!conflict) {\n    PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n  }\n  mInitialApplication=LoadedApk.makeApplication.call(data.info,false,null);\n  mirror.android.app.ActivityThread.mInitialApplication.set(mainThread,mInitialApplication);\n  ContextFixer.fixContext(mInitialApplication);\n  List<ProviderInfo> providers=VPackageManager.get().queryContentProviders(data.processName,vuid,PackageManager.GET_META_DATA);\n  if (providers != null) {\n    installContentProviders(mInitialApplication,providers);\n  }\n  if (lock != null) {\n    lock.open();\n    mTempLock=null;\n  }\n  try {\n    mInstrumentation.callApplicationOnCreate(mInitialApplication);\n    PatchManager.getInstance().checkEnv(HCallbackHook.class);\n    if (conflict) {\n      PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n    }\n    Application createdApp=ActivityThread.mInitialApplication.get(mainThread);\n    if (createdApp != null) {\n      mInitialApplication=createdApp;\n    }\n  }\n catch (  Exception e) {\n    if (!mInstrumentation.onException(mInitialApplication,e)) {\n      throw new RuntimeException(\"Unable to create application \" + mInitialApplication.getClass().getName() + \": \"+ e.toString(),e);\n    }\n  }\n  VActivityManager.get().appDoneExecuting();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 654,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5264,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void bindApplicationNoCheck(String packageName,String processName,ConditionVariable lock){\n  mTempLock=lock;\n  try {\n    setupUncaughtHandler();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  try {\n    fixInstalledProviders();\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n  }\n  ActivityThread.mInitialApplication.set(VirtualCore.mainThread(),null);\n  AppBindData data=new AppBindData();\n  data.appInfo=VPackageManager.get().getApplicationInfo(packageName,0,getUserId(vuid));\n  data.processName=processName;\n  data.providers=VPackageManager.get().queryContentProviders(processName,getVUid(),PackageManager.GET_META_DATA);\n  mBoundApplication=data;\n  VirtualRuntime.setupRuntime(data.processName,data.appInfo);\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public synchronized void start(){\n      new Exception().printStackTrace();\n      super.start();\n    }\n  }\n);\n  int targetSdkVersion=data.appInfo.targetSdkVersion;\n  if (targetSdkVersion < Build.VERSION_CODES.GINGERBREAD) {\n    StrictMode.ThreadPolicy newPolicy=new StrictMode.ThreadPolicy.Builder(StrictMode.getThreadPolicy()).permitNetwork().build();\n    StrictMode.setThreadPolicy(newPolicy);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n    if (mirror.android.os.StrictMode.sVmPolicyMask != null) {\n      mirror.android.os.StrictMode.sVmPolicyMask.set(0);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && targetSdkVersion < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.os.Message.updateCheckRecycle.call(targetSdkVersion);\n  }\n  if (StubManifest.ENABLE_IO_REDIRECT) {\n    startIOUniformer();\n  }\n  IOHook.hookNative();\n  Object mainThread=VirtualCore.mainThread();\n  IOHook.startDexOverride();\n  Context context=createPackageContext(data.appInfo.packageName);\n  System.setProperty(\"java.io.tmpdir\",context.getCacheDir().getAbsolutePath());\n  File codeCacheDir;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    codeCacheDir=context.getCodeCacheDir();\n  }\n else {\n    codeCacheDir=context.getCacheDir();\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n    if (HardwareRenderer.setupDiskCache != null) {\n      HardwareRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else {\n    if (ThreadedRenderer.setupDiskCache != null) {\n      ThreadedRenderer.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    if (RenderScriptCacheDir.setupDiskCache != null) {\n      RenderScriptCacheDir.setupDiskCache.call(codeCacheDir);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n    if (RenderScript.setupDiskCache != null) {\n      RenderScript.setupDiskCache.call(codeCacheDir);\n    }\n  }\n  Object boundApp=fixBoundApp(mBoundApplication);\n  mBoundApplication.info=ContextImpl.mPackageInfo.get(context);\n  mirror.android.app.ActivityThread.AppBindData.info.set(boundApp,data.info);\n  VMRuntime.setTargetSdkVersion.call(VMRuntime.getRuntime.call(),data.appInfo.targetSdkVersion);\n  boolean conflict=SpecialComponentList.isConflictingInstrumentation(packageName);\n  if (!conflict) {\n    PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n  }\n  mInitialApplication=LoadedApk.makeApplication.call(data.info,false,null);\n  mirror.android.app.ActivityThread.mInitialApplication.set(mainThread,mInitialApplication);\n  ContextFixer.fixContext(mInitialApplication);\n  List<ProviderInfo> providers=VPackageManager.get().queryContentProviders(data.processName,vuid,PackageManager.GET_META_DATA);\n  if (providers != null) {\n    installContentProviders(mInitialApplication,providers);\n  }\n  if (lock != null) {\n    lock.open();\n    mTempLock=null;\n  }\n  try {\n    mInstrumentation.callApplicationOnCreate(mInitialApplication);\n    PatchManager.getInstance().checkEnv(HCallbackHook.class);\n    if (conflict) {\n      PatchManager.getInstance().checkEnv(AppInstrumentation.class);\n    }\n    Application createdApp=ActivityThread.mInitialApplication.get(mainThread);\n    if (createdApp != null) {\n      mInitialApplication=createdApp;\n    }\n  }\n catch (  Exception e) {\n    if (!mInstrumentation.onException(mInitialApplication,e)) {\n      throw new RuntimeException(\"Unable to create application \" + mInitialApplication.getClass().getName() + \": \"+ e.toString(),e);\n    }\n  }\n  VActivityManager.get().appDoneExecuting();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 670,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 257,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 63
      },
      "nodeContext" : "RenderScript.setupDiskCache.call(codeCacheDir);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "mirror.RefStaticMethod<java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 256,
    "startColumnNumber" : 16,
    "endLineNumber" : 256,
    "endColumnNumber" : 43
  }, {
    "charLength" : 27,
    "startLineNumber" : 257,
    "startColumnNumber" : 16,
    "endLineNumber" : 257,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}