{
  "id" : 49,
  "expression" : "size",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "8bbb062f433f260fc5e41c3851b43e1a8feab7dd",
  "filePath" : "lottie/src/main/java/com/airbnb/lottie/TextLayer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "size",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 146,
      "startColumnNumber" : 50,
      "endLineNumber" : 146,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 146,
        "startColumnNumber" : 34,
        "endLineNumber" : 146,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ArrayList<>(size)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 146,
        "startColumnNumber" : 23,
        "endLineNumber" : 146,
        "endColumnNumber" : 55
      },
      "nodeContext" : "contents=new ArrayList<>(size)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 56
      },
      "nodeContext" : "List<ContentGroup> contents=new ArrayList<>(size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 140,
        "startColumnNumber" : 78,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contentsForCharacter.containsKey(character)) {\n    return contentsForCharacter.get(character);\n  }\n  List<ShapeGroup> shapes=character.getShapes();\n  int size=shapes.size();\n  List<ContentGroup> contents=new ArrayList<>(size);\n  for (int i=0; i < size; i++) {\n    ShapeGroup sg=shapes.get(i);\n    contents.add(new ContentGroup(lottieDrawable,this,sg));\n  }\n  contentsForCharacter.put(character,contents);\n  return contents;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private List<ContentGroup> getContentsForCharacter(FontCharacter character){\n  if (contentsForCharacter.containsKey(character)) {\n    return contentsForCharacter.get(character);\n  }\n  List<ShapeGroup> shapes=character.getShapes();\n  int size=shapes.size();\n  List<ContentGroup> contents=new ArrayList<>(size);\n  for (int i=0; i < size; i++) {\n    ShapeGroup sg=shapes.get(i);\n    contents.add(new ContentGroup(lottieDrawable,this,sg));\n  }\n  contentsForCharacter.put(character,contents);\n  return contents;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 56
      },
      "nodeContext" : "List<ContentGroup> contents=new ArrayList<>(size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "size",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 147,
      "startColumnNumber" : 24,
      "endLineNumber" : 147,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 147,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 147,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  ShapeGroup sg=shapes.get(i);\n  contents.add(new ContentGroup(lottieDrawable,this,sg));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 140,
        "startColumnNumber" : 78,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contentsForCharacter.containsKey(character)) {\n    return contentsForCharacter.get(character);\n  }\n  List<ShapeGroup> shapes=character.getShapes();\n  int size=shapes.size();\n  List<ContentGroup> contents=new ArrayList<>(size);\n  for (int i=0; i < size; i++) {\n    ShapeGroup sg=shapes.get(i);\n    contents.add(new ContentGroup(lottieDrawable,this,sg));\n  }\n  contentsForCharacter.put(character,contents);\n  return contents;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private List<ContentGroup> getContentsForCharacter(FontCharacter character){\n  if (contentsForCharacter.containsKey(character)) {\n    return contentsForCharacter.get(character);\n  }\n  List<ShapeGroup> shapes=character.getShapes();\n  int size=shapes.size();\n  List<ContentGroup> contents=new ArrayList<>(size);\n  for (int i=0; i < size; i++) {\n    ShapeGroup sg=shapes.get(i);\n    contents.add(new ContentGroup(lottieDrawable,this,sg));\n  }\n  contentsForCharacter.put(character,contents);\n  return contents;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 147,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 146,
    "startColumnNumber" : 50,
    "endLineNumber" : 146,
    "endColumnNumber" : 54
  }, {
    "charLength" : 4,
    "startLineNumber" : 147,
    "startColumnNumber" : 24,
    "endLineNumber" : 147,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}