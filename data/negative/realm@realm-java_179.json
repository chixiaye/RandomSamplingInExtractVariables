{
  "id" : 179,
  "expression" : "pm",
  "projectName" : "realm@realm-java",
  "commitID" : "8a874c4492afa96a554c9eb1ce026f6fb1fc5148",
  "filePath" : "realm/realm-library/src/syncIntegrationTest/java/io/realm/PermissionManagerTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pm",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 158,
      "startColumnNumber" : 36,
      "endLineNumber" : 158,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 39
      },
      "nodeContext" : "looperThread.closeAfterTest(pm)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 40
      },
      "nodeContext" : "looperThread.closeAfterTest(pm);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1861,
        "startLineNumber" : 155,
        "startColumnNumber" : 65,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int TEST_SIZE=10;\n  final PermissionManager pm=user.getPermissionManager();\n  looperThread.closeAfterTest(pm);\n  pm.getPermissions(new PermissionManager.PermissionsCallback(){\n    @Override public void onSuccess(    RealmResults<Permission> permissions){\n      assertTrue(permissions.isLoaded());\n      assertInitialPermissions(permissions);\n      for (int i=0; i < TEST_SIZE; i++) {\n        SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n        Realm newRealm=Realm.getInstance(configNew);\n        looperThread.closeAfterTest(newRealm);\n      }\n      looperThread.keepStrongReference(permissions);\n      permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n        @Override public void onChange(        RealmResults<Permission> permissions){\n          RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n          Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n          if (p != null) {\n            assertTrue(p.mayRead());\n            assertTrue(p.mayWrite());\n            assertTrue(p.mayManage());\n            looperThread.testComplete();\n          }\n        }\n      }\n);\n    }\n    @Override public void onError(    ObjectServerError error){\n      fail(error.toString());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @RunTestInLooperThread(emulateMainThread=true) public void getPermissions_updatedWithNewRealms_stressTest(){\n  final int TEST_SIZE=10;\n  final PermissionManager pm=user.getPermissionManager();\n  looperThread.closeAfterTest(pm);\n  pm.getPermissions(new PermissionManager.PermissionsCallback(){\n    @Override public void onSuccess(    RealmResults<Permission> permissions){\n      assertTrue(permissions.isLoaded());\n      assertInitialPermissions(permissions);\n      for (int i=0; i < TEST_SIZE; i++) {\n        SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n        Realm newRealm=Realm.getInstance(configNew);\n        looperThread.closeAfterTest(newRealm);\n      }\n      looperThread.keepStrongReference(permissions);\n      permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n        @Override public void onChange(        RealmResults<Permission> permissions){\n          RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n          Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n          if (p != null) {\n            assertTrue(p.mayRead());\n            assertTrue(p.mayWrite());\n            assertTrue(p.mayManage());\n            looperThread.testComplete();\n          }\n        }\n      }\n);\n    }\n    @Override public void onError(    ObjectServerError error){\n      fail(error.toString());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 40
      },
      "nodeContext" : "looperThread.closeAfterTest(pm);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.realm.PermissionManager"
  }, {
    "nodeContext" : "pm",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 159,
      "startColumnNumber" : 8,
      "endLineNumber" : 159,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1703,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pm.getPermissions(new PermissionManager.PermissionsCallback(){\n  @Override public void onSuccess(  RealmResults<Permission> permissions){\n    assertTrue(permissions.isLoaded());\n    assertInitialPermissions(permissions);\n    for (int i=0; i < TEST_SIZE; i++) {\n      SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n      Realm newRealm=Realm.getInstance(configNew);\n      looperThread.closeAfterTest(newRealm);\n    }\n    looperThread.keepStrongReference(permissions);\n    permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n      @Override public void onChange(      RealmResults<Permission> permissions){\n        RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n        Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n        if (p != null) {\n          assertTrue(p.mayRead());\n          assertTrue(p.mayWrite());\n          assertTrue(p.mayManage());\n          looperThread.testComplete();\n        }\n      }\n    }\n);\n  }\n  @Override public void onError(  ObjectServerError error){\n    fail(error.toString());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 192,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1704,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 11
      },
      "nodeContext" : "pm.getPermissions(new PermissionManager.PermissionsCallback(){\n  @Override public void onSuccess(  RealmResults<Permission> permissions){\n    assertTrue(permissions.isLoaded());\n    assertInitialPermissions(permissions);\n    for (int i=0; i < TEST_SIZE; i++) {\n      SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n      Realm newRealm=Realm.getInstance(configNew);\n      looperThread.closeAfterTest(newRealm);\n    }\n    looperThread.keepStrongReference(permissions);\n    permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n      @Override public void onChange(      RealmResults<Permission> permissions){\n        RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n        Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n        if (p != null) {\n          assertTrue(p.mayRead());\n          assertTrue(p.mayWrite());\n          assertTrue(p.mayManage());\n          looperThread.testComplete();\n        }\n      }\n    }\n);\n  }\n  @Override public void onError(  ObjectServerError error){\n    fail(error.toString());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 193,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1861,
        "startLineNumber" : 155,
        "startColumnNumber" : 65,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int TEST_SIZE=10;\n  final PermissionManager pm=user.getPermissionManager();\n  looperThread.closeAfterTest(pm);\n  pm.getPermissions(new PermissionManager.PermissionsCallback(){\n    @Override public void onSuccess(    RealmResults<Permission> permissions){\n      assertTrue(permissions.isLoaded());\n      assertInitialPermissions(permissions);\n      for (int i=0; i < TEST_SIZE; i++) {\n        SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n        Realm newRealm=Realm.getInstance(configNew);\n        looperThread.closeAfterTest(newRealm);\n      }\n      looperThread.keepStrongReference(permissions);\n      permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n        @Override public void onChange(        RealmResults<Permission> permissions){\n          RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n          Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n          if (p != null) {\n            assertTrue(p.mayRead());\n            assertTrue(p.mayWrite());\n            assertTrue(p.mayManage());\n            looperThread.testComplete();\n          }\n        }\n      }\n);\n    }\n    @Override public void onError(    ObjectServerError error){\n      fail(error.toString());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @RunTestInLooperThread(emulateMainThread=true) public void getPermissions_updatedWithNewRealms_stressTest(){\n  final int TEST_SIZE=10;\n  final PermissionManager pm=user.getPermissionManager();\n  looperThread.closeAfterTest(pm);\n  pm.getPermissions(new PermissionManager.PermissionsCallback(){\n    @Override public void onSuccess(    RealmResults<Permission> permissions){\n      assertTrue(permissions.isLoaded());\n      assertInitialPermissions(permissions);\n      for (int i=0; i < TEST_SIZE; i++) {\n        SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n        Realm newRealm=Realm.getInstance(configNew);\n        looperThread.closeAfterTest(newRealm);\n      }\n      looperThread.keepStrongReference(permissions);\n      permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n        @Override public void onChange(        RealmResults<Permission> permissions){\n          RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n          Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n          if (p != null) {\n            assertTrue(p.mayRead());\n            assertTrue(p.mayWrite());\n            assertTrue(p.mayManage());\n            looperThread.testComplete();\n          }\n        }\n      }\n);\n    }\n    @Override public void onError(    ObjectServerError error){\n      fail(error.toString());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1703,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pm.getPermissions(new PermissionManager.PermissionsCallback(){\n  @Override public void onSuccess(  RealmResults<Permission> permissions){\n    assertTrue(permissions.isLoaded());\n    assertInitialPermissions(permissions);\n    for (int i=0; i < TEST_SIZE; i++) {\n      SyncConfiguration configNew=new SyncConfiguration.Builder(user,\"realm://\" + Constants.HOST + \"/~/test\"+ i).build();\n      Realm newRealm=Realm.getInstance(configNew);\n      looperThread.closeAfterTest(newRealm);\n    }\n    looperThread.keepStrongReference(permissions);\n    permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>(){\n      @Override public void onChange(      RealmResults<Permission> permissions){\n        RealmLog.error(String.format(\"Size: %s, Permissions: %s\",permissions.size(),Arrays.toString(permissions.toArray())));\n        Permission p=permissions.where().endsWith(\"path\",\"test\" + (TEST_SIZE - 1)).findFirst();\n        if (p != null) {\n          assertTrue(p.mayRead());\n          assertTrue(p.mayWrite());\n          assertTrue(p.mayManage());\n          looperThread.testComplete();\n        }\n      }\n    }\n);\n  }\n  @Override public void onError(  ObjectServerError error){\n    fail(error.toString());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 192,
      "astHeight" : 19
    },
    "tokenLength" : 1,
    "type" : "io.realm.PermissionManager"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 158,
    "startColumnNumber" : 36,
    "endLineNumber" : 158,
    "endColumnNumber" : 38
  }, {
    "charLength" : 2,
    "startLineNumber" : 159,
    "startColumnNumber" : 8,
    "endLineNumber" : 159,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}