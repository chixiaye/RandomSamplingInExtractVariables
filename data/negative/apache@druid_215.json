{
  "id" : 215,
  "expression" : "Collectors.toList()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-hadoop/src/test/java/org/apache/druid/indexer/MetadataStorageUpdaterJobTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collectors.toList()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 78,
      "startColumnNumber" : 8,
      "endLineNumber" : 78,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 28
      },
      "nodeContext" : "DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 67
      },
      "nodeContext" : "handler.publishSegments(SEGMENT_TABLE,DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList()),HadoopDruidIndexerConfig.JSON_MAPPER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "handler.publishSegments(SEGMENT_TABLE,DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList()),HadoopDruidIndexerConfig.JSON_MAPPER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1221,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  metadataUpdateSpec=PowerMock.createMock(MetadataStorageUpdaterJobSpec.class);\n  ioConfig=PowerMock.createMock(HadoopIOConfig.class);\n  spec=PowerMock.createMock(HadoopIngestionSpec.class);\n  config=PowerMock.createMock(HadoopDruidIndexerConfig.class);\n  handler=PowerMock.createMock(MetadataStorageUpdaterJobHandler.class);\n  PowerMock.mockStaticNice(IndexGeneratorJob.class);\n  EasyMock.expect(metadataUpdateSpec.getSegmentTable()).andReturn(SEGMENT_TABLE);\n  EasyMock.expect(ioConfig.getMetadataUpdateSpec()).andReturn(metadataUpdateSpec);\n  EasyMock.expect(spec.getIOConfig()).andReturn(ioConfig);\n  EasyMock.expect(config.getSchema()).andReturn(spec);\n  EasyMock.expect(IndexGeneratorJob.getPublishedSegmentAndIndexZipFilePaths(config)).andReturn(DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS);\n  handler.publishSegments(SEGMENT_TABLE,DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList()),HadoopDruidIndexerConfig.JSON_MAPPER);\n  EasyMock.expectLastCall();\n  target=new MetadataStorageUpdaterJob(config,handler);\n  PowerMock.replayAll();\n  target.run();\n  PowerMock.verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_run(){\n  metadataUpdateSpec=PowerMock.createMock(MetadataStorageUpdaterJobSpec.class);\n  ioConfig=PowerMock.createMock(HadoopIOConfig.class);\n  spec=PowerMock.createMock(HadoopIngestionSpec.class);\n  config=PowerMock.createMock(HadoopDruidIndexerConfig.class);\n  handler=PowerMock.createMock(MetadataStorageUpdaterJobHandler.class);\n  PowerMock.mockStaticNice(IndexGeneratorJob.class);\n  EasyMock.expect(metadataUpdateSpec.getSegmentTable()).andReturn(SEGMENT_TABLE);\n  EasyMock.expect(ioConfig.getMetadataUpdateSpec()).andReturn(metadataUpdateSpec);\n  EasyMock.expect(spec.getIOConfig()).andReturn(ioConfig);\n  EasyMock.expect(config.getSchema()).andReturn(spec);\n  EasyMock.expect(IndexGeneratorJob.getPublishedSegmentAndIndexZipFilePaths(config)).andReturn(DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS);\n  handler.publishSegments(SEGMENT_TABLE,DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList()),HadoopDruidIndexerConfig.JSON_MAPPER);\n  EasyMock.expectLastCall();\n  target=new MetadataStorageUpdaterJob(config,handler);\n  PowerMock.replayAll();\n  target.run();\n  PowerMock.verifyAll();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 28
      },
      "nodeContext" : "DATA_SEGMENT_AND_INDEX_ZIP_FILE_PATHS.stream().map(s -> s.getSegment()).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Collector<java.lang.Object,,java.util.List<java.lang.Object>>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 78,
    "startColumnNumber" : 8,
    "endLineNumber" : 78,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}