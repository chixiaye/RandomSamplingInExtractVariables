{
  "id" : 516,
  "expression" : "false",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/jhipster/jhipster-microservice/gateway-app/src/main/java/com/gateway/web/rest/UserJWTController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 68,
      "endLineNumber" : 50,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 50,
        "startColumnNumber" : 33,
        "endLineNumber" : 50,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 50,
        "startColumnNumber" : 20,
        "endLineNumber" : 50,
        "endColumnNumber" : 98
      },
      "nodeContext" : "rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 99
      },
      "nodeContext" : "boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Authentication authentication=this.authenticationManager.authenticate(authenticationToken);\n  SecurityContextHolder.getContext().setAuthentication(authentication);\n  boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n  String jwt=tokenProvider.createToken(authentication,rememberMe);\n  response.addHeader(JWTConfigurer.AUTHORIZATION_HEADER,\"Bearer \" + jwt);\n  return ResponseEntity.ok(new JWTToken(jwt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Authentication authentication=this.authenticationManager.authenticate(authenticationToken);\n  SecurityContextHolder.getContext().setAuthentication(authentication);\n  boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n  String jwt=tokenProvider.createToken(authentication,rememberMe);\n  response.addHeader(JWTConfigurer.AUTHORIZATION_HEADER,\"Bearer \" + jwt);\n  return ResponseEntity.ok(new JWTToken(jwt));\n}\n catch (AuthenticationException ae) {\n  log.trace(\"Authentication exception trace: {}\",ae);\n  return new ResponseEntity<>(Collections.singletonMap(\"AuthenticationException\",ae.getLocalizedMessage()),HttpStatus.UNAUTHORIZED);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 42,
        "startColumnNumber" : 103,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UsernamePasswordAuthenticationToken authenticationToken=new UsernamePasswordAuthenticationToken(loginVM.getUsername(),loginVM.getPassword());\n  try {\n    Authentication authentication=this.authenticationManager.authenticate(authenticationToken);\n    SecurityContextHolder.getContext().setAuthentication(authentication);\n    boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n    String jwt=tokenProvider.createToken(authentication,rememberMe);\n    response.addHeader(JWTConfigurer.AUTHORIZATION_HEADER,\"Bearer \" + jwt);\n    return ResponseEntity.ok(new JWTToken(jwt));\n  }\n catch (  AuthenticationException ae) {\n    log.trace(\"Authentication exception trace: {}\",ae);\n    return new ResponseEntity<>(Collections.singletonMap(\"AuthenticationException\",ae.getLocalizedMessage()),HttpStatus.UNAUTHORIZED);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@PostMapping(\"/authenticate\") @Timed public ResponseEntity authorize(@Valid @RequestBody LoginVM loginVM,HttpServletResponse response){\n  UsernamePasswordAuthenticationToken authenticationToken=new UsernamePasswordAuthenticationToken(loginVM.getUsername(),loginVM.getPassword());\n  try {\n    Authentication authentication=this.authenticationManager.authenticate(authenticationToken);\n    SecurityContextHolder.getContext().setAuthentication(authentication);\n    boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n    String jwt=tokenProvider.createToken(authentication,rememberMe);\n    response.addHeader(JWTConfigurer.AUTHORIZATION_HEADER,\"Bearer \" + jwt);\n    return ResponseEntity.ok(new JWTToken(jwt));\n  }\n catch (  AuthenticationException ae) {\n    log.trace(\"Authentication exception trace: {}\",ae);\n    return new ResponseEntity<>(Collections.singletonMap(\"AuthenticationException\",ae.getLocalizedMessage()),HttpStatus.UNAUTHORIZED);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 99
      },
      "nodeContext" : "boolean rememberMe=(loginVM.isRememberMe() == null) ? false : loginVM.isRememberMe();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 68,
    "endLineNumber" : 50,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}