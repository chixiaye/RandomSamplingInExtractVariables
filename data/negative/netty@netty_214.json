{
  "id" : 214,
  "expression" : "11L",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/test/java/io/netty/handler/timeout/IdleStateHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "11L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 236,
      "startColumnNumber" : 25,
      "endLineNumber" : 236,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4855,
        "startLineNumber" : 212,
        "startColumnNumber" : 12,
        "endLineNumber" : 301,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{1}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{2}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{3}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[5 * 1024]));\n  idleStateHandler.tickRun();\n  assertEquals(1,events.size());\n  assertSame(expected,events.get(0));\n  events.clear();\n  assertEquals(5L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(4L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(3L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(4L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(18L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tickRun(5L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(23L,idleStateHandler.tick(TimeUnit.SECONDS));\n  events.clear();\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(26L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(31L,idleStateHandler.tick(TimeUnit.SECONDS));\n  events.clear();\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(36L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(3L,TimeUnit.SECONDS);\n  assertNull(channel.consume());\n  idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(43L,idleStateHandler.tick(TimeUnit.SECONDS));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 401,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4924,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{1}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{2}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{3}));\n  channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[5 * 1024]));\n  idleStateHandler.tickRun();\n  assertEquals(1,events.size());\n  assertSame(expected,events.get(0));\n  events.clear();\n  assertEquals(5L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(4L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(3L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(4L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(18L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tickRun(5L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(23L,idleStateHandler.tick(TimeUnit.SECONDS));\n  events.clear();\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consume());\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(26L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(31L,idleStateHandler.tick(TimeUnit.SECONDS));\n  events.clear();\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n  assertEquals(0,events.size());\n  assertEquals(36L,idleStateHandler.tick(TimeUnit.SECONDS));\n  idleStateHandler.tick(2L,TimeUnit.SECONDS);\n  assertNotNullAndRelease(channel.consumePart(1024));\n  idleStateHandler.tick(3L,TimeUnit.SECONDS);\n  assertNull(channel.consume());\n  idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n  assertEquals(1,events.size());\n  assertEquals(43L,idleStateHandler.tick(TimeUnit.SECONDS));\n}\n  finally {\n  channel.finishAndReleaseAll();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 407,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5851,
        "startLineNumber" : 186,
        "startColumnNumber" : 75,
        "endLineNumber" : 304,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long writerIdleTime=0L;\n  long allIdleTime=0L;\n  IdleStateEvent expected;\n  if (writer) {\n    writerIdleTime=5L;\n    expected=IdleStateEvent.FIRST_WRITER_IDLE_STATE_EVENT;\n  }\n else {\n    allIdleTime=5L;\n    expected=IdleStateEvent.FIRST_ALL_IDLE_STATE_EVENT;\n  }\n  TestableIdleStateHandler idleStateHandler=new TestableIdleStateHandler(true,0L,writerIdleTime,allIdleTime,TimeUnit.SECONDS);\n  final List<Object> events=new ArrayList<>();\n  ChannelHandler handler=new ChannelHandler(){\n    @Override public void userEventTriggered(    ChannelHandlerContext ctx,    Object evt) throws Exception {\n      events.add(evt);\n    }\n  }\n;\n  ObservableChannel channel=new ObservableChannel(idleStateHandler,handler);\n  try {\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{1}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{2}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{3}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[5 * 1024]));\n    idleStateHandler.tickRun();\n    assertEquals(1,events.size());\n    assertSame(expected,events.get(0));\n    events.clear();\n    assertEquals(5L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(4L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(3L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(4L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(18L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tickRun(5L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(23L,idleStateHandler.tick(TimeUnit.SECONDS));\n    events.clear();\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(26L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(31L,idleStateHandler.tick(TimeUnit.SECONDS));\n    events.clear();\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(36L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(3L,TimeUnit.SECONDS);\n    assertNull(channel.consume());\n    idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(43L,idleStateHandler.tick(TimeUnit.SECONDS));\n  }\n  finally {\n    channel.finishAndReleaseAll();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 516,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5922,
        "startLineNumber" : 186,
        "startColumnNumber" : 4,
        "endLineNumber" : 304,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void observeOutputIdle(boolean writer) throws Exception {\n  long writerIdleTime=0L;\n  long allIdleTime=0L;\n  IdleStateEvent expected;\n  if (writer) {\n    writerIdleTime=5L;\n    expected=IdleStateEvent.FIRST_WRITER_IDLE_STATE_EVENT;\n  }\n else {\n    allIdleTime=5L;\n    expected=IdleStateEvent.FIRST_ALL_IDLE_STATE_EVENT;\n  }\n  TestableIdleStateHandler idleStateHandler=new TestableIdleStateHandler(true,0L,writerIdleTime,allIdleTime,TimeUnit.SECONDS);\n  final List<Object> events=new ArrayList<>();\n  ChannelHandler handler=new ChannelHandler(){\n    @Override public void userEventTriggered(    ChannelHandlerContext ctx,    Object evt) throws Exception {\n      events.add(evt);\n    }\n  }\n;\n  ObservableChannel channel=new ObservableChannel(idleStateHandler,handler);\n  try {\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{1}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{2}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[]{3}));\n    channel.writeAndFlush(Unpooled.wrappedBuffer(new byte[5 * 1024]));\n    idleStateHandler.tickRun();\n    assertEquals(1,events.size());\n    assertSame(expected,events.get(0));\n    events.clear();\n    assertEquals(5L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(4L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(3L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(4L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(18L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tickRun(5L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(23L,idleStateHandler.tick(TimeUnit.SECONDS));\n    events.clear();\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consume());\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(26L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(31L,idleStateHandler.tick(TimeUnit.SECONDS));\n    events.clear();\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tickRun(1L,TimeUnit.SECONDS);\n    assertEquals(0,events.size());\n    assertEquals(36L,idleStateHandler.tick(TimeUnit.SECONDS));\n    idleStateHandler.tick(2L,TimeUnit.SECONDS);\n    assertNotNullAndRelease(channel.consumePart(1024));\n    idleStateHandler.tick(3L,TimeUnit.SECONDS);\n    assertNull(channel.consume());\n    idleStateHandler.tickRun(2L,TimeUnit.SECONDS);\n    assertEquals(1,events.size());\n    assertEquals(43L,idleStateHandler.tick(TimeUnit.SECONDS));\n  }\n  finally {\n    channel.finishAndReleaseAll();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 526,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(11L,idleStateHandler.tick(TimeUnit.SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 236,
    "startColumnNumber" : 25,
    "endLineNumber" : 236,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}