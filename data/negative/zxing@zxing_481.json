{
  "id" : 481,
  "expression" : "byteSegments",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/aztec/AztecReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "byteSegments",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 78,
      "startColumnNumber" : 8,
      "endLineNumber" : 78,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 28
      },
      "nodeContext" : "byteSegments != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (byteSegments != null) {\n  result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 59,
        "startColumnNumber" : 48,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Result decode(BinaryBitmap image,Map<DecodeHintType,?> hints) throws NotFoundException, FormatException {\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 28
      },
      "nodeContext" : "byteSegments != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<byte[]>"
  }, {
    "nodeContext" : "byteSegments",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 79,
      "startColumnNumber" : 59,
      "endLineNumber" : 79,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 79,
        "endColumnNumber" : 72
      },
      "nodeContext" : "result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 79,
        "endColumnNumber" : 73
      },
      "nodeContext" : "result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 78,
        "startColumnNumber" : 30,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (byteSegments != null) {\n  result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 59,
        "startColumnNumber" : 48,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Result decode(BinaryBitmap image,Map<DecodeHintType,?> hints) throws NotFoundException, FormatException {\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 79,
        "endColumnNumber" : 73
      },
      "nodeContext" : "result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 78,
    "startColumnNumber" : 8,
    "endLineNumber" : 78,
    "endColumnNumber" : 20
  }, {
    "charLength" : 12,
    "startLineNumber" : 79,
    "startColumnNumber" : 59,
    "endLineNumber" : 79,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}