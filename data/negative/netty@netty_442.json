{
  "id" : 442,
  "expression" : "keyCertChain == null || keyCertChain.length == 0",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/ssl/SslContextBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keyCertChain == null || keyCertChain.length == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 435,
      "startColumnNumber" : 12,
      "endLineNumber" : 435,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 435,
        "startColumnNumber" : 8,
        "endLineNumber" : 442,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (keyCertChain == null || keyCertChain.length == 0) {\n  this.keyCertChain=null;\n}\n else {\n  for (  X509Certificate cert : keyCertChain) {\n    checkNotNullWithIAE(cert,\"cert\");\n  }\n  this.keyCertChain=keyCertChain.clone();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 430,
        "startColumnNumber" : 109,
        "endLineNumber" : 447,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (forServer) {\n    checkNonEmpty(keyCertChain,\"keyCertChain\");\n    requireNonNull(key,\"key required for servers\");\n  }\n  if (keyCertChain == null || keyCertChain.length == 0) {\n    this.keyCertChain=null;\n  }\n else {\n    for (    X509Certificate cert : keyCertChain) {\n      checkNotNullWithIAE(cert,\"cert\");\n    }\n    this.keyCertChain=keyCertChain.clone();\n  }\n  this.key=key;\n  this.keyPassword=keyPassword;\n  keyManagerFactory=null;\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 421,
        "startColumnNumber" : 4,
        "endLineNumber" : 447,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Identifying certificate for this host.  {@code keyCertChain} and {@code key} maybe  {@code null} for client contexts, which disables mutual authentication.\n * @param key a PKCS#8 private key file\n * @param keyPassword the password of the {@code key}, or  {@code null} if it's notpassword-protected\n * @param keyCertChain an X.509 certificate chain\n */\npublic SslContextBuilder keyManager(PrivateKey key,String keyPassword,X509Certificate... keyCertChain){\n  if (forServer) {\n    checkNonEmpty(keyCertChain,\"keyCertChain\");\n    requireNonNull(key,\"key required for servers\");\n  }\n  if (keyCertChain == null || keyCertChain.length == 0) {\n    this.keyCertChain=null;\n  }\n else {\n    for (    X509Certificate cert : keyCertChain) {\n      checkNotNullWithIAE(cert,\"cert\");\n    }\n    this.keyCertChain=keyCertChain.clone();\n  }\n  this.key=key;\n  this.keyPassword=keyPassword;\n  keyManagerFactory=null;\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 435,
        "startColumnNumber" : 8,
        "endLineNumber" : 442,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (keyCertChain == null || keyCertChain.length == 0) {\n  this.keyCertChain=null;\n}\n else {\n  for (  X509Certificate cert : keyCertChain) {\n    checkNotNullWithIAE(cert,\"cert\");\n  }\n  this.keyCertChain=keyCertChain.clone();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 435,
    "startColumnNumber" : 12,
    "endLineNumber" : 435,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}