{
  "id" : 422,
  "expression" : "true",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 310,
      "startColumnNumber" : 11,
      "endLineNumber" : 310,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 310,
        "startColumnNumber" : 4,
        "endLineNumber" : 319,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  String line=reader.readLine();\n  if (line == null)   break;\n  if (line.startsWith(\"    \"))   continue;\n  String[] split=line.replace(\":\",\"\").split(\" -> \");\n  String original=split[0];\n  if (original.indexOf('.') != -1)   original=original.substring(original.lastIndexOf('.') + 1);\n  originalToObfuscated.put(original,split[1]);\n  obfuscatedToOriginal.put(split[1],original);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 308,
        "startColumnNumber" : 7,
        "endLineNumber" : 321,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n  while (true) {\n    String line=reader.readLine();\n    if (line == null)     break;\n    if (line.startsWith(\"    \"))     continue;\n    String[] split=line.replace(\":\",\"\").split(\" -> \");\n    String original=split[0];\n    if (original.indexOf('.') != -1)     original=original.substring(original.lastIndexOf('.') + 1);\n    originalToObfuscated.put(original,split[1]);\n    obfuscatedToOriginal.put(split[1],original);\n  }\n  reader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 308,
        "startColumnNumber" : 3,
        "endLineNumber" : 326,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n  while (true) {\n    String line=reader.readLine();\n    if (line == null)     break;\n    if (line.startsWith(\"    \"))     continue;\n    String[] split=line.replace(\":\",\"\").split(\" -> \");\n    String original=split[0];\n    if (original.indexOf('.') != -1)     original=original.substring(original.lastIndexOf('.') + 1);\n    originalToObfuscated.put(original,split[1]);\n    obfuscatedToOriginal.put(split[1],original);\n  }\n  reader.close();\n}\n catch (Exception ex) {\n  System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n  ex.printStackTrace();\n}\n finally {\n  StreamUtils.closeQuietly(reader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 306,
        "startColumnNumber" : 28,
        "endLineNumber" : 327,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BufferedReader reader=null;\n  try {\n    reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n    while (true) {\n      String line=reader.readLine();\n      if (line == null)       break;\n      if (line.startsWith(\"    \"))       continue;\n      String[] split=line.replace(\":\",\"\").split(\" -> \");\n      String original=split[0];\n      if (original.indexOf('.') != -1)       original=original.substring(original.lastIndexOf('.') + 1);\n      originalToObfuscated.put(original,split[1]);\n      obfuscatedToOriginal.put(split[1],original);\n    }\n    reader.close();\n  }\n catch (  Exception ex) {\n    System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n    ex.printStackTrace();\n  }\n finally {\n    StreamUtils.closeQuietly(reader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 306,
        "startColumnNumber" : 2,
        "endLineNumber" : 327,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (mappingInput != null) {\n  BufferedReader reader=null;\n  try {\n    reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n    while (true) {\n      String line=reader.readLine();\n      if (line == null)       break;\n      if (line.startsWith(\"    \"))       continue;\n      String[] split=line.replace(\":\",\"\").split(\" -> \");\n      String original=split[0];\n      if (original.indexOf('.') != -1)       original=original.substring(original.lastIndexOf('.') + 1);\n      originalToObfuscated.put(original,split[1]);\n      obfuscatedToOriginal.put(split[1],original);\n    }\n    reader.close();\n  }\n catch (  Exception ex) {\n    System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n    ex.printStackTrace();\n  }\n finally {\n    StreamUtils.closeQuietly(reader);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 304,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  InputStream mappingInput=GdxTests.class.getResourceAsStream(\"/mapping.txt\");\n  if (mappingInput != null) {\n    BufferedReader reader=null;\n    try {\n      reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n      while (true) {\n        String line=reader.readLine();\n        if (line == null)         break;\n        if (line.startsWith(\"    \"))         continue;\n        String[] split=line.replace(\":\",\"\").split(\" -> \");\n        String original=split[0];\n        if (original.indexOf('.') != -1)         original=original.substring(original.lastIndexOf('.') + 1);\n        originalToObfuscated.put(original,split[1]);\n        obfuscatedToOriginal.put(split[1],original);\n      }\n      reader.close();\n    }\n catch (    Exception ex) {\n      System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n      ex.printStackTrace();\n    }\n finally {\n      StreamUtils.closeQuietly(reader);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 304,
        "startColumnNumber" : 1,
        "endLineNumber" : 328,
        "endColumnNumber" : 2
      },
      "nodeContext" : "static {\n  InputStream mappingInput=GdxTests.class.getResourceAsStream(\"/mapping.txt\");\n  if (mappingInput != null) {\n    BufferedReader reader=null;\n    try {\n      reader=new BufferedReader(new InputStreamReader(mappingInput),512);\n      while (true) {\n        String line=reader.readLine();\n        if (line == null)         break;\n        if (line.startsWith(\"    \"))         continue;\n        String[] split=line.replace(\":\",\"\").split(\" -> \");\n        String original=split[0];\n        if (original.indexOf('.') != -1)         original=original.substring(original.lastIndexOf('.') + 1);\n        originalToObfuscated.put(original,split[1]);\n        obfuscatedToOriginal.put(split[1],original);\n      }\n      reader.close();\n    }\n catch (    Exception ex) {\n      System.out.println(\"GdxTests: Error reading mapping file: mapping.txt\");\n      ex.printStackTrace();\n    }\n finally {\n      StreamUtils.closeQuietly(reader);\n    }\n  }\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 146,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 310,
        "startColumnNumber" : 4,
        "endLineNumber" : 319,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  String line=reader.readLine();\n  if (line == null)   break;\n  if (line.startsWith(\"    \"))   continue;\n  String[] split=line.replace(\":\",\"\").split(\" -> \");\n  String original=split[0];\n  if (original.indexOf('.') != -1)   original=original.substring(original.lastIndexOf('.') + 1);\n  originalToObfuscated.put(original,split[1]);\n  obfuscatedToOriginal.put(split[1],original);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 310,
    "startColumnNumber" : 11,
    "endLineNumber" : 310,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}