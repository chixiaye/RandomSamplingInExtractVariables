{
  "id" : 62,
  "expression" : "len_a",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Dynamic Programming/LevenshteinDistance.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "len_a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 22,
      "startColumnNumber" : 34,
      "endLineNumber" : 22,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 22,
        "startColumnNumber" : 26,
        "endLineNumber" : 22,
        "endColumnNumber" : 47
      },
      "nodeContext" : "new int[len_a][len_b]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 22,
        "startColumnNumber" : 11,
        "endLineNumber" : 22,
        "endColumnNumber" : 47
      },
      "nodeContext" : "distance_mat=new int[len_a][len_b]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 22,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int[][] distance_mat=new int[len_a][len_b];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 19,
        "startColumnNumber" : 58,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 19,
        "startColumnNumber" : 1,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static int calculate_distance(String a,String b){\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 22,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int[][] distance_mat=new int[len_a][len_b];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "len_a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 23,
      "startColumnNumber" : 21,
      "endLineNumber" : 23,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 23,
        "startColumnNumber" : 17,
        "endLineNumber" : 23,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < len_a",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < len_a; i++) {\n  distance_mat[i][0]=i;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 19,
        "startColumnNumber" : 58,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 19,
        "startColumnNumber" : 1,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static int calculate_distance(String a,String b){\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 23,
        "startColumnNumber" : 17,
        "endLineNumber" : 23,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < len_a",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "len_a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 29,
      "startColumnNumber" : 21,
      "endLineNumber" : 29,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 29,
        "startColumnNumber" : 17,
        "endLineNumber" : 29,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < len_a",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < len_a; i++) {\n  for (int j=0; i < len_b; j++) {\n    int cost;\n    if (a.charAt(i) == b.charAt(j)) {\n      cost=0;\n    }\n else {\n      cost=1;\n    }\n    distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 82,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 19,
        "startColumnNumber" : 58,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 19,
        "startColumnNumber" : 1,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static int calculate_distance(String a,String b){\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 29,
        "startColumnNumber" : 17,
        "endLineNumber" : 29,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < len_a",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "len_a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 43,
      "startColumnNumber" : 22,
      "endLineNumber" : 43,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 43,
        "startColumnNumber" : 22,
        "endLineNumber" : 43,
        "endColumnNumber" : 29
      },
      "nodeContext" : "len_a - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 43,
        "startColumnNumber" : 9,
        "endLineNumber" : 43,
        "endColumnNumber" : 30
      },
      "nodeContext" : "distance_mat[len_a - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 43,
        "startColumnNumber" : 9,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "distance_mat[len_a - 1][len_b - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return distance_mat[len_a - 1][len_b - 1];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 19,
        "startColumnNumber" : 58,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 19,
        "startColumnNumber" : 1,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static int calculate_distance(String a,String b){\n  int len_a=a.length() + 1;\n  int len_b=b.length() + 1;\n  int[][] distance_mat=new int[len_a][len_b];\n  for (int i=0; i < len_a; i++) {\n    distance_mat[i][0]=i;\n  }\n  for (int j=0; j < len_b; j++) {\n    distance_mat[0][j]=j;\n  }\n  for (int i=0; i < len_a; i++) {\n    for (int j=0; i < len_b; j++) {\n      int cost;\n      if (a.charAt(i) == b.charAt(j)) {\n        cost=0;\n      }\n else {\n        cost=1;\n      }\n      distance_mat[i][j]=minimum(distance_mat[i - 1][j],distance_mat[i - 1][j - 1],distance_mat[i][j - 1]) + cost;\n    }\n  }\n  return distance_mat[len_a - 1][len_b - 1];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return distance_mat[len_a - 1][len_b - 1];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 22,
    "startColumnNumber" : 34,
    "endLineNumber" : 22,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 23,
    "startColumnNumber" : 21,
    "endLineNumber" : 23,
    "endColumnNumber" : 26
  }, {
    "charLength" : 5,
    "startLineNumber" : 29,
    "startColumnNumber" : 21,
    "endLineNumber" : 29,
    "endColumnNumber" : 26
  }, {
    "charLength" : 5,
    "startLineNumber" : 43,
    "startColumnNumber" : 22,
    "endLineNumber" : 43,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}