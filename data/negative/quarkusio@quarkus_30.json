{
  "id" : 30,
  "expression" : "content",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/tools/devtools-testing/src/main/java/io/quarkus/devtools/testing/SnapshotTesting.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "content",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 266,
      "startColumnNumber" : 57,
      "endLineNumber" : 266,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 264,
        "startColumnNumber" : 19,
        "endLineNumber" : 266,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(tree).as(\"Snapshot is not matching (use -Dsnap to udpate it automatically):\" + snapshotName).containsExactlyInAnyOrderElementsOf(content)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 264,
        "startColumnNumber" : 12,
        "endLineNumber" : 266,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return assertThat(tree).as(\"Snapshot is not matching (use -Dsnap to udpate it automatically):\" + snapshotName).containsExactlyInAnyOrderElementsOf(content);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 241,
        "startColumnNumber" : 62,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (updateSnapshot) {\n      final Path srcSnapshotFile=SNAPSHOTS_DIR.resolve(snapshotName);\n      if (Files.isRegularFile(srcSnapshotFile)) {\n        deleteExistingSnapshots(snapshotName,srcSnapshotFile);\n      }\n      Files.createDirectories(srcSnapshotFile.getParent());\n      Files.write(srcSnapshotFile,String.join(\"\\n\",tree).getBytes(StandardCharsets.UTF_8));\n      snapshotFile=srcSnapshotFile;\n    }\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n  assertThat(snapshotFile).as(\"corresponding snapshot file not found for \" + snapshotName + \" (Use -Dsnap to create it automatically)\").isRegularFile();\n  final List<String> content=Arrays.stream(getTextContent(snapshotFile).split(\"\\\\v\")).filter(s -> !s.isEmpty()).collect(toList());\n  return assertThat(tree).as(\"Snapshot is not matching (use -Dsnap to udpate it automatically):\" + snapshotName).containsExactlyInAnyOrderElementsOf(content);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 241,
        "startColumnNumber" : 46,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "snapshotFile -> {\n  try {\n    if (updateSnapshot) {\n      final Path srcSnapshotFile=SNAPSHOTS_DIR.resolve(snapshotName);\n      if (Files.isRegularFile(srcSnapshotFile)) {\n        deleteExistingSnapshots(snapshotName,srcSnapshotFile);\n      }\n      Files.createDirectories(srcSnapshotFile.getParent());\n      Files.write(srcSnapshotFile,String.join(\"\\n\",tree).getBytes(StandardCharsets.UTF_8));\n      snapshotFile=srcSnapshotFile;\n    }\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n  assertThat(snapshotFile).as(\"corresponding snapshot file not found for \" + snapshotName + \" (Use -Dsnap to create it automatically)\").isRegularFile();\n  final List<String> content=Arrays.stream(getTextContent(snapshotFile).split(\"\\\\v\")).filter(s -> !s.isEmpty()).collect(toList());\n  return assertThat(tree).as(\"Snapshot is not matching (use -Dsnap to udpate it automatically):\" + snapshotName).containsExactlyInAnyOrderElementsOf(content);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 264,
        "startColumnNumber" : 19,
        "endLineNumber" : 266,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(tree).as(\"Snapshot is not matching (use -Dsnap to udpate it automatically):\" + snapshotName).containsExactlyInAnyOrderElementsOf(content)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 266,
    "startColumnNumber" : 57,
    "endLineNumber" : 266,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}