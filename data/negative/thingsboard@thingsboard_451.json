{
  "id" : 451,
  "expression" : "new BigDecimal(valueAsString)",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/common/transport/transport-api/src/main/java/org/thingsboard/server/common/transport/adaptor/JsonConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new BigDecimal(valueAsString)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 231,
      "startColumnNumber" : 17,
      "endLineNumber" : 231,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 46
      },
      "nodeContext" : "bd=new BigDecimal(valueAsString)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 47
      },
      "nodeContext" : "var bd=new BigDecimal(valueAsString);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 228,
        "startColumnNumber" : 92,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String valueAsString=value.getAsString();\n  KeyValueProto.Builder builder=KeyValueProto.newBuilder().setKey(key);\n  var bd=new BigDecimal(valueAsString);\n  if (bd.stripTrailingZeros().scale() <= 0 && !isSimpleDouble(valueAsString)) {\n    try {\n      return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n    }\n catch (    ArithmeticException e) {\n      if (isTypeCastEnabled) {\n        return builder.setType(KeyValueType.STRING_V).setStringV(bd.toPlainString()).build();\n      }\n else {\n        throw new JsonSyntaxException(\"Big integer values are not supported!\");\n      }\n    }\n  }\n else {\n    if (bd.scale() <= 16) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n else     if (isTypeCastEnabled) {\n      return builder.setType(KeyValueType.STRING_V).setStringV(bd.toPlainString()).build();\n    }\n else {\n      throw new JsonSyntaxException(\"Big integer values are not supported!\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static KeyValueProto buildNumericKeyValueProto(JsonPrimitive value,String key){\n  String valueAsString=value.getAsString();\n  KeyValueProto.Builder builder=KeyValueProto.newBuilder().setKey(key);\n  var bd=new BigDecimal(valueAsString);\n  if (bd.stripTrailingZeros().scale() <= 0 && !isSimpleDouble(valueAsString)) {\n    try {\n      return builder.setType(KeyValueType.LONG_V).setLongV(bd.longValueExact()).build();\n    }\n catch (    ArithmeticException e) {\n      if (isTypeCastEnabled) {\n        return builder.setType(KeyValueType.STRING_V).setStringV(bd.toPlainString()).build();\n      }\n else {\n        throw new JsonSyntaxException(\"Big integer values are not supported!\");\n      }\n    }\n  }\n else {\n    if (bd.scale() <= 16) {\n      return builder.setType(KeyValueType.DOUBLE_V).setDoubleV(bd.doubleValue()).build();\n    }\n else     if (isTypeCastEnabled) {\n      return builder.setType(KeyValueType.STRING_V).setStringV(bd.toPlainString()).build();\n    }\n else {\n      throw new JsonSyntaxException(\"Big integer values are not supported!\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 47
      },
      "nodeContext" : "var bd=new BigDecimal(valueAsString);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 231,
    "startColumnNumber" : 17,
    "endLineNumber" : 231,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}