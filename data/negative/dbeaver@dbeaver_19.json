{
  "id" : 19,
  "expression" : "keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH))",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.lang/src/org/jkiss/dbeaver/lang/parser/KeywordRule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 37,
      "startColumnNumber" : 33,
      "endLineNumber" : 37,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 37,
        "startColumnNumber" : 23,
        "endLineNumber" : 37,
        "endColumnNumber" : 94
      },
      "nodeContext" : "keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 28,
        "startColumnNumber" : 65,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  buffer.setLength(0);\n  do {\n    buffer.append((char)c);\n    c=scanner.read();\n  }\n while (c != ICharacterScanner.EOF && isWordPart((char)c));\n  scanner.unread();\n  SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n  if (keyword != null) {\n    return new SCMKeywordToken(keyword);\n  }\n  for (int i=buffer.length() - 1; i > 0; i--) {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (c != ICharacterScanner.EOF && isWordStart((char)c)) {\n  buffer.setLength(0);\n  do {\n    buffer.append((char)c);\n    c=scanner.read();\n  }\n while (c != ICharacterScanner.EOF && isWordPart((char)c));\n  scanner.unread();\n  SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n  if (keyword != null) {\n    return new SCMKeywordToken(keyword);\n  }\n  for (int i=buffer.length() - 1; i > 0; i--) {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 26,
        "startColumnNumber" : 54,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int c=scanner.read();\n  if (c != ICharacterScanner.EOF && isWordStart((char)c)) {\n    buffer.setLength(0);\n    do {\n      buffer.append((char)c);\n      c=scanner.read();\n    }\n while (c != ICharacterScanner.EOF && isWordPart((char)c));\n    scanner.unread();\n    SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n    if (keyword != null) {\n      return new SCMKeywordToken(keyword);\n    }\n    for (int i=buffer.length() - 1; i > 0; i--) {\n      scanner.unread();\n    }\n  }\n  scanner.unread();\n  return Token.UNDEFINED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public IToken evaluate(ICharacterScanner scanner){\n  int c=scanner.read();\n  if (c != ICharacterScanner.EOF && isWordStart((char)c)) {\n    buffer.setLength(0);\n    do {\n      buffer.append((char)c);\n      c=scanner.read();\n    }\n while (c != ICharacterScanner.EOF && isWordPart((char)c));\n    scanner.unread();\n    SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n    if (keyword != null) {\n      return new SCMKeywordToken(keyword);\n    }\n    for (int i=buffer.length() - 1; i > 0; i--) {\n      scanner.unread();\n    }\n  }\n  scanner.unread();\n  return Token.UNDEFINED;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SCMKeyword keyword=keywordMap.get(buffer.toString().toUpperCase(Locale.ENGLISH));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "org.jkiss.dbeaver.lang.SCMKeyword"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 37,
    "startColumnNumber" : 33,
    "endLineNumber" : 37,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}