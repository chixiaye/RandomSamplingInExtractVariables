{
  "id" : 435,
  "expression" : "new File(destFolder,tmpFolderName)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/tools/ZipDeflater.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(destFolder,tmpFolderName)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 32,
      "startColumnNumber" : 21,
      "endLineNumber" : 32,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 32,
        "startColumnNumber" : 9,
        "endLineNumber" : 32,
        "endColumnNumber" : 56
      },
      "nodeContext" : "tmpFolder=new File(destFolder,tmpFolderName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 57
      },
      "nodeContext" : "File tmpFolder=new File(destFolder,tmpFolderName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1356,
        "startLineNumber" : 29,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void deflate() throws IOException {\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 57
      },
      "nodeContext" : "File tmpFolder=new File(destFolder,tmpFolderName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 32,
    "startColumnNumber" : 21,
    "endLineNumber" : 32,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}