{
  "id" : 73,
  "expression" : "ByteBufAllocatorBuilder",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/main/java/org/apache/pulsar/common/allocator/PulsarByteBufAllocator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ByteBufAllocatorBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 64,
      "startColumnNumber" : 42,
      "endLineNumber" : 64,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ByteBufAllocatorBuilder.create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 65,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 81,
        "endColumnNumber" : 18
      },
      "nodeContext" : "ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT).outOfMemoryListener(oomException -> {\n  LISTENERS.forEach(c -> {\n    try {\n      c.accept(oomException);\n    }\n catch (    Throwable t) {\n      log.warn(\"Exception during OOM listener: {}\",t.getMessage(),t);\n    }\n  }\n);\n  if (EXIT_ON_OOM) {\n    log.info(\"Exiting JVM process for OOM error: {}\",oomException.getMessage(),oomException);\n    Runtime.getRuntime().halt(1);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 64,
        "startColumnNumber" : 32,
        "endLineNumber" : 81,
        "endColumnNumber" : 18
      },
      "nodeContext" : "builder=ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT).outOfMemoryListener(oomException -> {\n  LISTENERS.forEach(c -> {\n    try {\n      c.accept(oomException);\n    }\n catch (    Throwable t) {\n      log.warn(\"Exception during OOM listener: {}\",t.getMessage(),t);\n    }\n  }\n);\n  if (EXIT_ON_OOM) {\n    log.info(\"Exiting JVM process for OOM error: {}\",oomException.getMessage(),oomException);\n    Runtime.getRuntime().halt(1);\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 68,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 19
      },
      "nodeContext" : "ByteBufAllocatorBuilder builder=ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT).outOfMemoryListener(oomException -> {\n  LISTENERS.forEach(c -> {\n    try {\n      c.accept(oomException);\n    }\n catch (    Throwable t) {\n      log.warn(\"Exception during OOM listener: {}\",t.getMessage(),t);\n    }\n  }\n);\n  if (EXIT_ON_OOM) {\n    log.info(\"Exiting JVM process for OOM error: {}\",oomException.getMessage(),oomException);\n    Runtime.getRuntime().halt(1);\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 71,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isPooled=\"true\".equalsIgnoreCase(System.getProperty(PULSAR_ALLOCATOR_POOLED,\"true\"));\n  EXIT_ON_OOM=\"true\".equalsIgnoreCase(System.getProperty(PULSAR_ALLOCATOR_EXIT_ON_OOM,\"false\"));\n  LeakDetectionPolicy leakDetectionPolicy=LeakDetectionPolicy.valueOf(System.getProperty(PULSAR_ALLOCATOR_LEAK_DETECTION,\"Disabled\"));\n  if (log.isDebugEnabled()) {\n    log.debug(\"Is Pooled: {} -- Exit on OOM: {}\",isPooled,EXIT_ON_OOM);\n  }\n  ByteBufAllocatorBuilder builder=ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT).outOfMemoryListener(oomException -> {\n    LISTENERS.forEach(c -> {\n      try {\n        c.accept(oomException);\n      }\n catch (      Throwable t) {\n        log.warn(\"Exception during OOM listener: {}\",t.getMessage(),t);\n      }\n    }\n);\n    if (EXIT_ON_OOM) {\n      log.info(\"Exiting JVM process for OOM error: {}\",oomException.getMessage(),oomException);\n      Runtime.getRuntime().halt(1);\n    }\n  }\n);\n  if (isPooled) {\n    builder.poolingPolicy(PoolingPolicy.PooledDirect);\n  }\n else {\n    builder.poolingPolicy(PoolingPolicy.UnpooledHeap);\n  }\n  DEFAULT=builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  boolean isPooled=\"true\".equalsIgnoreCase(System.getProperty(PULSAR_ALLOCATOR_POOLED,\"true\"));\n  EXIT_ON_OOM=\"true\".equalsIgnoreCase(System.getProperty(PULSAR_ALLOCATOR_EXIT_ON_OOM,\"false\"));\n  LeakDetectionPolicy leakDetectionPolicy=LeakDetectionPolicy.valueOf(System.getProperty(PULSAR_ALLOCATOR_LEAK_DETECTION,\"Disabled\"));\n  if (log.isDebugEnabled()) {\n    log.debug(\"Is Pooled: {} -- Exit on OOM: {}\",isPooled,EXIT_ON_OOM);\n  }\n  ByteBufAllocatorBuilder builder=ByteBufAllocatorBuilder.create().leakDetectionPolicy(leakDetectionPolicy).pooledAllocator(PooledByteBufAllocator.DEFAULT).outOfMemoryListener(oomException -> {\n    LISTENERS.forEach(c -> {\n      try {\n        c.accept(oomException);\n      }\n catch (      Throwable t) {\n        log.warn(\"Exception during OOM listener: {}\",t.getMessage(),t);\n      }\n    }\n);\n    if (EXIT_ON_OOM) {\n      log.info(\"Exiting JVM process for OOM error: {}\",oomException.getMessage(),oomException);\n      Runtime.getRuntime().halt(1);\n    }\n  }\n);\n  if (isPooled) {\n    builder.poolingPolicy(PoolingPolicy.PooledDirect);\n  }\n else {\n    builder.poolingPolicy(PoolingPolicy.UnpooledHeap);\n  }\n  DEFAULT=builder.build();\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 146,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 64,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ByteBufAllocatorBuilder.create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 64,
    "startColumnNumber" : 42,
    "endLineNumber" : 64,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}