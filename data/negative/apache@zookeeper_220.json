{
  "id" : 220,
  "expression" : "\"This really should be impossible\"",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"This really should be impossible\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 245,
      "startColumnNumber" : 26,
      "endLineNumber" : 245,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 64
      },
      "nodeContext" : "LOG.error(\"This really should be impossible\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 65
      },
      "nodeContext" : "LOG.error(\"This really should be impossible\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 244,
        "startColumnNumber" : 36,
        "endLineNumber" : 246,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOG.error(\"This really should be impossible\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 244,
        "startColumnNumber" : 14,
        "endLineNumber" : 246,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (IOException e) {\n  LOG.error(\"This really should be impossible\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 246,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  request.hdr.serialize(boa,\"hdr\");\n  if (request.txn != null) {\n    request.txn.serialize(boa,\"txn\");\n  }\n  baos.close();\n}\n catch (IOException e) {\n  LOG.error(\"This really should be impossible\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1144,
        "startLineNumber" : 226,
        "startColumnNumber" : 36,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (committedLog.size() > commitLogCount) {\n    committedLog.removeFirst();\n    minCommittedLog=committedLog.getFirst().packet.getZxid();\n  }\n  if (committedLog.size() == 0) {\n    minCommittedLog=request.zxid;\n    maxCommittedLog=request.zxid;\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  BinaryOutputArchive boa=BinaryOutputArchive.getArchive(baos);\n  try {\n    request.hdr.serialize(boa,\"hdr\");\n    if (request.txn != null) {\n      request.txn.serialize(boa,\"txn\");\n    }\n    baos.close();\n  }\n catch (  IOException e) {\n    LOG.error(\"This really should be impossible\",e);\n  }\n  QuorumPacket pp=new QuorumPacket(Leader.PROPOSAL,request.zxid,baos.toByteArray(),null);\n  Proposal p=new Proposal();\n  p.packet=pp;\n  p.request=request;\n  committedLog.add(p);\n  maxCommittedLog=p.packet.getZxid();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (committedLog) {\n  if (committedLog.size() > commitLogCount) {\n    committedLog.removeFirst();\n    minCommittedLog=committedLog.getFirst().packet.getZxid();\n  }\n  if (committedLog.size() == 0) {\n    minCommittedLog=request.zxid;\n    maxCommittedLog=request.zxid;\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  BinaryOutputArchive boa=BinaryOutputArchive.getArchive(baos);\n  try {\n    request.hdr.serialize(boa,\"hdr\");\n    if (request.txn != null) {\n      request.txn.serialize(boa,\"txn\");\n    }\n    baos.close();\n  }\n catch (  IOException e) {\n    LOG.error(\"This really should be impossible\",e);\n  }\n  QuorumPacket pp=new QuorumPacket(Leader.PROPOSAL,request.zxid,baos.toByteArray(),null);\n  Proposal p=new Proposal();\n  p.packet=pp;\n  p.request=request;\n  committedLog.add(p);\n  maxCommittedLog=p.packet.getZxid();\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 225,
        "startColumnNumber" : 54,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nsynchronized (committedLog) {\n    if (committedLog.size() > commitLogCount) {\n      committedLog.removeFirst();\n      minCommittedLog=committedLog.getFirst().packet.getZxid();\n    }\n    if (committedLog.size() == 0) {\n      minCommittedLog=request.zxid;\n      maxCommittedLog=request.zxid;\n    }\n    ByteArrayOutputStream baos=new ByteArrayOutputStream();\n    BinaryOutputArchive boa=BinaryOutputArchive.getArchive(baos);\n    try {\n      request.hdr.serialize(boa,\"hdr\");\n      if (request.txn != null) {\n        request.txn.serialize(boa,\"txn\");\n      }\n      baos.close();\n    }\n catch (    IOException e) {\n      LOG.error(\"This really should be impossible\",e);\n    }\n    QuorumPacket pp=new QuorumPacket(Leader.PROPOSAL,request.zxid,baos.toByteArray(),null);\n    Proposal p=new Proposal();\n    p.packet=pp;\n    p.request=request;\n    committedLog.add(p);\n    maxCommittedLog=p.packet.getZxid();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * maintains a list of last 500 or so committed requests. This is used for fast follower synchronization.\n * @param request committed request\n */\npublic void addCommittedProposal(Request request){\nsynchronized (committedLog) {\n    if (committedLog.size() > commitLogCount) {\n      committedLog.removeFirst();\n      minCommittedLog=committedLog.getFirst().packet.getZxid();\n    }\n    if (committedLog.size() == 0) {\n      minCommittedLog=request.zxid;\n      maxCommittedLog=request.zxid;\n    }\n    ByteArrayOutputStream baos=new ByteArrayOutputStream();\n    BinaryOutputArchive boa=BinaryOutputArchive.getArchive(baos);\n    try {\n      request.hdr.serialize(boa,\"hdr\");\n      if (request.txn != null) {\n        request.txn.serialize(boa,\"txn\");\n      }\n      baos.close();\n    }\n catch (    IOException e) {\n      LOG.error(\"This really should be impossible\",e);\n    }\n    QuorumPacket pp=new QuorumPacket(Leader.PROPOSAL,request.zxid,baos.toByteArray(),null);\n    Proposal p=new Proposal();\n    p.packet=pp;\n    p.request=request;\n    committedLog.add(p);\n    maxCommittedLog=p.packet.getZxid();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 65
      },
      "nodeContext" : "LOG.error(\"This really should be impossible\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 245,
    "startColumnNumber" : 26,
    "endLineNumber" : 245,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}