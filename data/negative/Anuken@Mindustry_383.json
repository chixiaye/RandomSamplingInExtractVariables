{
  "id" : 383,
  "expression" : "\"Rule '@' removed.\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/server/src/mindustry/server/ServerControl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Rule '@' removed.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 451,
      "startColumnNumber" : 29,
      "endLineNumber" : 451,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 451,
        "startColumnNumber" : 24,
        "endLineNumber" : 451,
        "endColumnNumber" : 57
      },
      "nodeContext" : "info(\"Rule '@' removed.\",arg[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 451,
        "startColumnNumber" : 24,
        "endLineNumber" : 451,
        "endColumnNumber" : 58
      },
      "nodeContext" : "info(\"Rule '@' removed.\",arg[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 450,
        "startColumnNumber" : 40,
        "endLineNumber" : 453,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  info(\"Rule '@' removed.\",arg[1]);\n  base.remove(arg[1]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 450,
        "startColumnNumber" : 20,
        "endLineNumber" : 456,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (base.has(arg[1])) {\n  info(\"Rule '@' removed.\",arg[1]);\n  base.remove(arg[1]);\n}\n else {\n  err(\"Rule not defined, so not removed.\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 449,
        "startColumnNumber" : 26,
        "endLineNumber" : 457,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (base.has(arg[1])) {\n    info(\"Rule '@' removed.\",arg[1]);\n    base.remove(arg[1]);\n  }\n else {\n    err(\"Rule not defined, so not removed.\");\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 449,
        "startColumnNumber" : 16,
        "endLineNumber" : 479,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (remove) {\n  if (base.has(arg[1])) {\n    info(\"Rule '@' removed.\",arg[1]);\n    base.remove(arg[1]);\n  }\n else {\n    err(\"Rule not defined, so not removed.\");\n    return;\n  }\n}\n else {\n  if (arg.length < 3) {\n    err(\"Missing last argument. Specify which value to set the rule to.\");\n    return;\n  }\n  try {\n    JsonValue value=new JsonReader().parse(arg[2]);\n    value.name=arg[1];\n    JsonValue parent=new JsonValue(ValueType.object);\n    parent.addChild(value);\n    JsonIO.json.readField(state.rules,value.name,parent);\n    if (base.has(value.name)) {\n      base.remove(value.name);\n    }\n    base.addChild(arg[1],value);\n    info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n  }\n catch (  Throwable e) {\n    err(\"Error parsing rule JSON: @\",e.getMessage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 442,
        "startColumnNumber" : 17,
        "endLineNumber" : 483,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!(arg[0].equals(\"remove\") || arg[0].equals(\"add\"))) {\n    err(\"Invalid usage. Either add or remove rules.\");\n    return;\n  }\n  boolean remove=arg[0].equals(\"remove\");\n  if (remove) {\n    if (base.has(arg[1])) {\n      info(\"Rule '@' removed.\",arg[1]);\n      base.remove(arg[1]);\n    }\n else {\n      err(\"Rule not defined, so not removed.\");\n      return;\n    }\n  }\n else {\n    if (arg.length < 3) {\n      err(\"Missing last argument. Specify which value to set the rule to.\");\n      return;\n    }\n    try {\n      JsonValue value=new JsonReader().parse(arg[2]);\n      value.name=arg[1];\n      JsonValue parent=new JsonValue(ValueType.object);\n      parent.addChild(value);\n      JsonIO.json.readField(state.rules,value.name,parent);\n      if (base.has(value.name)) {\n        base.remove(value.name);\n      }\n      base.addChild(arg[1],value);\n      info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n    }\n catch (    Throwable e) {\n      err(\"Error parsing rule JSON: @\",e.getMessage());\n    }\n  }\n  Core.settings.put(\"globalrules\",base.toString());\n  Call.setRules(state.rules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 440,
        "startColumnNumber" : 18,
        "endLineNumber" : 483,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (arg.length == 1) {\n  err(\"Invalid usage. Specify which rule to remove or add.\");\n}\n else {\n  if (!(arg[0].equals(\"remove\") || arg[0].equals(\"add\"))) {\n    err(\"Invalid usage. Either add or remove rules.\");\n    return;\n  }\n  boolean remove=arg[0].equals(\"remove\");\n  if (remove) {\n    if (base.has(arg[1])) {\n      info(\"Rule '@' removed.\",arg[1]);\n      base.remove(arg[1]);\n    }\n else {\n      err(\"Rule not defined, so not removed.\");\n      return;\n    }\n  }\n else {\n    if (arg.length < 3) {\n      err(\"Missing last argument. Specify which value to set the rule to.\");\n      return;\n    }\n    try {\n      JsonValue value=new JsonReader().parse(arg[2]);\n      value.name=arg[1];\n      JsonValue parent=new JsonValue(ValueType.object);\n      parent.addChild(value);\n      JsonIO.json.readField(state.rules,value.name,parent);\n      if (base.has(value.name)) {\n        base.remove(value.name);\n      }\n      base.addChild(arg[1],value);\n      info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n    }\n catch (    Throwable e) {\n      err(\"Error parsing rule JSON: @\",e.getMessage());\n    }\n  }\n  Core.settings.put(\"globalrules\",base.toString());\n  Call.setRules(state.rules);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 204,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 438,
        "startColumnNumber" : 12,
        "endLineNumber" : 483,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (arg.length == 0) {\n  info(\"Rules:\\n@\",JsonIO.print(rules));\n}\n else if (arg.length == 1) {\n  err(\"Invalid usage. Specify which rule to remove or add.\");\n}\n else {\n  if (!(arg[0].equals(\"remove\") || arg[0].equals(\"add\"))) {\n    err(\"Invalid usage. Either add or remove rules.\");\n    return;\n  }\n  boolean remove=arg[0].equals(\"remove\");\n  if (remove) {\n    if (base.has(arg[1])) {\n      info(\"Rule '@' removed.\",arg[1]);\n      base.remove(arg[1]);\n    }\n else {\n      err(\"Rule not defined, so not removed.\");\n      return;\n    }\n  }\n else {\n    if (arg.length < 3) {\n      err(\"Missing last argument. Specify which value to set the rule to.\");\n      return;\n    }\n    try {\n      JsonValue value=new JsonReader().parse(arg[2]);\n      value.name=arg[1];\n      JsonValue parent=new JsonValue(ValueType.object);\n      parent.addChild(value);\n      JsonIO.json.readField(state.rules,value.name,parent);\n      if (base.has(value.name)) {\n        base.remove(value.name);\n      }\n      base.addChild(arg[1],value);\n      info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n    }\n catch (    Throwable e) {\n      err(\"Error parsing rule JSON: @\",e.getMessage());\n    }\n  }\n  Core.settings.put(\"globalrules\",base.toString());\n  Call.setRules(state.rules);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 219,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2049,
        "startLineNumber" : 434,
        "startColumnNumber" : 148,
        "endLineNumber" : 484,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String rules=Core.settings.getString(\"globalrules\");\n  JsonValue base=JsonIO.json.fromJson(null,rules);\n  if (arg.length == 0) {\n    info(\"Rules:\\n@\",JsonIO.print(rules));\n  }\n else   if (arg.length == 1) {\n    err(\"Invalid usage. Specify which rule to remove or add.\");\n  }\n else {\n    if (!(arg[0].equals(\"remove\") || arg[0].equals(\"add\"))) {\n      err(\"Invalid usage. Either add or remove rules.\");\n      return;\n    }\n    boolean remove=arg[0].equals(\"remove\");\n    if (remove) {\n      if (base.has(arg[1])) {\n        info(\"Rule '@' removed.\",arg[1]);\n        base.remove(arg[1]);\n      }\n else {\n        err(\"Rule not defined, so not removed.\");\n        return;\n      }\n    }\n else {\n      if (arg.length < 3) {\n        err(\"Missing last argument. Specify which value to set the rule to.\");\n        return;\n      }\n      try {\n        JsonValue value=new JsonReader().parse(arg[2]);\n        value.name=arg[1];\n        JsonValue parent=new JsonValue(ValueType.object);\n        parent.addChild(value);\n        JsonIO.json.readField(state.rules,value.name,parent);\n        if (base.has(value.name)) {\n          base.remove(value.name);\n        }\n        base.addChild(arg[1],value);\n        info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n      }\n catch (      Throwable e) {\n        err(\"Error parsing rule JSON: @\",e.getMessage());\n      }\n    }\n    Core.settings.put(\"globalrules\",base.toString());\n    Call.setRules(state.rules);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2056,
        "startLineNumber" : 434,
        "startColumnNumber" : 141,
        "endLineNumber" : 484,
        "endColumnNumber" : 9
      },
      "nodeContext" : "arg -> {\n  String rules=Core.settings.getString(\"globalrules\");\n  JsonValue base=JsonIO.json.fromJson(null,rules);\n  if (arg.length == 0) {\n    info(\"Rules:\\n@\",JsonIO.print(rules));\n  }\n else   if (arg.length == 1) {\n    err(\"Invalid usage. Specify which rule to remove or add.\");\n  }\n else {\n    if (!(arg[0].equals(\"remove\") || arg[0].equals(\"add\"))) {\n      err(\"Invalid usage. Either add or remove rules.\");\n      return;\n    }\n    boolean remove=arg[0].equals(\"remove\");\n    if (remove) {\n      if (base.has(arg[1])) {\n        info(\"Rule '@' removed.\",arg[1]);\n        base.remove(arg[1]);\n      }\n else {\n        err(\"Rule not defined, so not removed.\");\n        return;\n      }\n    }\n else {\n      if (arg.length < 3) {\n        err(\"Missing last argument. Specify which value to set the rule to.\");\n        return;\n      }\n      try {\n        JsonValue value=new JsonReader().parse(arg[2]);\n        value.name=arg[1];\n        JsonValue parent=new JsonValue(ValueType.object);\n        parent.addChild(value);\n        JsonIO.json.readField(state.rules,value.name,parent);\n        if (base.has(value.name)) {\n          base.remove(value.name);\n        }\n        base.addChild(arg[1],value);\n        info(\"Changed rule: @\",value.toString().replace(\"\\n\",\" \"));\n      }\n catch (      Throwable e) {\n        err(\"Error parsing rule JSON: @\",e.getMessage());\n      }\n    }\n    Core.settings.put(\"globalrules\",base.toString());\n    Call.setRules(state.rules);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 246,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 451,
        "startColumnNumber" : 24,
        "endLineNumber" : 451,
        "endColumnNumber" : 58
      },
      "nodeContext" : "info(\"Rule '@' removed.\",arg[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 451,
    "startColumnNumber" : 29,
    "endLineNumber" : 451,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}