{
  "id" : 407,
  "expression" : "loadData.fetcher",
  "projectName" : "bumptech@glide",
  "commitID" : "79bd0f8594378fe11065abbdbff0b1dbacbed3cc",
  "filePath" : "library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 70,
      "startColumnNumber" : 58,
      "endLineNumber" : 70,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 70,
        "startColumnNumber" : 58,
        "endLineNumber" : 70,
        "endColumnNumber" : 90
      },
      "nodeContext" : "loadData.fetcher.getDataSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 70,
        "endColumnNumber" : 91
      },
      "nodeContext" : "diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 91
      },
      "nodeContext" : "data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 91
      },
      "nodeContext" : "data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  }, {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 86,
      "startColumnNumber" : 8,
      "endLineNumber" : 86,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 34
      },
      "nodeContext" : "loadData.fetcher.cleanup()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "loadData.fetcher.cleanup();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  loadData.fetcher.cleanup();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 705,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 87,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n  DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n  Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n  diskCache.put(originalKey,writer);\n  if (Logs.isEnabled(Log.VERBOSE)) {\n    Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n  }\n}\n  finally {\n  loadData.fetcher.cleanup();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 70,
        "startColumnNumber" : 93,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "loadData.fetcher.cleanup();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  }, {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 93,
      "startColumnNumber" : 65,
      "endLineNumber" : 93,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 45
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 46
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 92,
        "startColumnNumber" : 45,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!sourceCacheGenerator.startNext()) {\n  cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 70,
        "startColumnNumber" : 93,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 45
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  }, {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 94,
      "startColumnNumber" : 12,
      "endLineNumber" : 94,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 44
      },
      "nodeContext" : "loadData.fetcher.getDataSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 45
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 46
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 92,
        "startColumnNumber" : 45,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!sourceCacheGenerator.startNext()) {\n  cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 70,
        "startColumnNumber" : 93,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 44
      },
      "nodeContext" : "loadData.fetcher.getDataSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  }, {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 97,
      "startColumnNumber" : 54,
      "endLineNumber" : 97,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 44
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 96,
        "startColumnNumber" : 11,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  }, {
    "nodeContext" : "loadData.fetcher",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 98,
      "startColumnNumber" : 10,
      "endLineNumber" : 98,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 42
      },
      "nodeContext" : "loadData.fetcher.getDataSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 44
      },
      "nodeContext" : "cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 96,
        "startColumnNumber" : 11,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n  long startTime=LogTime.getLogTime();\n  try {\n    Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n    DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n    Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n    diskCache.put(originalKey,writer);\n    if (Logs.isEnabled(Log.VERBOSE)) {\n      Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n    }\n  }\n  finally {\n    loadData.fetcher.cleanup();\n  }\n  sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n  if (!sourceCacheGenerator.startNext()) {\n    cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n else {\n  cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onDataReady(Object data){\n  DiskCacheStrategy diskCacheStrategy=requestContext.getDiskCacheStrategy();\n  if (data != null && diskCacheStrategy.isDataCacheable(loadData.fetcher.getDataSource())) {\n    long startTime=LogTime.getLogTime();\n    try {\n      Encoder<Object> encoder=requestContext.getSourceEncoder(data);\n      DataCacheWriter<Object> writer=new DataCacheWriter<>(encoder,data,requestContext.getOptions());\n      Key originalKey=new DataCacheKey(loadData.sourceKey,requestContext.getSignature());\n      diskCache.put(originalKey,writer);\n      if (Logs.isEnabled(Log.VERBOSE)) {\n        Logs.log(Log.VERBOSE,\"Finished encoding source to cache\" + \", key: \" + originalKey + \", data: \"+ data+ \", encoder: \"+ encoder+ \", duration: \"+ LogTime.getElapsedMillis(startTime));\n      }\n    }\n  finally {\n      loadData.fetcher.cleanup();\n    }\n    sourceCacheGenerator=new DataCacheGenerator(Collections.singletonList(loadData.sourceKey),width,height,diskCache,requestContext,this);\n    if (!sourceCacheGenerator.startNext()) {\n      cb.onDataFetcherReady(loadData.sourceKey,null,loadData.fetcher,loadData.fetcher.getDataSource());\n    }\n  }\n else {\n    cb.onDataFetcherReady(loadData.sourceKey,data,loadData.fetcher,loadData.fetcher.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 42
      },
      "nodeContext" : "loadData.fetcher.getDataSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.data.DataFetcher<>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 70,
    "startColumnNumber" : 58,
    "endLineNumber" : 70,
    "endColumnNumber" : 74
  }, {
    "charLength" : 16,
    "startLineNumber" : 86,
    "startColumnNumber" : 8,
    "endLineNumber" : 86,
    "endColumnNumber" : 24
  }, {
    "charLength" : 16,
    "startLineNumber" : 93,
    "startColumnNumber" : 65,
    "endLineNumber" : 93,
    "endColumnNumber" : 81
  }, {
    "charLength" : 16,
    "startLineNumber" : 94,
    "startColumnNumber" : 12,
    "endLineNumber" : 94,
    "endColumnNumber" : 28
  }, {
    "charLength" : 16,
    "startLineNumber" : 97,
    "startColumnNumber" : 54,
    "endLineNumber" : 97,
    "endColumnNumber" : 70
  }, {
    "charLength" : 16,
    "startLineNumber" : 98,
    "startColumnNumber" : 10,
    "endLineNumber" : 98,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  } ]
}