{
  "id" : 38,
  "expression" : "params",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/AccessKeyAuthenticatorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "params",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 125,
      "startColumnNumber" : 51,
      "endLineNumber" : 125,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 58
      },
      "nodeContext" : "when(invocation.getArguments()).thenReturn(params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(invocation.getArguments()).thenReturn(params);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 119,
        "startColumnNumber" : 41,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=mock(URL.class);\n  when(url.getParameter(Constants.PARAMETER_SIGNATURE_ENABLE_KEY,false)).thenReturn(true);\n  Invocation invocation=mock(Invocation.class);\n  String secretKey=\"123456\";\n  Object[] params={\"dubbo\",new ArrayList()};\n  when(invocation.getArguments()).thenReturn(params);\n  AccessKeyAuthenticator helper=new AccessKeyAuthenticator();\n  String signature=helper.getSignature(url,invocation,secretKey,String.valueOf(System.currentTimeMillis()));\n  assertNotNull(signature);\n  Object[] fakeParams={\"dubbo1\",new ArrayList<>()};\n  when(invocation.getArguments()).thenReturn(fakeParams);\n  String signature1=helper.getSignature(url,invocation,secretKey,String.valueOf(System.currentTimeMillis()));\n  assertNotEquals(signature,signature1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGetSignatureWithParameter(){\n  URL url=mock(URL.class);\n  when(url.getParameter(Constants.PARAMETER_SIGNATURE_ENABLE_KEY,false)).thenReturn(true);\n  Invocation invocation=mock(Invocation.class);\n  String secretKey=\"123456\";\n  Object[] params={\"dubbo\",new ArrayList()};\n  when(invocation.getArguments()).thenReturn(params);\n  AccessKeyAuthenticator helper=new AccessKeyAuthenticator();\n  String signature=helper.getSignature(url,invocation,secretKey,String.valueOf(System.currentTimeMillis()));\n  assertNotNull(signature);\n  Object[] fakeParams={\"dubbo1\",new ArrayList<>()};\n  when(invocation.getArguments()).thenReturn(fakeParams);\n  String signature1=helper.getSignature(url,invocation,secretKey,String.valueOf(System.currentTimeMillis()));\n  assertNotEquals(signature,signature1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(invocation.getArguments()).thenReturn(params);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 125,
    "startColumnNumber" : 51,
    "endLineNumber" : 125,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}