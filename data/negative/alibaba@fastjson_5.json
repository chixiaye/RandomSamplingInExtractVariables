{
  "id" : 5,
  "expression" : "json.getBytes(\"bytes\")",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/MapSerializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "json.getBytes(\"bytes\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 128,
      "startColumnNumber" : 23,
      "endLineNumber" : 128,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 128,
        "startColumnNumber" : 15,
        "endLineNumber" : 128,
        "endColumnNumber" : 45
      },
      "nodeContext" : "bytes=json.getBytes(\"bytes\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 46
      },
      "nodeContext" : "byte[] bytes=json.getBytes(\"bytes\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 115,
        "startColumnNumber" : 42,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=new SerializeWriter();\n  Map<String,Object> map=new LinkedHashMap<String,Object>();\n  map.put(\"TOP\",\"value\");\n  map.put(\"bytes\",new byte[]{1,2});\n  MapSerializer mapSerializer=new MapSerializer();\n  mapSerializer.write(new JSONSerializer(out),map,null,null);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"TOP\\\":\\\"value\\\",\\\"bytes\\\":\\\"AQI=\\\"}\",text);\n  JSONObject json=JSON.parseObject(text);\n  byte[] bytes=json.getBytes(\"bytes\");\n  Assert.assertEquals(1,bytes[0]);\n  Assert.assertEquals(2,bytes[1]);\n  Assert.assertEquals(2,bytes.length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_4() throws Exception {\n  SerializeWriter out=new SerializeWriter();\n  Map<String,Object> map=new LinkedHashMap<String,Object>();\n  map.put(\"TOP\",\"value\");\n  map.put(\"bytes\",new byte[]{1,2});\n  MapSerializer mapSerializer=new MapSerializer();\n  mapSerializer.write(new JSONSerializer(out),map,null,null);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"TOP\\\":\\\"value\\\",\\\"bytes\\\":\\\"AQI=\\\"}\",text);\n  JSONObject json=JSON.parseObject(text);\n  byte[] bytes=json.getBytes(\"bytes\");\n  Assert.assertEquals(1,bytes[0]);\n  Assert.assertEquals(2,bytes[1]);\n  Assert.assertEquals(2,bytes.length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 46
      },
      "nodeContext" : "byte[] bytes=json.getBytes(\"bytes\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 128,
    "startColumnNumber" : 23,
    "endLineNumber" : 128,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}