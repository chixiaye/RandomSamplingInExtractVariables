{
  "id" : 158,
  "expression" : "method",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "076f6000f45e78783c46c01964cf8b5d2560d992",
  "filePath" : "VirtualApp/lib/src/main/java/com/lody/virtual/client/hook/base/MethodInvocationStub.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 169,
      "startColumnNumber" : 53,
      "endLineNumber" : 169,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 169,
        "startColumnNumber" : 53,
        "endLineNumber" : 169,
        "endColumnNumber" : 69
      },
      "nodeContext" : "method.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 169,
        "startColumnNumber" : 38,
        "endLineNumber" : 169,
        "endColumnNumber" : 70
      },
      "nodeContext" : "getMethodProxy(method.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 169,
        "startColumnNumber" : 24,
        "endLineNumber" : 169,
        "endColumnNumber" : 70
      },
      "nodeContext" : "methodProxy=getMethodProxy(method.getName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 71
      },
      "nodeContext" : "MethodProxy methodProxy=getMethodProxy(method.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 71
      },
      "nodeContext" : "MethodProxy methodProxy=getMethodProxy(method.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 185,
      "startColumnNumber" : 71,
      "endLineNumber" : 185,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 185,
        "startColumnNumber" : 32,
        "endLineNumber" : 185,
        "endColumnNumber" : 84
      },
      "nodeContext" : "methodProxy.beforeCall(mBaseInterface,method,args)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 84
      },
      "nodeContext" : "useProxy && methodProxy.beforeCall(mBaseInterface,method,args)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n else {\n  res=method.invoke(mBaseInterface,args);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 84
      },
      "nodeContext" : "useProxy && methodProxy.beforeCall(mBaseInterface,method,args)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 186,
      "startColumnNumber" : 59,
      "endLineNumber" : 186,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 186,
        "startColumnNumber" : 26,
        "endLineNumber" : 186,
        "endColumnNumber" : 72
      },
      "nodeContext" : "methodProxy.call(mBaseInterface,method,args)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 186,
        "startColumnNumber" : 20,
        "endLineNumber" : 186,
        "endColumnNumber" : 72
      },
      "nodeContext" : "res=methodProxy.call(mBaseInterface,method,args)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 186,
        "startColumnNumber" : 20,
        "endLineNumber" : 186,
        "endColumnNumber" : 73
      },
      "nodeContext" : "res=methodProxy.call(mBaseInterface,method,args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 185,
        "startColumnNumber" : 86,
        "endLineNumber" : 188,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n else {\n  res=method.invoke(mBaseInterface,args);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 186,
        "startColumnNumber" : 20,
        "endLineNumber" : 186,
        "endColumnNumber" : 73
      },
      "nodeContext" : "res=methodProxy.call(mBaseInterface,method,args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 187,
      "startColumnNumber" : 64,
      "endLineNumber" : 187,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 187,
        "startColumnNumber" : 26,
        "endLineNumber" : 187,
        "endColumnNumber" : 82
      },
      "nodeContext" : "methodProxy.afterCall(mBaseInterface,method,args,res)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 187,
        "startColumnNumber" : 20,
        "endLineNumber" : 187,
        "endColumnNumber" : 82
      },
      "nodeContext" : "res=methodProxy.afterCall(mBaseInterface,method,args,res)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 187,
        "startColumnNumber" : 20,
        "endLineNumber" : 187,
        "endColumnNumber" : 83
      },
      "nodeContext" : "res=methodProxy.afterCall(mBaseInterface,method,args,res);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 185,
        "startColumnNumber" : 86,
        "endLineNumber" : 188,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n else {\n  res=method.invoke(mBaseInterface,args);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 187,
        "startColumnNumber" : 20,
        "endLineNumber" : 187,
        "endColumnNumber" : 83
      },
      "nodeContext" : "res=methodProxy.afterCall(mBaseInterface,method,args,res);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 189,
      "startColumnNumber" : 26,
      "endLineNumber" : 189,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 189,
        "startColumnNumber" : 26,
        "endLineNumber" : 189,
        "endColumnNumber" : 61
      },
      "nodeContext" : "method.invoke(mBaseInterface,args)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 61
      },
      "nodeContext" : "res=method.invoke(mBaseInterface,args)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 62
      },
      "nodeContext" : "res=method.invoke(mBaseInterface,args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 188,
        "startColumnNumber" : 23,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  res=method.invoke(mBaseInterface,args);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n  res=methodProxy.call(mBaseInterface,method,args);\n  res=methodProxy.afterCall(mBaseInterface,method,args,res);\n}\n else {\n  res=method.invoke(mBaseInterface,args);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 62
      },
      "nodeContext" : "res=method.invoke(mBaseInterface,args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 210,
      "startColumnNumber" : 35,
      "endLineNumber" : 210,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 210,
        "startColumnNumber" : 35,
        "endLineNumber" : 210,
        "endColumnNumber" : 57
      },
      "nodeContext" : "method.getReturnType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 210,
        "startColumnNumber" : 35,
        "endLineNumber" : 210,
        "endColumnNumber" : 76
      },
      "nodeContext" : "method.getReturnType().equals(void.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 210,
        "startColumnNumber" : 31,
        "endLineNumber" : 214,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (method.getReturnType().equals(void.class)) {\n  retString=\"void\";\n}\n else {\n  retString=String.valueOf(res);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 208,
        "startColumnNumber" : 24,
        "endLineNumber" : 214,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (exception != null) {\n  retString=exception.toString();\n}\n else if (method.getReturnType().equals(void.class)) {\n  retString=\"void\";\n}\n else {\n  retString=String.valueOf(res);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 206,
        "startColumnNumber" : 42,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 206,
        "startColumnNumber" : 20,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (logPriority >= 0) {\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 201,
        "startColumnNumber" : 30,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 201,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (mightLog) {\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 200,
        "startColumnNumber" : 22,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 210,
        "startColumnNumber" : 35,
        "endLineNumber" : 210,
        "endColumnNumber" : 76
      },
      "nodeContext" : "method.getReturnType().equals(void.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 216,
      "startColumnNumber" : 54,
      "endLineNumber" : 216,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 216,
        "startColumnNumber" : 54,
        "endLineNumber" : 216,
        "endColumnNumber" : 80
      },
      "nodeContext" : "method.getDeclaringClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 216,
        "startColumnNumber" : 54,
        "endLineNumber" : 216,
        "endColumnNumber" : 96
      },
      "nodeContext" : "method.getDeclaringClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 216,
        "startColumnNumber" : 54,
        "endLineNumber" : 216,
        "endColumnNumber" : 158
      },
      "nodeContext" : "method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 159
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 160
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 206,
        "startColumnNumber" : 42,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 206,
        "startColumnNumber" : 20,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (logPriority >= 0) {\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 201,
        "startColumnNumber" : 30,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 201,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (mightLog) {\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 200,
        "startColumnNumber" : 22,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 160
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "method",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 216,
      "startColumnNumber" : 105,
      "endLineNumber" : 216,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 216,
        "startColumnNumber" : 105,
        "endLineNumber" : 216,
        "endColumnNumber" : 121
      },
      "nodeContext" : "method.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 216,
        "startColumnNumber" : 54,
        "endLineNumber" : 216,
        "endColumnNumber" : 158
      },
      "nodeContext" : "method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 159
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 160
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 206,
        "startColumnNumber" : 42,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 206,
        "startColumnNumber" : 20,
        "endLineNumber" : 217,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (logPriority >= 0) {\n  String retString;\n  if (exception != null) {\n    retString=exception.toString();\n  }\n else   if (method.getReturnType().equals(void.class)) {\n    retString=\"void\";\n  }\n else {\n    retString=String.valueOf(res);\n  }\n  Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 201,
        "startColumnNumber" : 30,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 201,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (mightLog) {\n  int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n  if (methodProxy != null) {\n    logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n  }\n  if (logPriority >= 0) {\n    String retString;\n    if (exception != null) {\n      retString=exception.toString();\n    }\n else     if (method.getReturnType().equals(void.class)) {\n      retString=\"void\";\n    }\n else {\n      retString=String.valueOf(res);\n    }\n    Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 200,
        "startColumnNumber" : 22,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n    res=methodProxy.call(mBaseInterface,method,args);\n    res=methodProxy.afterCall(mBaseInterface,method,args,res);\n  }\n else {\n    res=method.invoke(mBaseInterface,args);\n  }\n  return res;\n}\n catch (Throwable t) {\n  exception=t;\n  if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n    exception=((InvocationTargetException)exception).getTargetException();\n  }\n  throw exception;\n}\n finally {\n  if (mightLog) {\n    int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n    if (methodProxy != null) {\n      logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n    }\n    if (logPriority >= 0) {\n      String retString;\n      if (exception != null) {\n        retString=exception.toString();\n      }\n else       if (method.getReturnType().equals(void.class)) {\n        retString=\"void\";\n      }\n else {\n        retString=String.valueOf(res);\n      }\n      Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 216,
        "startColumnNumber" : 24,
        "endLineNumber" : 216,
        "endColumnNumber" : 160
      },
      "nodeContext" : "Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 169,
    "startColumnNumber" : 53,
    "endLineNumber" : 169,
    "endColumnNumber" : 59
  }, {
    "charLength" : 6,
    "startLineNumber" : 185,
    "startColumnNumber" : 71,
    "endLineNumber" : 185,
    "endColumnNumber" : 77
  }, {
    "charLength" : 6,
    "startLineNumber" : 186,
    "startColumnNumber" : 59,
    "endLineNumber" : 186,
    "endColumnNumber" : 65
  }, {
    "charLength" : 6,
    "startLineNumber" : 187,
    "startColumnNumber" : 64,
    "endLineNumber" : 187,
    "endColumnNumber" : 70
  }, {
    "charLength" : 6,
    "startLineNumber" : 189,
    "startColumnNumber" : 26,
    "endLineNumber" : 189,
    "endColumnNumber" : 32
  }, {
    "charLength" : 6,
    "startLineNumber" : 210,
    "startColumnNumber" : 35,
    "endLineNumber" : 210,
    "endColumnNumber" : 41
  }, {
    "charLength" : 6,
    "startLineNumber" : 216,
    "startColumnNumber" : 54,
    "endLineNumber" : 216,
    "endColumnNumber" : 60
  }, {
    "charLength" : 6,
    "startLineNumber" : 216,
    "startColumnNumber" : 105,
    "endLineNumber" : 216,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  } ]
}