{
  "id" : 148,
  "expression" : "\"Management-URL is not valid\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/domain/values/Registration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Management-URL is not valid\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 66,
      "startColumnNumber" : 85,
      "endLineNumber" : 66,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 115
      },
      "nodeContext" : "Assert.isTrue(StringUtils.isEmpty(managementUrl) || checkUrl(managementUrl),\"Management-URL is not valid\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Assert.isTrue(StringUtils.isEmpty(managementUrl) || checkUrl(managementUrl),\"Management-URL is not valid\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 62,
        "startColumnNumber" : 84,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.hasText(name,\"Name must not be null\");\n  Assert.hasText(healthUrl,\"Health-URL must not be null\");\n  Assert.isTrue(checkUrl(healthUrl),\"Health-URL is not valid\");\n  Assert.isTrue(StringUtils.isEmpty(managementUrl) || checkUrl(managementUrl),\"Management-URL is not valid\");\n  Assert.isTrue(StringUtils.isEmpty(serviceUrl) || checkUrl(serviceUrl),\"Service-URL is not valid\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.source=source;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@lombok.Builder(builderClassName=\"Builder\",toBuilder=true) private Registration(String name,String managementUrl,String healthUrl,String serviceUrl,String source,@lombok.Singular(\"metadata\") Map<String,String> metadata){\n  Assert.hasText(name,\"Name must not be null\");\n  Assert.hasText(healthUrl,\"Health-URL must not be null\");\n  Assert.isTrue(checkUrl(healthUrl),\"Health-URL is not valid\");\n  Assert.isTrue(StringUtils.isEmpty(managementUrl) || checkUrl(managementUrl),\"Management-URL is not valid\");\n  Assert.isTrue(StringUtils.isEmpty(serviceUrl) || checkUrl(serviceUrl),\"Service-URL is not valid\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.source=source;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Assert.isTrue(StringUtils.isEmpty(managementUrl) || checkUrl(managementUrl),\"Management-URL is not valid\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 66,
    "startColumnNumber" : 85,
    "endLineNumber" : 66,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ]
}