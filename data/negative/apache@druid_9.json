{
  "id" : 9,
  "expression" : "timeseriesQueryBuilder",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/benchmarks/src/test/java/org/apache/druid/benchmark/query/timecompare/TimeCompareBenchmark.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timeseriesQueryBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 273,
      "startColumnNumber" : 24,
      "endLineNumber" : 273,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 273,
        "startColumnNumber" : 24,
        "endLineNumber" : 273,
        "endColumnNumber" : 54
      },
      "nodeContext" : "timeseriesQueryBuilder.build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 273,
        "startColumnNumber" : 6,
        "endLineNumber" : 273,
        "endColumnNumber" : 54
      },
      "nodeContext" : "timeseriesQuery=timeseriesQueryBuilder.build()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 273,
        "startColumnNumber" : 6,
        "endLineNumber" : 273,
        "endColumnNumber" : 55
      },
      "nodeContext" : "timeseriesQuery=timeseriesQueryBuilder.build();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AggregatorFactory> queryAggs=new ArrayList<>();\n  queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(recent),null)));\n  queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"_cmp_sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(previous),null)));\n  Druids.TimeseriesQueryBuilder timeseriesQueryBuilder=Druids.newTimeseriesQueryBuilder().dataSource(\"blah\").granularity(Granularities.ALL).intervals(intervalSpec).aggregators(queryAggs).descending(false);\n  timeseriesQuery=timeseriesQueryBuilder.build();\n  timeseriesFactory=new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(),new TimeseriesQueryEngine(),QueryBenchmarkUtil.NOOP_QUERYWATCHER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3646,
        "startLineNumber" : 174,
        "startColumnNumber" : 2,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  GeneratorSchemaInfo basicSchema=GeneratorBasicSchemas.SCHEMA_MAP.get(\"basic\");\n  QuerySegmentSpec intervalSpec=new MultipleIntervalSegmentSpec(Collections.singletonList(basicSchema.getDataInterval()));\n  long startMillis=basicSchema.getDataInterval().getStartMillis();\n  long endMillis=basicSchema.getDataInterval().getEndMillis();\n  long half=(endMillis - startMillis) / 2;\n  Interval recent=Intervals.utc(half,endMillis);\n  Interval previous=Intervals.utc(startMillis,half);\n  log.info(\"Recent interval: \" + recent);\n  log.info(\"Previous interval: \" + previous);\n{\n    List<AggregatorFactory> queryAggs=new ArrayList<>();\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(recent),null)));\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"_cmp_sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(previous),null)));\n    TopNQueryBuilder queryBuilderA=new TopNQueryBuilder().dataSource(\"blah\").granularity(Granularities.ALL).dimension(\"dimUniform\").metric(\"sumLongSequential\").intervals(intervalSpec).aggregators(queryAggs).threshold(threshold);\n    topNQuery=queryBuilderA.build();\n    topNFactory=new TopNQueryRunnerFactory(new StupidPool<>(\"TopNBenchmark-compute-bufferPool\",new OffheapBufferGenerator(\"compute\",250000000),0,Integer.MAX_VALUE),new TopNQueryQueryToolChest(new TopNQueryConfig()),QueryBenchmarkUtil.NOOP_QUERYWATCHER);\n  }\n{\n    List<AggregatorFactory> queryAggs=new ArrayList<>();\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(recent),null)));\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"_cmp_sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(previous),null)));\n    Druids.TimeseriesQueryBuilder timeseriesQueryBuilder=Druids.newTimeseriesQueryBuilder().dataSource(\"blah\").granularity(Granularities.ALL).intervals(intervalSpec).aggregators(queryAggs).descending(false);\n    timeseriesQuery=timeseriesQueryBuilder.build();\n    timeseriesFactory=new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(),new TimeseriesQueryEngine(),QueryBenchmarkUtil.NOOP_QUERYWATCHER);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3676,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void setupQueries(){\n  GeneratorSchemaInfo basicSchema=GeneratorBasicSchemas.SCHEMA_MAP.get(\"basic\");\n  QuerySegmentSpec intervalSpec=new MultipleIntervalSegmentSpec(Collections.singletonList(basicSchema.getDataInterval()));\n  long startMillis=basicSchema.getDataInterval().getStartMillis();\n  long endMillis=basicSchema.getDataInterval().getEndMillis();\n  long half=(endMillis - startMillis) / 2;\n  Interval recent=Intervals.utc(half,endMillis);\n  Interval previous=Intervals.utc(startMillis,half);\n  log.info(\"Recent interval: \" + recent);\n  log.info(\"Previous interval: \" + previous);\n{\n    List<AggregatorFactory> queryAggs=new ArrayList<>();\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(recent),null)));\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"_cmp_sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(previous),null)));\n    TopNQueryBuilder queryBuilderA=new TopNQueryBuilder().dataSource(\"blah\").granularity(Granularities.ALL).dimension(\"dimUniform\").metric(\"sumLongSequential\").intervals(intervalSpec).aggregators(queryAggs).threshold(threshold);\n    topNQuery=queryBuilderA.build();\n    topNFactory=new TopNQueryRunnerFactory(new StupidPool<>(\"TopNBenchmark-compute-bufferPool\",new OffheapBufferGenerator(\"compute\",250000000),0,Integer.MAX_VALUE),new TopNQueryQueryToolChest(new TopNQueryConfig()),QueryBenchmarkUtil.NOOP_QUERYWATCHER);\n  }\n{\n    List<AggregatorFactory> queryAggs=new ArrayList<>();\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(recent),null)));\n    queryAggs.add(new FilteredAggregatorFactory(new LongSumAggregatorFactory(\"_cmp_sumLongSequential\",\"sumLongSequential\"),new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Collections.singletonList(previous),null)));\n    Druids.TimeseriesQueryBuilder timeseriesQueryBuilder=Druids.newTimeseriesQueryBuilder().dataSource(\"blah\").granularity(Granularities.ALL).intervals(intervalSpec).aggregators(queryAggs).descending(false);\n    timeseriesQuery=timeseriesQueryBuilder.build();\n    timeseriesFactory=new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(),new TimeseriesQueryEngine(),QueryBenchmarkUtil.NOOP_QUERYWATCHER);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 273,
        "startColumnNumber" : 6,
        "endLineNumber" : 273,
        "endColumnNumber" : 55
      },
      "nodeContext" : "timeseriesQuery=timeseriesQueryBuilder.build();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.Druids.TimeseriesQueryBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 273,
    "startColumnNumber" : 24,
    "endLineNumber" : 273,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}