{
  "id" : 4,
  "expression" : "new RetryExponentialBackoff<String>(() -> {\n  throw e;\n}\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()))",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/retry/src/test/java/com/iluwatar/retry/RetryExponentialBackoffTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RetryExponentialBackoff<String>(() -> {\n  throw e;\n}\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 188,
      "startLineNumber" : 90,
      "startColumnNumber" : 22,
      "endLineNumber" : 97,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 23,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 90,
        "startColumnNumber" : 14,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "retry=new RetryExponentialBackoff<String>(() -> {\n  throw e;\n}\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 6
      },
      "nodeContext" : "final var retry=new RetryExponentialBackoff<String>(() -> {\n  throw e;\n}\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 88,
        "startColumnNumber" : 23,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var e=new CustomerNotFoundException(\"customer not found\");\n  final var retry=new RetryExponentialBackoff<String>(() -> {\n    throw e;\n  }\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()));\n  try {\n    retry.perform();\n  }\n catch (  BusinessException ex) {\n  }\n  assertThat(retry.attempts(),is(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Final number of attempts should be equal to the number of attempts asked because we are asking it to ignore the exception that will be thrown.\n */\n@Test public void ignore(){\n  final var e=new CustomerNotFoundException(\"customer not found\");\n  final var retry=new RetryExponentialBackoff<String>(() -> {\n    throw e;\n  }\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()));\n  try {\n    retry.perform();\n  }\n catch (  BusinessException ex) {\n  }\n  assertThat(retry.attempts(),is(2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 6
      },
      "nodeContext" : "final var retry=new RetryExponentialBackoff<String>(() -> {\n  throw e;\n}\n,2,0,ex -> CustomerNotFoundException.class.isAssignableFrom(ex.getClass()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    },
    "tokenLength" : 11,
    "type" : "com.iluwatar.retry.RetryExponentialBackoff<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 188,
    "startLineNumber" : 90,
    "startColumnNumber" : 22,
    "endLineNumber" : 97,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ ]
}