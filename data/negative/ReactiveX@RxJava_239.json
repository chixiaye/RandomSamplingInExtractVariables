{
  "id" : 239,
  "expression" : "countAfter.get()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableDoOnSubscribeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "countAfter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 97,
      "startColumnNumber" : 24,
      "endLineNumber" : 97,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(3,countAfter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(3,countAfter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 65,
        "startColumnNumber" : 72,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger onSubscribed=new AtomicInteger();\n  final AtomicInteger countBefore=new AtomicInteger();\n  final AtomicInteger countAfter=new AtomicInteger();\n  final AtomicReference<Subscriber<? super Integer>> sref=new AtomicReference<Subscriber<? super Integer>>();\n  Flowable<Integer> o=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    Subscriber<? super Integer> s){\n      s.onSubscribe(new BooleanSubscription());\n      onSubscribed.incrementAndGet();\n      sref.set(s);\n    }\n  }\n).doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countBefore.incrementAndGet();\n    }\n  }\n).publish().refCount().doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countAfter.incrementAndGet();\n    }\n  }\n);\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(1,countBefore.get());\n  assertEquals(1,onSubscribed.get());\n  assertEquals(3,countAfter.get());\n  sref.get().onComplete();\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(2,countBefore.get());\n  assertEquals(2,onSubscribed.get());\n  assertEquals(6,countAfter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDoOnUnSubscribeWorksWithRefCount() throws Exception {\n  final AtomicInteger onSubscribed=new AtomicInteger();\n  final AtomicInteger countBefore=new AtomicInteger();\n  final AtomicInteger countAfter=new AtomicInteger();\n  final AtomicReference<Subscriber<? super Integer>> sref=new AtomicReference<Subscriber<? super Integer>>();\n  Flowable<Integer> o=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    Subscriber<? super Integer> s){\n      s.onSubscribe(new BooleanSubscription());\n      onSubscribed.incrementAndGet();\n      sref.set(s);\n    }\n  }\n).doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countBefore.incrementAndGet();\n    }\n  }\n).publish().refCount().doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countAfter.incrementAndGet();\n    }\n  }\n);\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(1,countBefore.get());\n  assertEquals(1,onSubscribed.get());\n  assertEquals(3,countAfter.get());\n  sref.get().onComplete();\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(2,countBefore.get());\n  assertEquals(2,onSubscribed.get());\n  assertEquals(6,countAfter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(3,countAfter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "countAfter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 104,
      "startColumnNumber" : 24,
      "endLineNumber" : 104,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(6,countAfter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(6,countAfter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 65,
        "startColumnNumber" : 72,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger onSubscribed=new AtomicInteger();\n  final AtomicInteger countBefore=new AtomicInteger();\n  final AtomicInteger countAfter=new AtomicInteger();\n  final AtomicReference<Subscriber<? super Integer>> sref=new AtomicReference<Subscriber<? super Integer>>();\n  Flowable<Integer> o=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    Subscriber<? super Integer> s){\n      s.onSubscribe(new BooleanSubscription());\n      onSubscribed.incrementAndGet();\n      sref.set(s);\n    }\n  }\n).doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countBefore.incrementAndGet();\n    }\n  }\n).publish().refCount().doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countAfter.incrementAndGet();\n    }\n  }\n);\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(1,countBefore.get());\n  assertEquals(1,onSubscribed.get());\n  assertEquals(3,countAfter.get());\n  sref.get().onComplete();\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(2,countBefore.get());\n  assertEquals(2,onSubscribed.get());\n  assertEquals(6,countAfter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDoOnUnSubscribeWorksWithRefCount() throws Exception {\n  final AtomicInteger onSubscribed=new AtomicInteger();\n  final AtomicInteger countBefore=new AtomicInteger();\n  final AtomicInteger countAfter=new AtomicInteger();\n  final AtomicReference<Subscriber<? super Integer>> sref=new AtomicReference<Subscriber<? super Integer>>();\n  Flowable<Integer> o=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    Subscriber<? super Integer> s){\n      s.onSubscribe(new BooleanSubscription());\n      onSubscribed.incrementAndGet();\n      sref.set(s);\n    }\n  }\n).doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countBefore.incrementAndGet();\n    }\n  }\n).publish().refCount().doOnSubscribe(new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      countAfter.incrementAndGet();\n    }\n  }\n);\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(1,countBefore.get());\n  assertEquals(1,onSubscribed.get());\n  assertEquals(3,countAfter.get());\n  sref.get().onComplete();\n  o.subscribe();\n  o.subscribe();\n  o.subscribe();\n  assertEquals(2,countBefore.get());\n  assertEquals(2,onSubscribed.get());\n  assertEquals(6,countAfter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(6,countAfter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 97,
    "startColumnNumber" : 24,
    "endLineNumber" : 97,
    "endColumnNumber" : 40
  }, {
    "charLength" : 16,
    "startLineNumber" : 104,
    "startColumnNumber" : 24,
    "endLineNumber" : 104,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}