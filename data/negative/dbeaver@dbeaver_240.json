{
  "id" : 240,
  "expression" : "totalDownloadTime",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/runtime/WebUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "totalDownloadTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 150,
      "startColumnNumber" : 53,
      "endLineNumber" : 150,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 150,
        "startColumnNumber" : 53,
        "endLineNumber" : 150,
        "endColumnNumber" : 84
      },
      "nodeContext" : "totalDownloadTime - elapsedTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 150,
        "startColumnNumber" : 29,
        "endLineNumber" : 150,
        "endColumnNumber" : 84
      },
      "nodeContext" : "remainingDownloadTime=totalDownloadTime - elapsedTime",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 150,
        "startColumnNumber" : 24,
        "endLineNumber" : 150,
        "endColumnNumber" : 85
      },
      "nodeContext" : "long remainingDownloadTime=totalDownloadTime - elapsedTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 147,
        "startColumnNumber" : 44,
        "endLineNumber" : 158,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  long elapsedTime=currentTime - startTime;\n  long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n  long remainingDownloadTime=totalDownloadTime - elapsedTime;\n  updateTime=currentTime;\n  monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 147,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (contentLength >= 0) {\n  long elapsedTime=currentTime - startTime;\n  long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n  long remainingDownloadTime=totalDownloadTime - elapsedTime;\n  updateTime=currentTime;\n  monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n}\n else {\n  monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 146,
        "startColumnNumber" : 53,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (contentLength >= 0) {\n    long elapsedTime=currentTime - startTime;\n    long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n    long remainingDownloadTime=totalDownloadTime - elapsedTime;\n    updateTime=currentTime;\n    monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n  }\n else {\n    monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (currentTime - updateTime > 1000) {\n  if (contentLength >= 0) {\n    long elapsedTime=currentTime - startTime;\n    long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n    long remainingDownloadTime=totalDownloadTime - elapsedTime;\n    updateTime=currentTime;\n    monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n  }\n else {\n    monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1561,
        "startLineNumber" : 141,
        "startColumnNumber" : 25,
        "endLineNumber" : 169,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (monitor.isCanceled()) {\n    throw new InterruptedException();\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - updateTime > 1000) {\n    if (contentLength >= 0) {\n      long elapsedTime=currentTime - startTime;\n      long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n      long remainingDownloadTime=totalDownloadTime - elapsedTime;\n      updateTime=currentTime;\n      monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n    }\n else {\n      monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n    }\n  }\n  final int count=inputStream.read(buffer);\n  if (count <= 0) {\n    return totalRead;\n  }\n  outputStream.write(buffer,0,count);\n  monitor.worked(count);\n  totalRead+=count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1574,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (true) {\n  if (monitor.isCanceled()) {\n    throw new InterruptedException();\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - updateTime > 1000) {\n    if (contentLength >= 0) {\n      long elapsedTime=currentTime - startTime;\n      long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n      long remainingDownloadTime=totalDownloadTime - elapsedTime;\n      updateTime=currentTime;\n      monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n    }\n else {\n      monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n    }\n  }\n  final int count=inputStream.read(buffer);\n  if (count <= 0) {\n    return totalRead;\n  }\n  outputStream.write(buffer,0,count);\n  monitor.worked(count);\n  totalRead+=count;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 154,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 136,
        "startColumnNumber" : 74,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final long startTime=System.currentTimeMillis();\n  long updateTime=0;\n  long totalRead=0;\n  while (true) {\n    if (monitor.isCanceled()) {\n      throw new InterruptedException();\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - updateTime > 1000) {\n      if (contentLength >= 0) {\n        long elapsedTime=currentTime - startTime;\n        long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n        long remainingDownloadTime=totalDownloadTime - elapsedTime;\n        updateTime=currentTime;\n        monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n      }\n else {\n        monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n      }\n    }\n    final int count=inputStream.read(buffer);\n    if (count <= 0) {\n      return totalRead;\n    }\n    outputStream.write(buffer,0,count);\n    monitor.worked(count);\n    totalRead+=count;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1841,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 172,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (final InputStream inputStream=connection.getInputStream()){\n  final long startTime=System.currentTimeMillis();\n  long updateTime=0;\n  long totalRead=0;\n  while (true) {\n    if (monitor.isCanceled()) {\n      throw new InterruptedException();\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - updateTime > 1000) {\n      if (contentLength >= 0) {\n        long elapsedTime=currentTime - startTime;\n        long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n        long remainingDownloadTime=totalDownloadTime - elapsedTime;\n        updateTime=currentTime;\n        monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n      }\n else {\n        monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n      }\n    }\n    final int count=inputStream.read(buffer);\n    if (count <= 0) {\n      return totalRead;\n    }\n    outputStream.write(buffer,0,count);\n    monitor.worked(count);\n    totalRead+=count;\n  }\n}\n  finally {\n  monitor.done();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 188,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2361,
        "startLineNumber" : 127,
        "startColumnNumber" : 206,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final URLConnection connection=openConnection(externalURL,authInfo,null);\n  final int contentLength=connection.getContentLength();\n  final byte[] buffer=new byte[8192];\n  final ByteNumberFormat numberFormat=new ByteNumberFormat();\n  numberFormat.setUseLongUnitNames(true);\n  monitor.beginTask(taskName + \" - \" + externalURL,contentLength);\n  try (final InputStream inputStream=connection.getInputStream()){\n    final long startTime=System.currentTimeMillis();\n    long updateTime=0;\n    long totalRead=0;\n    while (true) {\n      if (monitor.isCanceled()) {\n        throw new InterruptedException();\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - updateTime > 1000) {\n        if (contentLength >= 0) {\n          long elapsedTime=currentTime - startTime;\n          long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n          long remainingDownloadTime=totalDownloadTime - elapsedTime;\n          updateTime=currentTime;\n          monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n        }\n else {\n          monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n        }\n      }\n      final int count=inputStream.read(buffer);\n      if (count <= 0) {\n        return totalRead;\n      }\n      outputStream.write(buffer,0,count);\n      monitor.worked(count);\n      totalRead+=count;\n    }\n  }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2563,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static long downloadRemoteFile(@NotNull DBRProgressMonitor monitor,String taskName,String externalURL,OutputStream outputStream,DBPAuthInfo authInfo) throws IOException, InterruptedException {\n  final URLConnection connection=openConnection(externalURL,authInfo,null);\n  final int contentLength=connection.getContentLength();\n  final byte[] buffer=new byte[8192];\n  final ByteNumberFormat numberFormat=new ByteNumberFormat();\n  numberFormat.setUseLongUnitNames(true);\n  monitor.beginTask(taskName + \" - \" + externalURL,contentLength);\n  try (final InputStream inputStream=connection.getInputStream()){\n    final long startTime=System.currentTimeMillis();\n    long updateTime=0;\n    long totalRead=0;\n    while (true) {\n      if (monitor.isCanceled()) {\n        throw new InterruptedException();\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - updateTime > 1000) {\n        if (contentLength >= 0) {\n          long elapsedTime=currentTime - startTime;\n          long totalDownloadTime=(long)(elapsedTime * contentLength / (double)totalRead);\n          long remainingDownloadTime=totalDownloadTime - elapsedTime;\n          updateTime=currentTime;\n          monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_known,new Object[]{numberFormat.format(totalRead),numberFormat.format(contentLength),String.format(\"%.2f%%\",totalRead / (double)contentLength * 100),remainingDownloadTime > 0 ? RuntimeUtils.formatExecutionTime(remainingDownloadTime) : \"-\"}));\n        }\n else {\n          monitor.subTask(NLS.bind(ModelMessages.dialog_web_download_text_unknown,numberFormat.format(totalRead)));\n        }\n      }\n      final int count=inputStream.read(buffer);\n      if (count <= 0) {\n        return totalRead;\n      }\n      outputStream.write(buffer,0,count);\n      monitor.worked(count);\n      totalRead+=count;\n    }\n  }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 274,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 150,
        "startColumnNumber" : 24,
        "endLineNumber" : 150,
        "endColumnNumber" : 85
      },
      "nodeContext" : "long remainingDownloadTime=totalDownloadTime - elapsedTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 150,
    "startColumnNumber" : 53,
    "endLineNumber" : 150,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}