{
  "id" : 85,
  "expression" : "unit",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/units/ResupplyPoint.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 11,
      "endLineNumber" : 69,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 69,
        "startColumnNumber" : 11,
        "endLineNumber" : 69,
        "endColumnNumber" : 23
      },
      "nodeContext" : "unit != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit != null) {\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 65,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to resupply nearby units.\n * @return whether resupplying was successful. If unit ammo is disabled, always returns false. \n */\npublic static boolean resupply(Team team,float x,float y,float range,float ammoAmount,Color ammoColor,Boolf<Unit> valid){\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 69,
        "startColumnNumber" : 11,
        "endLineNumber" : 69,
        "endColumnNumber" : 23
      },
      "nodeContext" : "unit != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.blocks.units.Unit"
  }, {
    "nodeContext" : "unit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 70,
      "startColumnNumber" : 65,
      "endLineNumber" : 70,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit != null) {\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 65,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to resupply nearby units.\n * @return whether resupplying was successful. If unit ammo is disabled, always returns false. \n */\npublic static boolean resupply(Team team,float x,float y,float range,float ammoAmount,Color ammoColor,Boolf<Unit> valid){\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.blocks.units.Unit"
  }, {
    "nodeContext" : "unit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 12,
      "endLineNumber" : 71,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 21
      },
      "nodeContext" : "unit.ammo",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit != null) {\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 65,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to resupply nearby units.\n * @return whether resupplying was successful. If unit ammo is disabled, always returns false. \n */\npublic static boolean resupply(Team team,float x,float y,float range,float ammoAmount,Color ammoColor,Boolf<Unit> valid){\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "unit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 33,
      "endLineNumber" : 71,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 71,
        "startColumnNumber" : 33,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "unit.ammo",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 71,
        "startColumnNumber" : 33,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "unit.ammo + ammoAmount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit != null) {\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 65,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to resupply nearby units.\n * @return whether resupplying was successful. If unit ammo is disabled, always returns false. \n */\npublic static boolean resupply(Team team,float x,float y,float range,float ammoAmount,Color ammoColor,Boolf<Unit> valid){\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "unit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 57,
      "endLineNumber" : 71,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 71,
        "startColumnNumber" : 57,
        "endLineNumber" : 71,
        "endColumnNumber" : 66
      },
      "nodeContext" : "unit.type",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 71,
        "startColumnNumber" : 57,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "unit.type.ammoCapacity",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit != null) {\n  Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n  unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 65,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to resupply nearby units.\n * @return whether resupplying was successful. If unit ammo is disabled, always returns false. \n */\npublic static boolean resupply(Team team,float x,float y,float range,float ammoAmount,Color ammoColor,Boolf<Unit> valid){\n  if (!state.rules.unitAmmo)   return false;\n  Unit unit=Units.closest(team,x,y,range,u -> u.type.ammoType instanceof ItemAmmoType && u.ammo <= u.type.ammoCapacity - ammoAmount && valid.get(u));\n  if (unit != null) {\n    Fx.itemTransfer.at(x,y,ammoAmount / 2f,ammoColor,unit);\n    unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "unit.ammo=Math.min(unit.ammo + ammoAmount,unit.type.ammoCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 11,
    "endLineNumber" : 69,
    "endColumnNumber" : 15
  }, {
    "charLength" : 4,
    "startLineNumber" : 70,
    "startColumnNumber" : 65,
    "endLineNumber" : 70,
    "endColumnNumber" : 69
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 12,
    "endLineNumber" : 71,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 33,
    "endLineNumber" : 71,
    "endColumnNumber" : 37
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 57,
    "endLineNumber" : 71,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}