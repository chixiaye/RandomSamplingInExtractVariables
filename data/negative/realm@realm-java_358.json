{
  "id" : 358,
  "expression" : "RealmObject",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/RealmObject.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RealmObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 145,
      "startColumnNumber" : 15,
      "endLineNumber" : 145,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 145,
        "startColumnNumber" : 15,
        "endLineNumber" : 145,
        "endColumnNumber" : 40
      },
      "nodeContext" : "RealmObject.isValid(this)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return RealmObject.isValid(this);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 144,
        "startColumnNumber" : 35,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return RealmObject.isValid(this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Checks if the RealmObject is still valid to use i.e., the RealmObject hasn't been deleted nor has the {@link io.realm.Realm} been closed. It will always return {@code true} for unmanaged objects.<p> Note that this can be used to check the validity of certain conditions such as being  {@code null}when observed. <pre> {@code realm.where(BannerRealm.class).equalTo(\"type\", type).findFirstAsync().asFlowable() .filter(result.isLoaded() && result.isValid()) .first()}</pre>\n * @return {@code true} if the object is still accessible or an unmanaged object, {@code false} otherwise.\n * @see <a href=\"https://github.com/realm/realm-java/tree/master/examples/rxJavaExample\">Examples using Realm with RxJava</a>\n */\n@Override public final boolean isValid(){\n  return RealmObject.isValid(this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 14,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return RealmObject.isValid(this);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.realm.RealmObject"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 145,
    "startColumnNumber" : 15,
    "endLineNumber" : 145,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}