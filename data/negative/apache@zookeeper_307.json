{
  "id" : 307,
  "expression" : "children",
  "projectName" : "apache@zookeeper",
  "commitID" : "90090902302f923a98b24185a56b392ca4144e54",
  "filePath" : "zookeeper/java/src/com/yahoo/zookeeper/server/DataTree.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "children",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 457,
      "startColumnNumber" : 12,
      "endLineNumber" : 457,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 457,
        "startColumnNumber" : 12,
        "endLineNumber" : 457,
        "endColumnNumber" : 28
      },
      "nodeContext" : "children != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 457,
        "startColumnNumber" : 8,
        "endLineNumber" : 466,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (children != null) {\n  for (  String child : children) {\n    path.delete(off,Integer.MAX_VALUE);\n    path.append(child);\n    serializeNode(oa,path);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 442,
        "startColumnNumber" : 53,
        "endLineNumber" : 467,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pathString=path.toString();\n  DataNode node=getNode(pathString);\n  if (node == null) {\n    return;\n  }\n  String children[]=null;\nsynchronized (node) {\n    scount++;\n    oa.writeString(pathString,\"path\");\n    oa.writeRecord(node,\"node\");\n    children=node.children.toArray(new String[node.children.size()]);\n  }\n  path.append('/');\n  int off=path.length();\n  if (children != null) {\n    for (    String child : children) {\n      path.delete(off,Integer.MAX_VALUE);\n      path.append(child);\n      serializeNode(oa,path);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 432,
        "startColumnNumber" : 4,
        "endLineNumber" : 467,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * this method uses a stringbuilder to create a new  path for children. This is faster than string appends ( str1 + str2). \n * @param oa OutputArchive to write to.\n * @param path a string builder.\n * @throws IOException\n * @throws InterruptedException\n */\nvoid serializeNode(OutputArchive oa,StringBuilder path) throws IOException, InterruptedException {\n  String pathString=path.toString();\n  DataNode node=getNode(pathString);\n  if (node == null) {\n    return;\n  }\n  String children[]=null;\nsynchronized (node) {\n    scount++;\n    oa.writeString(pathString,\"path\");\n    oa.writeRecord(node,\"node\");\n    children=node.children.toArray(new String[node.children.size()]);\n  }\n  path.append('/');\n  int off=path.length();\n  if (children != null) {\n    for (    String child : children) {\n      path.delete(off,Integer.MAX_VALUE);\n      path.append(child);\n      serializeNode(oa,path);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 457,
        "startColumnNumber" : 12,
        "endLineNumber" : 457,
        "endColumnNumber" : 28
      },
      "nodeContext" : "children != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  }, {
    "nodeContext" : "children",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 458,
      "startColumnNumber" : 32,
      "endLineNumber" : 458,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 458,
        "startColumnNumber" : 12,
        "endLineNumber" : 465,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String child : children) {\n  path.delete(off,Integer.MAX_VALUE);\n  path.append(child);\n  serializeNode(oa,path);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 457,
        "startColumnNumber" : 30,
        "endLineNumber" : 466,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  String child : children) {\n    path.delete(off,Integer.MAX_VALUE);\n    path.append(child);\n    serializeNode(oa,path);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 457,
        "startColumnNumber" : 8,
        "endLineNumber" : 466,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (children != null) {\n  for (  String child : children) {\n    path.delete(off,Integer.MAX_VALUE);\n    path.append(child);\n    serializeNode(oa,path);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 442,
        "startColumnNumber" : 53,
        "endLineNumber" : 467,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pathString=path.toString();\n  DataNode node=getNode(pathString);\n  if (node == null) {\n    return;\n  }\n  String children[]=null;\nsynchronized (node) {\n    scount++;\n    oa.writeString(pathString,\"path\");\n    oa.writeRecord(node,\"node\");\n    children=node.children.toArray(new String[node.children.size()]);\n  }\n  path.append('/');\n  int off=path.length();\n  if (children != null) {\n    for (    String child : children) {\n      path.delete(off,Integer.MAX_VALUE);\n      path.append(child);\n      serializeNode(oa,path);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 432,
        "startColumnNumber" : 4,
        "endLineNumber" : 467,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * this method uses a stringbuilder to create a new  path for children. This is faster than string appends ( str1 + str2). \n * @param oa OutputArchive to write to.\n * @param path a string builder.\n * @throws IOException\n * @throws InterruptedException\n */\nvoid serializeNode(OutputArchive oa,StringBuilder path) throws IOException, InterruptedException {\n  String pathString=path.toString();\n  DataNode node=getNode(pathString);\n  if (node == null) {\n    return;\n  }\n  String children[]=null;\nsynchronized (node) {\n    scount++;\n    oa.writeString(pathString,\"path\");\n    oa.writeRecord(node,\"node\");\n    children=node.children.toArray(new String[node.children.size()]);\n  }\n  path.append('/');\n  int off=path.length();\n  if (children != null) {\n    for (    String child : children) {\n      path.delete(off,Integer.MAX_VALUE);\n      path.append(child);\n      serializeNode(oa,path);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 458,
        "startColumnNumber" : 12,
        "endLineNumber" : 465,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String child : children) {\n  path.delete(off,Integer.MAX_VALUE);\n  path.append(child);\n  serializeNode(oa,path);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 457,
    "startColumnNumber" : 12,
    "endLineNumber" : 457,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 458,
    "startColumnNumber" : 32,
    "endLineNumber" : 458,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}