{
  "id" : 23,
  "expression" : "'\\f'",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sample/src/main/java/com/tencent/sonic/demo/SonicJavaScriptInterface.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'\\f'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 127,
      "startColumnNumber" : 21,
      "endLineNumber" : 127,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 127,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 26
      },
      "nodeContext" : "case '\\f':",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (c) {\ncase '\"':case '\\\\':case '/':  out.append('\\\\').append(c);\nbreak;\ncase '\\t':out.append(\"\\\\t\");\nbreak;\ncase '\\b':out.append(\"\\\\b\");\nbreak;\ncase '\\n':out.append(\"\\\\n\");\nbreak;\ncase '\\r':out.append(\"\\\\r\");\nbreak;\ncase '\\f':out.append(\"\\\\f\");\nbreak;\ndefault:if (c <= 0x1F) {\nout.append(String.format(\"\\\\u%04x\",(int)c));\n}\n else {\nout.append(c);\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 100,
        "startColumnNumber" : 66,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=value.charAt(i);\nswitch (c) {\ncase '\"':case '\\\\':case '/':    out.append('\\\\').append(c);\n  break;\ncase '\\t':out.append(\"\\\\t\");\nbreak;\ncase '\\b':out.append(\"\\\\b\");\nbreak;\ncase '\\n':out.append(\"\\\\n\");\nbreak;\ncase '\\r':out.append(\"\\\\r\");\nbreak;\ncase '\\f':out.append(\"\\\\f\");\nbreak;\ndefault:if (c <= 0x1F) {\nout.append(String.format(\"\\\\u%04x\",(int)c));\n}\n else {\nout.append(c);\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, length=value.length(); i < length; i++) {\n  char c=value.charAt(i);\nswitch (c) {\ncase '\"':case '\\\\':case '/':    out.append('\\\\').append(c);\n  break;\ncase '\\t':out.append(\"\\\\t\");\nbreak;\ncase '\\b':out.append(\"\\\\b\");\nbreak;\ncase '\\n':out.append(\"\\\\n\");\nbreak;\ncase '\\r':out.append(\"\\\\r\");\nbreak;\ncase '\\f':out.append(\"\\\\f\");\nbreak;\ndefault:if (c <= 0x1F) {\nout.append(String.format(\"\\\\u%04x\",(int)c));\n}\n else {\nout.append(c);\n}\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 95,
        "startColumnNumber" : 51,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (value == null) {\n    return \"null\";\n  }\n  StringBuilder out=new StringBuilder(1024);\n  for (int i=0, length=value.length(); i < length; i++) {\n    char c=value.charAt(i);\nswitch (c) {\ncase '\"':case '\\\\':case '/':      out.append('\\\\').append(c);\n    break;\ncase '\\t':  out.append(\"\\\\t\");\nbreak;\ncase '\\b':out.append(\"\\\\b\");\nbreak;\ncase '\\n':out.append(\"\\\\n\");\nbreak;\ncase '\\r':out.append(\"\\\\r\");\nbreak;\ncase '\\f':out.append(\"\\\\f\");\nbreak;\ndefault:if (c <= 0x1F) {\nout.append(String.format(\"\\\\u%04x\",(int)c));\n}\n else {\nout.append(c);\n}\nbreak;\n}\n}\nreturn out.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static String toJsString(String value){\n  if (value == null) {\n    return \"null\";\n  }\n  StringBuilder out=new StringBuilder(1024);\n  for (int i=0, length=value.length(); i < length; i++) {\n    char c=value.charAt(i);\nswitch (c) {\ncase '\"':case '\\\\':case '/':      out.append('\\\\').append(c);\n    break;\ncase '\\t':  out.append(\"\\\\t\");\nbreak;\ncase '\\b':out.append(\"\\\\b\");\nbreak;\ncase '\\n':out.append(\"\\\\n\");\nbreak;\ncase '\\r':out.append(\"\\\\r\");\nbreak;\ncase '\\f':out.append(\"\\\\f\");\nbreak;\ndefault:if (c <= 0x1F) {\nout.append(String.format(\"\\\\u%04x\",(int)c));\n}\n else {\nout.append(c);\n}\nbreak;\n}\n}\nreturn out.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 127,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 26
      },
      "nodeContext" : "case '\\f':",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 127,
    "startColumnNumber" : 21,
    "endLineNumber" : 127,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}