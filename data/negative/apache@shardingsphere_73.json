{
  "id" : 73,
  "expression" : "actualSegment",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/alter/impl/AlterDatabaseDiscoveryTypeStatementAssert.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actualSegment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 57,
      "startColumnNumber" : 30,
      "endLineNumber" : 57,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertNotNull(actualSegment)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertNotNull(actualSegment);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 55,
        "startColumnNumber" : 48,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "each -> {\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 41,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertNotNull(actualSegment);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "actualSegment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 58,
      "startColumnNumber" : 27,
      "endLineNumber" : 58,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 58,
        "startColumnNumber" : 27,
        "endLineNumber" : 58,
        "endColumnNumber" : 63
      },
      "nodeContext" : "actualSegment.getDiscoveryTypeName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 55,
        "startColumnNumber" : 48,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "each -> {\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 41,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "actualSegment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 59,
      "startColumnNumber" : 56,
      "endLineNumber" : 59,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 59,
        "startColumnNumber" : 56,
        "endLineNumber" : 59,
        "endColumnNumber" : 91
      },
      "nodeContext" : "actualSegment.getAlgorithmSegment()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 120
      },
      "nodeContext" : "AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 121
      },
      "nodeContext" : "AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 55,
        "startColumnNumber" : 48,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "each -> {\n  DatabaseDiscoveryTypeSegment actualSegment=actualMap.get(each.getDiscoveryTypeName());\n  assertNotNull(actualSegment);\n  assertThat(actualSegment.getDiscoveryTypeName(),is(each.getDiscoveryTypeName()));\n  AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 41,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 121
      },
      "nodeContext" : "AlgorithmAssert.assertIs(assertContext,actualSegment.getAlgorithmSegment(),each.getAlgorithmSegment());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 57,
    "startColumnNumber" : 30,
    "endLineNumber" : 57,
    "endColumnNumber" : 43
  }, {
    "charLength" : 13,
    "startLineNumber" : 58,
    "startColumnNumber" : 27,
    "endLineNumber" : 58,
    "endColumnNumber" : 40
  }, {
    "charLength" : 13,
    "startLineNumber" : 59,
    "startColumnNumber" : 56,
    "endLineNumber" : 59,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}