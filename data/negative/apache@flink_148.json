{
  "id" : 148,
  "expression" : "!isReleased",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/HashBasedDataBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!isReleased",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 139,
      "startColumnNumber" : 19,
      "endLineNumber" : 139,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 67
      },
      "nodeContext" : "checkState(!isReleased,\"Sort buffer is already released.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 68
      },
      "nodeContext" : "checkState(!isReleased,\"Sort buffer is already released.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 135,
        "startColumnNumber" : 31,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(source.hasRemaining(),\"Cannot append empty data.\");\n  checkState(!isFull,\"Sort buffer is already full.\");\n  checkState(!isFinished,\"Sort buffer is already finished.\");\n  checkState(!isReleased,\"Sort buffer is already released.\");\n  int totalBytes=source.remaining();\n  if (dataType.isBuffer()) {\n    writeRecord(source,targetChannel);\n  }\n else {\n    writeEvent(source,targetChannel,dataType);\n  }\n  isFull=source.hasRemaining();\n  if (!isFull) {\n    ++numTotalRecords;\n  }\n  numTotalBytes+=totalBytes - source.remaining();\n  return isFull;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Partial data of the target record can be written if this  {@link HashBasedDataBuffer} is full.The remaining data of the target record will be written to the next data region (a new data buffer or this data buffer after reset).\n */\n@Override public boolean append(ByteBuffer source,int targetChannel,Buffer.DataType dataType) throws IOException {\n  checkArgument(source.hasRemaining(),\"Cannot append empty data.\");\n  checkState(!isFull,\"Sort buffer is already full.\");\n  checkState(!isFinished,\"Sort buffer is already finished.\");\n  checkState(!isReleased,\"Sort buffer is already released.\");\n  int totalBytes=source.remaining();\n  if (dataType.isBuffer()) {\n    writeRecord(source,targetChannel);\n  }\n else {\n    writeEvent(source,targetChannel,dataType);\n  }\n  isFull=source.hasRemaining();\n  if (!isFull) {\n    ++numTotalRecords;\n  }\n  numTotalBytes+=totalBytes - source.remaining();\n  return isFull;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 68
      },
      "nodeContext" : "checkState(!isReleased,\"Sort buffer is already released.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 139,
    "startColumnNumber" : 19,
    "endLineNumber" : 139,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}