{
  "id" : 489,
  "expression" : "\"args.add_joined(ruleContext.files.srcs, join_with=':')\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/starlark/StarlarkRuleImplementationFunctionsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"args.add_joined(ruleContext.files.srcs, join_with=':')\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 2213,
      "startColumnNumber" : 8,
      "endLineNumber" : 2213,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 2202,
        "startColumnNumber" : 4,
        "endLineNumber" : 2221,
        "endColumnNumber" : 12
      },
      "nodeContext" : "ev.exec(\"def add_one(val): return str(val + 1)\",\"args = ruleContext.actions.args()\",\"args.add_joined([1, 2], join_with=':')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s', format_joined='--foo=%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', map_each=add_one)\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':')\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':', format_each='format/%s')\",\"ruleContext.actions.run(\",\"  inputs = depset(ruleContext.files.srcs),\",\"  outputs = ruleContext.files.srcs,\",\"  arguments = [args],\",\"  executable = ruleContext.files.tools[0],\",\")\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 916,
        "startLineNumber" : 2202,
        "startColumnNumber" : 4,
        "endLineNumber" : 2221,
        "endColumnNumber" : 13
      },
      "nodeContext" : "ev.exec(\"def add_one(val): return str(val + 1)\",\"args = ruleContext.actions.args()\",\"args.add_joined([1, 2], join_with=':')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s', format_joined='--foo=%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', map_each=add_one)\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':')\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':', format_each='format/%s')\",\"ruleContext.actions.run(\",\"  inputs = depset(ruleContext.files.srcs),\",\"  outputs = ruleContext.files.srcs,\",\"  arguments = [args],\",\"  executable = ruleContext.files.tools[0],\",\")\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1597,
        "startLineNumber" : 2199,
        "startColumnNumber" : 51,
        "endLineNumber" : 2241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StarlarkRuleContext ruleContext=createRuleContext(\"//foo:foo\");\n  setRuleContext(ruleContext);\n  ev.exec(\"def add_one(val): return str(val + 1)\",\"args = ruleContext.actions.args()\",\"args.add_joined([1, 2], join_with=':')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s', format_joined='--foo=%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', map_each=add_one)\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':')\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':', format_each='format/%s')\",\"ruleContext.actions.run(\",\"  inputs = depset(ruleContext.files.srcs),\",\"  outputs = ruleContext.files.srcs,\",\"  arguments = [args],\",\"  executable = ruleContext.files.tools[0],\",\")\");\n  SpawnAction action=(SpawnAction)Iterables.getOnlyElement(ruleContext.getRuleContext().getAnalysisEnvironment().getRegisteredActions());\n  assertThat(action.getArguments()).containsExactly(\"foo/t.exe\",\"1:2\",\"-\",\"format/1:format/2\",\"-\",\"--foo=format/1:format/2\",\"-\",\"2:3\",\"-\",\"foo/a.txt:foo/b.img\",\"-\",\"format/foo/a.txt:format/foo/b.img\").inOrder();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1654,
        "startLineNumber" : 2198,
        "startColumnNumber" : 2,
        "endLineNumber" : 2241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testArgsAddJoined() throws Exception {\n  StarlarkRuleContext ruleContext=createRuleContext(\"//foo:foo\");\n  setRuleContext(ruleContext);\n  ev.exec(\"def add_one(val): return str(val + 1)\",\"args = ruleContext.actions.args()\",\"args.add_joined([1, 2], join_with=':')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s', format_joined='--foo=%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', map_each=add_one)\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':')\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':', format_each='format/%s')\",\"ruleContext.actions.run(\",\"  inputs = depset(ruleContext.files.srcs),\",\"  outputs = ruleContext.files.srcs,\",\"  arguments = [args],\",\"  executable = ruleContext.files.tools[0],\",\")\");\n  SpawnAction action=(SpawnAction)Iterables.getOnlyElement(ruleContext.getRuleContext().getAnalysisEnvironment().getRegisteredActions());\n  assertThat(action.getArguments()).containsExactly(\"foo/t.exe\",\"1:2\",\"-\",\"format/1:format/2\",\"-\",\"--foo=format/1:format/2\",\"-\",\"2:3\",\"-\",\"foo/a.txt:foo/b.img\",\"-\",\"format/foo/a.txt:format/foo/b.img\").inOrder();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 2202,
        "startColumnNumber" : 4,
        "endLineNumber" : 2221,
        "endColumnNumber" : 12
      },
      "nodeContext" : "ev.exec(\"def add_one(val): return str(val + 1)\",\"args = ruleContext.actions.args()\",\"args.add_joined([1, 2], join_with=':')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', format_each='format/%s', format_joined='--foo=%s')\",\"args.add('-')\",\"args.add_joined([1, 2], join_with=':', map_each=add_one)\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':')\",\"args.add('-')\",\"args.add_joined(ruleContext.files.srcs, join_with=':', format_each='format/%s')\",\"ruleContext.actions.run(\",\"  inputs = depset(ruleContext.files.srcs),\",\"  outputs = ruleContext.files.srcs,\",\"  arguments = [args],\",\"  executable = ruleContext.files.tools[0],\",\")\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 2
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 2213,
    "startColumnNumber" : 8,
    "endLineNumber" : 2213,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}