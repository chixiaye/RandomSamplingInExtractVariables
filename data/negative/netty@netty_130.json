{
  "id" : 130,
  "expression" : "3",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/ssl/SslUtils.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 296,
      "startColumnNumber" : 32,
      "endLineNumber" : 296,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 296,
        "startColumnNumber" : 16,
        "endLineNumber" : 296,
        "endColumnNumber" : 33
      },
      "nodeContext" : "majorVersion == 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 296,
        "startColumnNumber" : 16,
        "endLineNumber" : 296,
        "endColumnNumber" : 90
      },
      "nodeContext" : "majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 296,
        "startColumnNumber" : 12,
        "endLineNumber" : 306,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n  packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n  if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n    tls=false;\n  }\n}\n else {\n  tls=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 293,
        "startColumnNumber" : 17,
        "endLineNumber" : 307,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int majorVersion=buffer.getUnsignedByte(offset + 1);\n  if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n    packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n    if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n      tls=false;\n    }\n  }\n else {\n    tls=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tls) {\n  int majorVersion=buffer.getUnsignedByte(offset + 1);\n  if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n    packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n    if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n      tls=false;\n    }\n  }\n else {\n    tls=false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 275,
        "startColumnNumber" : 68,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return how much bytes can be read out of the encrypted data. Be aware that this method will not increase the readerIndex of the given  {@link ByteBuf}.\n * @param buffer The  {@link ByteBuf} to read from. Be aware that it must have at least{@link #SSL_RECORD_HEADER_LENGTH} bytes to read,otherwise it will throw an  {@link IllegalArgumentException}.\n * @return lengthThe length of the encrypted packet that is included in the buffer or {@link #SslUtils#NOT_ENOUGH_DATA} if not enough data is present in the{@link ByteBuf}. This will return  {@link SslUtils#NOT_ENCRYPTED} ifthe given  {@link ByteBuf} is not encrypted at all.\n * @throws IllegalArgumentException Is thrown if the given  {@link ByteBuf} has not at least {@link #SSL_RECORD_HEADER_LENGTH}bytes to read.\n */\nstatic int getEncryptedPacketLength(ByteBuf buffer,int offset){\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 296,
        "startColumnNumber" : 16,
        "endLineNumber" : 296,
        "endColumnNumber" : 90
      },
      "nodeContext" : "majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 298,
      "startColumnNumber" : 64,
      "endLineNumber" : 298,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 298,
        "startColumnNumber" : 55,
        "endLineNumber" : 298,
        "endColumnNumber" : 65
      },
      "nodeContext" : "offset + 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 298,
        "startColumnNumber" : 31,
        "endLineNumber" : 298,
        "endColumnNumber" : 66
      },
      "nodeContext" : "unsignedShortBE(buffer,offset + 3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 298,
        "startColumnNumber" : 31,
        "endLineNumber" : 298,
        "endColumnNumber" : 93
      },
      "nodeContext" : "unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 298,
        "startColumnNumber" : 16,
        "endLineNumber" : 298,
        "endColumnNumber" : 93
      },
      "nodeContext" : "packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 298,
        "startColumnNumber" : 16,
        "endLineNumber" : 298,
        "endColumnNumber" : 94
      },
      "nodeContext" : "packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 296,
        "startColumnNumber" : 92,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n  if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n    tls=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 296,
        "startColumnNumber" : 12,
        "endLineNumber" : 306,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n  packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n  if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n    tls=false;\n  }\n}\n else {\n  tls=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 293,
        "startColumnNumber" : 17,
        "endLineNumber" : 307,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int majorVersion=buffer.getUnsignedByte(offset + 1);\n  if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n    packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n    if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n      tls=false;\n    }\n  }\n else {\n    tls=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tls) {\n  int majorVersion=buffer.getUnsignedByte(offset + 1);\n  if (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\n    packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n    if (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n      tls=false;\n    }\n  }\n else {\n    tls=false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 275,
        "startColumnNumber" : 68,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return how much bytes can be read out of the encrypted data. Be aware that this method will not increase the readerIndex of the given  {@link ByteBuf}.\n * @param buffer The  {@link ByteBuf} to read from. Be aware that it must have at least{@link #SSL_RECORD_HEADER_LENGTH} bytes to read,otherwise it will throw an  {@link IllegalArgumentException}.\n * @return lengthThe length of the encrypted packet that is included in the buffer or {@link #SslUtils#NOT_ENOUGH_DATA} if not enough data is present in the{@link ByteBuf}. This will return  {@link SslUtils#NOT_ENCRYPTED} ifthe given  {@link ByteBuf} is not encrypted at all.\n * @throws IllegalArgumentException Is thrown if the given  {@link ByteBuf} has not at least {@link #SSL_RECORD_HEADER_LENGTH}bytes to read.\n */\nstatic int getEncryptedPacketLength(ByteBuf buffer,int offset){\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 298,
        "startColumnNumber" : 16,
        "endLineNumber" : 298,
        "endColumnNumber" : 94
      },
      "nodeContext" : "packetLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 311,
      "startColumnNumber" : 82,
      "endLineNumber" : 311,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 311,
        "startColumnNumber" : 31,
        "endLineNumber" : 311,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 311,
        "startColumnNumber" : 16,
        "endLineNumber" : 311,
        "endColumnNumber" : 83
      },
      "nodeContext" : "headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 311,
        "startColumnNumber" : 12,
        "endLineNumber" : 311,
        "endColumnNumber" : 84
      },
      "nodeContext" : "int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 309,
        "startColumnNumber" : 18,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!tls) {\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 275,
        "startColumnNumber" : 68,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return how much bytes can be read out of the encrypted data. Be aware that this method will not increase the readerIndex of the given  {@link ByteBuf}.\n * @param buffer The  {@link ByteBuf} to read from. Be aware that it must have at least{@link #SSL_RECORD_HEADER_LENGTH} bytes to read,otherwise it will throw an  {@link IllegalArgumentException}.\n * @return lengthThe length of the encrypted packet that is included in the buffer or {@link #SslUtils#NOT_ENOUGH_DATA} if not enough data is present in the{@link ByteBuf}. This will return  {@link SslUtils#NOT_ENCRYPTED} ifthe given  {@link ByteBuf} is not encrypted at all.\n * @throws IllegalArgumentException Is thrown if the given  {@link ByteBuf} has not at least {@link #SSL_RECORD_HEADER_LENGTH}bytes to read.\n */\nstatic int getEncryptedPacketLength(ByteBuf buffer,int offset){\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 311,
        "startColumnNumber" : 12,
        "endLineNumber" : 311,
        "endColumnNumber" : 84
      },
      "nodeContext" : "int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 313,
      "startColumnNumber" : 53,
      "endLineNumber" : 313,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 313,
        "startColumnNumber" : 37,
        "endLineNumber" : 313,
        "endColumnNumber" : 54
      },
      "nodeContext" : "majorVersion == 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 313,
        "startColumnNumber" : 16,
        "endLineNumber" : 313,
        "endColumnNumber" : 54
      },
      "nodeContext" : "majorVersion == 2 || majorVersion == 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 322,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (majorVersion == 2 || majorVersion == 3) {\n  packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n  if (packetLength <= headerLength) {\n    return NOT_ENOUGH_DATA;\n  }\n}\n else {\n  return NOT_ENCRYPTED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 309,
        "startColumnNumber" : 18,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!tls) {\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 275,
        "startColumnNumber" : 68,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return how much bytes can be read out of the encrypted data. Be aware that this method will not increase the readerIndex of the given  {@link ByteBuf}.\n * @param buffer The  {@link ByteBuf} to read from. Be aware that it must have at least{@link #SSL_RECORD_HEADER_LENGTH} bytes to read,otherwise it will throw an  {@link IllegalArgumentException}.\n * @return lengthThe length of the encrypted packet that is included in the buffer or {@link #SslUtils#NOT_ENOUGH_DATA} if not enough data is present in the{@link ByteBuf}. This will return  {@link SslUtils#NOT_ENCRYPTED} ifthe given  {@link ByteBuf} is not encrypted at all.\n * @throws IllegalArgumentException Is thrown if the given  {@link ByteBuf} has not at least {@link #SSL_RECORD_HEADER_LENGTH}bytes to read.\n */\nstatic int getEncryptedPacketLength(ByteBuf buffer,int offset){\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 313,
        "startColumnNumber" : 16,
        "endLineNumber" : 313,
        "endColumnNumber" : 54
      },
      "nodeContext" : "majorVersion == 2 || majorVersion == 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 316,
      "startColumnNumber" : 102,
      "endLineNumber" : 316,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 316,
        "startColumnNumber" : 65,
        "endLineNumber" : 316,
        "endColumnNumber" : 103
      },
      "nodeContext" : "(shortBE(buffer,offset) & 0x3FFF) + 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 315,
        "startColumnNumber" : 31,
        "endLineNumber" : 316,
        "endColumnNumber" : 103
      },
      "nodeContext" : "headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 315,
        "startColumnNumber" : 16,
        "endLineNumber" : 316,
        "endColumnNumber" : 103
      },
      "nodeContext" : "packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 315,
        "startColumnNumber" : 16,
        "endLineNumber" : 316,
        "endColumnNumber" : 104
      },
      "nodeContext" : "packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 313,
        "startColumnNumber" : 56,
        "endLineNumber" : 320,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n  if (packetLength <= headerLength) {\n    return NOT_ENOUGH_DATA;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 322,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (majorVersion == 2 || majorVersion == 3) {\n  packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n  if (packetLength <= headerLength) {\n    return NOT_ENOUGH_DATA;\n  }\n}\n else {\n  return NOT_ENCRYPTED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 309,
        "startColumnNumber" : 18,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!tls) {\n  int headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\n  int majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\n  if (majorVersion == 2 || majorVersion == 3) {\n    packetLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\n    if (packetLength <= headerLength) {\n      return NOT_ENOUGH_DATA;\n    }\n  }\n else {\n    return NOT_ENCRYPTED;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 275,
        "startColumnNumber" : 68,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 325,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return how much bytes can be read out of the encrypted data. Be aware that this method will not increase the readerIndex of the given  {@link ByteBuf}.\n * @param buffer The  {@link ByteBuf} to read from. Be aware that it must have at least{@link #SSL_RECORD_HEADER_LENGTH} bytes to read,otherwise it will throw an  {@link IllegalArgumentException}.\n * @return lengthThe length of the encrypted packet that is included in the buffer or {@link #SslUtils#NOT_ENOUGH_DATA} if not enough data is present in the{@link ByteBuf}. This will return  {@link SslUtils#NOT_ENCRYPTED} ifthe given  {@link ByteBuf} is not encrypted at all.\n * @throws IllegalArgumentException Is thrown if the given  {@link ByteBuf} has not at least {@link #SSL_RECORD_HEADER_LENGTH}bytes to read.\n */\nstatic int getEncryptedPacketLength(ByteBuf buffer,int offset){\n  int packetLength=0;\n  boolean tls;\nswitch (buffer.getUnsignedByte(offset)) {\ncase SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC:case SSL_CONTENT_TYPE_ALERT:case SSL_CONTENT_TYPE_HANDSHAKE:case SSL_CONTENT_TYPE_APPLICATION_DATA:case SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT:    tls=true;\n  break;\ndefault:tls=false;\n}\nif (tls) {\nint majorVersion=buffer.getUnsignedByte(offset + 1);\nif (majorVersion == 3 || buffer.getShort(offset + 1) == GMSSL_PROTOCOL_VERSION) {\npacketLength=unsignedShortBE(buffer,offset + 3) + SSL_RECORD_HEADER_LENGTH;\nif (packetLength <= SSL_RECORD_HEADER_LENGTH) {\n  tls=false;\n}\n}\n else {\ntls=false;\n}\n}\nif (!tls) {\nint headerLength=(buffer.getUnsignedByte(offset) & 0x80) != 0 ? 2 : 3;\nint majorVersion=buffer.getUnsignedByte(offset + headerLength + 1);\nif (majorVersion == 2 || majorVersion == 3) {\npacketLength=headerLength == 2 ? (shortBE(buffer,offset) & 0x7FFF) + 2 : (shortBE(buffer,offset) & 0x3FFF) + 3;\nif (packetLength <= headerLength) {\n  return NOT_ENOUGH_DATA;\n}\n}\n else {\nreturn NOT_ENCRYPTED;\n}\n}\nreturn packetLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 316,
        "startColumnNumber" : 65,
        "endLineNumber" : 316,
        "endColumnNumber" : 103
      },
      "nodeContext" : "(shortBE(buffer,offset) & 0x3FFF) + 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 296,
    "startColumnNumber" : 32,
    "endLineNumber" : 296,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 298,
    "startColumnNumber" : 64,
    "endLineNumber" : 298,
    "endColumnNumber" : 65
  }, {
    "charLength" : 1,
    "startLineNumber" : 311,
    "startColumnNumber" : 82,
    "endLineNumber" : 311,
    "endColumnNumber" : 83
  }, {
    "charLength" : 1,
    "startLineNumber" : 313,
    "startColumnNumber" : 53,
    "endLineNumber" : 313,
    "endColumnNumber" : 54
  }, {
    "charLength" : 1,
    "startLineNumber" : 316,
    "startColumnNumber" : 102,
    "endLineNumber" : 316,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}