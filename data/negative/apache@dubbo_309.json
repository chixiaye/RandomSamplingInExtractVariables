{
  "id" : 309,
  "expression" : "System",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/bytecode/ClassGeneratorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 8,
      "endLineNumber" : 56,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(cl.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(cl.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 34,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testMain() throws Exception {\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(cl.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 8,
      "endLineNumber" : 58,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "System.out.println(b.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(b.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 34,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testMain() throws Exception {\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(b.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 8,
      "endLineNumber" : 60,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "System.out.println(b.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(b.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 34,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testMain() throws Exception {\n  Bean b=new Bean();\n  Field fname=null, fs[]=Bean.class.getDeclaredFields();\n  for (  Field f : fs) {\n    f.setAccessible(true);\n    if (f.getName().equals(\"name\"))     fname=f;\n  }\n  ClassGenerator cg=ClassGenerator.newInstance();\n  cg.setClassName(Bean.class.getName() + \"$Builder\");\n  cg.addInterface(Builder.class);\n  cg.addField(\"public static java.lang.reflect.Field FNAME;\");\n  cg.addMethod(\"public Object getName(\" + Bean.class.getName() + \" o){ boolean[][][] bs = new boolean[0][][]; return (String)FNAME.get($1); }\");\n  cg.addMethod(\"public void setName(\" + Bean.class.getName() + \" o, Object name){ FNAME.set($1, $2); }\");\n  cg.addDefaultConstructor();\n  Class<?> cl=cg.toClass();\n  cl.getField(\"FNAME\").set(null,fname);\n  System.out.println(cl.getName());\n  Builder<String> builder=(Builder<String>)cl.newInstance();\n  System.out.println(b.getName());\n  builder.setName(b,\"ok\");\n  System.out.println(b.getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(b.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 8,
    "endLineNumber" : 56,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 8,
    "endLineNumber" : 58,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 8,
    "endLineNumber" : 60,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}