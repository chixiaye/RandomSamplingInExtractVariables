{
  "id" : 92,
  "expression" : "errorPage.getError()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/LegacyLogoutTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "errorPage.getError()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 177,
      "startColumnNumber" : 56,
      "endLineNumber" : 177,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  OAuthClient.AccessTokenResponse tokenResponse=loginUser();\n  String invalidRedirectUri=ServerURLs.getAuthServerContextRoot() + \"/bar\";\n  String idTokenString=tokenResponse.getIdToken();\n  String logoutUrl=oauth.getLogoutUrl().redirectUri(invalidRedirectUri).build();\n  driver.navigate().to(logoutUrl);\n  events.expectLogoutError(Errors.INVALID_REDIRECT_URI).assertEvent();\n  assertCurrentUrlDoesntStartWith(invalidRedirectUri);\n  errorPage.assertCurrent();\n  Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n  Assert.assertThat(true,is(isSessionActive(tokenResponse.getSessionState())));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  OAuthClient.AccessTokenResponse tokenResponse=loginUser();\n  String invalidRedirectUri=ServerURLs.getAuthServerContextRoot() + \"/bar\";\n  String idTokenString=tokenResponse.getIdToken();\n  String logoutUrl=oauth.getLogoutUrl().redirectUri(invalidRedirectUri).build();\n  driver.navigate().to(logoutUrl);\n  events.expectLogoutError(Errors.INVALID_REDIRECT_URI).assertEvent();\n  assertCurrentUrlDoesntStartWith(invalidRedirectUri);\n  errorPage.assertCurrent();\n  Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n  Assert.assertThat(true,is(isSessionActive(tokenResponse.getSessionState())));\n}\n  finally {\n  clientRes.update(clientRepOrig);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 153,
        "startColumnNumber" : 72,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClientResource clientRes=ApiUtil.findClientByClientId(testRealm(),\"direct-grant\");\n  ClientRepresentation clientRepOrig=clientRes.toRepresentation();\n  ClientRepresentation clientRep=clientRes.toRepresentation();\n  clientRep.setStandardFlowEnabled(false);\n  clientRep.setImplicitFlowEnabled(false);\n  clientRep.setRedirectUris(Collections.singletonList(\"*\"));\n  clientRes.update(clientRep);\n  try {\n    OAuthClient.AccessTokenResponse tokenResponse=loginUser();\n    String invalidRedirectUri=ServerURLs.getAuthServerContextRoot() + \"/bar\";\n    String idTokenString=tokenResponse.getIdToken();\n    String logoutUrl=oauth.getLogoutUrl().redirectUri(invalidRedirectUri).build();\n    driver.navigate().to(logoutUrl);\n    events.expectLogoutError(Errors.INVALID_REDIRECT_URI).assertEvent();\n    assertCurrentUrlDoesntStartWith(invalidRedirectUri);\n    errorPage.assertCurrent();\n    Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n    Assert.assertThat(true,is(isSessionActive(tokenResponse.getSessionState())));\n  }\n  finally {\n    clientRes.update(clientRepOrig);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1460,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void logoutRedirectWithStarRedirectUriForDirectGrantClient(){\n  ClientResource clientRes=ApiUtil.findClientByClientId(testRealm(),\"direct-grant\");\n  ClientRepresentation clientRepOrig=clientRes.toRepresentation();\n  ClientRepresentation clientRep=clientRes.toRepresentation();\n  clientRep.setStandardFlowEnabled(false);\n  clientRep.setImplicitFlowEnabled(false);\n  clientRep.setRedirectUris(Collections.singletonList(\"*\"));\n  clientRes.update(clientRep);\n  try {\n    OAuthClient.AccessTokenResponse tokenResponse=loginUser();\n    String invalidRedirectUri=ServerURLs.getAuthServerContextRoot() + \"/bar\";\n    String idTokenString=tokenResponse.getIdToken();\n    String logoutUrl=oauth.getLogoutUrl().redirectUri(invalidRedirectUri).build();\n    driver.navigate().to(logoutUrl);\n    events.expectLogoutError(Errors.INVALID_REDIRECT_URI).assertEvent();\n    assertCurrentUrlDoesntStartWith(invalidRedirectUri);\n    errorPage.assertCurrent();\n    Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n    Assert.assertThat(true,is(isSessionActive(tokenResponse.getSessionState())));\n  }\n  finally {\n    clientRes.update(clientRepOrig);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertEquals(\"Invalid redirect uri\",errorPage.getError());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 177,
    "startColumnNumber" : 56,
    "endLineNumber" : 177,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}