{
  "id" : 311,
  "expression" : "where",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/MybatisAbstractSQL.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "where",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 255,
      "startColumnNumber" : 40,
      "endLineNumber" : 255,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 255,
        "startColumnNumber" : 12,
        "endLineNumber" : 255,
        "endColumnNumber" : 61
      },
      "nodeContext" : "sqlClause(builder,\"WHERE\",where,\"(\",\")\",AND)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 255,
        "startColumnNumber" : 12,
        "endLineNumber" : 255,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sqlClause(builder,\"WHERE\",where,\"(\",\")\",AND);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 254,
        "startColumnNumber" : 56,
        "endLineNumber" : 264,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sqlClause(builder,\"WHERE\",where,\"(\",\")\",AND);\n  sqlClause(builder,\"GROUP BY\",groupBy,\"\",\"\",\", \");\n  sqlClause(builder,\"HAVING\",having,\"(\",\")\",AND);\n  sqlClause(builder,\"ORDER BY\",orderBy,\"\",\"\",\", \");\n  if (StringUtils.isNotEmpty(last)) {\n    builder.append(\" \");\n    builder.append(last);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 264,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 按标准顺序连接并构建SQL\n * @param builder 连接器\n * @return\n */\nprivate String buildSQL(SafeAppendable builder){\n  sqlClause(builder,\"WHERE\",where,\"(\",\")\",AND);\n  sqlClause(builder,\"GROUP BY\",groupBy,\"\",\"\",\", \");\n  sqlClause(builder,\"HAVING\",having,\"(\",\")\",AND);\n  sqlClause(builder,\"ORDER BY\",orderBy,\"\",\"\",\", \");\n  if (StringUtils.isNotEmpty(last)) {\n    builder.append(\" \");\n    builder.append(last);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 255,
        "startColumnNumber" : 12,
        "endLineNumber" : 255,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sqlClause(builder,\"WHERE\",where,\"(\",\")\",AND);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 255,
    "startColumnNumber" : 40,
    "endLineNumber" : 255,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}