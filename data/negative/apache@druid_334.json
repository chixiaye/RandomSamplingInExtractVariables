{
  "id" : 334,
  "expression" : "dataFileReader",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/avro-extensions/src/main/java/org/apache/druid/data/input/avro/AvroOCFReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataFileReader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 78,
      "startColumnNumber" : 34,
      "endLineNumber" : 78,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 78,
        "startColumnNumber" : 34,
        "endLineNumber" : 78,
        "endColumnNumber" : 60
      },
      "nodeContext" : "dataFileReader.getSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 78,
        "startColumnNumber" : 19,
        "endLineNumber" : 78,
        "endColumnNumber" : 60
      },
      "nodeContext" : "writerSchema=dataFileReader.getSchema()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final Schema writerSchema=dataFileReader.getSchema();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n  final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n  final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n  final Schema writerSchema=dataFileReader.getSchema();\n  if (readerSchema == null) {\n    readerSchema=writerSchema;\n  }\n  datumReader.setSchema(writerSchema);\n  datumReader.setExpected(readerSchema);\n  closer.register(dataFileReader);\n  return new CloseableIterator<GenericRecord>(){\n    @Override public boolean hasNext(){\n      return dataFileReader.hasNext();\n    }\n    @Override public GenericRecord next(){\n      return dataFileReader.next();\n    }\n    @Override public void close() throws IOException {\n      closer.close();\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n  final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n  final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n  final Schema writerSchema=dataFileReader.getSchema();\n  if (readerSchema == null) {\n    readerSchema=writerSchema;\n  }\n  datumReader.setSchema(writerSchema);\n  datumReader.setExpected(readerSchema);\n  closer.register(dataFileReader);\n  return new CloseableIterator<GenericRecord>(){\n    @Override public boolean hasNext(){\n      return dataFileReader.hasNext();\n    }\n    @Override public GenericRecord next(){\n      return dataFileReader.next();\n    }\n    @Override public void close() throws IOException {\n      closer.close();\n    }\n  }\n;\n}\n catch (Exception e) {\n  closer.close();\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1208,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Closer closer=Closer.create();\n  final byte[] buffer=new byte[InputEntity.DEFAULT_FETCH_BUFFER_SIZE];\n  try {\n    final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n    final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n    final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n    final Schema writerSchema=dataFileReader.getSchema();\n    if (readerSchema == null) {\n      readerSchema=writerSchema;\n    }\n    datumReader.setSchema(writerSchema);\n    datumReader.setExpected(readerSchema);\n    closer.register(dataFileReader);\n    return new CloseableIterator<GenericRecord>(){\n      @Override public boolean hasNext(){\n        return dataFileReader.hasNext();\n      }\n      @Override public GenericRecord next(){\n        return dataFileReader.next();\n      }\n      @Override public void close() throws IOException {\n        closer.close();\n      }\n    }\n;\n  }\n catch (  Exception e) {\n    closer.close();\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected CloseableIterator<GenericRecord> intermediateRowIterator() throws IOException {\n  final Closer closer=Closer.create();\n  final byte[] buffer=new byte[InputEntity.DEFAULT_FETCH_BUFFER_SIZE];\n  try {\n    final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n    final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n    final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n    final Schema writerSchema=dataFileReader.getSchema();\n    if (readerSchema == null) {\n      readerSchema=writerSchema;\n    }\n    datumReader.setSchema(writerSchema);\n    datumReader.setExpected(readerSchema);\n    closer.register(dataFileReader);\n    return new CloseableIterator<GenericRecord>(){\n      @Override public boolean hasNext(){\n        return dataFileReader.hasNext();\n      }\n      @Override public GenericRecord next(){\n        return dataFileReader.next();\n      }\n      @Override public void close() throws IOException {\n        closer.close();\n      }\n    }\n;\n  }\n catch (  Exception e) {\n    closer.close();\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final Schema writerSchema=dataFileReader.getSchema();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.data.input.avro.DataFileReader<org.apache.druid.data.input.avro.GenericRecord>"
  }, {
    "nodeContext" : "dataFileReader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 22,
      "endLineNumber" : 84,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 37
      },
      "nodeContext" : "closer.register(dataFileReader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "closer.register(dataFileReader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n  final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n  final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n  final Schema writerSchema=dataFileReader.getSchema();\n  if (readerSchema == null) {\n    readerSchema=writerSchema;\n  }\n  datumReader.setSchema(writerSchema);\n  datumReader.setExpected(readerSchema);\n  closer.register(dataFileReader);\n  return new CloseableIterator<GenericRecord>(){\n    @Override public boolean hasNext(){\n      return dataFileReader.hasNext();\n    }\n    @Override public GenericRecord next(){\n      return dataFileReader.next();\n    }\n    @Override public void close() throws IOException {\n      closer.close();\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n  final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n  final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n  final Schema writerSchema=dataFileReader.getSchema();\n  if (readerSchema == null) {\n    readerSchema=writerSchema;\n  }\n  datumReader.setSchema(writerSchema);\n  datumReader.setExpected(readerSchema);\n  closer.register(dataFileReader);\n  return new CloseableIterator<GenericRecord>(){\n    @Override public boolean hasNext(){\n      return dataFileReader.hasNext();\n    }\n    @Override public GenericRecord next(){\n      return dataFileReader.next();\n    }\n    @Override public void close() throws IOException {\n      closer.close();\n    }\n  }\n;\n}\n catch (Exception e) {\n  closer.close();\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1208,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Closer closer=Closer.create();\n  final byte[] buffer=new byte[InputEntity.DEFAULT_FETCH_BUFFER_SIZE];\n  try {\n    final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n    final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n    final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n    final Schema writerSchema=dataFileReader.getSchema();\n    if (readerSchema == null) {\n      readerSchema=writerSchema;\n    }\n    datumReader.setSchema(writerSchema);\n    datumReader.setExpected(readerSchema);\n    closer.register(dataFileReader);\n    return new CloseableIterator<GenericRecord>(){\n      @Override public boolean hasNext(){\n        return dataFileReader.hasNext();\n      }\n      @Override public GenericRecord next(){\n        return dataFileReader.next();\n      }\n      @Override public void close() throws IOException {\n        closer.close();\n      }\n    }\n;\n  }\n catch (  Exception e) {\n    closer.close();\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected CloseableIterator<GenericRecord> intermediateRowIterator() throws IOException {\n  final Closer closer=Closer.create();\n  final byte[] buffer=new byte[InputEntity.DEFAULT_FETCH_BUFFER_SIZE];\n  try {\n    final InputEntity.CleanableFile file=closer.register(source.fetch(temporaryDirectory,buffer));\n    final GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<>();\n    final DataFileReader<GenericRecord> dataFileReader=new DataFileReader<>(file.file(),datumReader);\n    final Schema writerSchema=dataFileReader.getSchema();\n    if (readerSchema == null) {\n      readerSchema=writerSchema;\n    }\n    datumReader.setSchema(writerSchema);\n    datumReader.setExpected(readerSchema);\n    closer.register(dataFileReader);\n    return new CloseableIterator<GenericRecord>(){\n      @Override public boolean hasNext(){\n        return dataFileReader.hasNext();\n      }\n      @Override public GenericRecord next(){\n        return dataFileReader.next();\n      }\n      @Override public void close() throws IOException {\n        closer.close();\n      }\n    }\n;\n  }\n catch (  Exception e) {\n    closer.close();\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "closer.register(dataFileReader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.data.input.avro.DataFileReader<org.apache.druid.data.input.avro.GenericRecord>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 78,
    "startColumnNumber" : 34,
    "endLineNumber" : 78,
    "endColumnNumber" : 48
  }, {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 22,
    "endLineNumber" : 84,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}