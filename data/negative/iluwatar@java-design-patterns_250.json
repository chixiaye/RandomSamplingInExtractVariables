{
  "id" : 250,
  "expression" : "audio.getPendingAudio().length > 0",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/event-queue/src/test/java/com/iluwatar/event/queue/AudioTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "audio.getPendingAudio().length > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 79,
      "startColumnNumber" : 15,
      "endLineNumber" : 79,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(audio.getPendingAudio().length > 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertTrue(audio.getPendingAudio().length > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 75,
        "startColumnNumber" : 98,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  assertTrue(audio.getPendingAudio().length > 0);\n  assertTrue(audio.isServiceRunning());\n  Thread.sleep(10000);\n  audio.stopService();\n  assertFalse(audio.isServiceRunning());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 913,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test here that the Queue\n * @throws UnsupportedAudioFileException when the audio file is not supported \n * @throws IOException when the file is not readable\n * @throws InterruptedException when the test is interrupted externally\n */\n@Test public void testQueue() throws UnsupportedAudioFileException, IOException, InterruptedException {\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  audio.playSound(audio.getAudioStream(\"./etc/Bass-Drum-1.aif\"),-10.0f);\n  assertTrue(audio.getPendingAudio().length > 0);\n  assertTrue(audio.isServiceRunning());\n  Thread.sleep(10000);\n  audio.stopService();\n  assertFalse(audio.isServiceRunning());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertTrue(audio.getPendingAudio().length > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 79,
    "startColumnNumber" : 15,
    "endLineNumber" : 79,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}