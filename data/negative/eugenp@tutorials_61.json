{
  "id" : 61,
  "expression" : "\"Workers complete\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-concurrency-advanced/src/test/java/com/baeldung/concurrent/countdownlatch/CountdownLatchExampleIntegrationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Workers complete\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 66,
      "startColumnNumber" : 26,
      "endLineNumber" : 66,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 45
      },
      "nodeContext" : "outputScraper.add(\"Workers complete\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 46
      },
      "nodeContext" : "outputScraper.add(\"Workers complete\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 52,
        "startColumnNumber" : 106,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> outputScraper=Collections.synchronizedList(new ArrayList<>());\n  CountDownLatch readyThreadCounter=new CountDownLatch(5);\n  CountDownLatch callingThreadBlocker=new CountDownLatch(1);\n  CountDownLatch completedThreadCounter=new CountDownLatch(5);\n  List<Thread> workers=Stream.generate(() -> new Thread(new WaitingWorker(outputScraper,readyThreadCounter,callingThreadBlocker,completedThreadCounter))).limit(5).collect(toList());\n  workers.forEach(Thread::start);\n  readyThreadCounter.await();\n  outputScraper.add(\"Workers ready\");\n  callingThreadBlocker.countDown();\n  completedThreadCounter.await();\n  outputScraper.add(\"Workers complete\");\n  assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenDoingLotsOfThreadsInParallel_thenStartThemAtTheSameTime() throws InterruptedException {\n  List<String> outputScraper=Collections.synchronizedList(new ArrayList<>());\n  CountDownLatch readyThreadCounter=new CountDownLatch(5);\n  CountDownLatch callingThreadBlocker=new CountDownLatch(1);\n  CountDownLatch completedThreadCounter=new CountDownLatch(5);\n  List<Thread> workers=Stream.generate(() -> new Thread(new WaitingWorker(outputScraper,readyThreadCounter,callingThreadBlocker,completedThreadCounter))).limit(5).collect(toList());\n  workers.forEach(Thread::start);\n  readyThreadCounter.await();\n  outputScraper.add(\"Workers ready\");\n  callingThreadBlocker.countDown();\n  completedThreadCounter.await();\n  outputScraper.add(\"Workers complete\");\n  assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 46
      },
      "nodeContext" : "outputScraper.add(\"Workers complete\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Workers complete\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 69,
      "startColumnNumber" : 147,
      "endLineNumber" : 69,
      "endColumnNumber" : 165
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 166
      },
      "nodeContext" : "assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 167
      },
      "nodeContext" : "assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 52,
        "startColumnNumber" : 106,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> outputScraper=Collections.synchronizedList(new ArrayList<>());\n  CountDownLatch readyThreadCounter=new CountDownLatch(5);\n  CountDownLatch callingThreadBlocker=new CountDownLatch(1);\n  CountDownLatch completedThreadCounter=new CountDownLatch(5);\n  List<Thread> workers=Stream.generate(() -> new Thread(new WaitingWorker(outputScraper,readyThreadCounter,callingThreadBlocker,completedThreadCounter))).limit(5).collect(toList());\n  workers.forEach(Thread::start);\n  readyThreadCounter.await();\n  outputScraper.add(\"Workers ready\");\n  callingThreadBlocker.countDown();\n  completedThreadCounter.await();\n  outputScraper.add(\"Workers complete\");\n  assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenDoingLotsOfThreadsInParallel_thenStartThemAtTheSameTime() throws InterruptedException {\n  List<String> outputScraper=Collections.synchronizedList(new ArrayList<>());\n  CountDownLatch readyThreadCounter=new CountDownLatch(5);\n  CountDownLatch callingThreadBlocker=new CountDownLatch(1);\n  CountDownLatch completedThreadCounter=new CountDownLatch(5);\n  List<Thread> workers=Stream.generate(() -> new Thread(new WaitingWorker(outputScraper,readyThreadCounter,callingThreadBlocker,completedThreadCounter))).limit(5).collect(toList());\n  workers.forEach(Thread::start);\n  readyThreadCounter.await();\n  outputScraper.add(\"Workers ready\");\n  callingThreadBlocker.countDown();\n  completedThreadCounter.await();\n  outputScraper.add(\"Workers complete\");\n  assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 167
      },
      "nodeContext" : "assertThat(outputScraper).containsExactly(\"Workers ready\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Counted down\",\"Workers complete\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 66,
    "startColumnNumber" : 26,
    "endLineNumber" : 66,
    "endColumnNumber" : 44
  }, {
    "charLength" : 18,
    "startLineNumber" : 69,
    "startColumnNumber" : 147,
    "endLineNumber" : 69,
    "endColumnNumber" : 165
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}