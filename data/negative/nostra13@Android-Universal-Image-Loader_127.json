{
  "id" : 127,
  "expression" : "FailReason.UNKNOWN",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "5820d5cf76e9eb47e98e3b66db7b867fa9435b02",
  "filePath" : "UniversalImageLoader/src/com/nostra13/universalimageloader/core/LoadAndDisplayImageTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FailReason.UNKNOWN",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 141,
      "startColumnNumber" : 31,
      "endLineNumber" : 141,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 141,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "fireImageLoadingFailedEvent(FailReason.UNKNOWN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 141,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 51
      },
      "nodeContext" : "fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Log.e(ImageLoader.TAG,e.getMessage(),e);\n  fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (Throwable e) {\n  Log.e(ImageLoader.TAG,e.getMessage(),e);\n  fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  if (imageFile.exists()) {\n    if (configuration.loggingEnabled)     Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_DISC_CACHE,imageLoadingInfo.memoryCacheKey));\n    Bitmap b=decodeImage(imageFile.toURI());\n    if (b != null) {\n      return b;\n    }\n  }\n  if (configuration.loggingEnabled)   Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_INTERNET,imageLoadingInfo.memoryCacheKey));\n  URI imageUriForDecoding;\n  if (imageLoadingInfo.options.isCacheOnDisc()) {\n    if (configuration.loggingEnabled)     Log.i(ImageLoader.TAG,String.format(LOG_CACHE_IMAGE_ON_DISC,imageLoadingInfo.memoryCacheKey));\n    saveImageOnDisc(imageFile);\n    configuration.discCache.put(imageLoadingInfo.uri,imageFile);\n    imageUriForDecoding=imageFile.toURI();\n  }\n else {\n    final String uri=Uri.encode(imageLoadingInfo.uri,\":/-|+\");\n    imageUriForDecoding=new URI(uri);\n  }\n  bitmap=decodeImage(imageUriForDecoding);\n  if (bitmap == null) {\n    fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n  }\n}\n catch (IOException e) {\n  Log.e(ImageLoader.TAG,e.getMessage(),e);\n  fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n  if (imageFile.exists()) {\n    imageFile.delete();\n  }\n}\ncatch (OutOfMemoryError e) {\n  Log.e(ImageLoader.TAG,e.getMessage(),e);\n  fireImageLoadingFailedEvent(FailReason.OUT_OF_MEMORY);\n}\ncatch (Throwable e) {\n  Log.e(ImageLoader.TAG,e.getMessage(),e);\n  fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1707,
        "startLineNumber" : 96,
        "startColumnNumber" : 32,
        "endLineNumber" : 144,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  File imageFile=configuration.discCache.get(imageLoadingInfo.uri);\n  Bitmap bitmap=null;\n  try {\n    if (imageFile.exists()) {\n      if (configuration.loggingEnabled)       Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_DISC_CACHE,imageLoadingInfo.memoryCacheKey));\n      Bitmap b=decodeImage(imageFile.toURI());\n      if (b != null) {\n        return b;\n      }\n    }\n    if (configuration.loggingEnabled)     Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_INTERNET,imageLoadingInfo.memoryCacheKey));\n    URI imageUriForDecoding;\n    if (imageLoadingInfo.options.isCacheOnDisc()) {\n      if (configuration.loggingEnabled)       Log.i(ImageLoader.TAG,String.format(LOG_CACHE_IMAGE_ON_DISC,imageLoadingInfo.memoryCacheKey));\n      saveImageOnDisc(imageFile);\n      configuration.discCache.put(imageLoadingInfo.uri,imageFile);\n      imageUriForDecoding=imageFile.toURI();\n    }\n else {\n      final String uri=Uri.encode(imageLoadingInfo.uri,\":/-|+\");\n      imageUriForDecoding=new URI(uri);\n    }\n    bitmap=decodeImage(imageUriForDecoding);\n    if (bitmap == null) {\n      fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n    }\n  }\n catch (  IOException e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n    if (imageFile.exists()) {\n      imageFile.delete();\n    }\n  }\ncatch (  OutOfMemoryError e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.OUT_OF_MEMORY);\n  }\ncatch (  Throwable e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n  }\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1738,
        "startLineNumber" : 96,
        "startColumnNumber" : 1,
        "endLineNumber" : 144,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Bitmap tryLoadBitmap(){\n  File imageFile=configuration.discCache.get(imageLoadingInfo.uri);\n  Bitmap bitmap=null;\n  try {\n    if (imageFile.exists()) {\n      if (configuration.loggingEnabled)       Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_DISC_CACHE,imageLoadingInfo.memoryCacheKey));\n      Bitmap b=decodeImage(imageFile.toURI());\n      if (b != null) {\n        return b;\n      }\n    }\n    if (configuration.loggingEnabled)     Log.i(ImageLoader.TAG,String.format(LOG_LOAD_IMAGE_FROM_INTERNET,imageLoadingInfo.memoryCacheKey));\n    URI imageUriForDecoding;\n    if (imageLoadingInfo.options.isCacheOnDisc()) {\n      if (configuration.loggingEnabled)       Log.i(ImageLoader.TAG,String.format(LOG_CACHE_IMAGE_ON_DISC,imageLoadingInfo.memoryCacheKey));\n      saveImageOnDisc(imageFile);\n      configuration.discCache.put(imageLoadingInfo.uri,imageFile);\n      imageUriForDecoding=imageFile.toURI();\n    }\n else {\n      final String uri=Uri.encode(imageLoadingInfo.uri,\":/-|+\");\n      imageUriForDecoding=new URI(uri);\n    }\n    bitmap=decodeImage(imageUriForDecoding);\n    if (bitmap == null) {\n      fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n    }\n  }\n catch (  IOException e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.IO_ERROR);\n    if (imageFile.exists()) {\n      imageFile.delete();\n    }\n  }\ncatch (  OutOfMemoryError e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.OUT_OF_MEMORY);\n  }\ncatch (  Throwable e) {\n    Log.e(ImageLoader.TAG,e.getMessage(),e);\n    fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n  }\n  return bitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 141,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 51
      },
      "nodeContext" : "fireImageLoadingFailedEvent(FailReason.UNKNOWN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.nostra13.universalimageloader.core.assist.FailReason"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 141,
    "startColumnNumber" : 31,
    "endLineNumber" : 141,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}