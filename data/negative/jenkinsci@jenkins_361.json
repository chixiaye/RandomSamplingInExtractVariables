{
  "id" : 361,
  "expression" : "\"/foo/$ITEM_FULL_NAME\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/model/JenkinsBuildsAndWorkspacesDirectoriesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/foo/$ITEM_FULL_NAME\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 103,
      "startColumnNumber" : 30,
      "endLineNumber" : 103,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 53
      },
      "nodeContext" : "badValues.add(\"/foo/$ITEM_FULL_NAME\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 54
      },
      "nodeContext" : "badValues.add(\"/foo/$ITEM_FULL_NAME\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 102,
        "startColumnNumber" : 43,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  badValues.add(\"/foo/$ITEM_FULL_NAME\");\n  badValues.add(\"/$ITEM_FULLNAME\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!new File(\"/\").canWrite()) {\n  badValues.add(\"/foo/$ITEM_FULL_NAME\");\n  badValues.add(\"/$ITEM_FULLNAME\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final List<String> badValues=new ArrayList<>(Arrays.asList(\"blah\",\"$JENKINS_HOME\",\"$JENKINS_HOME/builds\",\"$ITEM_FULL_NAME\",\"/path/to/builds\",\"/invalid/$JENKINS_HOME\",\"relative/ITEM_FULL_NAME\"));\n  if (!new File(\"/\").canWrite()) {\n    badValues.add(\"/foo/$ITEM_FULL_NAME\");\n    badValues.add(\"/$ITEM_FULLNAME\");\n  }\n  for (  String badValue : badValues) {\n    try {\n      Jenkins.checkRawBuildsDir(badValue);\n      fail(badValue + \" should have been rejected\");\n    }\n catch (    InvalidBuildsDir invalidBuildsDir) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 93,
        "startColumnNumber" : 19,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "(rule) -> {\n  final List<String> badValues=new ArrayList<>(Arrays.asList(\"blah\",\"$JENKINS_HOME\",\"$JENKINS_HOME/builds\",\"$ITEM_FULL_NAME\",\"/path/to/builds\",\"/invalid/$JENKINS_HOME\",\"relative/ITEM_FULL_NAME\"));\n  if (!new File(\"/\").canWrite()) {\n    badValues.add(\"/foo/$ITEM_FULL_NAME\");\n    badValues.add(\"/$ITEM_FULLNAME\");\n  }\n  for (  String badValue : badValues) {\n    try {\n      Jenkins.checkRawBuildsDir(badValue);\n      fail(badValue + \" should have been rejected\");\n    }\n catch (    InvalidBuildsDir invalidBuildsDir) {\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 54
      },
      "nodeContext" : "badValues.add(\"/foo/$ITEM_FULL_NAME\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 103,
    "startColumnNumber" : 30,
    "endLineNumber" : 103,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}