{
  "id" : 58,
  "expression" : "msg",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "f8866cc1dd11dfd01aa7bb8fec0735d7d9cffc10",
  "filePath" : "code/src/main/com/lmax/disruptor/RingBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "msg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 147,
      "startColumnNumber" : 47,
      "endLineNumber" : 147,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 147,
        "startColumnNumber" : 18,
        "endLineNumber" : 147,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new IllegalArgumentException(msg)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 147,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 52
      },
      "nodeContext" : "throw new IllegalArgumentException(msg);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String msg=\"Batch size \" + batchSize + \" is greater than buffer size of \"+ events.length;\n  throw new IllegalArgumentException(msg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (batchSize > events.length) {\n  final String msg=\"Batch size \" + batchSize + \" is greater than buffer size of \"+ events.length;\n  throw new IllegalArgumentException(msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int batchSize=sequenceBatch.getSize();\n  if (batchSize > events.length) {\n    final String msg=\"Batch size \" + batchSize + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(batchSize);\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SequenceBatch nextSequenceBatch(final SequenceBatch sequenceBatch){\n  final int batchSize=sequenceBatch.getSize();\n  if (batchSize > events.length) {\n    final String msg=\"Batch size \" + batchSize + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(batchSize);\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 147,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 52
      },
      "nodeContext" : "throw new IllegalArgumentException(msg);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 147,
    "startColumnNumber" : 47,
    "endLineNumber" : 147,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}