{
  "id" : 299,
  "expression" : "rc.zxid",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/upgrade/DataTreeV1.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rc.zxid",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 398,
      "startColumnNumber" : 16,
      "endLineNumber" : 398,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 398,
        "startColumnNumber" : 16,
        "endLineNumber" : 398,
        "endColumnNumber" : 43
      },
      "nodeContext" : "rc.zxid > lastProcessedZxid",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 398,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rc.zxid > lastProcessedZxid) {\n  lastProcessedZxid=rc.zxid;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2016,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 436,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  rc.clientId=header.getClientId();\n  rc.cxid=header.getCxid();\n  rc.zxid=header.getZxid();\n  rc.type=header.getType();\n  rc.err=0;\n  if (rc.zxid > lastProcessedZxid) {\n    lastProcessedZxid=rc.zxid;\n  }\nswitch (header.getType()) {\ncase OpCode.create:    CreateTxn createTxn=(CreateTxn)txn;\n  debug=\"Create transaction for \" + createTxn.getPath();\ncreateNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2331,
        "startLineNumber" : 392,
        "startColumnNumber" : 8,
        "endLineNumber" : 443,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  rc.clientId=header.getClientId();\n  rc.cxid=header.getCxid();\n  rc.zxid=header.getZxid();\n  rc.type=header.getType();\n  rc.err=0;\n  if (rc.zxid > lastProcessedZxid) {\n    lastProcessedZxid=rc.zxid;\n  }\nswitch (header.getType()) {\ncase OpCode.create:    CreateTxn createTxn=(CreateTxn)txn;\n  debug=\"Create transaction for \" + createTxn.getPath();\ncreateNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 290,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2448,
        "startLineNumber" : 388,
        "startColumnNumber" : 69,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProcessTxnResult rc=new ProcessTxnResult();\n  String debug=\"\";\n  try {\n    rc.clientId=header.getClientId();\n    rc.cxid=header.getCxid();\n    rc.zxid=header.getZxid();\n    rc.type=header.getType();\n    rc.err=0;\n    if (rc.zxid > lastProcessedZxid) {\n      lastProcessedZxid=rc.zxid;\n    }\nswitch (header.getType()) {\ncase OpCode.create:      CreateTxn createTxn=(CreateTxn)txn;\n    debug=\"Create transaction for \" + createTxn.getPath();\n  createNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\nreturn rc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2548,
        "startLineNumber" : 387,
        "startColumnNumber" : 4,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public ProcessTxnResult processTxn(TxnHeader header,Record txn){\n  ProcessTxnResult rc=new ProcessTxnResult();\n  String debug=\"\";\n  try {\n    rc.clientId=header.getClientId();\n    rc.cxid=header.getCxid();\n    rc.zxid=header.getZxid();\n    rc.type=header.getType();\n    rc.err=0;\n    if (rc.zxid > lastProcessedZxid) {\n      lastProcessedZxid=rc.zxid;\n    }\nswitch (header.getType()) {\ncase OpCode.create:      CreateTxn createTxn=(CreateTxn)txn;\n    debug=\"Create transaction for \" + createTxn.getPath();\n  createNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\nreturn rc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 398,
        "startColumnNumber" : 16,
        "endLineNumber" : 398,
        "endColumnNumber" : 43
      },
      "nodeContext" : "rc.zxid > lastProcessedZxid",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "rc.zxid",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 399,
      "startColumnNumber" : 36,
      "endLineNumber" : 399,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 399,
        "startColumnNumber" : 16,
        "endLineNumber" : 399,
        "endColumnNumber" : 43
      },
      "nodeContext" : "lastProcessedZxid=rc.zxid",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 399,
        "startColumnNumber" : 16,
        "endLineNumber" : 399,
        "endColumnNumber" : 44
      },
      "nodeContext" : "lastProcessedZxid=rc.zxid;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 398,
        "startColumnNumber" : 45,
        "endLineNumber" : 400,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  lastProcessedZxid=rc.zxid;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 398,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rc.zxid > lastProcessedZxid) {\n  lastProcessedZxid=rc.zxid;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2016,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 436,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  rc.clientId=header.getClientId();\n  rc.cxid=header.getCxid();\n  rc.zxid=header.getZxid();\n  rc.type=header.getType();\n  rc.err=0;\n  if (rc.zxid > lastProcessedZxid) {\n    lastProcessedZxid=rc.zxid;\n  }\nswitch (header.getType()) {\ncase OpCode.create:    CreateTxn createTxn=(CreateTxn)txn;\n  debug=\"Create transaction for \" + createTxn.getPath();\ncreateNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2331,
        "startLineNumber" : 392,
        "startColumnNumber" : 8,
        "endLineNumber" : 443,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  rc.clientId=header.getClientId();\n  rc.cxid=header.getCxid();\n  rc.zxid=header.getZxid();\n  rc.type=header.getType();\n  rc.err=0;\n  if (rc.zxid > lastProcessedZxid) {\n    lastProcessedZxid=rc.zxid;\n  }\nswitch (header.getType()) {\ncase OpCode.create:    CreateTxn createTxn=(CreateTxn)txn;\n  debug=\"Create transaction for \" + createTxn.getPath();\ncreateNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 290,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2448,
        "startLineNumber" : 388,
        "startColumnNumber" : 69,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProcessTxnResult rc=new ProcessTxnResult();\n  String debug=\"\";\n  try {\n    rc.clientId=header.getClientId();\n    rc.cxid=header.getCxid();\n    rc.zxid=header.getZxid();\n    rc.type=header.getType();\n    rc.err=0;\n    if (rc.zxid > lastProcessedZxid) {\n      lastProcessedZxid=rc.zxid;\n    }\nswitch (header.getType()) {\ncase OpCode.create:      CreateTxn createTxn=(CreateTxn)txn;\n    debug=\"Create transaction for \" + createTxn.getPath();\n  createNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\nreturn rc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2548,
        "startLineNumber" : 387,
        "startColumnNumber" : 4,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public ProcessTxnResult processTxn(TxnHeader header,Record txn){\n  ProcessTxnResult rc=new ProcessTxnResult();\n  String debug=\"\";\n  try {\n    rc.clientId=header.getClientId();\n    rc.cxid=header.getCxid();\n    rc.zxid=header.getZxid();\n    rc.type=header.getType();\n    rc.err=0;\n    if (rc.zxid > lastProcessedZxid) {\n      lastProcessedZxid=rc.zxid;\n    }\nswitch (header.getType()) {\ncase OpCode.create:      CreateTxn createTxn=(CreateTxn)txn;\n    debug=\"Create transaction for \" + createTxn.getPath();\n  createNode(createTxn.getPath(),createTxn.getData(),createTxn.getAcl(),createTxn.getEphemeral() ? header.getClientId() : 0,header.getZxid(),header.getTime());\nrc.path=createTxn.getPath();\nbreak;\ncase OpCode.delete:DeleteTxn deleteTxn=(DeleteTxn)txn;\ndebug=\"Delete transaction for \" + deleteTxn.getPath();\ndeleteNode(deleteTxn.getPath());\nbreak;\ncase OpCode.setData:SetDataTxn setDataTxn=(SetDataTxn)txn;\ndebug=\"Set data for  transaction for \" + setDataTxn.getPath();\nrc.stat=setData(setDataTxn.getPath(),setDataTxn.getData(),setDataTxn.getVersion(),header.getZxid(),header.getTime());\nbreak;\ncase OpCode.setACL:SetACLTxn setACLTxn=(SetACLTxn)txn;\ndebug=\"Set ACL for  transaction for \" + setACLTxn.getPath();\nrc.stat=setACL(setACLTxn.getPath(),setACLTxn.getAcl(),setACLTxn.getVersion());\nbreak;\ncase OpCode.closeSession:killSession(header.getClientId());\nbreak;\ncase OpCode.error:ErrorTxn errTxn=(ErrorTxn)txn;\nrc.err=errTxn.getErr();\nbreak;\n}\n}\n catch (KeeperException e) {\nif (initialized || (e.code() != Code.NONODE && e.code() != Code.NODEEXISTS)) {\nLOG.warn(\"Failed:\" + debug,e);\n}\n}\nreturn rc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 399,
        "startColumnNumber" : 16,
        "endLineNumber" : 399,
        "endColumnNumber" : 44
      },
      "nodeContext" : "lastProcessedZxid=rc.zxid;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 398,
    "startColumnNumber" : 16,
    "endLineNumber" : 398,
    "endColumnNumber" : 23
  }, {
    "charLength" : 7,
    "startLineNumber" : 399,
    "startColumnNumber" : 36,
    "endLineNumber" : 399,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}