{
  "id" : 112,
  "expression" : "field2.type().isStruct()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/generator/src/test/java/org/apache/kafka/message/StructRegistryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field2.type().isStruct()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 145,
      "startColumnNumber" : 19,
      "endLineNumber" : 145,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(field2.type().isStruct())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(field2.type().isStruct());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 126,
        "startColumnNumber" : 52,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessageSpec testMessageSpec=MessageGenerator.JSON_SERDE.readValue(String.join(\"\",Arrays.asList(\"{\",\"  \\\"type\\\": \\\"request\\\",\",\"  \\\"name\\\": \\\"LeaderAndIsrRequest\\\",\",\"  \\\"validVersions\\\": \\\"0-2\\\",\",\"  \\\"flexibleVersions\\\": \\\"0+\\\",\",\"  \\\"fields\\\": [\",\"    { \\\"name\\\": \\\"field1\\\", \\\"type\\\": \\\"int32\\\", \\\"versions\\\": \\\"0+\\\" },\",\"    { \\\"name\\\": \\\"field2\\\", \\\"type\\\": \\\"TestInlineStruct\\\", \\\"versions\\\": \\\"0+\\\", \",\"    \\\"fields\\\": [\",\"      { \\\"name\\\": \\\"inlineField1\\\", \\\"type\\\": \\\"int64\\\", \\\"versions\\\": \\\"0+\\\" }\",\"    ]}\",\"  ]\",\"}\")),MessageSpec.class);\n  StructRegistry structRegistry=new StructRegistry();\n  structRegistry.register(testMessageSpec);\n  FieldSpec field2=testMessageSpec.fields().get(1);\n  assertTrue(field2.type().isStruct());\n  assertEquals(field2.type().toString(),\"TestInlineStruct\");\n  assertEquals(field2.name(),\"field2\");\n  assertEquals(structRegistry.findStruct(field2).name(),\"TestInlineStruct\");\n  assertFalse(structRegistry.isStructArrayWithKeys(field2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSingleStruct() throws Exception {\n  MessageSpec testMessageSpec=MessageGenerator.JSON_SERDE.readValue(String.join(\"\",Arrays.asList(\"{\",\"  \\\"type\\\": \\\"request\\\",\",\"  \\\"name\\\": \\\"LeaderAndIsrRequest\\\",\",\"  \\\"validVersions\\\": \\\"0-2\\\",\",\"  \\\"flexibleVersions\\\": \\\"0+\\\",\",\"  \\\"fields\\\": [\",\"    { \\\"name\\\": \\\"field1\\\", \\\"type\\\": \\\"int32\\\", \\\"versions\\\": \\\"0+\\\" },\",\"    { \\\"name\\\": \\\"field2\\\", \\\"type\\\": \\\"TestInlineStruct\\\", \\\"versions\\\": \\\"0+\\\", \",\"    \\\"fields\\\": [\",\"      { \\\"name\\\": \\\"inlineField1\\\", \\\"type\\\": \\\"int64\\\", \\\"versions\\\": \\\"0+\\\" }\",\"    ]}\",\"  ]\",\"}\")),MessageSpec.class);\n  StructRegistry structRegistry=new StructRegistry();\n  structRegistry.register(testMessageSpec);\n  FieldSpec field2=testMessageSpec.fields().get(1);\n  assertTrue(field2.type().isStruct());\n  assertEquals(field2.type().toString(),\"TestInlineStruct\");\n  assertEquals(field2.name(),\"field2\");\n  assertEquals(structRegistry.findStruct(field2).name(),\"TestInlineStruct\");\n  assertFalse(structRegistry.isStructArrayWithKeys(field2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(field2.type().isStruct());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 145,
    "startColumnNumber" : 19,
    "endLineNumber" : 145,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}