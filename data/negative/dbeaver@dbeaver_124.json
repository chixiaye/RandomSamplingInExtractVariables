{
  "id" : 124,
  "expression" : "curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/commands/SQLCommandInclude.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName)",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 63,
      "startColumnNumber" : 23,
      "endLineNumber" : 63,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 15,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 63,
        "startColumnNumber" : 13,
        "endLineNumber" : 63,
        "endColumnNumber" : 101
      },
      "nodeContext" : "incFile=curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 102
      },
      "nodeContext" : "File incFile=curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 54,
        "startColumnNumber" : 117,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String fileName=command.getParameter();\n  if (CommonUtils.isEmpty(fileName)) {\n    throw new DBException(\"Empty input file\");\n  }\n  fileName=GeneralUtils.replaceVariables(fileName,new ScriptVariablesResolver(scriptContext)).trim();\n  fileName=DBUtils.getUnQuotedIdentifier(scriptContext.getExecutionContext().getDataSource(),fileName);\n  File curFile=scriptContext.getSourceFile();\n  File incFile=curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName);\n  if (!incFile.exists()) {\n    incFile=new File(fileName);\n  }\n  if (!incFile.exists()) {\n    throw new DBException(\"File '\" + fileName + \"' not found\");\n  }\n  final String fileContents;\n  try (InputStream is=new FileInputStream(incFile)){\n    Reader reader=new InputStreamReader(is,getResourceEncoding());\n    fileContents=IOUtils.readToString(reader);\n  }\n catch (  IOException e) {\n    throw new DBException(\"IO error reading file '\" + fileName + \"'\",e);\n  }\n  final File finalIncFile=incFile;\n  final boolean[] statusFlag=new boolean[1];\n  UIUtils.syncExec(() -> {\n    try {\n      final IWorkbenchWindow workbenchWindow=UIUtils.getActiveWorkbenchWindow();\n      final IncludeEditorInput input=new IncludeEditorInput(finalIncFile,fileContents);\n      SQLEditor sqlEditor=SQLEditorHandlerOpenEditor.openSQLConsole(workbenchWindow,new SQLNavigatorContext(scriptContext.getExecutionContext()),input);\n      final IncludeScriptListener scriptListener=new IncludeScriptListener(workbenchWindow,sqlEditor,statusFlag);\n      boolean execResult=sqlEditor.processSQL(false,true,null,scriptListener);\n      if (!execResult) {\n        statusFlag[0]=true;\n      }\n    }\n catch (    Throwable e) {\n      log.error(e);\n      statusFlag[0]=true;\n    }\n  }\n);\n  while (!statusFlag[0]) {\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      break;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean handleCommand(SQLControlCommand command,final SQLScriptContext scriptContext) throws DBException {\n  String fileName=command.getParameter();\n  if (CommonUtils.isEmpty(fileName)) {\n    throw new DBException(\"Empty input file\");\n  }\n  fileName=GeneralUtils.replaceVariables(fileName,new ScriptVariablesResolver(scriptContext)).trim();\n  fileName=DBUtils.getUnQuotedIdentifier(scriptContext.getExecutionContext().getDataSource(),fileName);\n  File curFile=scriptContext.getSourceFile();\n  File incFile=curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName);\n  if (!incFile.exists()) {\n    incFile=new File(fileName);\n  }\n  if (!incFile.exists()) {\n    throw new DBException(\"File '\" + fileName + \"' not found\");\n  }\n  final String fileContents;\n  try (InputStream is=new FileInputStream(incFile)){\n    Reader reader=new InputStreamReader(is,getResourceEncoding());\n    fileContents=IOUtils.readToString(reader);\n  }\n catch (  IOException e) {\n    throw new DBException(\"IO error reading file '\" + fileName + \"'\",e);\n  }\n  final File finalIncFile=incFile;\n  final boolean[] statusFlag=new boolean[1];\n  UIUtils.syncExec(() -> {\n    try {\n      final IWorkbenchWindow workbenchWindow=UIUtils.getActiveWorkbenchWindow();\n      final IncludeEditorInput input=new IncludeEditorInput(finalIncFile,fileContents);\n      SQLEditor sqlEditor=SQLEditorHandlerOpenEditor.openSQLConsole(workbenchWindow,new SQLNavigatorContext(scriptContext.getExecutionContext()),input);\n      final IncludeScriptListener scriptListener=new IncludeScriptListener(workbenchWindow,sqlEditor,statusFlag);\n      boolean execResult=sqlEditor.processSQL(false,true,null,scriptListener);\n      if (!execResult) {\n        statusFlag[0]=true;\n      }\n    }\n catch (    Throwable e) {\n      log.error(e);\n      statusFlag[0]=true;\n    }\n  }\n);\n  while (!statusFlag[0]) {\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      break;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 102
      },
      "nodeContext" : "File incFile=curFile == null ? new File(fileName) : new File(curFile.getParent(),fileName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 78,
    "startLineNumber" : 63,
    "startColumnNumber" : 23,
    "endLineNumber" : 63,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}