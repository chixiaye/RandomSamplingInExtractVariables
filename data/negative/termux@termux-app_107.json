{
  "id" : 107,
  "expression" : "new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/view/GestureAndScaleRecognizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 768,
      "startLineNumber" : 37,
      "startColumnNumber" : 56,
      "endLineNumber" : 58,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 103,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 37,
        "startColumnNumber" : 27,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n,null,true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "mGestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n,null,true)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 46
      },
      "nodeContext" : "mGestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n,null,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 34,
        "startColumnNumber" : 73,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mListener=listener;\n  mGestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n    @Override public boolean onScroll(    MotionEvent e1,    MotionEvent e2,    float dx,    float dy){\n      return mListener.onScroll(e2,dx,dy);\n    }\n    @Override public boolean onFling(    MotionEvent e1,    MotionEvent e2,    float velocityX,    float velocityY){\n      return mListener.onFling(e2,velocityX,velocityY);\n    }\n    @Override public boolean onDown(    MotionEvent e){\n      return mListener.onDown(e.getX(),e.getY());\n    }\n    @Override public void onLongPress(    MotionEvent e){\n      mListener.onLongPress(e);\n      isAfterLongPress=true;\n    }\n  }\n,null,true);\n  mGestureDetector.setOnDoubleTapListener(new GestureDetector.OnDoubleTapListener(){\n    @Override public boolean onSingleTapConfirmed(    MotionEvent e){\n      return mListener.onSingleTapUp(e);\n    }\n    @Override public boolean onDoubleTap(    MotionEvent e){\n      return mListener.onDoubleTap(e);\n    }\n    @Override public boolean onDoubleTapEvent(    MotionEvent e){\n      return true;\n    }\n  }\n);\n  mScaleDetector=new ScaleGestureDetector(context,new ScaleGestureDetector.SimpleOnScaleGestureListener(){\n    @Override public boolean onScaleBegin(    ScaleGestureDetector detector){\n      return true;\n    }\n    @Override public boolean onScale(    ScaleGestureDetector detector){\n      return mListener.onScale(detector.getFocusX(),detector.getFocusY(),detector.getScaleFactor());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public GestureAndScaleRecognizer(Context context,Listener listener){\n  mListener=listener;\n  mGestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n    @Override public boolean onScroll(    MotionEvent e1,    MotionEvent e2,    float dx,    float dy){\n      return mListener.onScroll(e2,dx,dy);\n    }\n    @Override public boolean onFling(    MotionEvent e1,    MotionEvent e2,    float velocityX,    float velocityY){\n      return mListener.onFling(e2,velocityX,velocityY);\n    }\n    @Override public boolean onDown(    MotionEvent e){\n      return mListener.onDown(e.getX(),e.getY());\n    }\n    @Override public void onLongPress(    MotionEvent e){\n      mListener.onLongPress(e);\n      isAfterLongPress=true;\n    }\n  }\n,null,true);\n  mGestureDetector.setOnDoubleTapListener(new GestureDetector.OnDoubleTapListener(){\n    @Override public boolean onSingleTapConfirmed(    MotionEvent e){\n      return mListener.onSingleTapUp(e);\n    }\n    @Override public boolean onDoubleTap(    MotionEvent e){\n      return mListener.onDoubleTap(e);\n    }\n    @Override public boolean onDoubleTapEvent(    MotionEvent e){\n      return true;\n    }\n  }\n);\n  mScaleDetector=new ScaleGestureDetector(context,new ScaleGestureDetector.SimpleOnScaleGestureListener(){\n    @Override public boolean onScaleBegin(    ScaleGestureDetector detector){\n      return true;\n    }\n    @Override public boolean onScale(    ScaleGestureDetector detector){\n      return mListener.onScale(detector.getFocusX(),detector.getFocusY(),detector.getScaleFactor());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 46
      },
      "nodeContext" : "mGestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){\n  @Override public boolean onScroll(  MotionEvent e1,  MotionEvent e2,  float dx,  float dy){\n    return mListener.onScroll(e2,dx,dy);\n  }\n  @Override public boolean onFling(  MotionEvent e1,  MotionEvent e2,  float velocityX,  float velocityY){\n    return mListener.onFling(e2,velocityX,velocityY);\n  }\n  @Override public boolean onDown(  MotionEvent e){\n    return mListener.onDown(e.getX(),e.getY());\n  }\n  @Override public void onLongPress(  MotionEvent e){\n    mListener.onLongPress(e);\n    isAfterLongPress=true;\n  }\n}\n,null,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    },
    "tokenLength" : 46,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 768,
    "startLineNumber" : 37,
    "startColumnNumber" : 56,
    "endLineNumber" : 58,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}