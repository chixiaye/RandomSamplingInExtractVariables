{
  "id" : 234,
  "expression" : "element.getSimpleName()",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "element.getSimpleName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 66,
      "startColumnNumber" : 21,
      "endLineNumber" : 66,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "element.getSimpleName().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 66,
        "startColumnNumber" : 9,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "fieldName=element.getSimpleName().toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String fieldName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3127,
        "startLineNumber" : 63,
        "startColumnNumber" : 91,
        "endLineNumber" : 141,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Extra annotation=element.getAnnotation(Extra.class);\n  String extraKey=annotation.value();\n  String fieldName=element.getSimpleName().toString();\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  if (holder.cast == null) {\n    JType objectType=codeModel._ref(Object.class);\n    JMethod method=holder.eBean.method(JMod.PRIVATE,objectType,\"cast_\");\n    JTypeVar genericType=method.generify(\"T\");\n    method.type(genericType);\n    JVar objectParam=method.param(objectType,\"object\");\n    method.annotate(SuppressWarnings.class).param(\"value\",\"unchecked\");\n    method.body()._return(JExpr.cast(genericType,objectParam));\n    holder.cast=method;\n  }\n  if (holder.extras == null) {\n    JClass bundleClass=holder.refClass(\"android.os.Bundle\");\n    holder.extras=holder.initIfActivityBody.decl(bundleClass,\"extras_\");\n    holder.extras.init(holder.initActivityRef.invoke(\"getIntent\").invoke(\"getExtras\"));\n    holder.extrasNotNullBlock=holder.initIfActivityBody._if(holder.extras.ne(JExpr._null()))._then();\n  }\n  JBlock ifContainsKey=holder.extrasNotNullBlock._if(JExpr.invoke(holder.extras,\"containsKey\").arg(extraKey))._then();\n  JTryBlock containsKeyTry=ifContainsKey._try();\n  JFieldRef extraField=JExpr.ref(fieldName);\n  containsKeyTry.body().assign(extraField,JExpr.invoke(holder.cast).arg(holder.extras.invoke(\"get\").arg(extraKey)));\n  JCatchBlock containsKeyCatch=containsKeyTry._catch(holder.refClass(ClassCastException.class));\n  JVar exceptionParam=containsKeyCatch.param(\"e\");\n  JInvocation errorInvoke=holder.refClass(\"android.util.Log\").staticInvoke(\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Could not cast extra to expected type, the field is left to its default value\");\n  errorInvoke.arg(exceptionParam);\n  containsKeyCatch.body().add(errorInvoke);\n  if (holder.intentBuilderClass != null) {\n{\n      JMethod method=holder.intentBuilderClass.method(PUBLIC,holder.intentBuilderClass,fieldName);\n      boolean castToSerializable=false;\n      TypeMirror extraType=element.asType();\n      if (extraType.getKind() == TypeKind.DECLARED) {\n        Elements elementUtils=processingEnv.getElementUtils();\n        Types typeUtils=processingEnv.getTypeUtils();\n        TypeMirror parcelableType=elementUtils.getTypeElement(\"android.os.Parcelable\").asType();\n        if (!typeUtils.isSubtype(extraType,parcelableType)) {\n          TypeMirror stringType=elementUtils.getTypeElement(\"java.lang.String\").asType();\n          if (!typeUtils.isSubtype(extraType,stringType)) {\n            castToSerializable=true;\n          }\n        }\n      }\n      JClass paramClass=helper.typeMirrorToJClass(extraType,holder);\n      JVar extraParam=method.param(paramClass,fieldName);\n      JBlock body=method.body();\n      JInvocation invocation=body.invoke(holder.intentField,\"putExtra\").arg(extraKey);\n      if (castToSerializable) {\n        JClass serializableClass=holder.refClass(Serializable.class);\n        invocation.arg(cast(serializableClass,extraParam));\n      }\n else {\n        invocation.arg(extraParam);\n      }\n      body._return(_this());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 491,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3228,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 141,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  Extra annotation=element.getAnnotation(Extra.class);\n  String extraKey=annotation.value();\n  String fieldName=element.getSimpleName().toString();\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  if (holder.cast == null) {\n    JType objectType=codeModel._ref(Object.class);\n    JMethod method=holder.eBean.method(JMod.PRIVATE,objectType,\"cast_\");\n    JTypeVar genericType=method.generify(\"T\");\n    method.type(genericType);\n    JVar objectParam=method.param(objectType,\"object\");\n    method.annotate(SuppressWarnings.class).param(\"value\",\"unchecked\");\n    method.body()._return(JExpr.cast(genericType,objectParam));\n    holder.cast=method;\n  }\n  if (holder.extras == null) {\n    JClass bundleClass=holder.refClass(\"android.os.Bundle\");\n    holder.extras=holder.initIfActivityBody.decl(bundleClass,\"extras_\");\n    holder.extras.init(holder.initActivityRef.invoke(\"getIntent\").invoke(\"getExtras\"));\n    holder.extrasNotNullBlock=holder.initIfActivityBody._if(holder.extras.ne(JExpr._null()))._then();\n  }\n  JBlock ifContainsKey=holder.extrasNotNullBlock._if(JExpr.invoke(holder.extras,\"containsKey\").arg(extraKey))._then();\n  JTryBlock containsKeyTry=ifContainsKey._try();\n  JFieldRef extraField=JExpr.ref(fieldName);\n  containsKeyTry.body().assign(extraField,JExpr.invoke(holder.cast).arg(holder.extras.invoke(\"get\").arg(extraKey)));\n  JCatchBlock containsKeyCatch=containsKeyTry._catch(holder.refClass(ClassCastException.class));\n  JVar exceptionParam=containsKeyCatch.param(\"e\");\n  JInvocation errorInvoke=holder.refClass(\"android.util.Log\").staticInvoke(\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Could not cast extra to expected type, the field is left to its default value\");\n  errorInvoke.arg(exceptionParam);\n  containsKeyCatch.body().add(errorInvoke);\n  if (holder.intentBuilderClass != null) {\n{\n      JMethod method=holder.intentBuilderClass.method(PUBLIC,holder.intentBuilderClass,fieldName);\n      boolean castToSerializable=false;\n      TypeMirror extraType=element.asType();\n      if (extraType.getKind() == TypeKind.DECLARED) {\n        Elements elementUtils=processingEnv.getElementUtils();\n        Types typeUtils=processingEnv.getTypeUtils();\n        TypeMirror parcelableType=elementUtils.getTypeElement(\"android.os.Parcelable\").asType();\n        if (!typeUtils.isSubtype(extraType,parcelableType)) {\n          TypeMirror stringType=elementUtils.getTypeElement(\"java.lang.String\").asType();\n          if (!typeUtils.isSubtype(extraType,stringType)) {\n            castToSerializable=true;\n          }\n        }\n      }\n      JClass paramClass=helper.typeMirrorToJClass(extraType,holder);\n      JVar extraParam=method.param(paramClass,fieldName);\n      JBlock body=method.body();\n      JInvocation invocation=body.invoke(holder.intentField,\"putExtra\").arg(extraKey);\n      if (castToSerializable) {\n        JClass serializableClass=holder.refClass(Serializable.class);\n        invocation.arg(cast(serializableClass,extraParam));\n      }\n else {\n        invocation.arg(extraParam);\n      }\n      body._return(_this());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 509,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String fieldName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "javax.lang.model.element.Name"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 66,
    "startColumnNumber" : 21,
    "endLineNumber" : 66,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}