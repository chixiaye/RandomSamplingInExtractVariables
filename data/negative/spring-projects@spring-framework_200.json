{
  "id" : 200,
  "expression" : "var",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/asm/MethodVisitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "var",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 348,
      "startColumnNumber" : 30,
      "endLineNumber" : 348,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 348,
        "startColumnNumber" : 6,
        "endLineNumber" : 348,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mv.visitVarInsn(opcode,var)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 348,
        "startColumnNumber" : 6,
        "endLineNumber" : 348,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mv.visitVarInsn(opcode,var);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 347,
        "startColumnNumber" : 20,
        "endLineNumber" : 349,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mv.visitVarInsn(opcode,var);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 347,
        "startColumnNumber" : 4,
        "endLineNumber" : 349,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mv != null) {\n  mv.visitVarInsn(opcode,var);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 346,
        "startColumnNumber" : 60,
        "endLineNumber" : 350,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (mv != null) {\n    mv.visitVarInsn(opcode,var);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 337,
        "startColumnNumber" : 2,
        "endLineNumber" : 350,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Visits a local variable instruction. A local variable instruction is an instruction that loads or stores the value of a local variable.\n * @param opcode the opcode of the local variable instruction to be visited. This opcode is eitherILOAD, LLOAD, FLOAD, DLOAD, ALOAD, ISTORE, LSTORE, FSTORE, DSTORE, ASTORE or RET.\n * @param var the operand of the instruction to be visited. This operand is the index of a localvariable.\n */\npublic void visitVarInsn(final int opcode,final int var){\n  if (mv != null) {\n    mv.visitVarInsn(opcode,var);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 25,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 348,
        "startColumnNumber" : 6,
        "endLineNumber" : 348,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mv.visitVarInsn(opcode,var);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 348,
    "startColumnNumber" : 30,
    "endLineNumber" : 348,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}