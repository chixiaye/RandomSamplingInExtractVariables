{
  "id" : 262,
  "expression" : "new ByteArrayOutputStream(hint){\n  @Override public byte[] toByteArray(){\n    if (count == buf.length) {\n      return buf;\n    }\n else {\n      return super.toByteArray();\n    }\n  }\n}\n",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/util/StreamUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ByteArrayOutputStream(hint){\n  @Override public byte[] toByteArray(){\n    if (count == buf.length) {\n      return buf;\n    }\n else {\n      return super.toByteArray();\n    }\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 408,
      "startLineNumber" : 37,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 27,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 36,
        "startColumnNumber" : 26,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "byteOutput=new ByteArrayOutputStream(hint){\n  @Override public byte[] toByteArray(){\n    if (count == buf.length) {\n      return buf;\n    }\n else {\n      return super.toByteArray();\n    }\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 29,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ByteArrayOutputStream byteOutput=new ByteArrayOutputStream(hint){\n  @Override public byte[] toByteArray(){\n    if (count == buf.length) {\n      return buf;\n    }\n else {\n      return super.toByteArray();\n    }\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 34,
        "startColumnNumber" : 96,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteArrayOutputStream byteOutput=new ByteArrayOutputStream(hint){\n    @Override public byte[] toByteArray(){\n      if (count == buf.length) {\n        return buf;\n      }\n else {\n        return super.toByteArray();\n      }\n    }\n  }\n;\n  ByteStreams.copy(inputStream,byteOutput);\n  return byteOutput.toByteArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Efficiently fetch the bytes from the InputStream, provided that caller can guess exact numbers of bytes that can be read from inputStream. Avoids one extra byte[] allocation that ByteStreams.toByteArray() performs.\n * @param hint - size of inputStream's content in bytes\n */\npublic static byte[] getBytesFromStream(InputStream inputStream,int hint) throws IOException {\n  ByteArrayOutputStream byteOutput=new ByteArrayOutputStream(hint){\n    @Override public byte[] toByteArray(){\n      if (count == buf.length) {\n        return buf;\n      }\n else {\n        return super.toByteArray();\n      }\n    }\n  }\n;\n  ByteStreams.copy(inputStream,byteOutput);\n  return byteOutput.toByteArray();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 36,
        "startColumnNumber" : 26,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "byteOutput=new ByteArrayOutputStream(hint){\n  @Override public byte[] toByteArray(){\n    if (count == buf.length) {\n      return buf;\n    }\n else {\n      return super.toByteArray();\n    }\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 29,
      "astHeight" : 10
    },
    "tokenLength" : 10,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 408,
    "startLineNumber" : 37,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}