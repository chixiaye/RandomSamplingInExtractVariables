{
  "id" : 283,
  "expression" : "new LinkedList<>()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/test-utils/src/main/java/org/apache/kafka/streams/TestOutputTopic.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LinkedList<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 113,
      "startColumnNumber" : 46,
      "endLineNumber" : 113,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 113,
        "startColumnNumber" : 37,
        "endLineNumber" : 113,
        "endColumnNumber" : 64
      },
      "nodeContext" : "output=new LinkedList<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final List<TestRecord<K,V>> output=new LinkedList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 112,
        "startColumnNumber" : 54,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<TestRecord<K,V>> output=new LinkedList<>();\n  while (!isEmpty()) {\n    output.add(readRecord());\n  }\n  return output;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Read output to List. This method can be used if the result is considered a stream. If the result is considered a table, the list will contain all updated, ie, a key might be contained multiple times. If you are only interested in the last table update (ie, the final table state), you can use  {@link #readKeyValuesToMap()} instead.\n * @return List of output.\n */\npublic List<TestRecord<K,V>> readRecordsToList(){\n  final List<TestRecord<K,V>> output=new LinkedList<>();\n  while (!isEmpty()) {\n    output.add(readRecord());\n  }\n  return output;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final List<TestRecord<K,V>> output=new LinkedList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.LinkedList<org.apache.kafka.streams.test.TestRecord<K,V>>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 113,
    "startColumnNumber" : 46,
    "endLineNumber" : 113,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}