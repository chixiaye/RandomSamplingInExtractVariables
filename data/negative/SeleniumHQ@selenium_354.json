{
  "id" : 354,
  "expression" : "WebDriver.class",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/support/ui/WebDriverWaitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "WebDriver.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 72,
      "startColumnNumber" : 32,
      "endLineNumber" : 72,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 72,
        "startColumnNumber" : 27,
        "endLineNumber" : 72,
        "endColumnNumber" : 99
      },
      "nodeContext" : "mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 72,
        "startColumnNumber" : 14,
        "endLineNumber" : 72,
        "endColumnNumber" : 99
      },
      "nodeContext" : "testDriver=mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 100
      },
      "nodeContext" : "WebDriver testDriver=mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 64,
        "startColumnNumber" : 82,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Capabilities caps=new MutableCapabilities();\n  Response response=new Response(new SessionId(\"foo\"));\n  response.setValue(caps.asMap());\n  CommandExecutor executor=mock(CommandExecutor.class);\n  when(executor.execute(any(Command.class))).thenReturn(response);\n  RemoteWebDriver driver=new RemoteWebDriver(executor,caps);\n  WebDriver testDriver=mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class));\n  when(((WrapsDriver)testDriver).getWrappedDriver()).thenReturn(driver);\n  TickingClock clock=new TickingClock();\n  WebDriverWait wait=new WebDriverWait(testDriver,Duration.ofSeconds(1),Duration.ofMillis(200),clock,clock);\n  assertThatExceptionOfType(TimeoutException.class).isThrownBy(() -> wait.until(d -> false)).withMessageContaining(\"Capabilities {javascriptEnabled: true, platform: ANY, platformName: ANY}\").withMessageContaining(\"Session ID: foo\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldIncludeRemoteInfoForWrappedDriverTimeout() throws IOException {\n  Capabilities caps=new MutableCapabilities();\n  Response response=new Response(new SessionId(\"foo\"));\n  response.setValue(caps.asMap());\n  CommandExecutor executor=mock(CommandExecutor.class);\n  when(executor.execute(any(Command.class))).thenReturn(response);\n  RemoteWebDriver driver=new RemoteWebDriver(executor,caps);\n  WebDriver testDriver=mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class));\n  when(((WrapsDriver)testDriver).getWrappedDriver()).thenReturn(driver);\n  TickingClock clock=new TickingClock();\n  WebDriverWait wait=new WebDriverWait(testDriver,Duration.ofSeconds(1),Duration.ofMillis(200),clock,clock);\n  assertThatExceptionOfType(TimeoutException.class).isThrownBy(() -> wait.until(d -> false)).withMessageContaining(\"Capabilities {javascriptEnabled: true, platform: ANY, platformName: ANY}\").withMessageContaining(\"Session ID: foo\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 100
      },
      "nodeContext" : "WebDriver testDriver=mock(WebDriver.class,withSettings().extraInterfaces(WrapsDriver.class));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.openqa.selenium.WebDriver>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 72,
    "startColumnNumber" : 32,
    "endLineNumber" : 72,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}