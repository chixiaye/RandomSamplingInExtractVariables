{
  "id" : 191,
  "expression" : "Integer.toString(appVersion)",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.toString(appVersion)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 243,
      "startColumnNumber" : 9,
      "endLineNumber" : 243,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 243,
        "startColumnNumber" : 9,
        "endLineNumber" : 243,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Integer.toString(appVersion).equals(appVersionString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 243,
        "endColumnNumber" : 62
      },
      "nodeContext" : "!Integer.toString(appVersion).equals(appVersionString)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 241,
        "startColumnNumber" : 7,
        "endLineNumber" : 245,
        "endColumnNumber" : 25
      },
      "nodeContext" : "!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 32,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 241,
        "startColumnNumber" : 3,
        "endLineNumber" : 248,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)) {\n  throw new IOException(\"unexpected journal header: [\" + magic + \", \"+ version+ \", \"+ valueCountString+ \", \"+ blank+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String magic=reader.readLine();\n  String version=reader.readLine();\n  String appVersionString=reader.readLine();\n  String valueCountString=reader.readLine();\n  String blank=reader.readLine();\n  if (!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)) {\n    throw new IOException(\"unexpected journal header: [\" + magic + \", \"+ version+ \", \"+ valueCountString+ \", \"+ blank+ \"]\");\n  }\n  int lineCount=0;\n  while (true) {\n    try {\n      readJournalLine(reader.readLine());\n      lineCount++;\n    }\n catch (    EOFException endOfJournal) {\n      break;\n    }\n  }\n  redundantOpCount=lineCount - lruEntries.size();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 235,
        "startColumnNumber" : 2,
        "endLineNumber" : 262,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  String magic=reader.readLine();\n  String version=reader.readLine();\n  String appVersionString=reader.readLine();\n  String valueCountString=reader.readLine();\n  String blank=reader.readLine();\n  if (!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)) {\n    throw new IOException(\"unexpected journal header: [\" + magic + \", \"+ version+ \", \"+ valueCountString+ \", \"+ blank+ \"]\");\n  }\n  int lineCount=0;\n  while (true) {\n    try {\n      readJournalLine(reader.readLine());\n      lineCount++;\n    }\n catch (    EOFException endOfJournal) {\n      break;\n    }\n  }\n  redundantOpCount=lineCount - lruEntries.size();\n}\n  finally {\n  Util.closeQuietly(reader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 233,
        "startColumnNumber" : 47,
        "endLineNumber" : 263,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StrictLineReader reader=new StrictLineReader(new FileInputStream(journalFile),Util.US_ASCII);\n  try {\n    String magic=reader.readLine();\n    String version=reader.readLine();\n    String appVersionString=reader.readLine();\n    String valueCountString=reader.readLine();\n    String blank=reader.readLine();\n    if (!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)) {\n      throw new IOException(\"unexpected journal header: [\" + magic + \", \"+ version+ \", \"+ valueCountString+ \", \"+ blank+ \"]\");\n    }\n    int lineCount=0;\n    while (true) {\n      try {\n        readJournalLine(reader.readLine());\n        lineCount++;\n      }\n catch (      EOFException endOfJournal) {\n        break;\n      }\n    }\n    redundantOpCount=lineCount - lruEntries.size();\n  }\n  finally {\n    Util.closeQuietly(reader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 233,
        "startColumnNumber" : 1,
        "endLineNumber" : 263,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournal() throws IOException {\n  StrictLineReader reader=new StrictLineReader(new FileInputStream(journalFile),Util.US_ASCII);\n  try {\n    String magic=reader.readLine();\n    String version=reader.readLine();\n    String appVersionString=reader.readLine();\n    String valueCountString=reader.readLine();\n    String blank=reader.readLine();\n    if (!MAGIC.equals(magic) || !VERSION_1.equals(version) || !Integer.toString(appVersion).equals(appVersionString)|| !Integer.toString(valueCount).equals(valueCountString)|| !\"\".equals(blank)) {\n      throw new IOException(\"unexpected journal header: [\" + magic + \", \"+ version+ \", \"+ valueCountString+ \", \"+ blank+ \"]\");\n    }\n    int lineCount=0;\n    while (true) {\n      try {\n        readJournalLine(reader.readLine());\n        lineCount++;\n      }\n catch (      EOFException endOfJournal) {\n        break;\n      }\n    }\n    redundantOpCount=lineCount - lruEntries.size();\n  }\n  finally {\n    Util.closeQuietly(reader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 243,
        "endColumnNumber" : 62
      },
      "nodeContext" : "!Integer.toString(appVersion).equals(appVersionString)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 243,
    "startColumnNumber" : 9,
    "endLineNumber" : 243,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}