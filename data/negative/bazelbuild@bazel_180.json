{
  "id" : 180,
  "expression" : "execRoot.getRelative(dirname)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/remote/merkletree/DirectoryTreeBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "execRoot.getRelative(dirname)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 221,
      "startColumnNumber" : 33,
      "endLineNumber" : 221,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 221,
        "startColumnNumber" : 33,
        "endLineNumber" : 221,
        "endColumnNumber" : 87
      },
      "nodeContext" : "execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 221,
        "startColumnNumber" : 23,
        "endLineNumber" : 221,
        "endColumnNumber" : 87
      },
      "nodeContext" : "entries=execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 221,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Collection<Dirent> entries=execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 220,
        "startColumnNumber" : 25,
        "endLineNumber" : 245,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<Dirent> entries=execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW);\n  for (  Dirent entry : entries) {\n    String basename=entry.getName();\n    PathFragment path=dirname.getChild(basename);\nswitch (entry.getType()) {\ncase FILE:      inputs.put(path,ActionInputHelper.fromPath(path));\n    break;\ncase DIRECTORY:  explodeDirectory(path,inputs,execRoot);\nbreak;\ncase SYMLINK:throw new IllegalStateException(String.format(\"Encountered symlink input '%s', but all\" + \" symlinks should have been resolved by readdir. This is a bug.\",path));\ncase UNKNOWN:throw new IOException(String.format(\"The file type of '%s' is not supported.\",path));\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1005,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 245,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void explodeDirectory(PathFragment dirname,SortedMap<PathFragment,ActionInput> inputs,Path execRoot) throws IOException {\n  Collection<Dirent> entries=execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW);\n  for (  Dirent entry : entries) {\n    String basename=entry.getName();\n    PathFragment path=dirname.getChild(basename);\nswitch (entry.getType()) {\ncase FILE:      inputs.put(path,ActionInputHelper.fromPath(path));\n    break;\ncase DIRECTORY:  explodeDirectory(path,inputs,execRoot);\nbreak;\ncase SYMLINK:throw new IllegalStateException(String.format(\"Encountered symlink input '%s', but all\" + \" symlinks should have been resolved by readdir. This is a bug.\",path));\ncase UNKNOWN:throw new IOException(String.format(\"The file type of '%s' is not supported.\",path));\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 221,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Collection<Dirent> entries=execRoot.getRelative(dirname).readdir(Symlinks.FOLLOW);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.google.devtools.build.lib.vfs.Path"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 221,
    "startColumnNumber" : 33,
    "endLineNumber" : 221,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}