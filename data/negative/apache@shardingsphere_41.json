{
  "id" : 41,
  "expression" : "MockSpan.LogEntry",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-jaeger/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/jaeger/advice/JDBCExecutorCallbackAdviceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MockSpan.LogEntry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 73,
      "startColumnNumber" : 13,
      "endLineNumber" : 73,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 73,
        "startColumnNumber" : 13,
        "endLineNumber" : 73,
        "endColumnNumber" : 30
      },
      "nodeContext" : "MockSpan.LogEntry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 31
      },
      "nodeContext" : "List<MockSpan.LogEntry>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<MockSpan.LogEntry> entries=span.logEntries();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 66,
        "startColumnNumber" : 40,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ADVICE.beforeMethod(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new MethodInvocationResult());\n  ADVICE.onThrowing(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new IOException());\n  ADVICE.afterMethod(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new MethodInvocationResult());\n  List<MockSpan> spans=COLLECTOR.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(JaegerConstants.ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(JaegerConstants.ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  Map<String,Object> tags=span.tags();\n  assertThat(span.operationName(),is(\"/ShardingSphere/executeSQL/\"));\n  assertThat(tags.get(\"db.instance\"),is(\"mock.db\"));\n  assertThat(tags.get(\"db.type\"),is(JaegerConstants.DB_TYPE_VALUE));\n  assertThat(tags.get(\"span.kind\"),is(\"client\"));\n  assertThat(tags.get(\"db.statement\"),is(\"select 1\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertExceptionHandle(){\n  ADVICE.beforeMethod(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new MethodInvocationResult());\n  ADVICE.onThrowing(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new IOException());\n  ADVICE.afterMethod(getTargetObject(),null,new Object[]{getExecutionUnit(),false,getExtraMap()},new MethodInvocationResult());\n  List<MockSpan> spans=COLLECTOR.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(JaegerConstants.ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(JaegerConstants.ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  Map<String,Object> tags=span.tags();\n  assertThat(span.operationName(),is(\"/ShardingSphere/executeSQL/\"));\n  assertThat(tags.get(\"db.instance\"),is(\"mock.db\"));\n  assertThat(tags.get(\"db.type\"),is(JaegerConstants.DB_TYPE_VALUE));\n  assertThat(tags.get(\"span.kind\"),is(\"client\"));\n  assertThat(tags.get(\"db.statement\"),is(\"select 1\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<MockSpan.LogEntry> entries=span.logEntries();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "MockSpan"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 73,
    "startColumnNumber" : 13,
    "endLineNumber" : 73,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}