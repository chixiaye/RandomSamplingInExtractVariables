{
  "id" : 311,
  "expression" : "\" != \"",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/EagerPrimsAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" != \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 382,
      "startColumnNumber" : 51,
      "endLineNumber" : 382,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 382,
        "startColumnNumber" : 25,
        "endLineNumber" : 382,
        "endColumnNumber" : 68
      },
      "nodeContext" : "\"Oh dear. \" + eagerCost + \" != \"+ lazyCost",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 382,
        "startColumnNumber" : 6,
        "endLineNumber" : 382,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 382,
        "startColumnNumber" : 6,
        "endLineNumber" : 382,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 381,
        "startColumnNumber" : 55,
        "endLineNumber" : 383,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 383,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (eagerCost.longValue() != lazyCost.longValue()) {\n  System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 355,
        "startColumnNumber" : 44,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=5000;\n  List<List<EagerPrimsAdjacencyList.Edge>> g1=EagerPrimsAdjacencyList.createEmptyGraph(n);\n  List<List<LazyPrimsAdjacencyList.Edge>> g2=LazyPrimsAdjacencyList.createEmptyGraph(n);\n  for (int i=0; i < n; i++) {\n    for (int j=i + 1; j < n; j++) {\n      int r=random.nextInt() % 10;\n      EagerPrimsAdjacencyList.addUndirectedEdge(g1,i,j,r);\n      LazyPrimsAdjacencyList.addUndirectedEdge(g2,i,j,r);\n    }\n  }\n  EagerPrimsAdjacencyList eagerSolver=new EagerPrimsAdjacencyList(g1);\n  LazyPrimsAdjacencyList lazySolver=new LazyPrimsAdjacencyList(g2);\n  long startTime=System.nanoTime();\n  Long eagerCost=eagerSolver.getMstCost();\n  long endTime=System.nanoTime();\n  System.out.println(\"Eager: \" + (endTime - startTime));\n  startTime=System.nanoTime();\n  Long lazyCost=lazySolver.getMstCost();\n  endTime=System.nanoTime();\n  System.out.println(\"Lazy:  \" + (endTime - startTime));\n  if (eagerCost.longValue() != lazyCost.longValue()) {\n    System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 355,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void lazyVsEagerAnalysis(){\n  int n=5000;\n  List<List<EagerPrimsAdjacencyList.Edge>> g1=EagerPrimsAdjacencyList.createEmptyGraph(n);\n  List<List<LazyPrimsAdjacencyList.Edge>> g2=LazyPrimsAdjacencyList.createEmptyGraph(n);\n  for (int i=0; i < n; i++) {\n    for (int j=i + 1; j < n; j++) {\n      int r=random.nextInt() % 10;\n      EagerPrimsAdjacencyList.addUndirectedEdge(g1,i,j,r);\n      LazyPrimsAdjacencyList.addUndirectedEdge(g2,i,j,r);\n    }\n  }\n  EagerPrimsAdjacencyList eagerSolver=new EagerPrimsAdjacencyList(g1);\n  LazyPrimsAdjacencyList lazySolver=new LazyPrimsAdjacencyList(g2);\n  long startTime=System.nanoTime();\n  Long eagerCost=eagerSolver.getMstCost();\n  long endTime=System.nanoTime();\n  System.out.println(\"Eager: \" + (endTime - startTime));\n  startTime=System.nanoTime();\n  Long lazyCost=lazySolver.getMstCost();\n  endTime=System.nanoTime();\n  System.out.println(\"Lazy:  \" + (endTime - startTime));\n  if (eagerCost.longValue() != lazyCost.longValue()) {\n    System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 382,
        "startColumnNumber" : 6,
        "endLineNumber" : 382,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.out.println(\"Oh dear. \" + eagerCost + \" != \"+ lazyCost);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 382,
    "startColumnNumber" : 51,
    "endLineNumber" : 382,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}