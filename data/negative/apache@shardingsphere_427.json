{
  "id" : 427,
  "expression" : "astNode instanceof OtherLiteralValue",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-oracle/src/main/java/org/apache/shardingsphere/sql/parser/oracle/visitor/statement/impl/OracleStatementSQLVisitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "astNode instanceof OtherLiteralValue",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 424,
      "startColumnNumber" : 12,
      "endLineNumber" : 424,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 424,
        "startColumnNumber" : 8,
        "endLineNumber" : 426,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (astNode instanceof OtherLiteralValue) {\n  return new CommonExpressionSegment(context.getStart().getStartIndex(),context.getStop().getStopIndex(),context.getText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 408,
        "startColumnNumber" : 100,
        "endLineNumber" : 428,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (astNode instanceof StringLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((StringLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof NumberLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((NumberLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof BooleanLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((BooleanLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof ParameterMarkerValue) {\n    return new ParameterMarkerExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((ParameterMarkerValue)astNode).getValue());\n  }\n  if (astNode instanceof SubquerySegment) {\n    return new SubqueryExpressionSegment((SubquerySegment)astNode);\n  }\n  if (astNode instanceof OtherLiteralValue) {\n    return new CommonExpressionSegment(context.getStart().getStartIndex(),context.getStop().getStopIndex(),context.getText());\n  }\n  return astNode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 408,
        "startColumnNumber" : 4,
        "endLineNumber" : 428,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private ASTNode createExpressionSegment(final ASTNode astNode,final ParserRuleContext context){\n  if (astNode instanceof StringLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((StringLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof NumberLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((NumberLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof BooleanLiteralValue) {\n    return new LiteralExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((BooleanLiteralValue)astNode).getValue());\n  }\n  if (astNode instanceof ParameterMarkerValue) {\n    return new ParameterMarkerExpressionSegment(context.start.getStartIndex(),context.stop.getStopIndex(),((ParameterMarkerValue)astNode).getValue());\n  }\n  if (astNode instanceof SubquerySegment) {\n    return new SubqueryExpressionSegment((SubquerySegment)astNode);\n  }\n  if (astNode instanceof OtherLiteralValue) {\n    return new CommonExpressionSegment(context.getStart().getStartIndex(),context.getStop().getStopIndex(),context.getText());\n  }\n  return astNode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 424,
        "startColumnNumber" : 8,
        "endLineNumber" : 426,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (astNode instanceof OtherLiteralValue) {\n  return new CommonExpressionSegment(context.getStart().getStartIndex(),context.getStop().getStopIndex(),context.getText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 424,
    "startColumnNumber" : 12,
    "endLineNumber" : 424,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}