{
  "id" : 489,
  "expression" : "cursorPosition",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui/src/org/jkiss/dbeaver/ui/contentassist/SmartTextContentAdapter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cursorPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 43,
      "startColumnNumber" : 12,
      "endLineNumber" : 43,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 46
      },
      "nodeContext" : "cursorPosition < contents.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cursorPosition < contents.length()) {\n  text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 18,
        "startColumnNumber" : 92,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertControlContents(Control control,String contents,int cursorPosition){\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 46
      },
      "nodeContext" : "cursorPosition < contents.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "cursorPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 44,
      "startColumnNumber" : 44,
      "endLineNumber" : 44,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 44,
        "startColumnNumber" : 30,
        "endLineNumber" : 44,
        "endColumnNumber" : 58
      },
      "nodeContext" : "selection.x + cursorPosition",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 45
      },
      "nodeContext" : "text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 43,
        "startColumnNumber" : 48,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cursorPosition < contents.length()) {\n  text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 18,
        "startColumnNumber" : 92,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertControlContents(Control control,String contents,int cursorPosition){\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 44,
        "startColumnNumber" : 30,
        "endLineNumber" : 44,
        "endColumnNumber" : 58
      },
      "nodeContext" : "selection.x + cursorPosition",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "cursorPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 45,
      "startColumnNumber" : 30,
      "endLineNumber" : 45,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 44
      },
      "nodeContext" : "selection.x + cursorPosition",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 45
      },
      "nodeContext" : "text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 43,
        "startColumnNumber" : 48,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cursorPosition < contents.length()) {\n  text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 18,
        "startColumnNumber" : 92,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void insertControlContents(Control control,String contents,int cursorPosition){\n  Text text=(Text)control;\n  String curValue=text.getText().toUpperCase();\n  Point selection=text.getSelection();\n  if (selection.x == selection.y) {\n    String contentsUC=contents.toUpperCase();\n    for (int i=selection.x - 1; i >= 0; i--) {\n      String prefix=curValue.substring(i,selection.x);\n      if (i == 0 && contentsUC.startsWith(prefix)) {\n        text.setSelection(i,selection.x);\n        break;\n      }\n      char ch=curValue.charAt(i);\n      if (!Character.isLetterOrDigit(ch) && contentsUC.indexOf(ch) == -1) {\n        break;\n      }\n    }\n  }\n  text.insert(contents);\n  if (cursorPosition < contents.length()) {\n    text.setSelection(selection.x + cursorPosition,selection.x + cursorPosition);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 44
      },
      "nodeContext" : "selection.x + cursorPosition",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 43,
    "startColumnNumber" : 12,
    "endLineNumber" : 43,
    "endColumnNumber" : 26
  }, {
    "charLength" : 14,
    "startLineNumber" : 44,
    "startColumnNumber" : 44,
    "endLineNumber" : 44,
    "endColumnNumber" : 58
  }, {
    "charLength" : 14,
    "startLineNumber" : 45,
    "startColumnNumber" : 30,
    "endLineNumber" : 45,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}