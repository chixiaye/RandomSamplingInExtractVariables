{
  "id" : 87,
  "expression" : "src",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/processors/ReplayProcessorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "src",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 366,
      "startColumnNumber" : 12,
      "endLineNumber" : 366,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 366,
        "startColumnNumber" : 12,
        "endLineNumber" : 366,
        "endColumnNumber" : 25
      },
      "nodeContext" : "src.onNext(v)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 366,
        "startColumnNumber" : 12,
        "endLineNumber" : 366,
        "endColumnNumber" : 26
      },
      "nodeContext" : "src.onNext(v);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 362,
        "startColumnNumber" : 37,
        "endLineNumber" : 396,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  InOrder inOrder=inOrder(o);\n  String v=\"\" + i;\n  src.onNext(v);\n  System.out.printf(\"Turn: %d%n\",i);\n  src.first().flatMap(new Function<String,Flowable<String>>(){\n    @Override public Flowable<String> apply(    String t1){\n      return Flowable.just(t1 + \", \" + t1);\n    }\n  }\n).subscribe(new DefaultObserver<String>(){\n    @Override public void onNext(    String t){\n      System.out.println(t);\n      o.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n);\n  inOrder.verify(o).onNext(\"0, 0\");\n  inOrder.verify(o).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1285,
        "startLineNumber" : 362,
        "startColumnNumber" : 8,
        "endLineNumber" : 396,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  InOrder inOrder=inOrder(o);\n  String v=\"\" + i;\n  src.onNext(v);\n  System.out.printf(\"Turn: %d%n\",i);\n  src.first().flatMap(new Function<String,Flowable<String>>(){\n    @Override public Flowable<String> apply(    String t1){\n      return Flowable.just(t1 + \", \" + t1);\n    }\n  }\n).subscribe(new DefaultObserver<String>(){\n    @Override public void onNext(    String t){\n      System.out.println(t);\n      o.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n);\n  inOrder.verify(o).onNext(\"0, 0\");\n  inOrder.verify(o).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1378,
        "startLineNumber" : 359,
        "startColumnNumber" : 41,
        "endLineNumber" : 397,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReplayProcessor<String> src=ReplayProcessor.create();\n  for (int i=0; i < 10; i++) {\n    final Subscriber<Object> o=TestHelper.mockSubscriber();\n    InOrder inOrder=inOrder(o);\n    String v=\"\" + i;\n    src.onNext(v);\n    System.out.printf(\"Turn: %d%n\",i);\n    src.first().flatMap(new Function<String,Flowable<String>>(){\n      @Override public Flowable<String> apply(      String t1){\n        return Flowable.just(t1 + \", \" + t1);\n      }\n    }\n).subscribe(new DefaultObserver<String>(){\n      @Override public void onNext(      String t){\n        System.out.println(t);\n        o.onNext(t);\n      }\n      @Override public void onError(      Throwable e){\n        o.onError(e);\n      }\n      @Override public void onComplete(){\n        o.onComplete();\n      }\n    }\n);\n    inOrder.verify(o).onNext(\"0, 0\");\n    inOrder.verify(o).onComplete();\n    verify(o,never()).onError(any(Throwable.class));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 358,
        "startColumnNumber" : 4,
        "endLineNumber" : 397,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=1000) public void testUnsubscriptionCase(){\n  ReplayProcessor<String> src=ReplayProcessor.create();\n  for (int i=0; i < 10; i++) {\n    final Subscriber<Object> o=TestHelper.mockSubscriber();\n    InOrder inOrder=inOrder(o);\n    String v=\"\" + i;\n    src.onNext(v);\n    System.out.printf(\"Turn: %d%n\",i);\n    src.first().flatMap(new Function<String,Flowable<String>>(){\n      @Override public Flowable<String> apply(      String t1){\n        return Flowable.just(t1 + \", \" + t1);\n      }\n    }\n).subscribe(new DefaultObserver<String>(){\n      @Override public void onNext(      String t){\n        System.out.println(t);\n        o.onNext(t);\n      }\n      @Override public void onError(      Throwable e){\n        o.onError(e);\n      }\n      @Override public void onComplete(){\n        o.onComplete();\n      }\n    }\n);\n    inOrder.verify(o).onNext(\"0, 0\");\n    inOrder.verify(o).onComplete();\n    verify(o,never()).onError(any(Throwable.class));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 366,
        "startColumnNumber" : 12,
        "endLineNumber" : 366,
        "endColumnNumber" : 26
      },
      "nodeContext" : "src.onNext(v);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.processors.ReplayProcessor<java.lang.String>"
  }, {
    "nodeContext" : "src",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 368,
      "startColumnNumber" : 12,
      "endLineNumber" : 368,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 368,
        "startColumnNumber" : 12,
        "endLineNumber" : 368,
        "endColumnNumber" : 23
      },
      "nodeContext" : "src.first()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 368,
        "startColumnNumber" : 12,
        "endLineNumber" : 375,
        "endColumnNumber" : 18
      },
      "nodeContext" : "src.first().flatMap(new Function<String,Flowable<String>>(){\n  @Override public Flowable<String> apply(  String t1){\n    return Flowable.just(t1 + \", \" + t1);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 368,
        "startColumnNumber" : 12,
        "endLineNumber" : 392,
        "endColumnNumber" : 18
      },
      "nodeContext" : "src.first().flatMap(new Function<String,Flowable<String>>(){\n  @Override public Flowable<String> apply(  String t1){\n    return Flowable.just(t1 + \", \" + t1);\n  }\n}\n).subscribe(new DefaultObserver<String>(){\n  @Override public void onNext(  String t){\n    System.out.println(t);\n    o.onNext(t);\n  }\n  @Override public void onError(  Throwable e){\n    o.onError(e);\n  }\n  @Override public void onComplete(){\n    o.onComplete();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 368,
        "startColumnNumber" : 12,
        "endLineNumber" : 392,
        "endColumnNumber" : 19
      },
      "nodeContext" : "src.first().flatMap(new Function<String,Flowable<String>>(){\n  @Override public Flowable<String> apply(  String t1){\n    return Flowable.just(t1 + \", \" + t1);\n  }\n}\n).subscribe(new DefaultObserver<String>(){\n  @Override public void onNext(  String t){\n    System.out.println(t);\n    o.onNext(t);\n  }\n  @Override public void onError(  Throwable e){\n    o.onError(e);\n  }\n  @Override public void onComplete(){\n    o.onComplete();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 362,
        "startColumnNumber" : 37,
        "endLineNumber" : 396,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  InOrder inOrder=inOrder(o);\n  String v=\"\" + i;\n  src.onNext(v);\n  System.out.printf(\"Turn: %d%n\",i);\n  src.first().flatMap(new Function<String,Flowable<String>>(){\n    @Override public Flowable<String> apply(    String t1){\n      return Flowable.just(t1 + \", \" + t1);\n    }\n  }\n).subscribe(new DefaultObserver<String>(){\n    @Override public void onNext(    String t){\n      System.out.println(t);\n      o.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n);\n  inOrder.verify(o).onNext(\"0, 0\");\n  inOrder.verify(o).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1285,
        "startLineNumber" : 362,
        "startColumnNumber" : 8,
        "endLineNumber" : 396,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  InOrder inOrder=inOrder(o);\n  String v=\"\" + i;\n  src.onNext(v);\n  System.out.printf(\"Turn: %d%n\",i);\n  src.first().flatMap(new Function<String,Flowable<String>>(){\n    @Override public Flowable<String> apply(    String t1){\n      return Flowable.just(t1 + \", \" + t1);\n    }\n  }\n).subscribe(new DefaultObserver<String>(){\n    @Override public void onNext(    String t){\n      System.out.println(t);\n      o.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n);\n  inOrder.verify(o).onNext(\"0, 0\");\n  inOrder.verify(o).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1378,
        "startLineNumber" : 359,
        "startColumnNumber" : 41,
        "endLineNumber" : 397,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReplayProcessor<String> src=ReplayProcessor.create();\n  for (int i=0; i < 10; i++) {\n    final Subscriber<Object> o=TestHelper.mockSubscriber();\n    InOrder inOrder=inOrder(o);\n    String v=\"\" + i;\n    src.onNext(v);\n    System.out.printf(\"Turn: %d%n\",i);\n    src.first().flatMap(new Function<String,Flowable<String>>(){\n      @Override public Flowable<String> apply(      String t1){\n        return Flowable.just(t1 + \", \" + t1);\n      }\n    }\n).subscribe(new DefaultObserver<String>(){\n      @Override public void onNext(      String t){\n        System.out.println(t);\n        o.onNext(t);\n      }\n      @Override public void onError(      Throwable e){\n        o.onError(e);\n      }\n      @Override public void onComplete(){\n        o.onComplete();\n      }\n    }\n);\n    inOrder.verify(o).onNext(\"0, 0\");\n    inOrder.verify(o).onComplete();\n    verify(o,never()).onError(any(Throwable.class));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 358,
        "startColumnNumber" : 4,
        "endLineNumber" : 397,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=1000) public void testUnsubscriptionCase(){\n  ReplayProcessor<String> src=ReplayProcessor.create();\n  for (int i=0; i < 10; i++) {\n    final Subscriber<Object> o=TestHelper.mockSubscriber();\n    InOrder inOrder=inOrder(o);\n    String v=\"\" + i;\n    src.onNext(v);\n    System.out.printf(\"Turn: %d%n\",i);\n    src.first().flatMap(new Function<String,Flowable<String>>(){\n      @Override public Flowable<String> apply(      String t1){\n        return Flowable.just(t1 + \", \" + t1);\n      }\n    }\n).subscribe(new DefaultObserver<String>(){\n      @Override public void onNext(      String t){\n        System.out.println(t);\n        o.onNext(t);\n      }\n      @Override public void onError(      Throwable e){\n        o.onError(e);\n      }\n      @Override public void onComplete(){\n        o.onComplete();\n      }\n    }\n);\n    inOrder.verify(o).onNext(\"0, 0\");\n    inOrder.verify(o).onComplete();\n    verify(o,never()).onError(any(Throwable.class));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 368,
        "startColumnNumber" : 12,
        "endLineNumber" : 368,
        "endColumnNumber" : 23
      },
      "nodeContext" : "src.first()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.processors.ReplayProcessor<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 366,
    "startColumnNumber" : 12,
    "endLineNumber" : 366,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 368,
    "startColumnNumber" : 12,
    "endLineNumber" : 368,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}