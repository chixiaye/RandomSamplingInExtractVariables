{
  "id" : 372,
  "expression" : "new StringBuilder()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/benchmark/com/google/common/base/JoinerBenchmark.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 82,
      "startColumnNumber" : 25,
      "endLineNumber" : 82,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 82,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 44
      },
      "nodeContext" : "sb=new StringBuilder()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 45
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 81,
        "startColumnNumber" : 35,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder();\n  Iterator<String> iterator=components.iterator();\n  if (iterator.hasNext()) {\n    sb.append(iterator.next().toString());\n    while (iterator.hasNext()) {\n      sb.append(DELIMITER_STRING);\n      sb.append(iterator.next());\n    }\n  }\n  dummy^=sb.toString().length();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; i++) {\n  StringBuilder sb=new StringBuilder();\n  Iterator<String> iterator=components.iterator();\n  if (iterator.hasNext()) {\n    sb.append(iterator.next().toString());\n    while (iterator.hasNext()) {\n      sb.append(DELIMITER_STRING);\n      sb.append(iterator.next());\n    }\n  }\n  dummy^=sb.toString().length();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 79,
        "startColumnNumber" : 30,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int dummy=0;\n  for (int i=0; i < reps; i++) {\n    StringBuilder sb=new StringBuilder();\n    Iterator<String> iterator=components.iterator();\n    if (iterator.hasNext()) {\n      sb.append(iterator.next().toString());\n      while (iterator.hasNext()) {\n        sb.append(DELIMITER_STRING);\n        sb.append(iterator.next());\n      }\n    }\n    dummy^=sb.toString().length();\n  }\n  return dummy;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Mimics what the  {@link Joiner} class does internally when no extra options like ignoring {@code null} values are used.\n */\n@Benchmark int joinerInlined(int reps){\n  int dummy=0;\n  for (int i=0; i < reps; i++) {\n    StringBuilder sb=new StringBuilder();\n    Iterator<String> iterator=components.iterator();\n    if (iterator.hasNext()) {\n      sb.append(iterator.next().toString());\n      while (iterator.hasNext()) {\n        sb.append(DELIMITER_STRING);\n        sb.append(iterator.next());\n      }\n    }\n    dummy^=sb.toString().length();\n  }\n  return dummy;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 45
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 82,
    "startColumnNumber" : 25,
    "endLineNumber" : 82,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}