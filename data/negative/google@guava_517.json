{
  "id" : 517,
  "expression" : "factory.newReentrantReadWriteLock(\"ReadWriteC\")",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/CycleDetectingLockFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "factory.newReentrantReadWriteLock(\"ReadWriteC\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 65,
      "startColumnNumber" : 44,
      "endLineNumber" : 65,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 65,
        "startColumnNumber" : 27,
        "endLineNumber" : 65,
        "endColumnNumber" : 91
      },
      "nodeContext" : "readWriteLockC=factory.newReentrantReadWriteLock(\"ReadWriteC\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ReentrantReadWriteLock readWriteLockC=factory.newReentrantReadWriteLock(\"ReadWriteC\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1462,
        "startLineNumber" : 57,
        "startColumnNumber" : 42,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.setUp();\n  CycleDetectingLockFactory factory=CycleDetectingLockFactory.newInstance(Policies.THROW);\n  lockA=factory.newReentrantLock(\"LockA\");\n  lockB=factory.newReentrantLock(\"LockB\");\n  lockC=factory.newReentrantLock(\"LockC\");\n  ReentrantReadWriteLock readWriteLockA=factory.newReentrantReadWriteLock(\"ReadWriteA\");\n  ReentrantReadWriteLock readWriteLockB=factory.newReentrantReadWriteLock(\"ReadWriteB\");\n  ReentrantReadWriteLock readWriteLockC=factory.newReentrantReadWriteLock(\"ReadWriteC\");\n  readLockA=readWriteLockA.readLock();\n  readLockB=readWriteLockB.readLock();\n  readLockC=readWriteLockC.readLock();\n  writeLockA=readWriteLockA.writeLock();\n  writeLockB=readWriteLockB.writeLock();\n  writeLockC=readWriteLockC.writeLock();\n  CycleDetectingLockFactory.WithExplicitOrdering<MyOrder> factory2=newInstanceWithExplicitOrdering(MyOrder.class,Policies.THROW);\n  lock1=factory2.newReentrantLock(MyOrder.FIRST);\n  lock2=factory2.newReentrantLock(MyOrder.SECOND);\n  lock3=factory2.newReentrantLock(MyOrder.THIRD);\n  CycleDetectingLockFactory.WithExplicitOrdering<OtherOrder> factory3=newInstanceWithExplicitOrdering(OtherOrder.class,Policies.THROW);\n  lock01=factory3.newReentrantLock(OtherOrder.FIRST);\n  lock02=factory3.newReentrantLock(OtherOrder.SECOND);\n  lock03=factory3.newReentrantLock(OtherOrder.THIRD);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1515,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void setUp() throws Exception {\n  super.setUp();\n  CycleDetectingLockFactory factory=CycleDetectingLockFactory.newInstance(Policies.THROW);\n  lockA=factory.newReentrantLock(\"LockA\");\n  lockB=factory.newReentrantLock(\"LockB\");\n  lockC=factory.newReentrantLock(\"LockC\");\n  ReentrantReadWriteLock readWriteLockA=factory.newReentrantReadWriteLock(\"ReadWriteA\");\n  ReentrantReadWriteLock readWriteLockB=factory.newReentrantReadWriteLock(\"ReadWriteB\");\n  ReentrantReadWriteLock readWriteLockC=factory.newReentrantReadWriteLock(\"ReadWriteC\");\n  readLockA=readWriteLockA.readLock();\n  readLockB=readWriteLockB.readLock();\n  readLockC=readWriteLockC.readLock();\n  writeLockA=readWriteLockA.writeLock();\n  writeLockB=readWriteLockB.writeLock();\n  writeLockC=readWriteLockC.writeLock();\n  CycleDetectingLockFactory.WithExplicitOrdering<MyOrder> factory2=newInstanceWithExplicitOrdering(MyOrder.class,Policies.THROW);\n  lock1=factory2.newReentrantLock(MyOrder.FIRST);\n  lock2=factory2.newReentrantLock(MyOrder.SECOND);\n  lock3=factory2.newReentrantLock(MyOrder.THIRD);\n  CycleDetectingLockFactory.WithExplicitOrdering<OtherOrder> factory3=newInstanceWithExplicitOrdering(OtherOrder.class,Policies.THROW);\n  lock01=factory3.newReentrantLock(OtherOrder.FIRST);\n  lock02=factory3.newReentrantLock(OtherOrder.SECOND);\n  lock03=factory3.newReentrantLock(OtherOrder.THIRD);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 197,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ReentrantReadWriteLock readWriteLockC=factory.newReentrantReadWriteLock(\"ReadWriteC\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.concurrent.locks.ReentrantReadWriteLock"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 65,
    "startColumnNumber" : 44,
    "endLineNumber" : 65,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}