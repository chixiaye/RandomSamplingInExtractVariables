{
  "id" : 88,
  "expression" : "e",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Data Structures/Heaps/MinHeap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 94,
      "startColumnNumber" : 4,
      "endLineNumber" : 94,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 23
      },
      "nodeContext" : "e.printStackTrace()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 24
      },
      "nodeContext" : "e.printStackTrace();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  e.printStackTrace();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 95,
        "endColumnNumber" : 4
      },
      "nodeContext" : "catch (EmptyHeapException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 91,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  throw new EmptyHeapException(\"Attempt to delete an element from an empty heap\");\n}\n catch (EmptyHeapException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (minHeap.isEmpty()) try {\n  throw new EmptyHeapException(\"Attempt to delete an element from an empty heap\");\n}\n catch (EmptyHeapException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 89,
        "startColumnNumber" : 48,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (minHeap.isEmpty())   try {\n    throw new EmptyHeapException(\"Attempt to delete an element from an empty heap\");\n  }\n catch (  EmptyHeapException e) {\n    e.printStackTrace();\n  }\n  if ((elementIndex > minHeap.size()) && (elementIndex <= 0))   throw new IndexOutOfBoundsException(\"Index out of heap range\");\n  minHeap.set(elementIndex - 1,getElement(minHeap.size()));\n  minHeap.remove(minHeap.size());\n  if (getElementKey(elementIndex) < getElementKey((int)Math.floor(elementIndex / 2)))   toggleUp(elementIndex);\n else   if (((2 * elementIndex <= minHeap.size()) && (getElementKey(elementIndex) > getElementKey(elementIndex * 2))) || ((2 * elementIndex < minHeap.size()) && (getElementKey(elementIndex) > getElementKey(elementIndex * 2))))   toggleDown(elementIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void deleteElement(int elementIndex){\n  if (minHeap.isEmpty())   try {\n    throw new EmptyHeapException(\"Attempt to delete an element from an empty heap\");\n  }\n catch (  EmptyHeapException e) {\n    e.printStackTrace();\n  }\n  if ((elementIndex > minHeap.size()) && (elementIndex <= 0))   throw new IndexOutOfBoundsException(\"Index out of heap range\");\n  minHeap.set(elementIndex - 1,getElement(minHeap.size()));\n  minHeap.remove(minHeap.size());\n  if (getElementKey(elementIndex) < getElementKey((int)Math.floor(elementIndex / 2)))   toggleUp(elementIndex);\n else   if (((2 * elementIndex <= minHeap.size()) && (getElementKey(elementIndex) > getElementKey(elementIndex * 2))) || ((2 * elementIndex < minHeap.size()) && (getElementKey(elementIndex) > getElementKey(elementIndex * 2))))   toggleDown(elementIndex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 24
      },
      "nodeContext" : "e.printStackTrace();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 94,
    "startColumnNumber" : 4,
    "endLineNumber" : 94,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ ]
}