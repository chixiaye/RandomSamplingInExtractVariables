{
  "id" : 522,
  "expression" : "instance",
  "projectName" : "Netflix@eureka",
  "commitID" : "cfac6bfe169759f36a355a4a72a0f1e4fba5241d",
  "filePath" : "eureka-test-utils/src/main/java/com/netflix/eureka/server/EmbeddedEurekaCluster.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "instance",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 53,
      "startColumnNumber" : 31,
      "endLineNumber" : 53,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 40
      },
      "nodeContext" : "writeInstances.add(instance)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 41
      },
      "nodeContext" : "writeInstances.add(instance);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 50,
        "startColumnNumber" : 45,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n  ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n  writeInstances.add(instance);\n  writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < writeCount; i++) {\n  int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n  ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n  writeInstances.add(instance);\n  writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 48,
        "startColumnNumber" : 64,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StaticServerResolver<InetSocketAddress> writeClusterResolver=new StaticServerResolver<>();\n  for (int i=0; i < writeCount; i++) {\n    int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n    ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n    writeInstances.add(instance);\n    writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n  }\n  for (int i=0; i < readCount; i++) {\n    ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n    readInstances.add(instance);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public EmbeddedEurekaCluster(int writeCount,int readCount){\n  StaticServerResolver<InetSocketAddress> writeClusterResolver=new StaticServerResolver<>();\n  for (int i=0; i < writeCount; i++) {\n    int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n    ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n    writeInstances.add(instance);\n    writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n  }\n  for (int i=0; i < readCount; i++) {\n    ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n    readInstances.add(instance);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 41
      },
      "nodeContext" : "writeInstances.add(instance);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka.server.ServerInstance"
  }, {
    "nodeContext" : "instance",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 58,
      "startColumnNumber" : 30,
      "endLineNumber" : 58,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "readInstances.add(instance)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "readInstances.add(instance);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 56,
        "startColumnNumber" : 44,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n  readInstances.add(instance);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < readCount; i++) {\n  ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n  readInstances.add(instance);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 48,
        "startColumnNumber" : 64,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StaticServerResolver<InetSocketAddress> writeClusterResolver=new StaticServerResolver<>();\n  for (int i=0; i < writeCount; i++) {\n    int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n    ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n    writeInstances.add(instance);\n    writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n  }\n  for (int i=0; i < readCount; i++) {\n    ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n    readInstances.add(instance);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public EmbeddedEurekaCluster(int writeCount,int readCount){\n  StaticServerResolver<InetSocketAddress> writeClusterResolver=new StaticServerResolver<>();\n  for (int i=0; i < writeCount; i++) {\n    int port=WRITE_SERVER_PORTS_FROM + 2 * i;\n    ServerInstance instance=new EurekaWriteServerInstance(WRITE_SERVER_NAME_PREFIX + i,port);\n    writeInstances.add(instance);\n    writeClusterResolver.addServer(new InetSocketAddress(\"localhost\",port + 1),Protocol.TcpDiscovery);\n  }\n  for (int i=0; i < readCount; i++) {\n    ServerInstance instance=new EurekaReadServerInstance(READ_SERVER_NAME_PREFIX + i,READ_SERVER_PORTS_FROM + i,writeClusterResolver);\n    readInstances.add(instance);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "readInstances.add(instance);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka.server.ServerInstance"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 53,
    "startColumnNumber" : 31,
    "endLineNumber" : 53,
    "endColumnNumber" : 39
  }, {
    "charLength" : 8,
    "startLineNumber" : 58,
    "startColumnNumber" : 30,
    "endLineNumber" : 58,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}