{
  "id" : 466,
  "expression" : "new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]))",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/streams/Mp4DashReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 193,
      "startLineNumber" : 85,
      "startColumnNumber" : 22,
      "endLineNumber" : 88,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 88,
        "endColumnNumber" : 18
      },
      "nodeContext" : "throw new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (brands[0]) {\ncase BRAND_DASH:case BRAND_ISO5:  break;\ndefault:throw new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2037,
        "startLineNumber" : 73,
        "startColumnNumber" : 67,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (selectedTrack > -1) {\n    return;\n  }\n  box=readBox(ATOM_FTYP);\n  brands=parseFtyp(box);\nswitch (brands[0]) {\ncase BRAND_DASH:case BRAND_ISO5:    break;\ndefault:  throw new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]));\n}\nMoov moov=null;\nint i;\nwhile (box.type != ATOM_MOOF) {\nensure(box);\nbox=readBox();\nswitch (box.type) {\ncase ATOM_MOOV:  moov=parseMoov(box);\nbreak;\ncase ATOM_SIDX:case ATOM_MFRA:break;\n}\n}\nif (moov == null) {\nthrow new IOException(\"The provided Mp4 doesn't have the 'moov' box\");\n}\ntracks=new Mp4Track[moov.trak.length];\nfor (i=0; i < tracks.length; i++) {\ntracks[i]=new Mp4Track();\ntracks[i].trak=moov.trak[i];\nif (moov.mvexTrex != null) {\nfor (Trex mvexTrex : moov.mvexTrex) {\nif (tracks[i].trak.tkhd.trackId == mvexTrex.trackId) {\ntracks[i].trex=mvexTrex;\n}\n}\n}\nswitch (moov.trak[i].mdia.hdlr.subType) {\ncase HANDLER_VIDE:tracks[i].kind=TrackKind.Video;\nbreak;\ncase HANDLER_SOUN:tracks[i].kind=TrackKind.Audio;\nbreak;\ncase HANDLER_SUBT:tracks[i].kind=TrackKind.Subtitles;\nbreak;\ndefault:tracks[i].kind=TrackKind.Other;\nbreak;\n}\n}\nbackupBox=box;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2100,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void parse() throws IOException, NoSuchElementException {\n  if (selectedTrack > -1) {\n    return;\n  }\n  box=readBox(ATOM_FTYP);\n  brands=parseFtyp(box);\nswitch (brands[0]) {\ncase BRAND_DASH:case BRAND_ISO5:    break;\ndefault:  throw new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]));\n}\nMoov moov=null;\nint i;\nwhile (box.type != ATOM_MOOF) {\nensure(box);\nbox=readBox();\nswitch (box.type) {\ncase ATOM_MOOV:  moov=parseMoov(box);\nbreak;\ncase ATOM_SIDX:case ATOM_MFRA:break;\n}\n}\nif (moov == null) {\nthrow new IOException(\"The provided Mp4 doesn't have the 'moov' box\");\n}\ntracks=new Mp4Track[moov.trak.length];\nfor (i=0; i < tracks.length; i++) {\ntracks[i]=new Mp4Track();\ntracks[i].trak=moov.trak[i];\nif (moov.mvexTrex != null) {\nfor (Trex mvexTrex : moov.mvexTrex) {\nif (tracks[i].trak.tkhd.trackId == mvexTrex.trackId) {\ntracks[i].trex=mvexTrex;\n}\n}\n}\nswitch (moov.trak[i].mdia.hdlr.subType) {\ncase HANDLER_VIDE:tracks[i].kind=TrackKind.Video;\nbreak;\ncase HANDLER_SOUN:tracks[i].kind=TrackKind.Audio;\nbreak;\ncase HANDLER_SUBT:tracks[i].kind=TrackKind.Subtitles;\nbreak;\ndefault:tracks[i].kind=TrackKind.Other;\nbreak;\n}\n}\nbackupBox=box;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 88,
        "endColumnNumber" : 18
      },
      "nodeContext" : "throw new NoSuchElementException(\"Not a MPEG-4 DASH container, major brand is not 'dash' or 'iso5' is \" + boxName(brands[0]));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 18,
    "type" : "java.util.NoSuchElementException"
  } ],
  "positionList" : [ {
    "charLength" : 193,
    "startLineNumber" : 85,
    "startColumnNumber" : 22,
    "endLineNumber" : 88,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}