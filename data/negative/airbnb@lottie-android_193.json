{
  "id" : 193,
  "expression" : "i",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/ShapeData.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 54,
      "endLineNumber" : 60,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 60,
        "startColumnNumber" : 54,
        "endLineNumber" : 60,
        "endColumnNumber" : 60
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n  curves.add(new CubicCurveData());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n    curves.add(new CubicCurveData());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (curves.isEmpty()) {\n  for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n    curves.add(new CubicCurveData());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n  throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n}\n else if (curves.isEmpty()) {\n  for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n    curves.add(new CubicCurveData());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 60,
        "startColumnNumber" : 54,
        "endLineNumber" : 60,
        "endColumnNumber" : 60
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 71,
      "startColumnNumber" : 36,
      "endLineNumber" : 71,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 71,
        "startColumnNumber" : 36,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 71,
        "startColumnNumber" : 36,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 72,
      "startColumnNumber" : 57,
      "endLineNumber" : 72,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 30,
        "endLineNumber" : 72,
        "endColumnNumber" : 59
      },
      "nodeContext" : "shapeData1.getCurves().get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 72,
        "startColumnNumber" : 21,
        "endLineNumber" : 72,
        "endColumnNumber" : 59
      },
      "nodeContext" : "curve1=shapeData1.getCurves().get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CubicCurveData curve1=shapeData1.getCurves().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CubicCurveData curve1=shapeData1.getCurves().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 73,
      "startColumnNumber" : 57,
      "endLineNumber" : 73,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 73,
        "startColumnNumber" : 30,
        "endLineNumber" : 73,
        "endColumnNumber" : 59
      },
      "nodeContext" : "shapeData2.getCurves().get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 21,
        "endLineNumber" : 73,
        "endColumnNumber" : 59
      },
      "nodeContext" : "curve2=shapeData2.getCurves().get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CubicCurveData curve2=shapeData2.getCurves().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CubicCurveData curve2=shapeData2.getCurves().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 17,
      "endLineNumber" : 83,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 26
      },
      "nodeContext" : "curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 27
      },
      "nodeContext" : "curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 17,
      "endLineNumber" : 86,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 26
      },
      "nodeContext" : "curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 27
      },
      "nodeContext" : "curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 89,
      "startColumnNumber" : 17,
      "endLineNumber" : 89,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 26
      },
      "nodeContext" : "curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 27
      },
      "nodeContext" : "curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 71,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=curves.size() - 1; i >= 0; i--) {\n  CubicCurveData curve1=shapeData1.getCurves().get(i);\n  CubicCurveData curve2=shapeData2.getCurves().get(i);\n  PointF cp11=curve1.getControlPoint1();\n  PointF cp21=curve1.getControlPoint2();\n  PointF vertex1=curve1.getVertex();\n  PointF cp12=curve2.getControlPoint1();\n  PointF cp22=curve2.getControlPoint2();\n  PointF vertex2=curve2.getVertex();\n  curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n  curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n  curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void interpolateBetween(ShapeData shapeData1,ShapeData shapeData2,@FloatRange(from=0f,to=1f) float percentage){\n  if (initialPoint == null) {\n    initialPoint=new PointF();\n  }\n  closed=shapeData1.isClosed() || shapeData2.isClosed();\n  if (!curves.isEmpty() && curves.size() != shapeData1.getCurves().size() && curves.size() != shapeData2.getCurves().size()) {\n    throw new IllegalStateException(\"Curves must have the same number of control points. This: \" + getCurves().size() + \"\\tShape 1: \"+ shapeData1.getCurves().size()+ \"\\tShape 2: \"+ shapeData2.getCurves().size());\n  }\n else   if (curves.isEmpty()) {\n    for (int i=shapeData1.getCurves().size() - 1; i >= 0; i--) {\n      curves.add(new CubicCurveData());\n    }\n  }\n  PointF initialPoint1=shapeData1.getInitialPoint();\n  PointF initialPoint2=shapeData2.getInitialPoint();\n  setInitialPoint(MiscUtils.lerp(initialPoint1.x,initialPoint2.x,percentage),MiscUtils.lerp(initialPoint1.y,initialPoint2.y,percentage));\n  for (int i=curves.size() - 1; i >= 0; i--) {\n    CubicCurveData curve1=shapeData1.getCurves().get(i);\n    CubicCurveData curve2=shapeData2.getCurves().get(i);\n    PointF cp11=curve1.getControlPoint1();\n    PointF cp21=curve1.getControlPoint2();\n    PointF vertex1=curve1.getVertex();\n    PointF cp12=curve2.getControlPoint1();\n    PointF cp22=curve2.getControlPoint2();\n    PointF vertex2=curve2.getVertex();\n    curves.get(i).setControlPoint1(MiscUtils.lerp(cp11.x,cp12.x,percentage),MiscUtils.lerp(cp11.y,cp12.y,percentage));\n    curves.get(i).setControlPoint2(MiscUtils.lerp(cp21.x,cp22.x,percentage),MiscUtils.lerp(cp21.y,cp22.y,percentage));\n    curves.get(i).setVertex(MiscUtils.lerp(vertex1.x,vertex2.x,percentage),MiscUtils.lerp(vertex1.y,vertex2.y,percentage));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 19
      },
      "nodeContext" : "curves.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 54,
    "endLineNumber" : 60,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 71,
    "startColumnNumber" : 36,
    "endLineNumber" : 71,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 72,
    "startColumnNumber" : 57,
    "endLineNumber" : 72,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 73,
    "startColumnNumber" : 57,
    "endLineNumber" : 73,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 17,
    "endLineNumber" : 83,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 17,
    "endLineNumber" : 86,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 89,
    "startColumnNumber" : 17,
    "endLineNumber" : 89,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}