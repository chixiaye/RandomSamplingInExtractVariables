{
  "id" : 261,
  "expression" : "\"Accept\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/main/java/org/apache/pulsar/client/impl/auth/oauth2/protocol/TokenClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Accept\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 92,
      "startColumnNumber" : 31,
      "endLineNumber" : 92,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 93,
        "endColumnNumber" : 83
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 94,
        "endColumnNumber" : 34
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 95,
        "endColumnNumber" : 30
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 96,
        "endColumnNumber" : 26
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 91,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 26
      },
      "nodeContext" : "res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Response res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Response res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get();\nswitch (res.getStatusCode()) {\ncase 200:    return ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenResult.class);\ncase 400:case 401:  throw new TokenExchangeException(ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenError.class));\ndefault:throw new IOException(\"Failed to perform HTTP request. res: \" + res.getStatusCode() + \" \"+ res.getStatusText());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Response res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get();\nswitch (res.getStatusCode()) {\ncase 200:    return ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenResult.class);\ncase 400:case 401:  throw new TokenExchangeException(ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenError.class));\ndefault:throw new IOException(\"Failed to perform HTTP request. res: \" + res.getStatusCode() + \" \"+ res.getStatusText());\n}\n}\n catch (InterruptedException|ExecutionException e1) {\nthrow new IOException(e1);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 73,
        "startColumnNumber" : 55,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,String> bodyMap=new TreeMap<>();\n  bodyMap.put(\"grant_type\",\"client_credentials\");\n  bodyMap.put(\"client_id\",req.getClientId());\n  bodyMap.put(\"client_secret\",req.getClientSecret());\n  bodyMap.put(\"audience\",req.getAudience());\n  String body=bodyMap.entrySet().stream().map(e -> {\n    try {\n      return URLEncoder.encode(e.getKey(),\"UTF-8\") + '=' + URLEncoder.encode(e.getValue(),\"UTF-8\");\n    }\n catch (    UnsupportedEncodingException e1) {\n      throw new RuntimeException(e1);\n    }\n  }\n).collect(Collectors.joining(\"&\"));\n  try {\n    Response res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get();\nswitch (res.getStatusCode()) {\ncase 200:      return ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenResult.class);\ncase 400:case 401:    throw new TokenExchangeException(ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenError.class));\ndefault:  throw new IOException(\"Failed to perform HTTP request. res: \" + res.getStatusCode() + \" \"+ res.getStatusText());\n}\n}\n catch (InterruptedException|ExecutionException e1) {\nthrow new IOException(e1);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Performs a token exchange using client credentials.\n * @param req the client credentials request details.\n * @return a token result\n * @throws TokenExchangeException\n */\npublic TokenResult exchangeClientCredentials(ClientCredentialsExchangeRequest req) throws TokenExchangeException, IOException {\n  Map<String,String> bodyMap=new TreeMap<>();\n  bodyMap.put(\"grant_type\",\"client_credentials\");\n  bodyMap.put(\"client_id\",req.getClientId());\n  bodyMap.put(\"client_secret\",req.getClientSecret());\n  bodyMap.put(\"audience\",req.getAudience());\n  String body=bodyMap.entrySet().stream().map(e -> {\n    try {\n      return URLEncoder.encode(e.getKey(),\"UTF-8\") + '=' + URLEncoder.encode(e.getValue(),\"UTF-8\");\n    }\n catch (    UnsupportedEncodingException e1) {\n      throw new RuntimeException(e1);\n    }\n  }\n).collect(Collectors.joining(\"&\"));\n  try {\n    Response res=httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\").setHeader(\"Content-Type\",\"application/x-www-form-urlencoded\").setBody(body).execute().get();\nswitch (res.getStatusCode()) {\ncase 200:      return ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenResult.class);\ncase 400:case 401:    throw new TokenExchangeException(ObjectMapperFactory.getThreadLocal().reader().readValue(res.getResponseBodyAsBytes(),TokenError.class));\ndefault:  throw new IOException(\"Failed to perform HTTP request. res: \" + res.getStatusCode() + \" \"+ res.getStatusText());\n}\n}\n catch (InterruptedException|ExecutionException e1) {\nthrow new IOException(e1);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 91,
        "startColumnNumber" : 27,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "httpClient.preparePost(tokenUrl.toString()).setHeader(\"Accept\",\"application/json\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 92,
    "startColumnNumber" : 31,
    "endLineNumber" : 92,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}