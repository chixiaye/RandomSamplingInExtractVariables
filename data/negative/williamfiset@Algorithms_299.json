{
  "id" : 299,
  "expression" : "10",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/queue/IntQueueTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "10",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 45,
      "startColumnNumber" : 34,
      "endLineNumber" : 45,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 45,
        "startColumnNumber" : 21,
        "endLineNumber" : 45,
        "endColumnNumber" : 37
      },
      "nodeContext" : "new IntQueue(10)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 45,
        "startColumnNumber" : 13,
        "endLineNumber" : 45,
        "endColumnNumber" : 37
      },
      "nodeContext" : "queue=new IntQueue(10)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 38
      },
      "nodeContext" : "IntQueue queue=new IntQueue(10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=5;\n  IntQueue queue=new IntQueue(10);\n  assertTrue(queue.isEmpty());\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=8;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=9;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=10;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testAll(){\n  int n=5;\n  IntQueue queue=new IntQueue(10);\n  assertTrue(queue.isEmpty());\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=8;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=9;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=10;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 38
      },
      "nodeContext" : "IntQueue queue=new IntQueue(10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "10",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 10
      },
      "nodeContext" : "n=10",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 11
      },
      "nodeContext" : "n=10;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=5;\n  IntQueue queue=new IntQueue(10);\n  assertTrue(queue.isEmpty());\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=8;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=9;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=10;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testAll(){\n  int n=5;\n  IntQueue queue=new IntQueue(10);\n  assertTrue(queue.isEmpty());\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=8;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=9;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n  n=10;\n  for (int i=1; i <= n; i++) {\n    queue.enqueue(i);\n    assertFalse(queue.isEmpty());\n  }\n  for (int i=1; i <= n; i++) {\n    assertEquals(i,queue.peek());\n    assertEquals(i,queue.dequeue());\n    assertEquals(queue.size(),n - i);\n  }\n  assertTrue(queue.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 11
      },
      "nodeContext" : "n=10;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 45,
    "startColumnNumber" : 34,
    "endLineNumber" : 45,
    "endColumnNumber" : 36
  }, {
    "charLength" : 2,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}