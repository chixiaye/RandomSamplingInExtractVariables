{
  "id" : 431,
  "expression" : "queryResults.getNextUri()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/server/TestServer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "queryResults.getNextUri()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 118,
      "startColumnNumber" : 15,
      "endLineNumber" : 118,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 118,
        "startColumnNumber" : 15,
        "endLineNumber" : 118,
        "endColumnNumber" : 48
      },
      "nodeContext" : "queryResults.getNextUri() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (queryResults.getNextUri() != null) {\n  queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String invalidTimeZone=\"this_is_an_invalid_time_zone\";\n  Request request=preparePost().setHeader(PRESTO_USER,\"user\").setUri(uriFor(\"/v1/statement\")).setBodyGenerator(createStaticBodyGenerator(\"show catalogs\",UTF_8)).setHeader(PRESTO_SOURCE,\"source\").setHeader(PRESTO_CATALOG,\"catalog\").setHeader(PRESTO_SCHEMA,\"schema\").setHeader(PRESTO_TIME_ZONE,invalidTimeZone).build();\n  QueryResults queryResults=client.execute(request,createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  while (queryResults.getNextUri() != null) {\n    queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  }\n  QueryError queryError=queryResults.getError();\n  assertNotNull(queryError);\n  TimeZoneNotSupportedException expected=new TimeZoneNotSupportedException(invalidTimeZone);\n  assertEquals(queryError.getMessage(),expected.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1158,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvalidSessionError(){\n  String invalidTimeZone=\"this_is_an_invalid_time_zone\";\n  Request request=preparePost().setHeader(PRESTO_USER,\"user\").setUri(uriFor(\"/v1/statement\")).setBodyGenerator(createStaticBodyGenerator(\"show catalogs\",UTF_8)).setHeader(PRESTO_SOURCE,\"source\").setHeader(PRESTO_CATALOG,\"catalog\").setHeader(PRESTO_SCHEMA,\"schema\").setHeader(PRESTO_TIME_ZONE,invalidTimeZone).build();\n  QueryResults queryResults=client.execute(request,createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  while (queryResults.getNextUri() != null) {\n    queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  }\n  QueryError queryError=queryResults.getError();\n  assertNotNull(queryError);\n  TimeZoneNotSupportedException expected=new TimeZoneNotSupportedException(invalidTimeZone);\n  assertEquals(queryError.getMessage(),expected.getMessage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 118,
        "startColumnNumber" : 15,
        "endLineNumber" : 118,
        "endColumnNumber" : 48
      },
      "nodeContext" : "queryResults.getNextUri() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.net.URI"
  }, {
    "nodeContext" : "queryResults.getNextUri()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 119,
      "startColumnNumber" : 62,
      "endLineNumber" : 119,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 119,
        "startColumnNumber" : 42,
        "endLineNumber" : 119,
        "endColumnNumber" : 88
      },
      "nodeContext" : "prepareGet().setUri(queryResults.getNextUri())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 119,
        "startColumnNumber" : 42,
        "endLineNumber" : 119,
        "endColumnNumber" : 96
      },
      "nodeContext" : "prepareGet().setUri(queryResults.getNextUri()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 119,
        "startColumnNumber" : 27,
        "endLineNumber" : 119,
        "endColumnNumber" : 145
      },
      "nodeContext" : "client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 145
      },
      "nodeContext" : "queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 146
      },
      "nodeContext" : "queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 118,
        "startColumnNumber" : 50,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (queryResults.getNextUri() != null) {\n  queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String invalidTimeZone=\"this_is_an_invalid_time_zone\";\n  Request request=preparePost().setHeader(PRESTO_USER,\"user\").setUri(uriFor(\"/v1/statement\")).setBodyGenerator(createStaticBodyGenerator(\"show catalogs\",UTF_8)).setHeader(PRESTO_SOURCE,\"source\").setHeader(PRESTO_CATALOG,\"catalog\").setHeader(PRESTO_SCHEMA,\"schema\").setHeader(PRESTO_TIME_ZONE,invalidTimeZone).build();\n  QueryResults queryResults=client.execute(request,createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  while (queryResults.getNextUri() != null) {\n    queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  }\n  QueryError queryError=queryResults.getError();\n  assertNotNull(queryError);\n  TimeZoneNotSupportedException expected=new TimeZoneNotSupportedException(invalidTimeZone);\n  assertEquals(queryError.getMessage(),expected.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1158,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvalidSessionError(){\n  String invalidTimeZone=\"this_is_an_invalid_time_zone\";\n  Request request=preparePost().setHeader(PRESTO_USER,\"user\").setUri(uriFor(\"/v1/statement\")).setBodyGenerator(createStaticBodyGenerator(\"show catalogs\",UTF_8)).setHeader(PRESTO_SOURCE,\"source\").setHeader(PRESTO_CATALOG,\"catalog\").setHeader(PRESTO_SCHEMA,\"schema\").setHeader(PRESTO_TIME_ZONE,invalidTimeZone).build();\n  QueryResults queryResults=client.execute(request,createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  while (queryResults.getNextUri() != null) {\n    queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n  }\n  QueryError queryError=queryResults.getError();\n  assertNotNull(queryError);\n  TimeZoneNotSupportedException expected=new TimeZoneNotSupportedException(invalidTimeZone);\n  assertEquals(queryError.getMessage(),expected.getMessage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 146
      },
      "nodeContext" : "queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(QUERY_RESULTS_CODEC));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.net.URI"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 118,
    "startColumnNumber" : 15,
    "endLineNumber" : 118,
    "endColumnNumber" : 40
  }, {
    "charLength" : 25,
    "startLineNumber" : 119,
    "startColumnNumber" : 62,
    "endLineNumber" : 119,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}