{
  "id" : 193,
  "expression" : "streamCount",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "2710d9de5bf8b23acf30ea4aa0bdeb34e7fd88c9",
  "filePath" : "app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "streamCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 308,
      "startColumnNumber" : 12,
      "endLineNumber" : 308,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 308,
        "startColumnNumber" : 12,
        "endLineNumber" : 308,
        "endColumnNumber" : 64
      },
      "nodeContext" : "streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n}\n else if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3189,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3264,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 308,
        "startColumnNumber" : 12,
        "endLineNumber" : 308,
        "endColumnNumber" : 64
      },
      "nodeContext" : "streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "streamCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 310,
      "startColumnNumber" : 19,
      "endLineNumber" : 310,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 310,
        "startColumnNumber" : 19,
        "endLineNumber" : 310,
        "endColumnNumber" : 66
      },
      "nodeContext" : "streamCount == PlaylistExtractor.INFINITE_ITEMS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 310,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n}\n else if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3189,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3264,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 310,
        "startColumnNumber" : 19,
        "endLineNumber" : 310,
        "endColumnNumber" : 66
      },
      "nodeContext" : "streamCount == PlaylistExtractor.INFINITE_ITEMS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "streamCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 313,
      "startColumnNumber" : 89,
      "endLineNumber" : 313,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 313,
        "startColumnNumber" : 38,
        "endLineNumber" : 313,
        "endColumnNumber" : 114
      },
      "nodeContext" : "getResources().getQuantityString(R.plurals.videos,streamCount,streamCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 115
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 116
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 312,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 310,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n}\n else if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3189,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3264,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 116
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "streamCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 313,
      "startColumnNumber" : 102,
      "endLineNumber" : 313,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 313,
        "startColumnNumber" : 38,
        "endLineNumber" : 313,
        "endColumnNumber" : 114
      },
      "nodeContext" : "getResources().getQuantityString(R.plurals.videos,streamCount,streamCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 115
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 116
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 312,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 310,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 308,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n}\n else if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n  headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n}\n else {\n  headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3189,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3264,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFragmentManager(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  int streamCount=(int)result.getStreamCount();\n  if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_more_than_100_items));\n  }\n else   if (streamCount == PlaylistExtractor.INFINITE_ITEMS) {\n    headerStreamCount.setText(getResources().getString(R.string.playlist_infinite_items));\n  }\n else {\n    headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n  }\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 116
      },
      "nodeContext" : "headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,streamCount,streamCount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 308,
    "startColumnNumber" : 12,
    "endLineNumber" : 308,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 310,
    "startColumnNumber" : 19,
    "endLineNumber" : 310,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 313,
    "startColumnNumber" : 89,
    "endLineNumber" : 313,
    "endColumnNumber" : 100
  }, {
    "charLength" : 11,
    "startLineNumber" : 313,
    "startColumnNumber" : 102,
    "endLineNumber" : 313,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  } ]
}