{
  "id" : 167,
  "expression" : "tree.height()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/binarysearchtree/BinarySearchTreeTest.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 120,
      "startColumnNumber" : 17,
      "endLineNumber" : 120,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 124,
      "startColumnNumber" : 17,
      "endLineNumber" : 124,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 128,
      "startColumnNumber" : 17,
      "endLineNumber" : 128,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 130,
      "startColumnNumber" : 17,
      "endLineNumber" : 130,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 134,
      "startColumnNumber" : 17,
      "endLineNumber" : 134,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 136,
      "startColumnNumber" : 17,
      "endLineNumber" : 136,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 138,
      "startColumnNumber" : 17,
      "endLineNumber" : 138,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "tree.height()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 142,
      "startColumnNumber" : 17,
      "endLineNumber" : 142,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(tree.height(),4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeight(){\n  BinarySearchTree<String> tree=new BinarySearchTree<>();\n  assertEquals(tree.height(),0);\n  tree.add(\"M\");\n  assertEquals(tree.height(),1);\n  tree.add(\"J\");\n  assertEquals(tree.height(),2);\n  tree.add(\"S\");\n  assertEquals(tree.height(),2);\n  tree.add(\"B\");\n  assertEquals(tree.height(),3);\n  tree.add(\"N\");\n  assertEquals(tree.height(),3);\n  tree.add(\"Z\");\n  assertEquals(tree.height(),3);\n  tree.add(\"A\");\n  assertEquals(tree.height(),4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(tree.height(),4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 120,
    "startColumnNumber" : 17,
    "endLineNumber" : 120,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 124,
    "startColumnNumber" : 17,
    "endLineNumber" : 124,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 128,
    "startColumnNumber" : 17,
    "endLineNumber" : 128,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 130,
    "startColumnNumber" : 17,
    "endLineNumber" : 130,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 134,
    "startColumnNumber" : 17,
    "endLineNumber" : 134,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 136,
    "startColumnNumber" : 17,
    "endLineNumber" : 136,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 138,
    "startColumnNumber" : 17,
    "endLineNumber" : 138,
    "endColumnNumber" : 30
  }, {
    "charLength" : 13,
    "startLineNumber" : 142,
    "startColumnNumber" : 17,
    "endLineNumber" : 142,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  } ]
}