{
  "id" : 293,
  "expression" : "Arrays.asList(dirFiles)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "8906f46e34a9c221578f097ff3d3569bc20f43df",
  "filePath" : "core-java-modules/core-java-io-2/src/test/java/com/baeldung/file/FileClassDemoUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(dirFiles)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 178,
      "startColumnNumber" : 35,
      "endLineNumber" : 178,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 178,
        "startColumnNumber" : 27,
        "endLineNumber" : 178,
        "endColumnNumber" : 58
      },
      "nodeContext" : "files=Arrays.asList(dirFiles)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 178,
        "endColumnNumber" : 59
      },
      "nodeContext" : "List<File> files=Arrays.asList(dirFiles);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 177,
        "startColumnNumber" : 34,
        "endLineNumber" : 180,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<File> files=Arrays.asList(dirFiles);\n  files.forEach(f -> deleteFile(f));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 180,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dirFiles != null) {\n  List<File> files=Arrays.asList(dirFiles);\n  files.forEach(f -> deleteFile(f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 174,
        "startColumnNumber" : 32,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File[] dirFiles=directory.listFiles();\n  if (dirFiles != null) {\n    List<File> files=Arrays.asList(dirFiles);\n    files.forEach(f -> deleteFile(f));\n  }\n  deleteFile(directory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (directory.exists()) {\n  File[] dirFiles=directory.listFiles();\n  if (dirFiles != null) {\n    List<File> files=Arrays.asList(dirFiles);\n    files.forEach(f -> deleteFile(f));\n  }\n  deleteFile(directory);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 166,
        "startColumnNumber" : 50,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String home=System.getProperty(\"user.home\");\n  if (directory.getPath().equals(home)) {\n    return;\n  }\n  if (directory.exists()) {\n    File[] dirFiles=directory.listFiles();\n    if (dirFiles != null) {\n      List<File> files=Arrays.asList(dirFiles);\n      files.forEach(f -> deleteFile(f));\n    }\n    deleteFile(directory);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void removeDir(File directory){\n  String home=System.getProperty(\"user.home\");\n  if (directory.getPath().equals(home)) {\n    return;\n  }\n  if (directory.exists()) {\n    File[] dirFiles=directory.listFiles();\n    if (dirFiles != null) {\n      List<File> files=Arrays.asList(dirFiles);\n      files.forEach(f -> deleteFile(f));\n    }\n    deleteFile(directory);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 178,
        "endColumnNumber" : 59
      },
      "nodeContext" : "List<File> files=Arrays.asList(dirFiles);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.List<java.io.File>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 178,
    "startColumnNumber" : 35,
    "endLineNumber" : 178,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}