{
  "id" : 73,
  "expression" : "new Long(bytes.length)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jms/src/test/java/org/springframework/jms/support/converter/MappingJackson2MessageConverterTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Long(bytes.length)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 91,
      "startColumnNumber" : 53,
      "endLineNumber" : 91,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "given(bytesMessageMock.getBodyLength()).willReturn(new Long(bytes.length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 77
      },
      "nodeContext" : "given(bytesMessageMock.getBodyLength()).willReturn(new Long(bytes.length));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 82,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BytesMessage bytesMessageMock=mock(BytesMessage.class);\n  Map<String,String> unmarshalled=Collections.singletonMap(\"foo\",\"bar\");\n  byte[] bytes=\"{\\\"foo\\\":\\\"bar\\\"}\".getBytes();\n  final ByteArrayInputStream byteStream=new ByteArrayInputStream(bytes);\n  given(bytesMessageMock.getStringProperty(\"__typeid__\")).willReturn(Object.class.getName());\n  given(bytesMessageMock.propertyExists(\"__encoding__\")).willReturn(false);\n  given(bytesMessageMock.getBodyLength()).willReturn(new Long(bytes.length));\n  given(bytesMessageMock.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      return byteStream.read((byte[])invocation.getArguments()[0]);\n    }\n  }\n);\n  Object result=converter.fromMessage(bytesMessageMock);\n  assertEquals(\"Invalid result\",result,unmarshalled);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 81,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void fromBytesMessage() throws Exception {\n  BytesMessage bytesMessageMock=mock(BytesMessage.class);\n  Map<String,String> unmarshalled=Collections.singletonMap(\"foo\",\"bar\");\n  byte[] bytes=\"{\\\"foo\\\":\\\"bar\\\"}\".getBytes();\n  final ByteArrayInputStream byteStream=new ByteArrayInputStream(bytes);\n  given(bytesMessageMock.getStringProperty(\"__typeid__\")).willReturn(Object.class.getName());\n  given(bytesMessageMock.propertyExists(\"__encoding__\")).willReturn(false);\n  given(bytesMessageMock.getBodyLength()).willReturn(new Long(bytes.length));\n  given(bytesMessageMock.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      return byteStream.read((byte[])invocation.getArguments()[0]);\n    }\n  }\n);\n  Object result=converter.fromMessage(bytesMessageMock);\n  assertEquals(\"Invalid result\",result,unmarshalled);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 77
      },
      "nodeContext" : "given(bytesMessageMock.getBodyLength()).willReturn(new Long(bytes.length));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 91,
    "startColumnNumber" : 53,
    "endLineNumber" : 91,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}