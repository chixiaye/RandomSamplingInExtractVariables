{
  "id" : 365,
  "expression" : "ClassLoader",
  "projectName" : "Tencent@tinker",
  "commitID" : "0cde919b9d4b143363fcd5c9d612d982ee15d266",
  "filePath" : "tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/NewClassLoaderInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassLoader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 126,
      "startColumnNumber" : 87,
      "endLineNumber" : 126,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 126,
        "startColumnNumber" : 87,
        "endLineNumber" : 126,
        "endColumnNumber" : 121
      },
      "nodeContext" : "ClassLoader.getSystemClassLoader()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 126,
        "startColumnNumber" : 21,
        "endLineNumber" : 126,
        "endColumnNumber" : 122
      },
      "nodeContext" : "new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 122
      },
      "nodeContext" : "result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 123
      },
      "nodeContext" : "result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 124,
        "startColumnNumber" : 66,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n  result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n  final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n  parentField.setAccessible(true);\n  parentField.set(result,removedItemFixCL);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n  final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n  result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n  final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n  parentField.setAccessible(true);\n  parentField.set(result,removedItemFixCL);\n}\n else {\n  result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2765,
        "startLineNumber" : 80,
        "startColumnNumber" : 94,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3121,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private static ClassLoader createNewClassLoader(ClassLoader oldClassLoader,File dexOptDir,boolean useDLCOnAPI29AndAbove,String... patchDexPaths) throws Throwable {\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 123
      },
      "nodeContext" : "result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.ClassLoader"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 126,
    "startColumnNumber" : 87,
    "endLineNumber" : 126,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}