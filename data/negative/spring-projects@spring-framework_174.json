{
  "id" : 174,
  "expression" : "cacheLimit <= 0",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/core/type/classreading/CachingMetadataReaderFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cacheLimit <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 93,
      "startColumnNumber" : 6,
      "endLineNumber" : 93,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (cacheLimit <= 0) {\n  this.metadataReaderCache=null;\n}\n else if (this.metadataReaderCache instanceof LocalResourceCache) {\n  ((LocalResourceCache)this.metadataReaderCache).setCacheLimit(cacheLimit);\n}\n else {\n  this.metadataReaderCache=new LocalResourceCache(cacheLimit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 92,
        "startColumnNumber" : 43,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (cacheLimit <= 0) {\n    this.metadataReaderCache=null;\n  }\n else   if (this.metadataReaderCache instanceof LocalResourceCache) {\n    ((LocalResourceCache)this.metadataReaderCache).setCacheLimit(cacheLimit);\n  }\n else {\n    this.metadataReaderCache=new LocalResourceCache(cacheLimit);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 86,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Specify the maximum number of entries for the MetadataReader cache. <p>Default is 256 for a local cache, whereas a shared cache is typically unbounded. This method enforces a local resource cache, even if the  {@link ResourceLoader} supports a shared resource cache.\n */\npublic void setCacheLimit(int cacheLimit){\n  if (cacheLimit <= 0) {\n    this.metadataReaderCache=null;\n  }\n else   if (this.metadataReaderCache instanceof LocalResourceCache) {\n    ((LocalResourceCache)this.metadataReaderCache).setCacheLimit(cacheLimit);\n  }\n else {\n    this.metadataReaderCache=new LocalResourceCache(cacheLimit);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (cacheLimit <= 0) {\n  this.metadataReaderCache=null;\n}\n else if (this.metadataReaderCache instanceof LocalResourceCache) {\n  ((LocalResourceCache)this.metadataReaderCache).setCacheLimit(cacheLimit);\n}\n else {\n  this.metadataReaderCache=new LocalResourceCache(cacheLimit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 93,
    "startColumnNumber" : 6,
    "endLineNumber" : 93,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}