{
  "id" : 151,
  "expression" : "0",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "6a42714326dbd42dabdf4b072cf25396fa4da529",
  "filePath" : "app/src/main/java/org/schabi/newpipe/settings/VideoAudioSettingsFragment.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 82,
      "endLineNumber" : 83,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 83,
        "startColumnNumber" : 65,
        "endLineNumber" : 83,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new CharSequence[0]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 83,
        "endColumnNumber" : 85
      },
      "nodeContext" : "displayedDurationValues.toArray(new CharSequence[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 86
      },
      "nodeContext" : "durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 87
      },
      "nodeContext" : "durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1837,
        "startLineNumber" : 57,
        "startColumnNumber" : 37,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Resources res=getResources();\n  final String[] durationsValues=res.getStringArray(R.array.seek_duration_value);\n  final List<String> displayedDurationValues=new LinkedList<>();\n  final List<String> displayedDescriptionValues=new LinkedList<>();\n  int currentDurationValue;\n  final boolean inexactSeek=getPreferenceManager().getSharedPreferences().getBoolean(res.getString(R.string.use_inexact_seek_key),false);\n  for (  String durationsValue : durationsValues) {\n    currentDurationValue=Integer.parseInt(durationsValue) / 1000;\n    if (inexactSeek && currentDurationValue % 10 == 5) {\n      continue;\n    }\n    try {\n      displayedDurationValues.add(durationsValue);\n      displayedDescriptionValues.add(String.format(res.getQuantityString(R.plurals.dynamic_seek_duration_description,currentDurationValue),currentDurationValue));\n    }\n catch (    Resources.NotFoundException ignored) {\n    }\n  }\n  final ListPreference durations=(ListPreference)findPreference(getString(R.string.seek_duration_key));\n  durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n  durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n  final int selectedDuration=Integer.parseInt(durations.getValue());\n  if (selectedDuration / 1000 % 10 == 5) {\n    durations.setValue(Integer.toString(selectedDuration + 5 * 1000));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2063,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update fast-forward/-rewind seek duration options according to language and inexact seek setting. Exoplayer can't seek 5 seconds in audio when using inexact seek.\n */\nprivate void updateSeekOptions(){\n  final Resources res=getResources();\n  final String[] durationsValues=res.getStringArray(R.array.seek_duration_value);\n  final List<String> displayedDurationValues=new LinkedList<>();\n  final List<String> displayedDescriptionValues=new LinkedList<>();\n  int currentDurationValue;\n  final boolean inexactSeek=getPreferenceManager().getSharedPreferences().getBoolean(res.getString(R.string.use_inexact_seek_key),false);\n  for (  String durationsValue : durationsValues) {\n    currentDurationValue=Integer.parseInt(durationsValue) / 1000;\n    if (inexactSeek && currentDurationValue % 10 == 5) {\n      continue;\n    }\n    try {\n      displayedDurationValues.add(durationsValue);\n      displayedDescriptionValues.add(String.format(res.getQuantityString(R.plurals.dynamic_seek_duration_description,currentDurationValue),currentDurationValue));\n    }\n catch (    Resources.NotFoundException ignored) {\n    }\n  }\n  final ListPreference durations=(ListPreference)findPreference(getString(R.string.seek_duration_key));\n  durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n  durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n  final int selectedDuration=Integer.parseInt(durations.getValue());\n  if (selectedDuration / 1000 % 10 == 5) {\n    durations.setValue(Integer.toString(selectedDuration + 5 * 1000));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 87
      },
      "nodeContext" : "durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 81,
      "endLineNumber" : 84,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 84,
        "startColumnNumber" : 64,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new CharSequence[0]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 84,
        "startColumnNumber" : 29,
        "endLineNumber" : 84,
        "endColumnNumber" : 84
      },
      "nodeContext" : "displayedDescriptionValues.toArray(new CharSequence[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 85
      },
      "nodeContext" : "durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 86
      },
      "nodeContext" : "durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1837,
        "startLineNumber" : 57,
        "startColumnNumber" : 37,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Resources res=getResources();\n  final String[] durationsValues=res.getStringArray(R.array.seek_duration_value);\n  final List<String> displayedDurationValues=new LinkedList<>();\n  final List<String> displayedDescriptionValues=new LinkedList<>();\n  int currentDurationValue;\n  final boolean inexactSeek=getPreferenceManager().getSharedPreferences().getBoolean(res.getString(R.string.use_inexact_seek_key),false);\n  for (  String durationsValue : durationsValues) {\n    currentDurationValue=Integer.parseInt(durationsValue) / 1000;\n    if (inexactSeek && currentDurationValue % 10 == 5) {\n      continue;\n    }\n    try {\n      displayedDurationValues.add(durationsValue);\n      displayedDescriptionValues.add(String.format(res.getQuantityString(R.plurals.dynamic_seek_duration_description,currentDurationValue),currentDurationValue));\n    }\n catch (    Resources.NotFoundException ignored) {\n    }\n  }\n  final ListPreference durations=(ListPreference)findPreference(getString(R.string.seek_duration_key));\n  durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n  durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n  final int selectedDuration=Integer.parseInt(durations.getValue());\n  if (selectedDuration / 1000 % 10 == 5) {\n    durations.setValue(Integer.toString(selectedDuration + 5 * 1000));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2063,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update fast-forward/-rewind seek duration options according to language and inexact seek setting. Exoplayer can't seek 5 seconds in audio when using inexact seek.\n */\nprivate void updateSeekOptions(){\n  final Resources res=getResources();\n  final String[] durationsValues=res.getStringArray(R.array.seek_duration_value);\n  final List<String> displayedDurationValues=new LinkedList<>();\n  final List<String> displayedDescriptionValues=new LinkedList<>();\n  int currentDurationValue;\n  final boolean inexactSeek=getPreferenceManager().getSharedPreferences().getBoolean(res.getString(R.string.use_inexact_seek_key),false);\n  for (  String durationsValue : durationsValues) {\n    currentDurationValue=Integer.parseInt(durationsValue) / 1000;\n    if (inexactSeek && currentDurationValue % 10 == 5) {\n      continue;\n    }\n    try {\n      displayedDurationValues.add(durationsValue);\n      displayedDescriptionValues.add(String.format(res.getQuantityString(R.plurals.dynamic_seek_duration_description,currentDurationValue),currentDurationValue));\n    }\n catch (    Resources.NotFoundException ignored) {\n    }\n  }\n  final ListPreference durations=(ListPreference)findPreference(getString(R.string.seek_duration_key));\n  durations.setEntryValues(displayedDurationValues.toArray(new CharSequence[0]));\n  durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n  final int selectedDuration=Integer.parseInt(durations.getValue());\n  if (selectedDuration / 1000 % 10 == 5) {\n    durations.setValue(Integer.toString(selectedDuration + 5 * 1000));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 86
      },
      "nodeContext" : "durations.setEntries(displayedDescriptionValues.toArray(new CharSequence[0]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 82,
    "endLineNumber" : 83,
    "endColumnNumber" : 83
  }, {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 81,
    "endLineNumber" : 84,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}