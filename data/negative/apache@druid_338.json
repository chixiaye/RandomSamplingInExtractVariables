{
  "id" : 338,
  "expression" : "\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 192,
      "startLineNumber" : 93,
      "startColumnNumber" : 32,
      "endLineNumber" : 96,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 93,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 37
      },
      "nodeContext" : "expectedJson=\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "final String expectedJson=\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String file=\"example/compat/284a0e001476716b-56d5676f53bd6e85_115466471_data.0.parq\";\n  InputRowSchema schema=new InputRowSchema(new TimestampSpec(\"ts\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"field\"))),ColumnsFilter.all());\n  InputEntityReader reader=createReader(file,schema,JSONPathSpec.DEFAULT,true);\n  InputEntityReader readerNotAsString=createReader(file,schema,JSONPathSpec.DEFAULT,false);\n  List<InputRow> rows=readAllRows(reader);\n  List<InputRow> rowsAsBinary=readAllRows(readerNotAsString);\n  Assert.assertEquals(\"hey this is &é(-è_çà)=^$ù*! Ω^^\",rows.get(0).getDimension(\"field\").get(0));\n  Assert.assertEquals(1471800234,rows.get(0).getTimestampFromEpoch());\n  Assert.assertEquals(\"aGV5IHRoaXMgaXMgJsOpKC3DqF/Dp8OgKT1eJMO5KiEgzqleXg==\",rowsAsBinary.get(0).getDimension(\"field\").get(0));\n  Assert.assertEquals(1471800234,rowsAsBinary.get(0).getTimestampFromEpoch());\n  reader=createReader(file,schema,JSONPathSpec.DEFAULT,true);\n  readerNotAsString=createReader(file,schema,JSONPathSpec.DEFAULT,false);\n  List<InputRowListPlusRawValues> sampled=sampleAllRows(reader);\n  List<InputRowListPlusRawValues> sampledAsBinary=sampleAllRows(readerNotAsString);\n  final String expectedJson=\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n  Assert.assertEquals(expectedJson,DEFAULT_JSON_WRITER.writeValueAsString(sampled.get(0).getRawValues()));\n  final String expectedJsonBinary=\"{\\n\" + \"  \\\"field\\\" : \\\"aGV5IHRoaXMgaXMgJsOpKC3DqF/Dp8OgKT1eJMO5KiEgzqleXg==\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n  Assert.assertEquals(expectedJsonBinary,DEFAULT_JSON_WRITER.writeValueAsString(sampledAsBinary.get(0).getRawValues()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2293,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBinaryAsString() throws IOException {\n  final String file=\"example/compat/284a0e001476716b-56d5676f53bd6e85_115466471_data.0.parq\";\n  InputRowSchema schema=new InputRowSchema(new TimestampSpec(\"ts\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"field\"))),ColumnsFilter.all());\n  InputEntityReader reader=createReader(file,schema,JSONPathSpec.DEFAULT,true);\n  InputEntityReader readerNotAsString=createReader(file,schema,JSONPathSpec.DEFAULT,false);\n  List<InputRow> rows=readAllRows(reader);\n  List<InputRow> rowsAsBinary=readAllRows(readerNotAsString);\n  Assert.assertEquals(\"hey this is &é(-è_çà)=^$ù*! Ω^^\",rows.get(0).getDimension(\"field\").get(0));\n  Assert.assertEquals(1471800234,rows.get(0).getTimestampFromEpoch());\n  Assert.assertEquals(\"aGV5IHRoaXMgaXMgJsOpKC3DqF/Dp8OgKT1eJMO5KiEgzqleXg==\",rowsAsBinary.get(0).getDimension(\"field\").get(0));\n  Assert.assertEquals(1471800234,rowsAsBinary.get(0).getTimestampFromEpoch());\n  reader=createReader(file,schema,JSONPathSpec.DEFAULT,true);\n  readerNotAsString=createReader(file,schema,JSONPathSpec.DEFAULT,false);\n  List<InputRowListPlusRawValues> sampled=sampleAllRows(reader);\n  List<InputRowListPlusRawValues> sampledAsBinary=sampleAllRows(readerNotAsString);\n  final String expectedJson=\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n  Assert.assertEquals(expectedJson,DEFAULT_JSON_WRITER.writeValueAsString(sampled.get(0).getRawValues()));\n  final String expectedJsonBinary=\"{\\n\" + \"  \\\"field\\\" : \\\"aGV5IHRoaXMgaXMgJsOpKC3DqF/Dp8OgKT1eJMO5KiEgzqleXg==\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n  Assert.assertEquals(expectedJsonBinary,DEFAULT_JSON_WRITER.writeValueAsString(sampledAsBinary.get(0).getRawValues()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 237,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "final String expectedJson=\"{\\n\" + \"  \\\"field\\\" : \\\"hey this is &é(-è_çà)=^$ù*! Ω^^\\\",\\n\" + \"  \\\"ts\\\" : 1471800234\\n\"+ \"}\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 17,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 192,
    "startLineNumber" : 93,
    "startColumnNumber" : 32,
    "endLineNumber" : 96,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}