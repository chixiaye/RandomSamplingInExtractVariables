{
  "id" : 235,
  "expression" : "type.getName()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/RedissonReference.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "type.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 102,
      "startColumnNumber" : 41,
      "endLineNumber" : 102,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 102,
        "endColumnNumber" : 56
      },
      "nodeContext" : "REACTIVE_MAP.get(type.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 56
      },
      "nodeContext" : "this.type=REACTIVE_MAP.get(type.getName())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.type=REACTIVE_MAP.get(type.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 101,
        "startColumnNumber" : 58,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.type=REACTIVE_MAP.get(type.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (RObjectReactive.class.isAssignableFrom(type)) {\n  this.type=REACTIVE_MAP.get(type.getName());\n}\n else {\n  this.type=type.getName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 97,
        "startColumnNumber" : 73,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ClassUtils.isAnnotationPresent(type,REntity.class) && !RObject.class.isAssignableFrom(type) && !RObjectReactive.class.isAssignableFrom(type)) {\n    throw new IllegalArgumentException(\"Class reference has to be a type of either RObject or RLiveObject or RObjectReactive\");\n  }\n  if (RObjectReactive.class.isAssignableFrom(type)) {\n    this.type=REACTIVE_MAP.get(type.getName());\n  }\n else {\n    this.type=type.getName();\n  }\n  this.keyName=keyName;\n  if (codec != null) {\n    this.codec=codec.getClass().getName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public RedissonReference(Class<?> type,String keyName,Codec codec){\n  if (!ClassUtils.isAnnotationPresent(type,REntity.class) && !RObject.class.isAssignableFrom(type) && !RObjectReactive.class.isAssignableFrom(type)) {\n    throw new IllegalArgumentException(\"Class reference has to be a type of either RObject or RLiveObject or RObjectReactive\");\n  }\n  if (RObjectReactive.class.isAssignableFrom(type)) {\n    this.type=REACTIVE_MAP.get(type.getName());\n  }\n else {\n    this.type=type.getName();\n  }\n  this.keyName=keyName;\n  if (codec != null) {\n    this.codec=codec.getClass().getName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.type=REACTIVE_MAP.get(type.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "type.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 104,
      "startColumnNumber" : 24,
      "endLineNumber" : 104,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.type=type.getName()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.type=type.getName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 103,
        "startColumnNumber" : 15,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.type=type.getName();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (RObjectReactive.class.isAssignableFrom(type)) {\n  this.type=REACTIVE_MAP.get(type.getName());\n}\n else {\n  this.type=type.getName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 97,
        "startColumnNumber" : 73,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ClassUtils.isAnnotationPresent(type,REntity.class) && !RObject.class.isAssignableFrom(type) && !RObjectReactive.class.isAssignableFrom(type)) {\n    throw new IllegalArgumentException(\"Class reference has to be a type of either RObject or RLiveObject or RObjectReactive\");\n  }\n  if (RObjectReactive.class.isAssignableFrom(type)) {\n    this.type=REACTIVE_MAP.get(type.getName());\n  }\n else {\n    this.type=type.getName();\n  }\n  this.keyName=keyName;\n  if (codec != null) {\n    this.codec=codec.getClass().getName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public RedissonReference(Class<?> type,String keyName,Codec codec){\n  if (!ClassUtils.isAnnotationPresent(type,REntity.class) && !RObject.class.isAssignableFrom(type) && !RObjectReactive.class.isAssignableFrom(type)) {\n    throw new IllegalArgumentException(\"Class reference has to be a type of either RObject or RLiveObject or RObjectReactive\");\n  }\n  if (RObjectReactive.class.isAssignableFrom(type)) {\n    this.type=REACTIVE_MAP.get(type.getName());\n  }\n else {\n    this.type=type.getName();\n  }\n  this.keyName=keyName;\n  if (codec != null) {\n    this.codec=codec.getClass().getName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.type=type.getName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 102,
    "startColumnNumber" : 41,
    "endLineNumber" : 102,
    "endColumnNumber" : 55
  }, {
    "charLength" : 14,
    "startLineNumber" : 104,
    "startColumnNumber" : 24,
    "endLineNumber" : 104,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}