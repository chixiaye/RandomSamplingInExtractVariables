{
  "id" : 138,
  "expression" : "getMethodProxy(method.getName())",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "076f6000f45e78783c46c01964cf8b5d2560d992",
  "filePath" : "VirtualApp/lib/src/main/java/com/lody/virtual/client/hook/base/MethodInvocationStub.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getMethodProxy(method.getName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 169,
      "startColumnNumber" : 38,
      "endLineNumber" : 169,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 169,
        "startColumnNumber" : 24,
        "endLineNumber" : 169,
        "endColumnNumber" : 70
      },
      "nodeContext" : "methodProxy=getMethodProxy(method.getName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 71
      },
      "nodeContext" : "MethodProxy methodProxy=getMethodProxy(method.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 168,
        "startColumnNumber" : 90,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Object invoke(Object proxy,Method method,Object[] args) throws Throwable {\n  MethodProxy methodProxy=getMethodProxy(method.getName());\n  boolean useProxy=(methodProxy != null && methodProxy.isEnable());\n  boolean mightLog=(mInvocationLoggingCondition != LogInvocation.Condition.NEVER) || (methodProxy != null && methodProxy.getInvocationLoggingCondition() != LogInvocation.Condition.NEVER);\n  String argStr=null;\n  Object res=null;\n  Throwable exception=null;\n  if (mightLog) {\n    argStr=Arrays.toString(args);\n    argStr=argStr.substring(1,argStr.length() - 1);\n  }\n  try {\n    if (useProxy && methodProxy.beforeCall(mBaseInterface,method,args)) {\n      res=methodProxy.call(mBaseInterface,method,args);\n      res=methodProxy.afterCall(mBaseInterface,method,args,res);\n    }\n else {\n      res=method.invoke(mBaseInterface,args);\n    }\n    return res;\n  }\n catch (  Throwable t) {\n    exception=t;\n    if (exception instanceof InvocationTargetException && ((InvocationTargetException)exception).getTargetException() != null) {\n      exception=((InvocationTargetException)exception).getTargetException();\n    }\n    throw exception;\n  }\n finally {\n    if (mightLog) {\n      int logPriority=mInvocationLoggingCondition.getLogLevel(useProxy,exception != null);\n      if (methodProxy != null) {\n        logPriority=Math.max(logPriority,methodProxy.getInvocationLoggingCondition().getLogLevel(useProxy,exception != null));\n      }\n      if (logPriority >= 0) {\n        String retString;\n        if (exception != null) {\n          retString=exception.toString();\n        }\n else         if (method.getReturnType().equals(void.class)) {\n          retString=\"void\";\n        }\n else {\n          retString=String.valueOf(res);\n        }\n        Log.println(logPriority,TAG,method.getDeclaringClass().getSimpleName() + \".\" + method.getName()+ \"(\"+ argStr+ \") => \"+ retString);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 71
      },
      "nodeContext" : "MethodProxy methodProxy=getMethodProxy(method.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.lody.virtual.client.hook.base.MethodProxy"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 169,
    "startColumnNumber" : 38,
    "endLineNumber" : 169,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}