{
  "id" : 378,
  "expression" : "e",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 201,
      "startColumnNumber" : 30,
      "endLineNumber" : 201,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 201,
        "startColumnNumber" : 20,
        "endLineNumber" : 201,
        "endColumnNumber" : 32
      },
      "nodeContext" : "FileLog.e(e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 201,
        "startColumnNumber" : 20,
        "endLineNumber" : 201,
        "endColumnNumber" : 33
      },
      "nodeContext" : "FileLog.e(e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 200,
        "startColumnNumber" : 38,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  FileLog.e(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 200,
        "startColumnNumber" : 18,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 198,
        "startColumnNumber" : 16,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  canvas.drawBitmap(bmp.bitmap,matrix,paint);\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 181,
        "startColumnNumber" : 19,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (orientation == 90 || orientation == 270) {\n    drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    matrix.postRotate(orientation,0,0);\n    matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n  }\n else   if (orientation == 180) {\n    drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    matrix.postRotate(orientation,0,0);\n    matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n  }\n else {\n    drawRect.set(0,0,getWidth(),getHeight());\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n  }\n  canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n  try {\n    canvas.drawBitmap(bmp.bitmap,matrix,paint);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2238,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (needRadius) {\n  shaderMatrix.reset();\n  roundRect.set(imageX / scaleY,imageY / scaleY,getWidth() - imageX / scaleY,getHeight() - imageY / scaleY);\n  bitmapRect.set(0,0,bmp.getWidth(),bmp.getHeight());\n  AndroidUtilities.setRectToRect(shaderMatrix,bitmapRect,roundRect,orientation,false);\n  bitmapShader.setLocalMatrix(shaderMatrix);\n  canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n  for (int a=0; a < radius.length; a++) {\n    radii[a * 2]=radius[a];\n    radii[a * 2 + 1]=radius[a];\n  }\n  roundPath.reset();\n  roundPath.addRoundRect(roundRect,radii,Path.Direction.CW);\n  roundPath.close();\n  canvas.drawPath(roundPath,roundPaint);\n}\n else {\n  if (orientation == 90 || orientation == 270) {\n    drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    matrix.postRotate(orientation,0,0);\n    matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n  }\n else   if (orientation == 180) {\n    drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    matrix.postRotate(orientation,0,0);\n    matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n  }\n else {\n    drawRect.set(0,0,getWidth(),getHeight());\n    matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n  }\n  canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n  try {\n    canvas.drawBitmap(bmp.bitmap,matrix,paint);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 323,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2360,
        "startLineNumber" : 161,
        "startColumnNumber" : 46,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float scaleY=getScaleY();\n  canvas.save();\n  if (needRadius) {\n    shaderMatrix.reset();\n    roundRect.set(imageX / scaleY,imageY / scaleY,getWidth() - imageX / scaleY,getHeight() - imageY / scaleY);\n    bitmapRect.set(0,0,bmp.getWidth(),bmp.getHeight());\n    AndroidUtilities.setRectToRect(shaderMatrix,bitmapRect,roundRect,orientation,false);\n    bitmapShader.setLocalMatrix(shaderMatrix);\n    canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n    for (int a=0; a < radius.length; a++) {\n      radii[a * 2]=radius[a];\n      radii[a * 2 + 1]=radius[a];\n    }\n    roundPath.reset();\n    roundPath.addRoundRect(roundRect,radii,Path.Direction.CW);\n    roundPath.close();\n    canvas.drawPath(roundPath,roundPaint);\n  }\n else {\n    if (orientation == 90 || orientation == 270) {\n      drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      matrix.postRotate(orientation,0,0);\n      matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n    }\n else     if (orientation == 180) {\n      drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      matrix.postRotate(orientation,0,0);\n      matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n    }\n else {\n      drawRect.set(0,0,getWidth(),getHeight());\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    }\n    canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n    try {\n      canvas.drawBitmap(bmp.bitmap,matrix,paint);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  canvas.restore();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 338,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2398,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (bmp != null && !bmp.isRecycled()) {\n  float scaleY=getScaleY();\n  canvas.save();\n  if (needRadius) {\n    shaderMatrix.reset();\n    roundRect.set(imageX / scaleY,imageY / scaleY,getWidth() - imageX / scaleY,getHeight() - imageY / scaleY);\n    bitmapRect.set(0,0,bmp.getWidth(),bmp.getHeight());\n    AndroidUtilities.setRectToRect(shaderMatrix,bitmapRect,roundRect,orientation,false);\n    bitmapShader.setLocalMatrix(shaderMatrix);\n    canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n    for (int a=0; a < radius.length; a++) {\n      radii[a * 2]=radius[a];\n      radii[a * 2 + 1]=radius[a];\n    }\n    roundPath.reset();\n    roundPath.addRoundRect(roundRect,radii,Path.Direction.CW);\n    roundPath.close();\n    canvas.drawPath(roundPath,roundPaint);\n  }\n else {\n    if (orientation == 90 || orientation == 270) {\n      drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      matrix.postRotate(orientation,0,0);\n      matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n    }\n else     if (orientation == 180) {\n      drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      matrix.postRotate(orientation,0,0);\n      matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n    }\n else {\n      drawRect.set(0,0,getWidth(),getHeight());\n      matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n    }\n    canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n    try {\n      canvas.drawBitmap(bmp.bitmap,matrix,paint);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  canvas.restore();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 347,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2486,
        "startLineNumber" : 157,
        "startColumnNumber" : 38,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (getVisibility() != VISIBLE) {\n    return;\n  }\n  if (bmp != null && !bmp.isRecycled()) {\n    float scaleY=getScaleY();\n    canvas.save();\n    if (needRadius) {\n      shaderMatrix.reset();\n      roundRect.set(imageX / scaleY,imageY / scaleY,getWidth() - imageX / scaleY,getHeight() - imageY / scaleY);\n      bitmapRect.set(0,0,bmp.getWidth(),bmp.getHeight());\n      AndroidUtilities.setRectToRect(shaderMatrix,bitmapRect,roundRect,orientation,false);\n      bitmapShader.setLocalMatrix(shaderMatrix);\n      canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n      for (int a=0; a < radius.length; a++) {\n        radii[a * 2]=radius[a];\n        radii[a * 2 + 1]=radius[a];\n      }\n      roundPath.reset();\n      roundPath.addRoundRect(roundRect,radii,Path.Direction.CW);\n      roundPath.close();\n      canvas.drawPath(roundPath,roundPaint);\n    }\n else {\n      if (orientation == 90 || orientation == 270) {\n        drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n        matrix.postRotate(orientation,0,0);\n        matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n      }\n else       if (orientation == 180) {\n        drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n        matrix.postRotate(orientation,0,0);\n        matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n      }\n else {\n        drawRect.set(0,0,getWidth(),getHeight());\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      }\n      canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n      try {\n        canvas.drawBitmap(bmp.bitmap,matrix,paint);\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2520,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void onDraw(Canvas canvas){\n  if (getVisibility() != VISIBLE) {\n    return;\n  }\n  if (bmp != null && !bmp.isRecycled()) {\n    float scaleY=getScaleY();\n    canvas.save();\n    if (needRadius) {\n      shaderMatrix.reset();\n      roundRect.set(imageX / scaleY,imageY / scaleY,getWidth() - imageX / scaleY,getHeight() - imageY / scaleY);\n      bitmapRect.set(0,0,bmp.getWidth(),bmp.getHeight());\n      AndroidUtilities.setRectToRect(shaderMatrix,bitmapRect,roundRect,orientation,false);\n      bitmapShader.setLocalMatrix(shaderMatrix);\n      canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n      for (int a=0; a < radius.length; a++) {\n        radii[a * 2]=radius[a];\n        radii[a * 2 + 1]=radius[a];\n      }\n      roundPath.reset();\n      roundPath.addRoundRect(roundRect,radii,Path.Direction.CW);\n      roundPath.close();\n      canvas.drawPath(roundPath,roundPaint);\n    }\n else {\n      if (orientation == 90 || orientation == 270) {\n        drawRect.set(-getHeight() / 2,-getWidth() / 2,getHeight() / 2,getWidth() / 2);\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n        matrix.postRotate(orientation,0,0);\n        matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n      }\n else       if (orientation == 180) {\n        drawRect.set(-getWidth() / 2,-getHeight() / 2,getWidth() / 2,getHeight() / 2);\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n        matrix.postRotate(orientation,0,0);\n        matrix.postTranslate(getWidth() / 2,getHeight() / 2);\n      }\n else {\n        drawRect.set(0,0,getWidth(),getHeight());\n        matrix.setRectToRect(bitmapRect,drawRect,Matrix.ScaleToFit.FILL);\n      }\n      canvas.clipRect(clipLeft / scaleY,clipTop / scaleY,getWidth() - clipRight / scaleY,getHeight() - clipBottom / scaleY);\n      try {\n        canvas.drawBitmap(bmp.bitmap,matrix,paint);\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 363,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 201,
        "startColumnNumber" : 20,
        "endLineNumber" : 201,
        "endColumnNumber" : 33
      },
      "nodeContext" : "FileLog.e(e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 201,
    "startColumnNumber" : 30,
    "endLineNumber" : 201,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}