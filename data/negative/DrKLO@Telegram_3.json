{
  "id" : 3,
  "expression" : "wms",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/CorrectlyMeasuringTextView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "wms",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 14,
      "startColumnNumber" : 24,
      "endLineNumber" : 14,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 33
      },
      "nodeContext" : "super.onMeasure(wms,hms)",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 34
      },
      "nodeContext" : "super.onMeasure(wms,hms);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 13,
        "startColumnNumber" : 44,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onMeasure(wms,hms);\n  try {\n    Layout l=getLayout();\n    if (l.getLineCount() <= 1) {\n      return;\n    }\n    int maxw=0;\n    for (int i=l.getLineCount() - 1; i >= 0; --i) {\n      maxw=Math.max(maxw,Math.round(l.getPaint().measureText(getText(),l.getLineStart(i),l.getLineEnd(i))));\n    }\n    super.onMeasure(Math.min(maxw + getPaddingLeft() + getPaddingRight(),getMeasuredWidth()) | MeasureSpec.EXACTLY,getMeasuredHeight() | MeasureSpec.EXACTLY);\n  }\n catch (  Exception ignore) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void onMeasure(int wms,int hms){\n  super.onMeasure(wms,hms);\n  try {\n    Layout l=getLayout();\n    if (l.getLineCount() <= 1) {\n      return;\n    }\n    int maxw=0;\n    for (int i=l.getLineCount() - 1; i >= 0; --i) {\n      maxw=Math.max(maxw,Math.round(l.getPaint().measureText(getText(),l.getLineStart(i),l.getLineEnd(i))));\n    }\n    super.onMeasure(Math.min(maxw + getPaddingLeft() + getPaddingRight(),getMeasuredWidth()) | MeasureSpec.EXACTLY,getMeasuredHeight() | MeasureSpec.EXACTLY);\n  }\n catch (  Exception ignore) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 34
      },
      "nodeContext" : "super.onMeasure(wms,hms);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 14,
    "startColumnNumber" : 24,
    "endLineNumber" : 14,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}