{
  "id" : 462,
  "expression" : "length",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/primitives/Doubles.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "length",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 282,
      "startColumnNumber" : 33,
      "endLineNumber" : 282,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 282,
        "startColumnNumber" : 22,
        "endLineNumber" : 282,
        "endColumnNumber" : 40
      },
      "nodeContext" : "new double[length]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 282,
        "startColumnNumber" : 13,
        "endLineNumber" : 282,
        "endColumnNumber" : 40
      },
      "nodeContext" : "result=new double[length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 282,
        "startColumnNumber" : 4,
        "endLineNumber" : 282,
        "endColumnNumber" : 41
      },
      "nodeContext" : "double[] result=new double[length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 277,
        "startColumnNumber" : 52,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=0;\n  for (  double[] array : arrays) {\n    length+=array.length;\n  }\n  double[] result=new double[length];\n  int pos=0;\n  for (  double[] array : arrays) {\n    System.arraycopy(array,0,result,pos,array.length);\n    pos+=array.length;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 269,
        "startColumnNumber" : 2,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the values from each provided array combined into a single array. For example,  {@code}concat(new double[] {a, b}, new double[] {}, new double[] {c}} returns the array  {@code {a, b,}c}}.\n * @param arrays zero or more {@code double} arrays\n * @return a single array containing all the values from the source arrays, in order\n */\npublic static double[] concat(double[]... arrays){\n  int length=0;\n  for (  double[] array : arrays) {\n    length+=array.length;\n  }\n  double[] result=new double[length];\n  int pos=0;\n  for (  double[] array : arrays) {\n    System.arraycopy(array,0,result,pos,array.length);\n    pos+=array.length;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 282,
        "startColumnNumber" : 4,
        "endLineNumber" : 282,
        "endColumnNumber" : 41
      },
      "nodeContext" : "double[] result=new double[length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 282,
    "startColumnNumber" : 33,
    "endLineNumber" : 282,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}