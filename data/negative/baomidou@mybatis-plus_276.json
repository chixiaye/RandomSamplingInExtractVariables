{
  "id" : 276,
  "expression" : "connection.getMetaData()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "8bb7e11aaf24cfe861856fb838150a1c2088bee0",
  "filePath" : "mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/PaginationInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connection.getMetaData()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 149,
      "startColumnNumber" : 118,
      "endLineNumber" : 149,
      "endColumnNumber" : 142
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 149,
        "startColumnNumber" : 118,
        "endLineNumber" : 149,
        "endColumnNumber" : 151
      },
      "nodeContext" : "connection.getMetaData().getURL()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 149,
        "startColumnNumber" : 98,
        "endLineNumber" : 149,
        "endColumnNumber" : 152
      },
      "nodeContext" : "JdbcUtils.getDbType(connection.getMetaData().getURL())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 149,
        "startColumnNumber" : 28,
        "endLineNumber" : 149,
        "endColumnNumber" : 152
      },
      "nodeContext" : "StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL())",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 149,
        "startColumnNumber" : 19,
        "endLineNumber" : 149,
        "endColumnNumber" : 152
      },
      "nodeContext" : "dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 153
      },
      "nodeContext" : "DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4316,
        "startLineNumber" : 106,
        "startColumnNumber" : 47,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement mappedStatement=(MappedStatement)args[0];\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)args[2];\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  Object parameter=args[1];\n  ResultHandler resultHandler=(ResultHandler)args[3];\n  Executor executor=(Executor)invocation.getTarget();\n  CacheKey cacheKey;\n  BoundSql boundSql;\n  if (args.length == 4) {\n    boundSql=mappedStatement.getBoundSql(parameter);\n    cacheKey=executor.createCacheKey(mappedStatement,parameter,rowBounds,boundSql);\n  }\n else {\n    cacheKey=(CacheKey)args[4];\n    boundSql=(BoundSql)args[5];\n  }\n  String originalSql=boundSql.getSql();\n  Connection connection=executor.getTransaction().getConnection();\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  Configuration configuration=mappedStatement.getConfiguration();\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      BoundSql countBoundSql=new BoundSql(configuration,sqlInfo.getSql(),boundSql.getParameterMappings(),parameter);\n      CacheKey countCacheKey=executor.createCacheKey(mappedStatement,parameter,RowBounds.DEFAULT,countBoundSql);\n      Object countObject=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,countCacheKey,countBoundSql);\n      page.setTotal(6);\n      long pages=page.getPages();\n      if (overflowCurrent && (page.getCurrent() > pages)) {\n        page.setCurrent(1);\n      }\n      if (page.getTotal() <= 0L) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  BoundSql pageBoundSql=new BoundSql(configuration,originalSql,boundSql.getParameterMappings(),parameter);\n  List records=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,cacheKey,pageBoundSql);\n  if (rowBounds instanceof Page) {\n    Page page=(Page)rowBounds;\n    page.setRecords(records);\n  }\n  return records;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 425,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4348,
        "startLineNumber" : 106,
        "startColumnNumber" : 15,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (target instanceof Executor) {\n  Object[] args=invocation.getArgs();\n  MappedStatement mappedStatement=(MappedStatement)args[0];\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)args[2];\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  Object parameter=args[1];\n  ResultHandler resultHandler=(ResultHandler)args[3];\n  Executor executor=(Executor)invocation.getTarget();\n  CacheKey cacheKey;\n  BoundSql boundSql;\n  if (args.length == 4) {\n    boundSql=mappedStatement.getBoundSql(parameter);\n    cacheKey=executor.createCacheKey(mappedStatement,parameter,rowBounds,boundSql);\n  }\n else {\n    cacheKey=(CacheKey)args[4];\n    boundSql=(BoundSql)args[5];\n  }\n  String originalSql=boundSql.getSql();\n  Connection connection=executor.getTransaction().getConnection();\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  Configuration configuration=mappedStatement.getConfiguration();\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      BoundSql countBoundSql=new BoundSql(configuration,sqlInfo.getSql(),boundSql.getParameterMappings(),parameter);\n      CacheKey countCacheKey=executor.createCacheKey(mappedStatement,parameter,RowBounds.DEFAULT,countBoundSql);\n      Object countObject=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,countCacheKey,countBoundSql);\n      page.setTotal(6);\n      long pages=page.getPages();\n      if (overflowCurrent && (page.getCurrent() > pages)) {\n        page.setCurrent(1);\n      }\n      if (page.getTotal() <= 0L) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  BoundSql pageBoundSql=new BoundSql(configuration,originalSql,boundSql.getParameterMappings(),parameter);\n  List records=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,cacheKey,pageBoundSql);\n  if (rowBounds instanceof Page) {\n    Page page=(Page)rowBounds;\n    page.setRecords(records);\n  }\n  return records;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 430,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4740,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (target instanceof StatementHandler) {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  return invocation.proceed();\n}\n else if (target instanceof Executor) {\n  Object[] args=invocation.getArgs();\n  MappedStatement mappedStatement=(MappedStatement)args[0];\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)args[2];\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  Object parameter=args[1];\n  ResultHandler resultHandler=(ResultHandler)args[3];\n  Executor executor=(Executor)invocation.getTarget();\n  CacheKey cacheKey;\n  BoundSql boundSql;\n  if (args.length == 4) {\n    boundSql=mappedStatement.getBoundSql(parameter);\n    cacheKey=executor.createCacheKey(mappedStatement,parameter,rowBounds,boundSql);\n  }\n else {\n    cacheKey=(CacheKey)args[4];\n    boundSql=(BoundSql)args[5];\n  }\n  String originalSql=boundSql.getSql();\n  Connection connection=executor.getTransaction().getConnection();\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  Configuration configuration=mappedStatement.getConfiguration();\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      BoundSql countBoundSql=new BoundSql(configuration,sqlInfo.getSql(),boundSql.getParameterMappings(),parameter);\n      CacheKey countCacheKey=executor.createCacheKey(mappedStatement,parameter,RowBounds.DEFAULT,countBoundSql);\n      Object countObject=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,countCacheKey,countBoundSql);\n      page.setTotal(6);\n      long pages=page.getPages();\n      if (overflowCurrent && (page.getCurrent() > pages)) {\n        page.setCurrent(1);\n      }\n      if (page.getTotal() <= 0L) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  BoundSql pageBoundSql=new BoundSql(configuration,originalSql,boundSql.getParameterMappings(),parameter);\n  List records=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,cacheKey,pageBoundSql);\n  if (rowBounds instanceof Page) {\n    Page page=(Page)rowBounds;\n    page.setRecords(records);\n  }\n  return records;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 468,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4841,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object target=invocation.getTarget();\n  if (target instanceof StatementHandler) {\n    StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n    MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n    this.sqlParser(metaObject);\n    return invocation.proceed();\n  }\n else   if (target instanceof Executor) {\n    Object[] args=invocation.getArgs();\n    MappedStatement mappedStatement=(MappedStatement)args[0];\n    if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n      return invocation.proceed();\n    }\n    RowBounds rowBounds=(RowBounds)args[2];\n    if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n      if (localPage) {\n        rowBounds=PageHelper.getPagination();\n        if (rowBounds == null) {\n          return invocation.proceed();\n        }\n      }\n else {\n        return invocation.proceed();\n      }\n    }\n    Object parameter=args[1];\n    ResultHandler resultHandler=(ResultHandler)args[3];\n    Executor executor=(Executor)invocation.getTarget();\n    CacheKey cacheKey;\n    BoundSql boundSql;\n    if (args.length == 4) {\n      boundSql=mappedStatement.getBoundSql(parameter);\n      cacheKey=executor.createCacheKey(mappedStatement,parameter,rowBounds,boundSql);\n    }\n else {\n      cacheKey=(CacheKey)args[4];\n      boundSql=(BoundSql)args[5];\n    }\n    String originalSql=boundSql.getSql();\n    Connection connection=executor.getTransaction().getConnection();\n    DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n    Configuration configuration=mappedStatement.getConfiguration();\n    if (rowBounds instanceof Pagination) {\n      Pagination page=(Pagination)rowBounds;\n      boolean orderBy=true;\n      if (page.isSearchCount()) {\n        SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n        orderBy=sqlInfo.isOrderBy();\n        BoundSql countBoundSql=new BoundSql(configuration,sqlInfo.getSql(),boundSql.getParameterMappings(),parameter);\n        CacheKey countCacheKey=executor.createCacheKey(mappedStatement,parameter,RowBounds.DEFAULT,countBoundSql);\n        Object countObject=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,countCacheKey,countBoundSql);\n        page.setTotal(6);\n        long pages=page.getPages();\n        if (overflowCurrent && (page.getCurrent() > pages)) {\n          page.setCurrent(1);\n        }\n        if (page.getTotal() <= 0L) {\n          return invocation.proceed();\n        }\n      }\n      String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n      originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n    }\n else {\n      originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n    }\n    BoundSql pageBoundSql=new BoundSql(configuration,originalSql,boundSql.getParameterMappings(),parameter);\n    List records=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,cacheKey,pageBoundSql);\n    if (rowBounds instanceof Page) {\n      Page page=(Page)rowBounds;\n      page.setRecords(records);\n    }\n    return records;\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 481,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5027,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  Object target=invocation.getTarget();\n  if (target instanceof StatementHandler) {\n    StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n    MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n    this.sqlParser(metaObject);\n    return invocation.proceed();\n  }\n else   if (target instanceof Executor) {\n    Object[] args=invocation.getArgs();\n    MappedStatement mappedStatement=(MappedStatement)args[0];\n    if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n      return invocation.proceed();\n    }\n    RowBounds rowBounds=(RowBounds)args[2];\n    if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n      if (localPage) {\n        rowBounds=PageHelper.getPagination();\n        if (rowBounds == null) {\n          return invocation.proceed();\n        }\n      }\n else {\n        return invocation.proceed();\n      }\n    }\n    Object parameter=args[1];\n    ResultHandler resultHandler=(ResultHandler)args[3];\n    Executor executor=(Executor)invocation.getTarget();\n    CacheKey cacheKey;\n    BoundSql boundSql;\n    if (args.length == 4) {\n      boundSql=mappedStatement.getBoundSql(parameter);\n      cacheKey=executor.createCacheKey(mappedStatement,parameter,rowBounds,boundSql);\n    }\n else {\n      cacheKey=(CacheKey)args[4];\n      boundSql=(BoundSql)args[5];\n    }\n    String originalSql=boundSql.getSql();\n    Connection connection=executor.getTransaction().getConnection();\n    DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n    Configuration configuration=mappedStatement.getConfiguration();\n    if (rowBounds instanceof Pagination) {\n      Pagination page=(Pagination)rowBounds;\n      boolean orderBy=true;\n      if (page.isSearchCount()) {\n        SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n        orderBy=sqlInfo.isOrderBy();\n        BoundSql countBoundSql=new BoundSql(configuration,sqlInfo.getSql(),boundSql.getParameterMappings(),parameter);\n        CacheKey countCacheKey=executor.createCacheKey(mappedStatement,parameter,RowBounds.DEFAULT,countBoundSql);\n        Object countObject=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,countCacheKey,countBoundSql);\n        page.setTotal(6);\n        long pages=page.getPages();\n        if (overflowCurrent && (page.getCurrent() > pages)) {\n          page.setCurrent(1);\n        }\n        if (page.getTotal() <= 0L) {\n          return invocation.proceed();\n        }\n      }\n      String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n      originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n    }\n else {\n      originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n    }\n    BoundSql pageBoundSql=new BoundSql(configuration,originalSql,boundSql.getParameterMappings(),parameter);\n    List records=executor.query(mappedStatement,parameter,RowBounds.DEFAULT,resultHandler,cacheKey,pageBoundSql);\n    if (rowBounds instanceof Page) {\n      Page page=(Page)rowBounds;\n      page.setRecords(records);\n    }\n    return records;\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 495,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 153
      },
      "nodeContext" : "DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.sql.DatabaseMetaData"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 149,
    "startColumnNumber" : 118,
    "endLineNumber" : 149,
    "endColumnNumber" : 142
  } ],
  "layoutRelationDataList" : [ ]
}