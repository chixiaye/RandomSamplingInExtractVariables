{
  "id" : 121,
  "expression" : "Collectors.toList()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/query2/cquery/GraphOutputFormatterCallbackTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collectors.toList()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 92,
      "startColumnNumber" : 17,
      "endLineNumber" : 92,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 90,
        "startColumnNumber" : 11,
        "endLineNumber" : 92,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Arrays.stream(pattern).map(entry -> entry.replace(\"%s\",configHash)).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 38
      },
      "nodeContext" : "return Arrays.stream(pattern).map(entry -> entry.replace(\"%s\",configHash)).collect(Collectors.toList());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 89,
        "startColumnNumber" : 83,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Arrays.stream(pattern).map(entry -> entry.replace(\"%s\",configHash)).collect(Collectors.toList());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Convenience method for easily injecting a config hash into an expected output sequence. \n */\nprivate static List<String> withConfigHash(String configHash,String... pattern){\n  return Arrays.stream(pattern).map(entry -> entry.replace(\"%s\",configHash)).collect(Collectors.toList());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 90,
        "startColumnNumber" : 11,
        "endLineNumber" : 92,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Arrays.stream(pattern).map(entry -> entry.replace(\"%s\",configHash)).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Collector<java.lang.String,,java.util.List<java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 92,
    "startColumnNumber" : 17,
    "endLineNumber" : 92,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}