{
  "id" : 261,
  "expression" : "PI_TAG",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.xml/src/org/jkiss/dbeaver/ui/editors/xml/XMLReconcilingStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PI_TAG",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 165,
      "startColumnNumber" : 33,
      "endLineNumber" : 165,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 165,
        "startColumnNumber" : 28,
        "endLineNumber" : 165,
        "endColumnNumber" : 40
      },
      "nodeContext" : "case PI_TAG:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 148,
        "startColumnNumber" : 24,
        "endLineNumber" : 172,
        "endColumnNumber" : 25
      },
      "nodeContext" : "switch (classification) {\ncase START_TAG:  newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\n  emitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 139,
        "startColumnNumber" : 16,
        "endLineNumber" : 183,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (ch) {\ncase '<':  int startOffset=cNextPos - 1;\nint startNewLines=newLines;\nint classification=classifyTag();\nnewLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2239,
        "startLineNumber" : 137,
        "startColumnNumber" : 41,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':    int startOffset=cNextPos - 1;\n  int startNewLines=newLines;\nint classification=classifyTag();\nnewLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2268,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (cNextPos < fRangeEnd) {\n  char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':    int startOffset=cNextPos - 1;\n  int startNewLines=newLines;\nint classification=classifyTag();\nnewLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2293,
        "startLineNumber" : 136,
        "startColumnNumber" : 37,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (cNextPos < fRangeEnd) {\n    char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':      int startOffset=cNextPos - 1;\n    int startNewLines=newLines;\n  int classification=classifyTag();\nnewLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2322,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (cNextPos < fRangeEnd) {\n  while (cNextPos < fRangeEnd) {\n    char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':      int startOffset=cNextPos - 1;\n    int startNewLines=newLines;\n  int classification=classifyTag();\nnewLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2389,
        "startLineNumber" : 134,
        "startColumnNumber" : 71,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newLines=0;\n  while (cNextPos < fRangeEnd) {\n    while (cNextPos < fRangeEnd) {\n      char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':        int startOffset=cNextPos - 1;\n      int startNewLines=newLines;\n    int classification=classifyTag();\n  newLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:  newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\n  emitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n}\nreturn newLines;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2556,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * emits tokens to  {@link #positions}.\n * @return number of newLines\n */\nprivate int recursiveTokens(int depth) throws BadLocationException {\n  int newLines=0;\n  while (cNextPos < fRangeEnd) {\n    while (cNextPos < fRangeEnd) {\n      char ch=document.getChar(cNextPos++);\nswitch (ch) {\ncase '<':        int startOffset=cNextPos - 1;\n      int startNewLines=newLines;\n    int classification=classifyTag();\n  newLines+=cNewLines;\nswitch (classification) {\ncase START_TAG:  newLines+=recursiveTokens(depth + 1);\nif (newLines > startNewLines + 1) {\n  emitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase LEAF_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase COMMENT_TAG:if (newLines > startNewLines + 1) {\nemitPosition(startOffset,cNextPos - startOffset);\n}\nbreak;\ncase PI_TAG:break;\ncase END_TAG:case EOR_TAG:return newLines;\ndefault:break;\n}\nbreak;\ncase '\\n':case '\\r':if ((ch == cLastNLChar) || (' ' == cLastNLChar)) {\nnewLines++;\ncLastNLChar=ch;\n}\nbreak;\ndefault:break;\n}\n}\n}\nreturn newLines;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 165,
        "startColumnNumber" : 28,
        "endLineNumber" : 165,
        "endColumnNumber" : 40
      },
      "nodeContext" : "case PI_TAG:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 165,
    "startColumnNumber" : 33,
    "endLineNumber" : 165,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}