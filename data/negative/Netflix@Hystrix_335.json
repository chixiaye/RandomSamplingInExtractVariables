{
  "id" : 335,
  "expression" : "streams.get(commandKey.name())",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/metric/consumer/HealthCountsStream.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "streams.get(commandKey.name())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 66,
      "startColumnNumber" : 43,
      "endLineNumber" : 66,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 66,
        "startColumnNumber" : 27,
        "endLineNumber" : 66,
        "endColumnNumber" : 73
      },
      "nodeContext" : "initialStream=streams.get(commandKey.name())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 74
      },
      "nodeContext" : "HealthCountsStream initialStream=streams.get(commandKey.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 65,
        "startColumnNumber" : 115,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HealthCountsStream initialStream=streams.get(commandKey.name());\n  if (initialStream != null) {\n    return initialStream;\n  }\n else {\n    final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n      HealthCountsStream existingStream=streams.get(commandKey.name());\n      if (existingStream == null) {\n        HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n        streams.putIfAbsent(commandKey.name(),newStream);\n        healthStream=newStream;\n      }\n else {\n        healthStream=existingStream;\n      }\n    }\n    healthStream.startCachingStreamValuesIfUnstarted();\n    return healthStream;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static HealthCountsStream getInstance(HystrixCommandKey commandKey,int numBuckets,int bucketSizeInMs){\n  HealthCountsStream initialStream=streams.get(commandKey.name());\n  if (initialStream != null) {\n    return initialStream;\n  }\n else {\n    final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n      HealthCountsStream existingStream=streams.get(commandKey.name());\n      if (existingStream == null) {\n        HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n        streams.putIfAbsent(commandKey.name(),newStream);\n        healthStream=newStream;\n      }\n else {\n        healthStream=existingStream;\n      }\n    }\n    healthStream.startCachingStreamValuesIfUnstarted();\n    return healthStream;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 74
      },
      "nodeContext" : "HealthCountsStream initialStream=streams.get(commandKey.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.netflix.hystrix.metric.consumer.HealthCountsStream"
  }, {
    "nodeContext" : "streams.get(commandKey.name())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 72,
      "startColumnNumber" : 52,
      "endLineNumber" : 72,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 82
      },
      "nodeContext" : "existingStream=streams.get(commandKey.name())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 83
      },
      "nodeContext" : "HealthCountsStream existingStream=streams.get(commandKey.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 71,
        "startColumnNumber" : 52,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  HealthCountsStream existingStream=streams.get(commandKey.name());\n  if (existingStream == null) {\n    HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n    streams.putIfAbsent(commandKey.name(),newStream);\n    healthStream=newStream;\n  }\n else {\n    healthStream=existingStream;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "synchronized (HealthCountsStream.class) {\n  HealthCountsStream existingStream=streams.get(commandKey.name());\n  if (existingStream == null) {\n    HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n    streams.putIfAbsent(commandKey.name(),newStream);\n    healthStream=newStream;\n  }\n else {\n    healthStream=existingStream;\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n    HealthCountsStream existingStream=streams.get(commandKey.name());\n    if (existingStream == null) {\n      HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n      streams.putIfAbsent(commandKey.name(),newStream);\n      healthStream=newStream;\n    }\n else {\n      healthStream=existingStream;\n    }\n  }\n  healthStream.startCachingStreamValuesIfUnstarted();\n  return healthStream;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (initialStream != null) {\n  return initialStream;\n}\n else {\n  final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n    HealthCountsStream existingStream=streams.get(commandKey.name());\n    if (existingStream == null) {\n      HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n      streams.putIfAbsent(commandKey.name(),newStream);\n      healthStream=newStream;\n    }\n else {\n      healthStream=existingStream;\n    }\n  }\n  healthStream.startCachingStreamValuesIfUnstarted();\n  return healthStream;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 65,
        "startColumnNumber" : 115,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HealthCountsStream initialStream=streams.get(commandKey.name());\n  if (initialStream != null) {\n    return initialStream;\n  }\n else {\n    final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n      HealthCountsStream existingStream=streams.get(commandKey.name());\n      if (existingStream == null) {\n        HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n        streams.putIfAbsent(commandKey.name(),newStream);\n        healthStream=newStream;\n      }\n else {\n        healthStream=existingStream;\n      }\n    }\n    healthStream.startCachingStreamValuesIfUnstarted();\n    return healthStream;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static HealthCountsStream getInstance(HystrixCommandKey commandKey,int numBuckets,int bucketSizeInMs){\n  HealthCountsStream initialStream=streams.get(commandKey.name());\n  if (initialStream != null) {\n    return initialStream;\n  }\n else {\n    final HealthCountsStream healthStream;\nsynchronized (HealthCountsStream.class) {\n      HealthCountsStream existingStream=streams.get(commandKey.name());\n      if (existingStream == null) {\n        HealthCountsStream newStream=new HealthCountsStream(commandKey,numBuckets,bucketSizeInMs,HystrixCommandMetrics.appendEventToBucket);\n        streams.putIfAbsent(commandKey.name(),newStream);\n        healthStream=newStream;\n      }\n else {\n        healthStream=existingStream;\n      }\n    }\n    healthStream.startCachingStreamValuesIfUnstarted();\n    return healthStream;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 83
      },
      "nodeContext" : "HealthCountsStream existingStream=streams.get(commandKey.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.netflix.hystrix.metric.consumer.HealthCountsStream"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 66,
    "startColumnNumber" : 43,
    "endLineNumber" : 66,
    "endColumnNumber" : 73
  }, {
    "charLength" : 30,
    "startLineNumber" : 72,
    "startColumnNumber" : 52,
    "endLineNumber" : 72,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}