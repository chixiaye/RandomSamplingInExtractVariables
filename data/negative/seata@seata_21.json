{
  "id" : 21,
  "expression" : "JdbcConstants",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/undo/mysql/MySQLUndoInsertExecutor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JdbcConstants",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 52,
      "startColumnNumber" : 80,
      "endLineNumber" : 52,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 52,
        "startColumnNumber" : 80,
        "endLineNumber" : 52,
        "endColumnNumber" : 99
      },
      "nodeContext" : "JdbcConstants.MYSQL",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 52,
        "endColumnNumber" : 100
      },
      "nodeContext" : "KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 52,
        "startColumnNumber" : 23,
        "endLineNumber" : 52,
        "endColumnNumber" : 100
      },
      "nodeContext" : "keywordChecker=KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 101
      },
      "nodeContext" : "KeywordChecker keywordChecker=KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 51,
        "startColumnNumber" : 36,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  KeywordChecker keywordChecker=KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL);\n  TableRecords afterImage=sqlUndoLog.getAfterImage();\n  List<Row> afterImageRows=afterImage.getRows();\n  if (afterImageRows == null || afterImageRows.size() == 0) {\n    throw new ShouldNeverHappenException(\"Invalid UNDO LOG\");\n  }\n  Row row=afterImageRows.get(0);\n  Field pkField=row.primaryKeys().get(0);\n  return String.format(DELETE_SQL_TEMPLATE,keywordChecker.checkAndReplace(sqlUndoLog.getTableName()),keywordChecker.checkAndReplace(pkField.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Undo Inset.\n * @return sql\n */\n@Override protected String buildUndoSQL(){\n  KeywordChecker keywordChecker=KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL);\n  TableRecords afterImage=sqlUndoLog.getAfterImage();\n  List<Row> afterImageRows=afterImage.getRows();\n  if (afterImageRows == null || afterImageRows.size() == 0) {\n    throw new ShouldNeverHappenException(\"Invalid UNDO LOG\");\n  }\n  Row row=afterImageRows.get(0);\n  Field pkField=row.primaryKeys().get(0);\n  return String.format(DELETE_SQL_TEMPLATE,keywordChecker.checkAndReplace(sqlUndoLog.getTableName()),keywordChecker.checkAndReplace(pkField.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 101
      },
      "nodeContext" : "KeywordChecker keywordChecker=KeywordCheckerFactory.getKeywordChecker(JdbcConstants.MYSQL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 52,
    "startColumnNumber" : 80,
    "endLineNumber" : 52,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}