{
  "id" : 137,
  "expression" : "instrumentation",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-instrument/src/main/java/org/springframework/instrument/InstrumentationSavingAgent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "instrumentation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 68,
      "startColumnNumber" : 9,
      "endLineNumber" : 68,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return instrumentation;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 67,
        "startColumnNumber" : 52,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  return instrumentation;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 54,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return the  {@link Instrumentation} interface exposed by the JVM.<p>Note that this agent class will typically not be available in the classpath unless the agent is actually specified on JVM startup. If you intend to do conditional checking with respect to agent availability, consider using {@link org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#getInstrumentation()}instead - which will work without the agent class in the classpath as well.\n * @return the {@code Instrumentation} instance previously saved whenthe  {@link #premain} or {@link #agentmain} methods was called by the JVM;will be  {@code null} if this class was not used as Java agent when thisJVM was started or it wasn't installed as agent using the Attach API.\n * @see org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#getInstrumentation()\n */\npublic static Instrumentation getInstrumentation(){\n  return instrumentation;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 10,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return instrumentation;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.instrument.Instrumentation"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 68,
    "startColumnNumber" : 9,
    "endLineNumber" : 68,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}