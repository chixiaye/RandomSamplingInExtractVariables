{
  "id" : 445,
  "expression" : "numPartitions",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numPartitions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 71,
      "startColumnNumber" : 59,
      "endLineNumber" : 71,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 71,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 66,
        "startColumnNumber" : 44,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (keyBytes == null) {\n    return stickyPartitionCache.partition(topic,cluster);\n  }\n  return Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compute the partition for the given record.\n * @param topic The topic name\n * @param numPartitions The number of partitions of the given {@code topic}\n * @param key The key to partition on (or null if no key)\n * @param keyBytes serialized key to partition on (or null if no key)\n * @param value The value to partition on or null\n * @param valueBytes serialized value to partition on or null\n * @param cluster The current cluster metadata\n */\npublic int partition(String topic,Object key,byte[] keyBytes,Object value,byte[] valueBytes,Cluster cluster,int numPartitions){\n  if (keyBytes == null) {\n    return stickyPartitionCache.partition(topic,cluster);\n  }\n  return Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 71,
    "startColumnNumber" : 59,
    "endLineNumber" : 71,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}