{
  "id" : 90,
  "expression" : "o",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Conversions/OctalToBinary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 19,
      "startColumnNumber" : 66,
      "endLineNumber" : 19,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 19,
        "startColumnNumber" : 45,
        "endLineNumber" : 19,
        "endColumnNumber" : 68
      },
      "nodeContext" : "convertOctalToBinary(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 19,
        "startColumnNumber" : 21,
        "endLineNumber" : 19,
        "endColumnNumber" : 68
      },
      "nodeContext" : "\"Binary equivalent: \" + convertOctalToBinary(o)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 19,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.out.println(\"Binary equivalent: \" + convertOctalToBinary(o))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 19,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.out.println(\"Binary equivalent: \" + convertOctalToBinary(o));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 16,
        "startColumnNumber" : 40,
        "endLineNumber" : 21,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Scanner sc=new Scanner(System.in);\n  int o=sc.nextInt();\n  System.out.println(\"Binary equivalent: \" + convertOctalToBinary(o));\n  sc.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 11,
        "startColumnNumber" : 1,
        "endLineNumber" : 21,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Main method\n * @param args Command line arguments\n */\npublic static void main(String args[]){\n  Scanner sc=new Scanner(System.in);\n  int o=sc.nextInt();\n  System.out.println(\"Binary equivalent: \" + convertOctalToBinary(o));\n  sc.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 19,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.out.println(\"Binary equivalent: \" + convertOctalToBinary(o));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 19,
    "startColumnNumber" : 66,
    "endLineNumber" : 19,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}