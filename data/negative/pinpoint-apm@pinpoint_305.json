{
  "id" : 305,
  "expression" : "\"com.navercorp.pinpoint.bootstrap.test.class\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/plugin/PinpointProfilerPackageSkipFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"com.navercorp.pinpoint.bootstrap.test.class\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 31,
      "startColumnNumber" : 49,
      "endLineNumber" : 31,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 31,
        "startColumnNumber" : 35,
        "endLineNumber" : 31,
        "endColumnNumber" : 95
      },
      "nodeContext" : "filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertFalse(\"skip\",filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertFalse(\"skip\",filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 28,
        "startColumnNumber" : 46,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PinpointProfilerPackageSkipFilter filter=new PinpointProfilerPackageSkipFilter();\n  Assert.assertFalse(\"skip\",filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\"));\n  Assert.assertTrue(\"include\",filter.accept(\"test\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAccept() throws Exception {\n  PinpointProfilerPackageSkipFilter filter=new PinpointProfilerPackageSkipFilter();\n  Assert.assertFalse(\"skip\",filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\"));\n  Assert.assertTrue(\"include\",filter.accept(\"test\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertFalse(\"skip\",filter.accept(\"com.navercorp.pinpoint.bootstrap.test.class\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 31,
    "startColumnNumber" : 49,
    "endLineNumber" : 31,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}