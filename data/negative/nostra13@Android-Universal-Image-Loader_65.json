{
  "id" : 65,
  "expression" : "i",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 310,
      "startColumnNumber" : 59,
      "endLineNumber" : 310,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 310,
        "startColumnNumber" : 59,
        "endLineNumber" : 310,
        "endColumnNumber" : 70
      },
      "nodeContext" : "i.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 324,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n  Entry entry=i.next();\n  if (entry.currentEditor == null) {\n    for (int t=0; t < valueCount; t++) {\n      size+=entry.lengths[t];\n    }\n  }\n else {\n    entry.currentEditor=null;\n    for (int t=0; t < valueCount; t++) {\n      deleteIfExists(entry.getCleanFile(t));\n      deleteIfExists(entry.getDirtyFile(t));\n    }\n    i.remove();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 308,
        "startColumnNumber" : 50,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 304,
        "startColumnNumber" : 1,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes the initial size and collects garbage as a part of opening the cache. Dirty entries are assumed to be inconsistent and will be deleted.\n */\nprivate void processJournal() throws IOException {\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 310,
        "startColumnNumber" : 59,
        "endLineNumber" : 310,
        "endColumnNumber" : 70
      },
      "nodeContext" : "i.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache.Entry>"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 311,
      "startColumnNumber" : 17,
      "endLineNumber" : 311,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 311,
        "startColumnNumber" : 17,
        "endLineNumber" : 311,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i.next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 311,
        "startColumnNumber" : 9,
        "endLineNumber" : 311,
        "endColumnNumber" : 25
      },
      "nodeContext" : "entry=i.next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 311,
        "startColumnNumber" : 3,
        "endLineNumber" : 311,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Entry entry=i.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 310,
        "startColumnNumber" : 74,
        "endLineNumber" : 324,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Entry entry=i.next();\n  if (entry.currentEditor == null) {\n    for (int t=0; t < valueCount; t++) {\n      size+=entry.lengths[t];\n    }\n  }\n else {\n    entry.currentEditor=null;\n    for (int t=0; t < valueCount; t++) {\n      deleteIfExists(entry.getCleanFile(t));\n      deleteIfExists(entry.getDirtyFile(t));\n    }\n    i.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 324,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n  Entry entry=i.next();\n  if (entry.currentEditor == null) {\n    for (int t=0; t < valueCount; t++) {\n      size+=entry.lengths[t];\n    }\n  }\n else {\n    entry.currentEditor=null;\n    for (int t=0; t < valueCount; t++) {\n      deleteIfExists(entry.getCleanFile(t));\n      deleteIfExists(entry.getDirtyFile(t));\n    }\n    i.remove();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 308,
        "startColumnNumber" : 50,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 304,
        "startColumnNumber" : 1,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes the initial size and collects garbage as a part of opening the cache. Dirty entries are assumed to be inconsistent and will be deleted.\n */\nprivate void processJournal() throws IOException {\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 311,
        "startColumnNumber" : 3,
        "endLineNumber" : 311,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Entry entry=i.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache.Entry>"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 322,
      "startColumnNumber" : 4,
      "endLineNumber" : 322,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 322,
        "startColumnNumber" : 4,
        "endLineNumber" : 322,
        "endColumnNumber" : 14
      },
      "nodeContext" : "i.remove()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 322,
        "startColumnNumber" : 4,
        "endLineNumber" : 322,
        "endColumnNumber" : 15
      },
      "nodeContext" : "i.remove();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 316,
        "startColumnNumber" : 10,
        "endLineNumber" : 323,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  entry.currentEditor=null;\n  for (int t=0; t < valueCount; t++) {\n    deleteIfExists(entry.getCleanFile(t));\n    deleteIfExists(entry.getDirtyFile(t));\n  }\n  i.remove();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 312,
        "startColumnNumber" : 3,
        "endLineNumber" : 323,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (entry.currentEditor == null) {\n  for (int t=0; t < valueCount; t++) {\n    size+=entry.lengths[t];\n  }\n}\n else {\n  entry.currentEditor=null;\n  for (int t=0; t < valueCount; t++) {\n    deleteIfExists(entry.getCleanFile(t));\n    deleteIfExists(entry.getDirtyFile(t));\n  }\n  i.remove();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 310,
        "startColumnNumber" : 74,
        "endLineNumber" : 324,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Entry entry=i.next();\n  if (entry.currentEditor == null) {\n    for (int t=0; t < valueCount; t++) {\n      size+=entry.lengths[t];\n    }\n  }\n else {\n    entry.currentEditor=null;\n    for (int t=0; t < valueCount; t++) {\n      deleteIfExists(entry.getCleanFile(t));\n      deleteIfExists(entry.getDirtyFile(t));\n    }\n    i.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 324,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n  Entry entry=i.next();\n  if (entry.currentEditor == null) {\n    for (int t=0; t < valueCount; t++) {\n      size+=entry.lengths[t];\n    }\n  }\n else {\n    entry.currentEditor=null;\n    for (int t=0; t < valueCount; t++) {\n      deleteIfExists(entry.getCleanFile(t));\n      deleteIfExists(entry.getDirtyFile(t));\n    }\n    i.remove();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 308,
        "startColumnNumber" : 50,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 304,
        "startColumnNumber" : 1,
        "endLineNumber" : 325,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes the initial size and collects garbage as a part of opening the cache. Dirty entries are assumed to be inconsistent and will be deleted.\n */\nprivate void processJournal() throws IOException {\n  deleteIfExists(journalFileTmp);\n  for (Iterator<Entry> i=lruEntries.values().iterator(); i.hasNext(); ) {\n    Entry entry=i.next();\n    if (entry.currentEditor == null) {\n      for (int t=0; t < valueCount; t++) {\n        size+=entry.lengths[t];\n      }\n    }\n else {\n      entry.currentEditor=null;\n      for (int t=0; t < valueCount; t++) {\n        deleteIfExists(entry.getCleanFile(t));\n        deleteIfExists(entry.getDirtyFile(t));\n      }\n      i.remove();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 322,
        "startColumnNumber" : 4,
        "endLineNumber" : 322,
        "endColumnNumber" : 15
      },
      "nodeContext" : "i.remove();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache.Entry>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 310,
    "startColumnNumber" : 59,
    "endLineNumber" : 310,
    "endColumnNumber" : 60
  }, {
    "charLength" : 1,
    "startLineNumber" : 311,
    "startColumnNumber" : 17,
    "endLineNumber" : 311,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 322,
    "startColumnNumber" : 4,
    "endLineNumber" : 322,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}