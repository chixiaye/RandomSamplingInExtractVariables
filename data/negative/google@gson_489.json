{
  "id" : 489,
  "expression" : "10L",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "10L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 30,
      "startColumnNumber" : 46,
      "endLineNumber" : 30,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 30,
        "startColumnNumber" : 26,
        "endLineNumber" : 30,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new BagOfPrimitives(10L,5,false,\"foo\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 30,
        "startColumnNumber" : 20,
        "endLineNumber" : 30,
        "endColumnNumber" : 67
      },
      "nodeContext" : "bag=new BagOfPrimitives(10L,5,false,\"foo\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n  JsonElement json=gson.toJsonTree(bag);\n  assertTrue(json.isJsonObject());\n  JsonObject obj=json.getAsJsonObject();\n  Set<Entry<String,JsonElement>> children=obj.entrySet();\n  assertEquals(4,children.size());\n  assertContains(obj,new JsonPrimitive(10L));\n  assertContains(obj,new JsonPrimitive(5));\n  assertContains(obj,new JsonPrimitive(false));\n  assertContains(obj,new JsonPrimitive(\"foo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testToJsonTree(){\n  BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n  JsonElement json=gson.toJsonTree(bag);\n  assertTrue(json.isJsonObject());\n  JsonObject obj=json.getAsJsonObject();\n  Set<Entry<String,JsonElement>> children=obj.entrySet();\n  assertEquals(4,children.size());\n  assertContains(obj,new JsonPrimitive(10L));\n  assertContains(obj,new JsonPrimitive(5));\n  assertContains(obj,new JsonPrimitive(false));\n  assertContains(obj,new JsonPrimitive(\"foo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "10L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 42,
      "endLineNumber" : 36,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 36,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new JsonPrimitive(10L)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertContains(obj,new JsonPrimitive(10L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertContains(obj,new JsonPrimitive(10L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n  JsonElement json=gson.toJsonTree(bag);\n  assertTrue(json.isJsonObject());\n  JsonObject obj=json.getAsJsonObject();\n  Set<Entry<String,JsonElement>> children=obj.entrySet();\n  assertEquals(4,children.size());\n  assertContains(obj,new JsonPrimitive(10L));\n  assertContains(obj,new JsonPrimitive(5));\n  assertContains(obj,new JsonPrimitive(false));\n  assertContains(obj,new JsonPrimitive(\"foo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testToJsonTree(){\n  BagOfPrimitives bag=new BagOfPrimitives(10L,5,false,\"foo\");\n  JsonElement json=gson.toJsonTree(bag);\n  assertTrue(json.isJsonObject());\n  JsonObject obj=json.getAsJsonObject();\n  Set<Entry<String,JsonElement>> children=obj.entrySet();\n  assertEquals(4,children.size());\n  assertContains(obj,new JsonPrimitive(10L));\n  assertContains(obj,new JsonPrimitive(5));\n  assertContains(obj,new JsonPrimitive(false));\n  assertContains(obj,new JsonPrimitive(\"foo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertContains(obj,new JsonPrimitive(10L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 30,
    "startColumnNumber" : 46,
    "endLineNumber" : 30,
    "endColumnNumber" : 49
  }, {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 42,
    "endLineNumber" : 36,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}