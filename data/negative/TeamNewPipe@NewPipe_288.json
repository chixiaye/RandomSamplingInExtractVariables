{
  "id" : 288,
  "expression" : "requestBuilder",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "430d4e1ccde9dcd7db2d71eaf23779da8bd8f4df",
  "filePath" : "app/src/main/java/org/schabi/newpipe/DownloaderImpl.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 242,
      "startColumnNumber" : 12,
      "endLineNumber" : 242,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 55
      },
      "nodeContext" : "requestBuilder.addHeader(\"Cookie\",cookies)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestBuilder.addHeader(\"Cookie\",cookies);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 241,
        "startColumnNumber" : 32,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  requestBuilder.addHeader(\"Cookie\",cookies);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!cookies.isEmpty()) {\n  requestBuilder.addHeader(\"Cookie\",cookies);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 225,
        "startColumnNumber" : 51,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response execute(@NonNull final Request request) throws IOException, ReCaptchaException {\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestBuilder.addHeader(\"Cookie\",cookies);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "okhttp3.Request.Builder"
  }, {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 250,
      "startColumnNumber" : 16,
      "endLineNumber" : 250,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 55
      },
      "nodeContext" : "requestBuilder.removeHeader(headerName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestBuilder.removeHeader(headerName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 249,
        "startColumnNumber" : 44,
        "endLineNumber" : 254,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestBuilder.removeHeader(headerName);\n  for (  String headerValue : headerValueList) {\n    requestBuilder.addHeader(headerName,headerValue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (headerValueList.size() > 1) {\n  requestBuilder.removeHeader(headerName);\n  for (  String headerValue : headerValueList) {\n    requestBuilder.addHeader(headerName,headerValue);\n  }\n}\n else if (headerValueList.size() == 1) {\n  requestBuilder.header(headerName,headerValueList.get(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 245,
        "startColumnNumber" : 72,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 245,
        "startColumnNumber" : 8,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> pair : headers.entrySet()) {\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 225,
        "startColumnNumber" : 51,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response execute(@NonNull final Request request) throws IOException, ReCaptchaException {\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestBuilder.removeHeader(headerName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "okhttp3.Request.Builder"
  }, {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 252,
      "startColumnNumber" : 20,
      "endLineNumber" : 252,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 252,
        "endColumnNumber" : 69
      },
      "nodeContext" : "requestBuilder.addHeader(headerName,headerValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 252,
        "endColumnNumber" : 70
      },
      "nodeContext" : "requestBuilder.addHeader(headerName,headerValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 251,
        "startColumnNumber" : 59,
        "endLineNumber" : 253,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  requestBuilder.addHeader(headerName,headerValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (String headerValue : headerValueList) {\n  requestBuilder.addHeader(headerName,headerValue);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 249,
        "startColumnNumber" : 44,
        "endLineNumber" : 254,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestBuilder.removeHeader(headerName);\n  for (  String headerValue : headerValueList) {\n    requestBuilder.addHeader(headerName,headerValue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (headerValueList.size() > 1) {\n  requestBuilder.removeHeader(headerName);\n  for (  String headerValue : headerValueList) {\n    requestBuilder.addHeader(headerName,headerValue);\n  }\n}\n else if (headerValueList.size() == 1) {\n  requestBuilder.header(headerName,headerValueList.get(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 245,
        "startColumnNumber" : 72,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 245,
        "startColumnNumber" : 8,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> pair : headers.entrySet()) {\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 225,
        "startColumnNumber" : 51,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response execute(@NonNull final Request request) throws IOException, ReCaptchaException {\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 252,
        "endColumnNumber" : 70
      },
      "nodeContext" : "requestBuilder.addHeader(headerName,headerValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "okhttp3.Request.Builder"
  }, {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 255,
      "startColumnNumber" : 16,
      "endLineNumber" : 255,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 255,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 73
      },
      "nodeContext" : "requestBuilder.header(headerName,headerValueList.get(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 255,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 74
      },
      "nodeContext" : "requestBuilder.header(headerName,headerValueList.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 254,
        "startColumnNumber" : 52,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestBuilder.header(headerName,headerValueList.get(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 254,
        "startColumnNumber" : 19,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (headerValueList.size() == 1) {\n  requestBuilder.header(headerName,headerValueList.get(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (headerValueList.size() > 1) {\n  requestBuilder.removeHeader(headerName);\n  for (  String headerValue : headerValueList) {\n    requestBuilder.addHeader(headerName,headerValue);\n  }\n}\n else if (headerValueList.size() == 1) {\n  requestBuilder.header(headerName,headerValueList.get(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 245,
        "startColumnNumber" : 72,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 245,
        "startColumnNumber" : 8,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> pair : headers.entrySet()) {\n  final String headerName=pair.getKey();\n  final List<String> headerValueList=pair.getValue();\n  if (headerValueList.size() > 1) {\n    requestBuilder.removeHeader(headerName);\n    for (    String headerValue : headerValueList) {\n      requestBuilder.addHeader(headerName,headerValue);\n    }\n  }\n else   if (headerValueList.size() == 1) {\n    requestBuilder.header(headerName,headerValueList.get(0));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 225,
        "startColumnNumber" : 51,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response execute(@NonNull final Request request) throws IOException, ReCaptchaException {\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 255,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 74
      },
      "nodeContext" : "requestBuilder.header(headerName,headerValueList.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "okhttp3.Request.Builder"
  }, {
    "nodeContext" : "requestBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 260,
      "startColumnNumber" : 57,
      "endLineNumber" : 260,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 260,
        "startColumnNumber" : 57,
        "endLineNumber" : 260,
        "endColumnNumber" : 79
      },
      "nodeContext" : "requestBuilder.build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 260,
        "startColumnNumber" : 42,
        "endLineNumber" : 260,
        "endColumnNumber" : 80
      },
      "nodeContext" : "client.newCall(requestBuilder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 260,
        "startColumnNumber" : 42,
        "endLineNumber" : 260,
        "endColumnNumber" : 90
      },
      "nodeContext" : "client.newCall(requestBuilder.build()).execute()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 260,
        "endColumnNumber" : 90
      },
      "nodeContext" : "response=client.newCall(requestBuilder.build()).execute()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 260,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 225,
        "startColumnNumber" : 51,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 278,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response execute(@NonNull final Request request) throws IOException, ReCaptchaException {\n  final String httpMethod=request.httpMethod();\n  final String url=request.url();\n  final Map<String,List<String>> headers=request.headers();\n  final byte[] dataToSend=request.dataToSend();\n  RequestBody requestBody=null;\n  if (dataToSend != null) {\n    requestBody=RequestBody.create(null,dataToSend);\n  }\n  final okhttp3.Request.Builder requestBuilder=new okhttp3.Request.Builder().method(httpMethod,requestBody).url(url).addHeader(\"User-Agent\",USER_AGENT);\n  String cookies=getCookies(url);\n  if (!cookies.isEmpty()) {\n    requestBuilder.addHeader(\"Cookie\",cookies);\n  }\n  for (  Map.Entry<String,List<String>> pair : headers.entrySet()) {\n    final String headerName=pair.getKey();\n    final List<String> headerValueList=pair.getValue();\n    if (headerValueList.size() > 1) {\n      requestBuilder.removeHeader(headerName);\n      for (      String headerValue : headerValueList) {\n        requestBuilder.addHeader(headerName,headerValue);\n      }\n    }\n else     if (headerValueList.size() == 1) {\n      requestBuilder.header(headerName,headerValueList.get(0));\n    }\n  }\n  final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n  if (response.code() == 429) {\n    response.close();\n    throw new ReCaptchaException(\"reCaptcha Challenge requested\",url);\n  }\n  final ResponseBody body=response.body();\n  String responseBodyToReturn=null;\n  if (body != null) {\n    responseBodyToReturn=body.string();\n  }\n  final String latestUrl=response.request().url().toString();\n  return new Response(response.code(),response.message(),response.headers().toMultimap(),responseBodyToReturn,latestUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 260,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final okhttp3.Response response=client.newCall(requestBuilder.build()).execute();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "okhttp3.Request.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 242,
    "startColumnNumber" : 12,
    "endLineNumber" : 242,
    "endColumnNumber" : 26
  }, {
    "charLength" : 14,
    "startLineNumber" : 250,
    "startColumnNumber" : 16,
    "endLineNumber" : 250,
    "endColumnNumber" : 30
  }, {
    "charLength" : 14,
    "startLineNumber" : 252,
    "startColumnNumber" : 20,
    "endLineNumber" : 252,
    "endColumnNumber" : 34
  }, {
    "charLength" : 14,
    "startLineNumber" : 255,
    "startColumnNumber" : 16,
    "endLineNumber" : 255,
    "endColumnNumber" : 30
  }, {
    "charLength" : 14,
    "startLineNumber" : 260,
    "startColumnNumber" : 57,
    "endLineNumber" : 260,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}