{
  "id" : 13,
  "expression" : "false",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeIsomorphismWithBfsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 94,
      "startColumnNumber" : 59,
      "endLineNumber" : 94,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 57,
        "startColumnNumber" : 34,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10;\n  List<List<Integer>> tree1=createEmptyTree(n);\n  List<List<Integer>> tree2=createEmptyTree(n);\n  List<List<Integer>> tree3=createEmptyTree(n);\n  addUndirectedEdge(tree1,0,1);\n  addUndirectedEdge(tree1,1,3);\n  addUndirectedEdge(tree1,3,5);\n  addUndirectedEdge(tree1,5,7);\n  addUndirectedEdge(tree1,7,8);\n  addUndirectedEdge(tree1,8,9);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,4,3);\n  addUndirectedEdge(tree1,6,5);\n  addUndirectedEdge(tree2,0,1);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,3,5);\n  addUndirectedEdge(tree2,5,6);\n  addUndirectedEdge(tree2,6,8);\n  addUndirectedEdge(tree2,8,9);\n  addUndirectedEdge(tree2,6,7);\n  addUndirectedEdge(tree2,4,3);\n  addUndirectedEdge(tree2,2,1);\n  addUndirectedEdge(tree3,0,1);\n  addUndirectedEdge(tree3,1,8);\n  addUndirectedEdge(tree3,1,6);\n  addUndirectedEdge(tree3,6,4);\n  addUndirectedEdge(tree3,6,5);\n  addUndirectedEdge(tree3,5,3);\n  addUndirectedEdge(tree3,5,7);\n  addUndirectedEdge(tree3,7,2);\n  addUndirectedEdge(tree3,2,9);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n  assertThat(treesAreIsomorphic(tree1,tree3)).isEqualTo(true);\n  assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1424,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSimilarChains(){\n  int n=10;\n  List<List<Integer>> tree1=createEmptyTree(n);\n  List<List<Integer>> tree2=createEmptyTree(n);\n  List<List<Integer>> tree3=createEmptyTree(n);\n  addUndirectedEdge(tree1,0,1);\n  addUndirectedEdge(tree1,1,3);\n  addUndirectedEdge(tree1,3,5);\n  addUndirectedEdge(tree1,5,7);\n  addUndirectedEdge(tree1,7,8);\n  addUndirectedEdge(tree1,8,9);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,4,3);\n  addUndirectedEdge(tree1,6,5);\n  addUndirectedEdge(tree2,0,1);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,3,5);\n  addUndirectedEdge(tree2,5,6);\n  addUndirectedEdge(tree2,6,8);\n  addUndirectedEdge(tree2,8,9);\n  addUndirectedEdge(tree2,6,7);\n  addUndirectedEdge(tree2,4,3);\n  addUndirectedEdge(tree2,2,1);\n  addUndirectedEdge(tree3,0,1);\n  addUndirectedEdge(tree3,1,8);\n  addUndirectedEdge(tree3,1,6);\n  addUndirectedEdge(tree3,6,4);\n  addUndirectedEdge(tree3,6,5);\n  addUndirectedEdge(tree3,5,3);\n  addUndirectedEdge(tree3,5,7);\n  addUndirectedEdge(tree3,7,2);\n  addUndirectedEdge(tree3,2,9);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n  assertThat(treesAreIsomorphic(tree1,tree3)).isEqualTo(true);\n  assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 96,
      "startColumnNumber" : 59,
      "endLineNumber" : 96,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 57,
        "startColumnNumber" : 34,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10;\n  List<List<Integer>> tree1=createEmptyTree(n);\n  List<List<Integer>> tree2=createEmptyTree(n);\n  List<List<Integer>> tree3=createEmptyTree(n);\n  addUndirectedEdge(tree1,0,1);\n  addUndirectedEdge(tree1,1,3);\n  addUndirectedEdge(tree1,3,5);\n  addUndirectedEdge(tree1,5,7);\n  addUndirectedEdge(tree1,7,8);\n  addUndirectedEdge(tree1,8,9);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,4,3);\n  addUndirectedEdge(tree1,6,5);\n  addUndirectedEdge(tree2,0,1);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,3,5);\n  addUndirectedEdge(tree2,5,6);\n  addUndirectedEdge(tree2,6,8);\n  addUndirectedEdge(tree2,8,9);\n  addUndirectedEdge(tree2,6,7);\n  addUndirectedEdge(tree2,4,3);\n  addUndirectedEdge(tree2,2,1);\n  addUndirectedEdge(tree3,0,1);\n  addUndirectedEdge(tree3,1,8);\n  addUndirectedEdge(tree3,1,6);\n  addUndirectedEdge(tree3,6,4);\n  addUndirectedEdge(tree3,6,5);\n  addUndirectedEdge(tree3,5,3);\n  addUndirectedEdge(tree3,5,7);\n  addUndirectedEdge(tree3,7,2);\n  addUndirectedEdge(tree3,2,9);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n  assertThat(treesAreIsomorphic(tree1,tree3)).isEqualTo(true);\n  assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1424,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSimilarChains(){\n  int n=10;\n  List<List<Integer>> tree1=createEmptyTree(n);\n  List<List<Integer>> tree2=createEmptyTree(n);\n  List<List<Integer>> tree3=createEmptyTree(n);\n  addUndirectedEdge(tree1,0,1);\n  addUndirectedEdge(tree1,1,3);\n  addUndirectedEdge(tree1,3,5);\n  addUndirectedEdge(tree1,5,7);\n  addUndirectedEdge(tree1,7,8);\n  addUndirectedEdge(tree1,8,9);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,4,3);\n  addUndirectedEdge(tree1,6,5);\n  addUndirectedEdge(tree2,0,1);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,3,5);\n  addUndirectedEdge(tree2,5,6);\n  addUndirectedEdge(tree2,6,8);\n  addUndirectedEdge(tree2,8,9);\n  addUndirectedEdge(tree2,6,7);\n  addUndirectedEdge(tree2,4,3);\n  addUndirectedEdge(tree2,2,1);\n  addUndirectedEdge(tree3,0,1);\n  addUndirectedEdge(tree3,1,8);\n  addUndirectedEdge(tree3,1,6);\n  addUndirectedEdge(tree3,6,4);\n  addUndirectedEdge(tree3,6,5);\n  addUndirectedEdge(tree3,5,3);\n  addUndirectedEdge(tree3,5,7);\n  addUndirectedEdge(tree3,7,2);\n  addUndirectedEdge(tree3,2,9);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(false);\n  assertThat(treesAreIsomorphic(tree1,tree3)).isEqualTo(true);\n  assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(treesAreIsomorphic(tree2,tree3)).isEqualTo(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 94,
    "startColumnNumber" : 59,
    "endLineNumber" : 94,
    "endColumnNumber" : 64
  }, {
    "charLength" : 5,
    "startLineNumber" : 96,
    "startColumnNumber" : 59,
    "endLineNumber" : 96,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}