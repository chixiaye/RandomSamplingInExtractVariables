{
  "id" : 2,
  "expression" : "newSize",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/maths/CircularConvolutionFFT.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 21,
      "startColumnNumber" : 23,
      "endLineNumber" : 21,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 30
      },
      "nodeContext" : "x.size() < newSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (x.size() < newSize) {\n  int diff=newSize - x.size();\n  for (int i=0; i < diff; i++) {\n    x.add(new FFT.Complex());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 20,
        "startColumnNumber" : 71,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (x.size() < newSize) {\n    int diff=newSize - x.size();\n    for (int i=0; i < diff; i++) {\n      x.add(new FFT.Complex());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method pads the signal with zeros until it reaches the new size.\n * @param x The signal to be padded.\n * @param newSize The new size of the signal.\n */\nprivate static void padding(ArrayList<FFT.Complex> x,int newSize){\n  if (x.size() < newSize) {\n    int diff=newSize - x.size();\n    for (int i=0; i < diff; i++) {\n      x.add(new FFT.Complex());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 30
      },
      "nodeContext" : "x.size() < newSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "newSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 22,
      "startColumnNumber" : 23,
      "endLineNumber" : 22,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 22,
        "startColumnNumber" : 23,
        "endLineNumber" : 22,
        "endColumnNumber" : 41
      },
      "nodeContext" : "newSize - x.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 41
      },
      "nodeContext" : "diff=newSize - x.size()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int diff=newSize - x.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 21,
        "startColumnNumber" : 32,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int diff=newSize - x.size();\n  for (int i=0; i < diff; i++) {\n    x.add(new FFT.Complex());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (x.size() < newSize) {\n  int diff=newSize - x.size();\n  for (int i=0; i < diff; i++) {\n    x.add(new FFT.Complex());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 20,
        "startColumnNumber" : 71,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (x.size() < newSize) {\n    int diff=newSize - x.size();\n    for (int i=0; i < diff; i++) {\n      x.add(new FFT.Complex());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method pads the signal with zeros until it reaches the new size.\n * @param x The signal to be padded.\n * @param newSize The new size of the signal.\n */\nprivate static void padding(ArrayList<FFT.Complex> x,int newSize){\n  if (x.size() < newSize) {\n    int diff=newSize - x.size();\n    for (int i=0; i < diff; i++) {\n      x.add(new FFT.Complex());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int diff=newSize - x.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 21,
    "startColumnNumber" : 23,
    "endLineNumber" : 21,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 22,
    "startColumnNumber" : 23,
    "endLineNumber" : 22,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}