{
  "id" : 6,
  "expression" : "27",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-reactive-modules/spring-5-reactive-2/src/test/java/com/baeldung/backpressure/BackpressureUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "27",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 59,
      "startColumnNumber" : 46,
      "endLineNumber" : 59,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 26
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 26
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10).expectNext(41,42,43,44,45,46,47,48,49,50)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 81,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 27
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10).expectNext(41,42,43,44,45,46,47,48,49,50).verifyComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 28
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10).expectNext(41,42,43,44,45,46,47,48,49,50).verifyComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 84,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1059,
        "startLineNumber" : 37,
        "startColumnNumber" : 65,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flux<Integer> request=Flux.range(1,50);\n  request.subscribe(integer -> LOGGER.debug(String.valueOf(integer)),err -> err.printStackTrace(),() -> LOGGER.debug(\"All 50 items have been successfully processed!!!\"),subscription -> {\n    for (int i=0; i < 5; i++) {\n      LOGGER.debug(\"Requesting the next 10 elements!!!\");\n      subscription.request(10);\n    }\n  }\n);\n  StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10).expectNext(41,42,43,44,45,46,47,48,49,50).verifyComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenRequestingChunks10_thenMessagesAreReceived(){\n  Flux<Integer> request=Flux.range(1,50);\n  request.subscribe(integer -> LOGGER.debug(String.valueOf(integer)),err -> err.printStackTrace(),() -> LOGGER.debug(\"All 50 items have been successfully processed!!!\"),subscription -> {\n    for (int i=0; i < 5; i++) {\n      LOGGER.debug(\"Requesting the next 10 elements!!!\");\n      subscription.request(10);\n    }\n  }\n);\n  StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30).thenRequest(10).expectNext(31,32,33,34,35,36,37,38,39,40).thenRequest(10).expectNext(41,42,43,44,45,46,47,48,49,50).verifyComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StepVerifier.create(request).expectSubscription().thenRequest(10).expectNext(1,2,3,4,5,6,7,8,9,10).thenRequest(10).expectNext(11,12,13,14,15,16,17,18,19,20).thenRequest(10).expectNext(21,22,23,24,25,26,27,28,29,30)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 59,
    "startColumnNumber" : 46,
    "endLineNumber" : 59,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}