{
  "id" : 1,
  "expression" : "JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2))",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/JoinWindowsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 101,
      "startLineNumber" : 215,
      "startColumnNumber" : 12,
      "endLineNumber" : 215,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 19,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 10
      },
      "nodeContext" : "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1581,
        "startLineNumber" : 183,
        "startColumnNumber" : 65,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(9)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 182,
        "startColumnNumber" : 4,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void equalsAndHashcodeShouldBeValidForNegativeCases(){\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(9)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n  verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 6
    },
    "tokenLength" : 12,
    "type" : "org.apache.kafka.streams.kstream.JoinWindows"
  } ],
  "positionList" : [ {
    "charLength" : 101,
    "startLineNumber" : 215,
    "startColumnNumber" : 12,
    "endLineNumber" : 215,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}