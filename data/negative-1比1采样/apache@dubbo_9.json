{
  "id" : 9,
  "expression" : "\"accesslog=true&group=dubbo&version=1.1&generic=true\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericImplFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"accesslog=true&group=dubbo&version=1.1&generic=true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 56,
      "startColumnNumber" : 16,
      "endLineNumber" : 56,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 55,
        "startColumnNumber" : 30,
        "endLineNumber" : 56,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 55,
        "startColumnNumber" : 18,
        "endLineNumber" : 56,
        "endColumnNumber" : 70
      },
      "nodeContext" : "URL.valueOf(\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 70
      },
      "nodeContext" : "url=URL.valueOf(\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 71
      },
      "nodeContext" : "URL url=URL.valueOf(\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 49,
        "startColumnNumber" : 46,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RpcInvocation invocation=new RpcInvocation(\"getPerson\",\"org.apache.dubbo.rpc.support.DemoService\",\"org.apache.dubbo.rpc.support.DemoService:dubbo\",new Class[]{Person.class},new Object[]{new Person(\"dubbo\",10)});\n  URL url=URL.valueOf(\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\");\n  Invoker invoker=Mockito.mock(Invoker.class);\n  Map<String,Object> person=new HashMap<String,Object>();\n  person.put(\"name\",\"dubbo\");\n  person.put(\"age\",10);\n  AppResponse mockRpcResult=new AppResponse(person);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(AsyncRpcResult.newDefaultAsyncResult(mockRpcResult,invocation));\n  when(invoker.getUrl()).thenReturn(url);\n  when(invoker.getInterface()).thenReturn(DemoService.class);\n  Result asyncResult=genericImplFilter.invoke(invoker,invocation);\n  Result result=asyncResult.get();\n  genericImplFilter.onResponse(result,invoker,invocation);\n  Assertions.assertEquals(Person.class,result.getValue().getClass());\n  Assertions.assertEquals(10,((Person)result.getValue()).getAge());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvoke() throws Exception {\n  RpcInvocation invocation=new RpcInvocation(\"getPerson\",\"org.apache.dubbo.rpc.support.DemoService\",\"org.apache.dubbo.rpc.support.DemoService:dubbo\",new Class[]{Person.class},new Object[]{new Person(\"dubbo\",10)});\n  URL url=URL.valueOf(\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\");\n  Invoker invoker=Mockito.mock(Invoker.class);\n  Map<String,Object> person=new HashMap<String,Object>();\n  person.put(\"name\",\"dubbo\");\n  person.put(\"age\",10);\n  AppResponse mockRpcResult=new AppResponse(person);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(AsyncRpcResult.newDefaultAsyncResult(mockRpcResult,invocation));\n  when(invoker.getUrl()).thenReturn(url);\n  when(invoker.getInterface()).thenReturn(DemoService.class);\n  Result asyncResult=genericImplFilter.invoke(invoker,invocation);\n  Result result=asyncResult.get();\n  genericImplFilter.onResponse(result,invoker,invocation);\n  Assertions.assertEquals(Person.class,result.getValue().getClass());\n  Assertions.assertEquals(10,((Person)result.getValue()).getAge());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 55,
        "startColumnNumber" : 30,
        "endLineNumber" : 56,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"test://test:11/org.apache.dubbo.rpc.support.DemoService?\" + \"accesslog=true&group=dubbo&version=1.1&generic=true\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 56,
    "startColumnNumber" : 16,
    "endLineNumber" : 56,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}