{
  "id" : 1,
  "expression" : "b",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/maths/MaxValue.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 26,
      "endLineNumber" : 18,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 18,
        "startColumnNumber" : 19,
        "endLineNumber" : 18,
        "endColumnNumber" : 28
      },
      "nodeContext" : "max(a,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 18,
        "startColumnNumber" : 19,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "max(a,b) == Math.max(a,b)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 14,
        "startColumnNumber" : 39,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int a=rand.nextInt(100) - 50;\n  int b=rand.nextInt(100) - 50;\n  assert=max(a,b) == Math.max(a,b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i <= 100; ++i) {\n  int a=rand.nextInt(100) - 50;\n  int b=rand.nextInt(100) - 50;\n  assert=max(a,b) == Math.max(a,b);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 10,
        "startColumnNumber" : 43,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Random rand=new Random();\n  for (int i=1; i <= 100; ++i) {\n    int a=rand.nextInt(100) - 50;\n    int b=rand.nextInt(100) - 50;\n    assert=max(a,b) == Math.max(a,b);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Driver Code\n */\npublic static void main(String[] args){\n  Random rand=new Random();\n  for (int i=1; i <= 100; ++i) {\n    int a=rand.nextInt(100) - 50;\n    int b=rand.nextInt(100) - 50;\n    assert=max(a,b) == Math.max(a,b);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 44,
      "endLineNumber" : 18,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 18,
        "startColumnNumber" : 32,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Math.max(a,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 18,
        "startColumnNumber" : 19,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "max(a,b) == Math.max(a,b)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 14,
        "startColumnNumber" : 39,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int a=rand.nextInt(100) - 50;\n  int b=rand.nextInt(100) - 50;\n  assert=max(a,b) == Math.max(a,b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i <= 100; ++i) {\n  int a=rand.nextInt(100) - 50;\n  int b=rand.nextInt(100) - 50;\n  assert=max(a,b) == Math.max(a,b);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 10,
        "startColumnNumber" : 43,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Random rand=new Random();\n  for (int i=1; i <= 100; ++i) {\n    int a=rand.nextInt(100) - 50;\n    int b=rand.nextInt(100) - 50;\n    assert=max(a,b) == Math.max(a,b);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Driver Code\n */\npublic static void main(String[] args){\n  Random rand=new Random();\n  for (int i=1; i <= 100; ++i) {\n    int a=rand.nextInt(100) - 50;\n    int b=rand.nextInt(100) - 50;\n    assert=max(a,b) == Math.max(a,b);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assert=max(a,b) == Math.max(a,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 26,
    "endLineNumber" : 18,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 44,
    "endLineNumber" : 18,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}