{
  "id" : 13,
  "expression" : "AUTHORIZATION",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/server/security/PasswordAuthenticator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AUTHORIZATION",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 51,
      "startColumnNumber" : 54,
      "endLineNumber" : 51,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 51,
        "startColumnNumber" : 36,
        "endLineNumber" : 51,
        "endColumnNumber" : 68
      },
      "nodeContext" : "request.getHeader(AUTHORIZATION)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 69
      },
      "nodeContext" : "nullToEmpty(request.getHeader(AUTHORIZATION))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 69
      },
      "nodeContext" : "header=nullToEmpty(request.getHeader(AUTHORIZATION))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 70
      },
      "nodeContext" : "String header=nullToEmpty(request.getHeader(AUTHORIZATION));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String header=nullToEmpty(request.getHeader(AUTHORIZATION));\n  int space=header.indexOf(' ');\n  if ((space < 0) || !header.substring(0,space).equalsIgnoreCase(\"basic\")) {\n    throw needAuthentication(null);\n  }\n  String credentials=decodeCredentials(header.substring(space + 1).trim());\n  List<String> parts=Splitter.on(':').limit(2).splitToList(credentials);\n  if (parts.size() != 2 || parts.stream().anyMatch(String::isEmpty)) {\n    throw new AuthenticationException(\"Malformed decoded credentials\");\n  }\n  String user=parts.get(0);\n  String password=parts.get(1);\n  try {\n    return authenticatorManager.getAuthenticator().createAuthenticatedPrincipal(user,password);\n  }\n catch (  AccessDeniedException e) {\n    throw needAuthentication(e.getMessage());\n  }\ncatch (  RuntimeException e) {\n    throw new RuntimeException(\"Authentication error\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Principal authenticate(HttpServletRequest request) throws AuthenticationException {\n  String header=nullToEmpty(request.getHeader(AUTHORIZATION));\n  int space=header.indexOf(' ');\n  if ((space < 0) || !header.substring(0,space).equalsIgnoreCase(\"basic\")) {\n    throw needAuthentication(null);\n  }\n  String credentials=decodeCredentials(header.substring(space + 1).trim());\n  List<String> parts=Splitter.on(':').limit(2).splitToList(credentials);\n  if (parts.size() != 2 || parts.stream().anyMatch(String::isEmpty)) {\n    throw new AuthenticationException(\"Malformed decoded credentials\");\n  }\n  String user=parts.get(0);\n  String password=parts.get(1);\n  try {\n    return authenticatorManager.getAuthenticator().createAuthenticatedPrincipal(user,password);\n  }\n catch (  AccessDeniedException e) {\n    throw needAuthentication(e.getMessage());\n  }\ncatch (  RuntimeException e) {\n    throw new RuntimeException(\"Authentication error\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 70
      },
      "nodeContext" : "String header=nullToEmpty(request.getHeader(AUTHORIZATION));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 51,
    "startColumnNumber" : 54,
    "endLineNumber" : 51,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}