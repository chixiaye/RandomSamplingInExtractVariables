{
  "id" : 7,
  "expression" : "timeout",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/InterruptionUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timeout",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 119,
      "startColumnNumber" : 41,
      "endLineNumber" : 119,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 119,
        "startColumnNumber" : 28,
        "endLineNumber" : 119,
        "endColumnNumber" : 49
      },
      "nodeContext" : "unit.toNanos(timeout)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 119,
        "startColumnNumber" : 11,
        "endLineNumber" : 119,
        "endColumnNumber" : 49
      },
      "nodeContext" : "remainingNanos=unit.toNanos(timeout)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 119,
        "startColumnNumber" : 6,
        "endLineNumber" : 119,
        "endColumnNumber" : 50
      },
      "nodeContext" : "long remainingNanos=unit.toNanos(timeout);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long remainingNanos=unit.toNanos(timeout);\n  long end=System.nanoTime() + remainingNanos;\n  while (true) {\n    try {\n      NANOSECONDS.timedJoin(thread,remainingNanos);\n      return;\n    }\n catch (    InterruptedException e) {\n      interrupted=true;\n      remainingNanos=end - System.nanoTime();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  long remainingNanos=unit.toNanos(timeout);\n  long end=System.nanoTime() + remainingNanos;\n  while (true) {\n    try {\n      NANOSECONDS.timedJoin(thread,remainingNanos);\n      return;\n    }\n catch (    InterruptedException e) {\n      interrupted=true;\n      remainingNanos=end - System.nanoTime();\n    }\n  }\n}\n  finally {\n  if (interrupted) {\n    Thread.currentThread().interrupt();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 116,
        "startColumnNumber" : 86,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean interrupted=false;\n  try {\n    long remainingNanos=unit.toNanos(timeout);\n    long end=System.nanoTime() + remainingNanos;\n    while (true) {\n      try {\n        NANOSECONDS.timedJoin(thread,remainingNanos);\n        return;\n      }\n catch (      InterruptedException e) {\n        interrupted=true;\n        remainingNanos=end - System.nanoTime();\n      }\n    }\n  }\n  finally {\n    if (interrupted) {\n      Thread.currentThread().interrupt();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void joinUninterruptibly(Thread thread,long timeout,TimeUnit unit){\n  boolean interrupted=false;\n  try {\n    long remainingNanos=unit.toNanos(timeout);\n    long end=System.nanoTime() + remainingNanos;\n    while (true) {\n      try {\n        NANOSECONDS.timedJoin(thread,remainingNanos);\n        return;\n      }\n catch (      InterruptedException e) {\n        interrupted=true;\n        remainingNanos=end - System.nanoTime();\n      }\n    }\n  }\n  finally {\n    if (interrupted) {\n      Thread.currentThread().interrupt();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 119,
        "startColumnNumber" : 6,
        "endLineNumber" : 119,
        "endColumnNumber" : 50
      },
      "nodeContext" : "long remainingNanos=unit.toNanos(timeout);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 119,
    "startColumnNumber" : 41,
    "endLineNumber" : 119,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}