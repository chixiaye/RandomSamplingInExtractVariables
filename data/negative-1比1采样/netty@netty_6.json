{
  "id" : 6,
  "expression" : "checksum",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/main/java/io/netty/handler/codec/compression/CompressionUtil.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "checksum",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 27,
      "startColumnNumber" : 8,
      "endLineNumber" : 27,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 24
      },
      "nodeContext" : "checksum.reset()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 25
      },
      "nodeContext" : "checksum.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 26,
        "startColumnNumber" : 99,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void checkChecksum(ByteBufChecksum checksum,ByteBuf uncompressed,int currentChecksum){\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 25
      },
      "nodeContext" : "checksum.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.compression.ByteBufChecksum"
  }, {
    "nodeContext" : "checksum",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 28,
      "startColumnNumber" : 8,
      "endLineNumber" : 28,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 73
      },
      "nodeContext" : "checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 74
      },
      "nodeContext" : "checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 26,
        "startColumnNumber" : 99,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void checkChecksum(ByteBufChecksum checksum,ByteBuf uncompressed,int currentChecksum){\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 73
      },
      "nodeContext" : "checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.compression.ByteBufChecksum"
  }, {
    "nodeContext" : "checksum",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 31,
      "startColumnNumber" : 41,
      "endLineNumber" : 31,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 31,
        "startColumnNumber" : 41,
        "endLineNumber" : 31,
        "endColumnNumber" : 60
      },
      "nodeContext" : "checksum.getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 31,
        "startColumnNumber" : 35,
        "endLineNumber" : 31,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(int)checksum.getValue()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 31,
        "startColumnNumber" : 18,
        "endLineNumber" : 31,
        "endColumnNumber" : 60
      },
      "nodeContext" : "checksumResult=(int)checksum.getValue()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final int checksumResult=(int)checksum.getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 26,
        "startColumnNumber" : 99,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void checkChecksum(ByteBufChecksum checksum,ByteBuf uncompressed,int currentChecksum){\n  checksum.reset();\n  checksum.update(uncompressed,uncompressed.readerIndex(),uncompressed.readableBytes());\n  final int checksumResult=(int)checksum.getValue();\n  if (checksumResult != currentChecksum) {\n    throw new DecompressionException(String.format(\"stream corrupted: mismatching checksum: %d (expected: %d)\",checksumResult,currentChecksum));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final int checksumResult=(int)checksum.getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.compression.ByteBufChecksum"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 27,
    "startColumnNumber" : 8,
    "endLineNumber" : 27,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 28,
    "startColumnNumber" : 8,
    "endLineNumber" : 28,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 31,
    "startColumnNumber" : 41,
    "endLineNumber" : 31,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}