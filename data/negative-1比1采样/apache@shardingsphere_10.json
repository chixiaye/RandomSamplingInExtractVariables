{
  "id" : 10,
  "expression" : "writeDataSourceName",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/test/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/TransactionRoundRobinReadQueryLoadBalanceAlgorithmTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "writeDataSourceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 39,
      "startColumnNumber" : 60,
      "endLineNumber" : 39,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 110
      },
      "nodeContext" : "loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 136
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 32,
        "startColumnNumber" : 38,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertGetDataSource(){\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "writeDataSourceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 40,
      "startColumnNumber" : 60,
      "endLineNumber" : 40,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 110
      },
      "nodeContext" : "loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 136
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 32,
        "startColumnNumber" : 38,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertGetDataSource(){\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "writeDataSourceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 41,
      "startColumnNumber" : 60,
      "endLineNumber" : 41,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 110
      },
      "nodeContext" : "loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 136
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 32,
        "startColumnNumber" : 38,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertGetDataSource(){\n  String writeDataSourceName=\"test_write_ds\";\n  String readDataSourceName1=\"test_read_ds_1\";\n  String readDataSourceName2=\"test_read_ds_2\";\n  TransactionRoundRobinReadQueryLoadBalanceAlgorithm loadBalanceAlgorithm=new TransactionRoundRobinReadQueryLoadBalanceAlgorithm();\n  List<String> readDataSourceNames=Arrays.asList(readDataSourceName1,readDataSourceName2);\n  TransactionConnectionContext context=new TransactionConnectionContext();\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName2));\n  assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 137
      },
      "nodeContext" : "assertThat(loadBalanceAlgorithm.getDataSource(\"ds\",writeDataSourceName,readDataSourceNames,context),is(readDataSourceName1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 39,
    "startColumnNumber" : 60,
    "endLineNumber" : 39,
    "endColumnNumber" : 79
  }, {
    "charLength" : 19,
    "startLineNumber" : 40,
    "startColumnNumber" : 60,
    "endLineNumber" : 40,
    "endColumnNumber" : 79
  }, {
    "charLength" : 19,
    "startLineNumber" : 41,
    "startColumnNumber" : 60,
    "endLineNumber" : 41,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}