{
  "id" : 13,
  "expression" : "\"some\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/image/json/ContainerConfigurationTemplateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"some\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 50,
      "startColumnNumber" : 61,
      "endLineNumber" : 50,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 50,
        "startColumnNumber" : 47,
        "endLineNumber" : 50,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Arrays.asList(\"some\",\"entrypoint\",\"command\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "containerConfigJson.setContainerEntrypoint(Arrays.asList(\"some\",\"entrypoint\",\"command\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "containerConfigJson.setContainerEntrypoint(Arrays.asList(\"some\",\"entrypoint\",\"command\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1438,
        "startLineNumber" : 40,
        "startColumnNumber" : 83,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path jsonFile=Paths.get(Resources.getResource(\"json/containerconfig.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  ContainerConfigurationTemplate containerConfigJson=new ContainerConfigurationTemplate();\n  containerConfigJson.setCreated(\"1970-01-01T00:00:20Z\");\n  containerConfigJson.setContainerEnvironment(Arrays.asList(\"VAR1=VAL1\",\"VAR2=VAL2\"));\n  containerConfigJson.setContainerEntrypoint(Arrays.asList(\"some\",\"entrypoint\",\"command\"));\n  containerConfigJson.setContainerCmd(Arrays.asList(\"arg1\",\"arg2\"));\n  containerConfigJson.setContainerExposedPorts(ImmutableSortedMap.of(\"1000/tcp\",ImmutableMap.of(),\"2000/tcp\",ImmutableMap.of(),\"3000/udp\",ImmutableMap.of()));\n  containerConfigJson.setContainerLabels(ImmutableMap.of(\"key1\",\"value1\",\"key2\",\"value2\"));\n  containerConfigJson.addLayerDiffId(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(containerConfigJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1527,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testToJson() throws IOException, URISyntaxException, DigestException {\n  Path jsonFile=Paths.get(Resources.getResource(\"json/containerconfig.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  ContainerConfigurationTemplate containerConfigJson=new ContainerConfigurationTemplate();\n  containerConfigJson.setCreated(\"1970-01-01T00:00:20Z\");\n  containerConfigJson.setContainerEnvironment(Arrays.asList(\"VAR1=VAL1\",\"VAR2=VAL2\"));\n  containerConfigJson.setContainerEntrypoint(Arrays.asList(\"some\",\"entrypoint\",\"command\"));\n  containerConfigJson.setContainerCmd(Arrays.asList(\"arg1\",\"arg2\"));\n  containerConfigJson.setContainerExposedPorts(ImmutableSortedMap.of(\"1000/tcp\",ImmutableMap.of(),\"2000/tcp\",ImmutableMap.of(),\"3000/udp\",ImmutableMap.of()));\n  containerConfigJson.setContainerLabels(ImmutableMap.of(\"key1\",\"value1\",\"key2\",\"value2\"));\n  containerConfigJson.addLayerDiffId(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(containerConfigJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "containerConfigJson.setContainerEntrypoint(Arrays.asList(\"some\",\"entrypoint\",\"command\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 50,
    "startColumnNumber" : 61,
    "endLineNumber" : 50,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}