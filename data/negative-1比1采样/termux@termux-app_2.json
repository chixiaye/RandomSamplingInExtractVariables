{
  "id" : 2,
  "expression" : "Integer.parseInt(gString,16)",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/terminal/TerminalColors.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.parseInt(gString,16)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 62,
      "startColumnNumber" : 27,
      "endLineNumber" : 62,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 27,
        "endLineNumber" : 62,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Integer.parseInt(gString,16) * mult",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 62,
        "startColumnNumber" : 26,
        "endLineNumber" : 62,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(Integer.parseInt(gString,16) * mult)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 62,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(int)(Integer.parseInt(gString,16) * mult)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 64
      },
      "nodeContext" : "g=(int)(Integer.parseInt(gString,16) * mult)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 65
      },
      "nodeContext" : "int g=(int)(Integer.parseInt(gString,16) * mult);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1503,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int skipInitial, skipBetween;\n  if (c.charAt(0) == '#') {\n    skipInitial=1;\n    skipBetween=0;\n  }\n else   if (c.startsWith(\"rgb:\")) {\n    skipInitial=4;\n    skipBetween=1;\n  }\n else {\n    return 0;\n  }\n  int charsForColors=c.length() - skipInitial - 2 * skipBetween;\n  if (charsForColors % 3 != 0)   return 0;\n  int componentLength=charsForColors / 3;\n  double mult=255 / (Math.pow(2,componentLength * 4) - 1);\n  int currentPosition=skipInitial;\n  String rString=c.substring(currentPosition,currentPosition + componentLength);\n  currentPosition+=componentLength + skipBetween;\n  String gString=c.substring(currentPosition,currentPosition + componentLength);\n  currentPosition+=componentLength + skipBetween;\n  String bString=c.substring(currentPosition,currentPosition + componentLength);\n  int r=(int)(Integer.parseInt(rString,16) * mult);\n  int g=(int)(Integer.parseInt(gString,16) * mult);\n  int b=(int)(Integer.parseInt(bString,16) * mult);\n  return 0xFF << 24 | r << 16 | g << 8 | b;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1601,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  int skipInitial, skipBetween;\n  if (c.charAt(0) == '#') {\n    skipInitial=1;\n    skipBetween=0;\n  }\n else   if (c.startsWith(\"rgb:\")) {\n    skipInitial=4;\n    skipBetween=1;\n  }\n else {\n    return 0;\n  }\n  int charsForColors=c.length() - skipInitial - 2 * skipBetween;\n  if (charsForColors % 3 != 0)   return 0;\n  int componentLength=charsForColors / 3;\n  double mult=255 / (Math.pow(2,componentLength * 4) - 1);\n  int currentPosition=skipInitial;\n  String rString=c.substring(currentPosition,currentPosition + componentLength);\n  currentPosition+=componentLength + skipBetween;\n  String gString=c.substring(currentPosition,currentPosition + componentLength);\n  currentPosition+=componentLength + skipBetween;\n  String bString=c.substring(currentPosition,currentPosition + componentLength);\n  int r=(int)(Integer.parseInt(rString,16) * mult);\n  int g=(int)(Integer.parseInt(gString,16) * mult);\n  int b=(int)(Integer.parseInt(bString,16) * mult);\n  return 0xFF << 24 | r << 16 | g << 8 | b;\n}\n catch (NumberFormatException|IndexOutOfBoundsException e) {\n  return 0;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1617,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    int skipInitial, skipBetween;\n    if (c.charAt(0) == '#') {\n      skipInitial=1;\n      skipBetween=0;\n    }\n else     if (c.startsWith(\"rgb:\")) {\n      skipInitial=4;\n      skipBetween=1;\n    }\n else {\n      return 0;\n    }\n    int charsForColors=c.length() - skipInitial - 2 * skipBetween;\n    if (charsForColors % 3 != 0)     return 0;\n    int componentLength=charsForColors / 3;\n    double mult=255 / (Math.pow(2,componentLength * 4) - 1);\n    int currentPosition=skipInitial;\n    String rString=c.substring(currentPosition,currentPosition + componentLength);\n    currentPosition+=componentLength + skipBetween;\n    String gString=c.substring(currentPosition,currentPosition + componentLength);\n    currentPosition+=componentLength + skipBetween;\n    String bString=c.substring(currentPosition,currentPosition + componentLength);\n    int r=(int)(Integer.parseInt(rString,16) * mult);\n    int g=(int)(Integer.parseInt(gString,16) * mult);\n    int b=(int)(Integer.parseInt(bString,16) * mult);\n    return 0xFF << 24 | r << 16 | g << 8 | b;\n  }\n catch (  NumberFormatException|IndexOutOfBoundsException e) {\n    return 0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1871,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Parse color according to http://manpages.ubuntu.com/manpages/intrepid/man3/XQueryColor.3.html <p/> Highest bit is set if successful, so return value is 0xFF${R}${G}${B}. Return 0 if failed.\n */\nstatic int parse(String c){\n  try {\n    int skipInitial, skipBetween;\n    if (c.charAt(0) == '#') {\n      skipInitial=1;\n      skipBetween=0;\n    }\n else     if (c.startsWith(\"rgb:\")) {\n      skipInitial=4;\n      skipBetween=1;\n    }\n else {\n      return 0;\n    }\n    int charsForColors=c.length() - skipInitial - 2 * skipBetween;\n    if (charsForColors % 3 != 0)     return 0;\n    int componentLength=charsForColors / 3;\n    double mult=255 / (Math.pow(2,componentLength * 4) - 1);\n    int currentPosition=skipInitial;\n    String rString=c.substring(currentPosition,currentPosition + componentLength);\n    currentPosition+=componentLength + skipBetween;\n    String gString=c.substring(currentPosition,currentPosition + componentLength);\n    currentPosition+=componentLength + skipBetween;\n    String bString=c.substring(currentPosition,currentPosition + componentLength);\n    int r=(int)(Integer.parseInt(rString,16) * mult);\n    int g=(int)(Integer.parseInt(gString,16) * mult);\n    int b=(int)(Integer.parseInt(bString,16) * mult);\n    return 0xFF << 24 | r << 16 | g << 8 | b;\n  }\n catch (  NumberFormatException|IndexOutOfBoundsException e) {\n    return 0;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 65
      },
      "nodeContext" : "int g=(int)(Integer.parseInt(gString,16) * mult);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 62,
    "startColumnNumber" : 27,
    "endLineNumber" : 62,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}