{
  "id" : 3,
  "expression" : "map",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/test/java/com/thealgorithms/datastructures/hashmap/hashing/GenericHashMapUsingArrayTest.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 11,
      "startColumnNumber" : 8,
      "endLineNumber" : 11,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 11,
        "startColumnNumber" : 8,
        "endLineNumber" : 11,
        "endColumnNumber" : 39
      },
      "nodeContext" : "map.put(\"USA\",\"Washington DC\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 11,
        "startColumnNumber" : 8,
        "endLineNumber" : 11,
        "endColumnNumber" : 40
      },
      "nodeContext" : "map.put(\"USA\",\"Washington DC\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 11,
        "startColumnNumber" : 8,
        "endLineNumber" : 11,
        "endColumnNumber" : 40
      },
      "nodeContext" : "map.put(\"USA\",\"Washington DC\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 12,
      "startColumnNumber" : 8,
      "endLineNumber" : 12,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 37
      },
      "nodeContext" : "map.put(\"Nepal\",\"Kathmandu\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"Nepal\",\"Kathmandu\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"Nepal\",\"Kathmandu\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 13,
      "startColumnNumber" : 8,
      "endLineNumber" : 13,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 37
      },
      "nodeContext" : "map.put(\"India\",\"New Delhi\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"India\",\"New Delhi\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"India\",\"New Delhi\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 14,
      "startColumnNumber" : 8,
      "endLineNumber" : 14,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 38
      },
      "nodeContext" : "map.put(\"Australia\",\"Sydney\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 39
      },
      "nodeContext" : "map.put(\"Australia\",\"Sydney\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 39
      },
      "nodeContext" : "map.put(\"Australia\",\"Sydney\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 15,
      "startColumnNumber" : 22,
      "endLineNumber" : 15,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertNotNull(map)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertNotNull(map);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertNotNull(map);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 16,
      "startColumnNumber" : 24,
      "endLineNumber" : 16,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 16,
        "startColumnNumber" : 24,
        "endLineNumber" : 16,
        "endColumnNumber" : 34
      },
      "nodeContext" : "map.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(4,map.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertEquals(4,map.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertEquals(4,map.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 17,
      "startColumnNumber" : 34,
      "endLineNumber" : 17,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 17,
        "startColumnNumber" : 34,
        "endLineNumber" : 17,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.get(\"Nepal\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(\"Kathmandu\",map.get(\"Nepal\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 18,
      "startColumnNumber" : 31,
      "endLineNumber" : 18,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 18,
        "startColumnNumber" : 31,
        "endLineNumber" : 18,
        "endColumnNumber" : 51
      },
      "nodeContext" : "map.get(\"Australia\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"Sydney\",map.get(\"Australia\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"Sydney\",map.get(\"Australia\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 9,
        "startColumnNumber" : 72,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings(){\n  GenericHashMapUsingArray<String,String> map=new GenericHashMapUsingArray<>();\n  map.put(\"USA\",\"Washington DC\");\n  map.put(\"Nepal\",\"Kathmandu\");\n  map.put(\"India\",\"New Delhi\");\n  map.put(\"Australia\",\"Sydney\");\n  assertNotNull(map);\n  assertEquals(4,map.size());\n  assertEquals(\"Kathmandu\",map.get(\"Nepal\"));\n  assertEquals(\"Sydney\",map.get(\"Australia\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"Sydney\",map.get(\"Australia\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 11,
    "startColumnNumber" : 8,
    "endLineNumber" : 11,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 12,
    "startColumnNumber" : 8,
    "endLineNumber" : 12,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 13,
    "startColumnNumber" : 8,
    "endLineNumber" : 13,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 14,
    "startColumnNumber" : 8,
    "endLineNumber" : 14,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 15,
    "startColumnNumber" : 22,
    "endLineNumber" : 15,
    "endColumnNumber" : 25
  }, {
    "charLength" : 3,
    "startLineNumber" : 16,
    "startColumnNumber" : 24,
    "endLineNumber" : 16,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 17,
    "startColumnNumber" : 34,
    "endLineNumber" : 17,
    "endColumnNumber" : 37
  }, {
    "charLength" : 3,
    "startLineNumber" : 18,
    "startColumnNumber" : 31,
    "endLineNumber" : 18,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  } ]
}