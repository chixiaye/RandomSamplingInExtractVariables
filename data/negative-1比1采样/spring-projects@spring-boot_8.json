{
  "id" : 8,
  "expression" : "\"host[0].name\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/DefaultPropertyMapperTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"host[0].name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 42,
      "startColumnNumber" : 29,
      "endLineNumber" : 42,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 42,
        "startColumnNumber" : 13,
        "endLineNumber" : 42,
        "endColumnNumber" : 44
      },
      "nodeContext" : "namesFromString(\"host[0].name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 37,
        "startColumnNumber" : 67,
        "endLineNumber" : 50,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertThat(namesFromString(\"server\")).containsExactly(\"server\");\n  assertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n  assertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n  assertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n  assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n  assertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n  assertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n  assertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n  assertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 36,
        "startColumnNumber" : 1,
        "endLineNumber" : 50,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void mapFromStringShouldReturnBestGuess() throws Exception {\n  assertThat(namesFromString(\"server\")).containsExactly(\"server\");\n  assertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n  assertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n  assertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n  assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n  assertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n  assertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n  assertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n  assertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"host[0].name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 42,
      "startColumnNumber" : 62,
      "endLineNumber" : 42,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 37,
        "startColumnNumber" : 67,
        "endLineNumber" : 50,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertThat(namesFromString(\"server\")).containsExactly(\"server\");\n  assertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n  assertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n  assertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n  assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n  assertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n  assertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n  assertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n  assertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 36,
        "startColumnNumber" : 1,
        "endLineNumber" : 50,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void mapFromStringShouldReturnBestGuess() throws Exception {\n  assertThat(namesFromString(\"server\")).containsExactly(\"server\");\n  assertThat(namesFromString(\"server.port\")).containsExactly(\"server.port\");\n  assertThat(namesFromString(\"host[0]\")).containsExactly(\"host[0]\");\n  assertThat(namesFromString(\"host[0][1]\")).containsExactly(\"host[0][1]\");\n  assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n  assertThat(namesFromString(\"host.f00.name\")).containsExactly(\"host.f00.name\");\n  assertThat(namesFromString(\"my.host-name\")).containsExactly(\"my.host-name\");\n  assertThat(namesFromString(\"my.hostName\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"my.HOST_NAME\")).containsExactly(\"my.hostname\");\n  assertThat(namesFromString(\"s[!@#$%^&*()=+]e-rVeR\")).containsExactly(\"s[!@#$%^&*()=+].e-rver\");\n  assertThat(namesFromString(\"host[FOO].name\")).containsExactly(\"host[FOO].name\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(namesFromString(\"host[0].name\")).containsExactly(\"host[0].name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 42,
    "startColumnNumber" : 29,
    "endLineNumber" : 42,
    "endColumnNumber" : 43
  }, {
    "charLength" : 14,
    "startLineNumber" : 42,
    "startColumnNumber" : 62,
    "endLineNumber" : 42,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}