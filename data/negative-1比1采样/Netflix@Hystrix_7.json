{
  "id" : 7,
  "expression" : "SampleDataHolder2.data[i][1]",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/util/HystrixRollingPercentileTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SampleDataHolder2.data[i][1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 203,
      "startColumnNumber" : 26,
      "endLineNumber" : 203,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 203,
        "startColumnNumber" : 16,
        "endLineNumber" : 203,
        "endColumnNumber" : 54
      },
      "nodeContext" : "latency=SampleDataHolder2.data[i][1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 55
      },
      "nodeContext" : "int latency=SampleDataHolder2.data[i][1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 201,
        "startColumnNumber" : 64,
        "endLineNumber" : 207,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int timeInMillisecondsSinceStart=SampleDataHolder2.data[i][0];\n  int latency=SampleDataHolder2.data[i][1];\n  time.increment(timeInMillisecondsSinceStart - previousTime);\n  previousTime=timeInMillisecondsSinceStart;\n  p.addValue(latency);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 207,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < SampleDataHolder2.data.length; i++) {\n  int timeInMillisecondsSinceStart=SampleDataHolder2.data[i][0];\n  int latency=SampleDataHolder2.data[i][1];\n  time.increment(timeInMillisecondsSinceStart - previousTime);\n  previousTime=timeInMillisecondsSinceStart;\n  p.addValue(latency);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 196,
        "startColumnNumber" : 42,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"\\n\\n***************************** testSampleDataOverTime2 \\n\");\n  MockedTime time=new MockedTime();\n  int previousTime=0;\n  HystrixRollingPercentile p=new HystrixRollingPercentile(time,timeInMilliseconds,numberOfBuckets,bucketDataLength,enabled);\n  for (int i=0; i < SampleDataHolder2.data.length; i++) {\n    int timeInMillisecondsSinceStart=SampleDataHolder2.data[i][0];\n    int latency=SampleDataHolder2.data[i][1];\n    time.increment(timeInMillisecondsSinceStart - previousTime);\n    previousTime=timeInMillisecondsSinceStart;\n    p.addValue(latency);\n  }\n  System.out.println(\"0.01: \" + p.getPercentile(0.01));\n  System.out.println(\"Median: \" + p.getPercentile(50));\n  System.out.println(\"90th: \" + p.getPercentile(90));\n  System.out.println(\"99th: \" + p.getPercentile(99));\n  System.out.println(\"99.5th: \" + p.getPercentile(99.5));\n  System.out.println(\"99.99: \" + p.getPercentile(99.99));\n  if (p.getPercentile(50) > 90 || p.getPercentile(50) < 50) {\n    fail(\"We expect around 60-70 but got: \" + p.getPercentile(50));\n  }\n  if (p.getPercentile(99) < 400) {\n    fail(\"We expect to see some high values over 400 but got: \" + p.getPercentile(99));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSampleDataOverTime2(){\n  System.out.println(\"\\n\\n***************************** testSampleDataOverTime2 \\n\");\n  MockedTime time=new MockedTime();\n  int previousTime=0;\n  HystrixRollingPercentile p=new HystrixRollingPercentile(time,timeInMilliseconds,numberOfBuckets,bucketDataLength,enabled);\n  for (int i=0; i < SampleDataHolder2.data.length; i++) {\n    int timeInMillisecondsSinceStart=SampleDataHolder2.data[i][0];\n    int latency=SampleDataHolder2.data[i][1];\n    time.increment(timeInMillisecondsSinceStart - previousTime);\n    previousTime=timeInMillisecondsSinceStart;\n    p.addValue(latency);\n  }\n  System.out.println(\"0.01: \" + p.getPercentile(0.01));\n  System.out.println(\"Median: \" + p.getPercentile(50));\n  System.out.println(\"90th: \" + p.getPercentile(90));\n  System.out.println(\"99th: \" + p.getPercentile(99));\n  System.out.println(\"99.5th: \" + p.getPercentile(99.5));\n  System.out.println(\"99.99: \" + p.getPercentile(99.99));\n  if (p.getPercentile(50) > 90 || p.getPercentile(50) < 50) {\n    fail(\"We expect around 60-70 but got: \" + p.getPercentile(50));\n  }\n  if (p.getPercentile(99) < 400) {\n    fail(\"We expect to see some high values over 400 but got: \" + p.getPercentile(99));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 55
      },
      "nodeContext" : "int latency=SampleDataHolder2.data[i][1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 203,
    "startColumnNumber" : 26,
    "endLineNumber" : 203,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}