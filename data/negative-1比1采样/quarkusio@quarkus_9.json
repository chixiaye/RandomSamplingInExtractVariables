{
  "id" : 9,
  "expression" : "revEntity == null",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/hibernate-envers/deployment/src/test/java/io/quarkus/hibernate/orm/envers/EnversTestStoreDataAtDeleteResource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "revEntity == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 51,
      "startColumnNumber" : 20,
      "endLineNumber" : 51,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (revEntity == null) {\n  throw new IllegalStateException(\"failed to find delete revision\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 47,
        "startColumnNumber" : 46,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(revision);\n  MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n  if (revEntity == null) {\n    throw new IllegalStateException(\"failed to find delete revision\");\n  }\n  if (!NAME.equals(revEntity.getName())) {\n    throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Number revision : revisions) {\n  System.out.println(revision);\n  MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n  if (revEntity == null) {\n    throw new IllegalStateException(\"failed to find delete revision\");\n  }\n  if (!NAME.equals(revEntity.getName())) {\n    throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1332,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  transaction.begin();\n  MyAuditedEntity entity=new MyAuditedEntity();\n  entity.setName(NAME);\n  em.persist(entity);\n  transaction.commit();\n  transaction.begin();\n  em.remove(em.find(MyAuditedEntity.class,entity.getId()));\n  em.flush();\n  transaction.commit();\n  AuditReader auditReader=AuditReaderFactory.get(em);\n  List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n  if (revisions.size() != 2) {\n    throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n  }\n  for (  Number revision : revisions) {\n    System.out.println(revision);\n    MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n    if (revEntity == null) {\n      throw new IllegalStateException(\"failed to find delete revision\");\n    }\n    if (!NAME.equals(revEntity.getName())) {\n      throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n    }\n  }\n  return \"OK\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  transaction.begin();\n  MyAuditedEntity entity=new MyAuditedEntity();\n  entity.setName(NAME);\n  em.persist(entity);\n  transaction.commit();\n  transaction.begin();\n  em.remove(em.find(MyAuditedEntity.class,entity.getId()));\n  em.flush();\n  transaction.commit();\n  AuditReader auditReader=AuditReaderFactory.get(em);\n  List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n  if (revisions.size() != 2) {\n    throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n  }\n  for (  Number revision : revisions) {\n    System.out.println(revision);\n    MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n    if (revEntity == null) {\n      throw new IllegalStateException(\"failed to find delete revision\");\n    }\n    if (!NAME.equals(revEntity.getName())) {\n      throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n    }\n  }\n  return \"OK\";\n}\n catch (Exception exception) {\n  return exception.getMessage();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1435,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    transaction.begin();\n    MyAuditedEntity entity=new MyAuditedEntity();\n    entity.setName(NAME);\n    em.persist(entity);\n    transaction.commit();\n    transaction.begin();\n    em.remove(em.find(MyAuditedEntity.class,entity.getId()));\n    em.flush();\n    transaction.commit();\n    AuditReader auditReader=AuditReaderFactory.get(em);\n    List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n    if (revisions.size() != 2) {\n      throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n    }\n    for (    Number revision : revisions) {\n      System.out.println(revision);\n      MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n      if (revEntity == null) {\n        throw new IllegalStateException(\"failed to find delete revision\");\n      }\n      if (!NAME.equals(revEntity.getName())) {\n        throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n      }\n    }\n    return \"OK\";\n  }\n catch (  Exception exception) {\n    return exception.getMessage();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@DELETE public String delete(){\n  try {\n    transaction.begin();\n    MyAuditedEntity entity=new MyAuditedEntity();\n    entity.setName(NAME);\n    em.persist(entity);\n    transaction.commit();\n    transaction.begin();\n    em.remove(em.find(MyAuditedEntity.class,entity.getId()));\n    em.flush();\n    transaction.commit();\n    AuditReader auditReader=AuditReaderFactory.get(em);\n    List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n    if (revisions.size() != 2) {\n      throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n    }\n    for (    Number revision : revisions) {\n      System.out.println(revision);\n      MyAuditedEntity revEntity=auditReader.find(MyAuditedEntity.class,MyAuditedEntity.class.getName(),entity.getId(),revision,true);\n      if (revEntity == null) {\n        throw new IllegalStateException(\"failed to find delete revision\");\n      }\n      if (!NAME.equals(revEntity.getName())) {\n        throw new IllegalStateException(\"revision listener failed to persist data on delete\");\n      }\n    }\n    return \"OK\";\n  }\n catch (  Exception exception) {\n    return exception.getMessage();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (revEntity == null) {\n  throw new IllegalStateException(\"failed to find delete revision\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 51,
    "startColumnNumber" : 20,
    "endLineNumber" : 51,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}