{
  "id" : 6,
  "expression" : "config.getMessageTimeout().toNanos()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/main/java/zipkin2/server/internal/brave/ZipkinSelfTracingConfiguration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config.getMessageTimeout().toNanos()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 62,
      "startColumnNumber" : 22,
      "endLineNumber" : 62,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 51,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 81
      },
      "nodeContext" : "AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n  @Override public void run(){\n    RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n    runnable.run();\n  }\n  @Override public String toString(){\n    return runnable.toString();\n  }\n}\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 51,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 51
      },
      "nodeContext" : "AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n  @Override public void run(){\n    RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n    runnable.run();\n  }\n  @Override public String toString(){\n    return runnable.toString();\n  }\n}\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS).metrics(new ReporterMetricsAdapter(factory))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 51,
        "startColumnNumber" : 11,
        "endLineNumber" : 64,
        "endColumnNumber" : 14
      },
      "nodeContext" : "AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n  @Override public void run(){\n    RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n    runnable.run();\n  }\n  @Override public String toString(){\n    return runnable.toString();\n  }\n}\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS).metrics(new ReporterMetricsAdapter(factory)).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 65,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 15
      },
      "nodeContext" : "return AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n  @Override public void run(){\n    RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n    runnable.run();\n  }\n  @Override public String toString(){\n    return runnable.toString();\n  }\n}\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS).metrics(new ReporterMetricsAdapter(factory)).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 66,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 50,
        "startColumnNumber" : 91,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n    @Override public void run(){\n      RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n      runnable.run();\n    }\n    @Override public String toString(){\n      return runnable.toString();\n    }\n  }\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS).metrics(new ReporterMetricsAdapter(factory)).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Configuration for how to buffer spans into messages for Zipkin \n */\n@Bean AsyncZipkinSpanHandler reporter(BeanFactory factory,SelfTracingProperties config){\n  return AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n    @Override public void run(){\n      RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n      runnable.run();\n    }\n    @Override public String toString(){\n      return runnable.toString();\n    }\n  }\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS).metrics(new ReporterMetricsAdapter(factory)).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 51,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 81
      },
      "nodeContext" : "AsyncZipkinSpanHandler.newBuilder(new LocalSender(factory)).threadFactory((runnable) -> new Thread(new Runnable(){\n  @Override public void run(){\n    RequestContextCurrentTraceContext.setCurrentThreadNotRequestThread(true);\n    runnable.run();\n  }\n  @Override public String toString(){\n    return runnable.toString();\n  }\n}\n)).messageTimeout(config.getMessageTimeout().toNanos(),TimeUnit.NANOSECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 11
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 62,
    "startColumnNumber" : 22,
    "endLineNumber" : 62,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}