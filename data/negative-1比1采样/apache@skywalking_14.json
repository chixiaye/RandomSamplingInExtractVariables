{
  "id" : 14,
  "expression" : "ServiceManager.INSTANCE.findService(SamplingService.class)",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ServiceManager.INSTANCE.findService(SamplingService.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 58,
      "startLineNumber" : 101,
      "startColumnNumber" : 46,
      "endLineNumber" : 101,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 104
      },
      "nodeContext" : "samplingService=ServiceManager.INSTANCE.findService(SamplingService.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 105
      },
      "nodeContext" : "SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 100,
        "startColumnNumber" : 50,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n  samplingService.forceSampled();\n  context=getOrCreate(operationName,true);\n  span=context.createEntrySpan(operationName);\n  context.extract(carrier);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (carrier != null && carrier.isValid()) {\n  SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n  samplingService.forceSampled();\n  context=getOrCreate(operationName,true);\n  span=context.createEntrySpan(operationName);\n  context.extract(carrier);\n}\n else {\n  context=getOrCreate(operationName,false);\n  span=context.createEntrySpan(operationName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 96,
        "startColumnNumber" : 93,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractSpan span;\n  AbstractTracerContext context;\n  operationName=StringUtil.cut(operationName,OPERATION_NAME_THRESHOLD);\n  if (carrier != null && carrier.isValid()) {\n    SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n    samplingService.forceSampled();\n    context=getOrCreate(operationName,true);\n    span=context.createEntrySpan(operationName);\n    context.extract(carrier);\n  }\n else {\n    context=getOrCreate(operationName,false);\n    span=context.createEntrySpan(operationName);\n  }\n  return span;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static AbstractSpan createEntrySpan(String operationName,ContextCarrier carrier){\n  AbstractSpan span;\n  AbstractTracerContext context;\n  operationName=StringUtil.cut(operationName,OPERATION_NAME_THRESHOLD);\n  if (carrier != null && carrier.isValid()) {\n    SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n    samplingService.forceSampled();\n    context=getOrCreate(operationName,true);\n    span=context.createEntrySpan(operationName);\n    context.extract(carrier);\n  }\n else {\n    context=getOrCreate(operationName,false);\n    span=context.createEntrySpan(operationName);\n  }\n  return span;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 105
      },
      "nodeContext" : "SamplingService samplingService=ServiceManager.INSTANCE.findService(SamplingService.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.apache.skywalking.apm.agent.core.sampling.SamplingService"
  } ],
  "positionList" : [ {
    "charLength" : 58,
    "startLineNumber" : 101,
    "startColumnNumber" : 46,
    "endLineNumber" : 101,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}