{
  "id" : 8,
  "expression" : "addFile",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-delta/src/main/java/com/facebook/presto/delta/DeltaExpressionUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "addFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 192,
      "startColumnNumber" : 36,
      "endLineNumber" : 192,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 192,
        "startColumnNumber" : 36,
        "endLineNumber" : 192,
        "endColumnNumber" : 64
      },
      "nodeContext" : "addFile.getPartitionValues()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 192,
        "startColumnNumber" : 36,
        "endLineNumber" : 192,
        "endColumnNumber" : 80
      },
      "nodeContext" : "addFile.getPartitionValues().get(columnName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 192,
        "startColumnNumber" : 19,
        "endLineNumber" : 192,
        "endColumnNumber" : 80
      },
      "nodeContext" : "partitionValue=addFile.getPartitionValues().get(columnName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 192,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String partitionValue=addFile.getPartitionValues().get(columnName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 190,
        "startColumnNumber" : 67,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String columnName=partitionColumn.getName();\n  String partitionValue=addFile.getPartitionValues().get(columnName);\n  Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n  Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n  if (columnPredicate == null) {\n    continue;\n  }\n  if (columnPredicate.intersect(domain).isNone()) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DeltaColumnHandle partitionColumn : partitionColumns) {\n  String columnName=partitionColumn.getName();\n  String partitionValue=addFile.getPartitionValues().get(columnName);\n  Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n  Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n  if (columnPredicate == null) {\n    continue;\n  }\n  if (columnPredicate.intersect(domain).isNone()) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(!partitionPredicate.isNone(),\"Expecting a predicate with at least one expression\");\n  for (  DeltaColumnHandle partitionColumn : partitionColumns) {\n    String columnName=partitionColumn.getName();\n    String partitionValue=addFile.getPartitionValues().get(columnName);\n    Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n    Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n    if (columnPredicate == null) {\n      continue;\n    }\n    if (columnPredicate.intersect(domain).isNone()) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean evaluatePartitionPredicate(TupleDomain<String> partitionPredicate,List<DeltaColumnHandle> partitionColumns,TypeManager typeManager,AddFile addFile){\n  checkArgument(!partitionPredicate.isNone(),\"Expecting a predicate with at least one expression\");\n  for (  DeltaColumnHandle partitionColumn : partitionColumns) {\n    String columnName=partitionColumn.getName();\n    String partitionValue=addFile.getPartitionValues().get(columnName);\n    Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n    Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n    if (columnPredicate == null) {\n      continue;\n    }\n    if (columnPredicate.intersect(domain).isNone()) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 192,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String partitionValue=addFile.getPartitionValues().get(columnName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.delta.AddFile"
  }, {
    "nodeContext" : "addFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 193,
      "startColumnNumber" : 84,
      "endLineNumber" : 193,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 193,
        "startColumnNumber" : 84,
        "endLineNumber" : 193,
        "endColumnNumber" : 101
      },
      "nodeContext" : "addFile.getPath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 193,
        "startColumnNumber" : 28,
        "endLineNumber" : 193,
        "endColumnNumber" : 102
      },
      "nodeContext" : "getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 193,
        "startColumnNumber" : 19,
        "endLineNumber" : 193,
        "endColumnNumber" : 102
      },
      "nodeContext" : "domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 190,
        "startColumnNumber" : 67,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String columnName=partitionColumn.getName();\n  String partitionValue=addFile.getPartitionValues().get(columnName);\n  Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n  Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n  if (columnPredicate == null) {\n    continue;\n  }\n  if (columnPredicate.intersect(domain).isNone()) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DeltaColumnHandle partitionColumn : partitionColumns) {\n  String columnName=partitionColumn.getName();\n  String partitionValue=addFile.getPartitionValues().get(columnName);\n  Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n  Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n  if (columnPredicate == null) {\n    continue;\n  }\n  if (columnPredicate.intersect(domain).isNone()) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(!partitionPredicate.isNone(),\"Expecting a predicate with at least one expression\");\n  for (  DeltaColumnHandle partitionColumn : partitionColumns) {\n    String columnName=partitionColumn.getName();\n    String partitionValue=addFile.getPartitionValues().get(columnName);\n    Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n    Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n    if (columnPredicate == null) {\n      continue;\n    }\n    if (columnPredicate.intersect(domain).isNone()) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean evaluatePartitionPredicate(TupleDomain<String> partitionPredicate,List<DeltaColumnHandle> partitionColumns,TypeManager typeManager,AddFile addFile){\n  checkArgument(!partitionPredicate.isNone(),\"Expecting a predicate with at least one expression\");\n  for (  DeltaColumnHandle partitionColumn : partitionColumns) {\n    String columnName=partitionColumn.getName();\n    String partitionValue=addFile.getPartitionValues().get(columnName);\n    Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n    Domain columnPredicate=partitionPredicate.getDomains().get().get(columnName);\n    if (columnPredicate == null) {\n      continue;\n    }\n    if (columnPredicate.intersect(domain).isNone()) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Domain domain=getDomain(partitionColumn,partitionValue,typeManager,addFile.getPath());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.delta.AddFile"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 192,
    "startColumnNumber" : 36,
    "endLineNumber" : 192,
    "endColumnNumber" : 43
  }, {
    "charLength" : 7,
    "startLineNumber" : 193,
    "startColumnNumber" : 84,
    "endLineNumber" : 193,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}