{
  "id" : 4,
  "expression" : "\"bob, morane\"",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/cli/converters/CustomConverterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"bob, morane\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 27,
      "startColumnNumber" : 49,
      "endLineNumber" : 27,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 27,
        "startColumnNumber" : 15,
        "endLineNumber" : 27,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Person4Converter().fromString(\"bob, morane\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 27,
        "startColumnNumber" : 15,
        "endLineNumber" : 27,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new Person4Converter().fromString(\"bob, morane\").first",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").first)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n  assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCreation(){\n  assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n  assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"bob, morane\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 28,
      "startColumnNumber" : 49,
      "endLineNumber" : 28,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new Person4Converter().fromString(\"bob, morane\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Person4Converter().fromString(\"bob, morane\").last",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").last)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n  assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCreation(){\n  assertThat(new Person4Converter().fromString(\"bob, morane\").first).isEqualToIgnoringCase(\"bob\");\n  assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertThat(new Person4Converter().fromString(\"bob, morane\").last).isEqualToIgnoringCase(\"morane\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 27,
    "startColumnNumber" : 49,
    "endLineNumber" : 27,
    "endColumnNumber" : 62
  }, {
    "charLength" : 13,
    "startLineNumber" : 28,
    "startColumnNumber" : 49,
    "endLineNumber" : 28,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}