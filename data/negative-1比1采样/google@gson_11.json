{
  "id" : 11,
  "expression" : "subtypeToLabel.containsKey(type)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "subtypeToLabel.containsKey(type)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 165,
      "startColumnNumber" : 8,
      "endLineNumber" : 165,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 77
      },
      "nodeContext" : "subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {\n  throw new IllegalArgumentException(\"types and labels must be unique\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 161,
        "startColumnNumber" : 93,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type == null || label == null) {\n    throw new NullPointerException();\n  }\n  if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {\n    throw new IllegalArgumentException(\"types and labels must be unique\");\n  }\n  labelToSubtype.put(label,type);\n  subtypeToLabel.put(type,label);\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Registers  {@code type} identified by {@code label}. Labels are case sensitive.\n * @throws IllegalArgumentException if either {@code type} or {@code label}have already been registered on this type adapter.\n */\npublic RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type,String label){\n  if (type == null || label == null) {\n    throw new NullPointerException();\n  }\n  if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {\n    throw new IllegalArgumentException(\"types and labels must be unique\");\n  }\n  labelToSubtype.put(label,type);\n  subtypeToLabel.put(type,label);\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 77
      },
      "nodeContext" : "subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 165,
    "startColumnNumber" : 8,
    "endLineNumber" : 165,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}