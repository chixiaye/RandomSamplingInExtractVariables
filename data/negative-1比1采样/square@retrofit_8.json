{
  "id" : 8,
  "expression" : "random",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-mock/src/main/java/retrofit/MockRestAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "random",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 168,
      "startColumnNumber" : 22,
      "endLineNumber" : 168,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 168,
        "startColumnNumber" : 22,
        "endLineNumber" : 168,
        "endColumnNumber" : 41
      },
      "nodeContext" : "random.nextInt(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 168,
        "startColumnNumber" : 22,
        "endLineNumber" : 168,
        "endColumnNumber" : 45
      },
      "nodeContext" : "random.nextInt(100) + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 168,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 45
      },
      "nodeContext" : "randomValue=random.nextInt(100) + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int randomValue=random.nextInt(100) + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 167,
        "startColumnNumber" : 38,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int randomValue=random.nextInt(100) + 1;\n  return randomValue <= errorPct;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Randomly determine whether this call should result in a network failure. <p> This method is exposed for implementing other, non-Retrofit services which exhibit similar network behavior. Retrofit services automatically will exhibit network behavior when wrapped using  {@link #create(Class,Object)}.\n */\npublic boolean calculateIsFailure(){\n  int randomValue=random.nextInt(100) + 1;\n  return randomValue <= errorPct;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 20,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int randomValue=random.nextInt(100) + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Random"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 168,
    "startColumnNumber" : 22,
    "endLineNumber" : 168,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}