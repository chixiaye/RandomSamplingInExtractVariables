{
  "id" : 14,
  "expression" : "new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/WindowOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 661,
      "startLineNumber" : 316,
      "startColumnNumber" : 50,
      "endLineNumber" : 323,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 13,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 316,
        "startColumnNumber" : 44,
        "endLineNumber" : 323,
        "endColumnNumber" : 75
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 315,
        "startColumnNumber" : 86,
        "endLineNumber" : 324,
        "endColumnNumber" : 41
      },
      "nodeContext" : "{\n  throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2178,
        "startLineNumber" : 312,
        "startColumnNumber" : 40,
        "endLineNumber" : 337,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if ((windowAssigner.isEventTime() && mergeResult.maxTimestamp() + allowedLateness <= internalTimerService.currentWatermark())) {\n  throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n}\n else if (!windowAssigner.isEventTime()) {\n  long currentProcessingTime=internalTimerService.currentProcessingTime();\n  if (mergeResult.maxTimestamp() <= currentProcessingTime) {\n    throw new UnsupportedOperationException(\"The end timestamp of a \" + \"processing-time window cannot become earlier than the current processing time \" + \"by merging. Current processing time: \" + currentProcessingTime + \" window: \"+ mergeResult);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3120,
        "startLineNumber" : 310,
        "startColumnNumber" : 61,
        "endLineNumber" : 354,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{\n  if ((windowAssigner.isEventTime() && mergeResult.maxTimestamp() + allowedLateness <= internalTimerService.currentWatermark())) {\n    throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n  }\n else   if (!windowAssigner.isEventTime()) {\n    long currentProcessingTime=internalTimerService.currentProcessingTime();\n    if (mergeResult.maxTimestamp() <= currentProcessingTime) {\n      throw new UnsupportedOperationException(\"The end timestamp of a \" + \"processing-time window cannot become earlier than the current processing time \" + \"by merging. Current processing time: \" + currentProcessingTime + \" window: \"+ mergeResult);\n    }\n  }\n  triggerContext.key=key;\n  triggerContext.window=mergeResult;\n  triggerContext.onMerge(mergedWindows);\n  for (  W m : mergedWindows) {\n    triggerContext.window=m;\n    triggerContext.clear();\n    deleteCleanupTimer(m);\n  }\n  windowMergingState.mergeNamespaces(stateWindowResult,mergedStateWindows);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3521,
        "startLineNumber" : 304,
        "startColumnNumber" : 36,
        "endLineNumber" : 354,
        "endColumnNumber" : 37
      },
      "nodeContext" : "@Override public void merge(W mergeResult,Collection<W> mergedWindows,W stateWindowResult,Collection<W> mergedStateWindows) throws Exception {\n  if ((windowAssigner.isEventTime() && mergeResult.maxTimestamp() + allowedLateness <= internalTimerService.currentWatermark())) {\n    throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n  }\n else   if (!windowAssigner.isEventTime()) {\n    long currentProcessingTime=internalTimerService.currentProcessingTime();\n    if (mergeResult.maxTimestamp() <= currentProcessingTime) {\n      throw new UnsupportedOperationException(\"The end timestamp of a \" + \"processing-time window cannot become earlier than the current processing time \" + \"by merging. Current processing time: \" + currentProcessingTime + \" window: \"+ mergeResult);\n    }\n  }\n  triggerContext.key=key;\n  triggerContext.window=mergeResult;\n  triggerContext.onMerge(mergedWindows);\n  for (  W m : mergedWindows) {\n    triggerContext.window=m;\n    triggerContext.clear();\n    deleteCleanupTimer(m);\n  }\n  windowMergingState.mergeNamespaces(stateWindowResult,mergedStateWindows);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 316,
        "startColumnNumber" : 44,
        "endLineNumber" : 323,
        "endColumnNumber" : 75
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"The end timestamp of an \" + \"event-time window cannot become earlier than the current watermark \" + \"by merging. Current watermark: \" + internalTimerService.currentWatermark() + \" window: \"+ mergeResult);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 28,
    "type" : "java.lang.UnsupportedOperationException"
  } ],
  "positionList" : [ {
    "charLength" : 661,
    "startLineNumber" : 316,
    "startColumnNumber" : 50,
    "endLineNumber" : 323,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}