{
  "id" : 24,
  "expression" : "Integer.toOctalString(v)",
  "projectName" : "antlr@antlr4",
  "commitID" : "815856bdf0410be1a101630b87247256f373a850",
  "filePath" : "tool/src/org/antlr/v4/codegen/target/CppTarget.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.toOctalString(v)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 189,
      "startColumnNumber" : 10,
      "endLineNumber" : 189,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 189,
        "startColumnNumber" : 10,
        "endLineNumber" : 189,
        "endColumnNumber" : 40
      },
      "nodeContext" : "oct=Integer.toOctalString(v)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 189,
        "startColumnNumber" : 3,
        "endLineNumber" : 189,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String oct=Integer.toOctalString(v);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 188,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String oct=Integer.toOctalString(v);\n  return \"\\\\\" + oct;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 188,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (v >= 0 && v <= 127) {\n  String oct=Integer.toOctalString(v);\n  return \"\\\\\" + oct;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 175,
        "startColumnNumber" : 44,
        "endLineNumber" : 195,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    return targetCharValueEscape[v];\n  }\n  if (v >= 0x20 && v < 127 && (!Character.isDigit(v) || v == '8' || v == '9')) {\n    return String.valueOf((char)v);\n  }\n  if (v >= 0 && v <= 127) {\n    String oct=Integer.toOctalString(v);\n    return \"\\\\\" + oct;\n  }\n  String hex=Integer.toHexString(v | 0x10000).substring(1,5);\n  return \"\\\\u\" + hex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 174,
        "startColumnNumber" : 1,
        "endLineNumber" : 195,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String encodeIntAsCharEscape(int v){\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    return targetCharValueEscape[v];\n  }\n  if (v >= 0x20 && v < 127 && (!Character.isDigit(v) || v == '8' || v == '9')) {\n    return String.valueOf((char)v);\n  }\n  if (v >= 0 && v <= 127) {\n    String oct=Integer.toOctalString(v);\n    return \"\\\\\" + oct;\n  }\n  String hex=Integer.toHexString(v | 0x10000).substring(1,5);\n  return \"\\\\u\" + hex;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 189,
        "startColumnNumber" : 3,
        "endLineNumber" : 189,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String oct=Integer.toOctalString(v);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "oct",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 190,
      "startColumnNumber" : 16,
      "endLineNumber" : 190,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 190,
        "startColumnNumber" : 10,
        "endLineNumber" : 190,
        "endColumnNumber" : 19
      },
      "nodeContext" : "\"\\\\\" + oct",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 190,
        "startColumnNumber" : 3,
        "endLineNumber" : 190,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return \"\\\\\" + oct;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 188,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String oct=Integer.toOctalString(v);\n  return \"\\\\\" + oct;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 188,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (v >= 0 && v <= 127) {\n  String oct=Integer.toOctalString(v);\n  return \"\\\\\" + oct;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 175,
        "startColumnNumber" : 44,
        "endLineNumber" : 195,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    return targetCharValueEscape[v];\n  }\n  if (v >= 0x20 && v < 127 && (!Character.isDigit(v) || v == '8' || v == '9')) {\n    return String.valueOf((char)v);\n  }\n  if (v >= 0 && v <= 127) {\n    String oct=Integer.toOctalString(v);\n    return \"\\\\\" + oct;\n  }\n  String hex=Integer.toHexString(v | 0x10000).substring(1,5);\n  return \"\\\\u\" + hex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 174,
        "startColumnNumber" : 1,
        "endLineNumber" : 195,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String encodeIntAsCharEscape(int v){\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    return targetCharValueEscape[v];\n  }\n  if (v >= 0x20 && v < 127 && (!Character.isDigit(v) || v == '8' || v == '9')) {\n    return String.valueOf((char)v);\n  }\n  if (v >= 0 && v <= 127) {\n    String oct=Integer.toOctalString(v);\n    return \"\\\\\" + oct;\n  }\n  String hex=Integer.toHexString(v | 0x10000).substring(1,5);\n  return \"\\\\u\" + hex;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 190,
        "startColumnNumber" : 3,
        "endLineNumber" : 190,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return \"\\\\\" + oct;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 189,
    "startColumnNumber" : 10,
    "endLineNumber" : 189,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 190,
    "startColumnNumber" : 16,
    "endLineNumber" : 190,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}