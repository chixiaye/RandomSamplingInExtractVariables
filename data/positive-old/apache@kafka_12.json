{
  "id" : 12,
  "expression" : "config.originals()",
  "projectName" : "apache@kafka",
  "commitID" : "e6db0ca48c42c03655e3781b46ac09dae75cf33e",
  "filePath" : "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config.originals()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 197,
      "startColumnNumber" : 28,
      "endLineNumber" : 197,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 197,
        "startColumnNumber" : 28,
        "endLineNumber" : 197,
        "endColumnNumber" : 63
      },
      "nodeContext" : "originalConfig=config.originals()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Map<String,Object> originalConfig=config.originals();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 195,
        "startColumnNumber" : 86,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Postprocess the configuration so that exponential backoff is disabled when reconnect backoff is explicitly configured but the maximum reconnect backoff is not explicitly configured.\n * @param config                    The config object.\n * @param parsedValues              The parsedValues as provided to postProcessParsedConfig.\n * @return                          The new values which have been set as described in postProcessParsedConfig.\n */\npublic static Map<String,Object> postProcessReconnectBackoffConfigs(AbstractConfig config,Map<String,Object> parsedValues){\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Map<String,Object> originalConfig=config.originals();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "originalConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 198,
      "startColumnNumber" : 14,
      "endLineNumber" : 198,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 198,
        "startColumnNumber" : 14,
        "endLineNumber" : 198,
        "endColumnNumber" : 73
      },
      "nodeContext" : "originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 198,
        "startColumnNumber" : 13,
        "endLineNumber" : 198,
        "endColumnNumber" : 73
      },
      "nodeContext" : "!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 198,
        "startColumnNumber" : 12,
        "endLineNumber" : 198,
        "endColumnNumber" : 74
      },
      "nodeContext" : "(!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 198,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n  log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n  rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 195,
        "startColumnNumber" : 86,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Postprocess the configuration so that exponential backoff is disabled when reconnect backoff is explicitly configured but the maximum reconnect backoff is not explicitly configured.\n * @param config                    The config object.\n * @param parsedValues              The parsedValues as provided to postProcessParsedConfig.\n * @return                          The new values which have been set as described in postProcessParsedConfig.\n */\npublic static Map<String,Object> postProcessReconnectBackoffConfigs(AbstractConfig config,Map<String,Object> parsedValues){\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 198,
        "startColumnNumber" : 12,
        "endLineNumber" : 198,
        "endColumnNumber" : 74
      },
      "nodeContext" : "(!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "originalConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 199,
      "startColumnNumber" : 12,
      "endLineNumber" : 199,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 67
      },
      "nodeContext" : "originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 198,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n  log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n  rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 195,
        "startColumnNumber" : 86,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Postprocess the configuration so that exponential backoff is disabled when reconnect backoff is explicitly configured but the maximum reconnect backoff is not explicitly configured.\n * @param config                    The config object.\n * @param parsedValues              The parsedValues as provided to postProcessParsedConfig.\n * @return                          The new values which have been set as described in postProcessParsedConfig.\n */\npublic static Map<String,Object> postProcessReconnectBackoffConfigs(AbstractConfig config,Map<String,Object> parsedValues){\n  HashMap<String,Object> rval=new HashMap<>();\n  Map<String,Object> originalConfig=config.originals();\n  if ((!originalConfig.containsKey(RECONNECT_BACKOFF_MAX_MS_CONFIG)) && originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)) {\n    log.debug(\"Disabling exponential reconnect backoff because {} is set, but {} is not.\",RECONNECT_BACKOFF_MS_CONFIG,RECONNECT_BACKOFF_MAX_MS_CONFIG);\n    rval.put(RECONNECT_BACKOFF_MAX_MS_CONFIG,parsedValues.get(RECONNECT_BACKOFF_MS_CONFIG));\n  }\n  return rval;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 67
      },
      "nodeContext" : "originalConfig.containsKey(RECONNECT_BACKOFF_MS_CONFIG)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 197,
    "startColumnNumber" : 28,
    "endLineNumber" : 197,
    "endColumnNumber" : 42
  }, {
    "charLength" : 14,
    "startLineNumber" : 198,
    "startColumnNumber" : 14,
    "endLineNumber" : 198,
    "endColumnNumber" : 28
  }, {
    "charLength" : 14,
    "startLineNumber" : 199,
    "startColumnNumber" : 12,
    "endLineNumber" : 199,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}