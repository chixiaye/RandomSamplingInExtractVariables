{
  "id" : 204,
  "expression" : "2",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/main/java/com/baomidou/mybatisplus/generator/config/po/TableField.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 153,
      "startColumnNumber" : 61,
      "endLineNumber" : 153,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 153,
        "startColumnNumber" : 37,
        "endLineNumber" : 153,
        "endColumnNumber" : 63
      },
      "nodeContext" : "setGetName.substring(1,2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 153,
        "startColumnNumber" : 37,
        "endLineNumber" : 153,
        "endColumnNumber" : 77
      },
      "nodeContext" : "setGetName.substring(1,2).toCharArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 153,
        "startColumnNumber" : 37,
        "endLineNumber" : 153,
        "endColumnNumber" : 80
      },
      "nodeContext" : "setGetName.substring(1,2).toCharArray()[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 153,
        "startColumnNumber" : 15,
        "endLineNumber" : 153,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Character.isLowerCase(firstChar.toCharArray()[0]) && Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Character.isLowerCase(firstChar.toCharArray()[0]) && Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])) {\n  return firstChar.toLowerCase() + setGetName.substring(1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 142,
        "startColumnNumber" : 35,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (propertyName.length() <= 1) {\n    return propertyName.toUpperCase();\n  }\n  String setGetName=propertyName;\n  if (DbColumnType.BASE_BOOLEAN.getType().equalsIgnoreCase(columnType.getType())) {\n    setGetName=StringUtils.removeIsPrefixIfBoolean(setGetName,Boolean.class);\n  }\n  String firstChar=setGetName.substring(0,1);\n  if (Character.isLowerCase(firstChar.toCharArray()[0]) && Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])) {\n    return firstChar.toLowerCase() + setGetName.substring(1);\n  }\n  return firstChar.toUpperCase() + setGetName.substring(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 按JavaBean规则来生成get和set方法\n */\npublic String getCapitalName(){\n  if (propertyName.length() <= 1) {\n    return propertyName.toUpperCase();\n  }\n  String setGetName=propertyName;\n  if (DbColumnType.BASE_BOOLEAN.getType().equalsIgnoreCase(columnType.getType())) {\n    setGetName=StringUtils.removeIsPrefixIfBoolean(setGetName,Boolean.class);\n  }\n  String firstChar=setGetName.substring(0,1);\n  if (Character.isLowerCase(firstChar.toCharArray()[0]) && Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])) {\n    return firstChar.toLowerCase() + setGetName.substring(1);\n  }\n  return firstChar.toUpperCase() + setGetName.substring(1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 153,
        "startColumnNumber" : 15,
        "endLineNumber" : 153,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Character.isUpperCase(setGetName.substring(1,2).toCharArray()[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 153,
    "startColumnNumber" : 61,
    "endLineNumber" : 153,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}