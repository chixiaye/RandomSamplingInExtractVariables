{
  "id" : 229,
  "expression" : "new float[]{1,2}",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/collections/spatial/RTreeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new float[]{1,2}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 66,
      "startColumnNumber" : 26,
      "endLineNumber" : 66,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 43
      },
      "nodeContext" : "expectedMin=new float[]{1,2}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 44
      },
      "nodeContext" : "float[] expectedMin=new float[]{1,2};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  float[] elem=new float[]{5,5};\n  tree.insert(elem,1);\n  Assert.assertTrue(Arrays.equals(elem,tree.getRoot().getMinCoordinates()));\n  Assert.assertTrue(Arrays.equals(elem,tree.getRoot().getMaxCoordinates()));\n  tree.insert(new float[]{6,7},2);\n  tree.insert(new float[]{1,3},3);\n  tree.insert(new float[]{10,4},4);\n  tree.insert(new float[]{8,2},5);\n  Assert.assertEquals(tree.getRoot().getChildren().size(),5);\n  float[] expectedMin=new float[]{1,2};\n  float[] expectedMax=new float[]{10,7};\n  Assert.assertTrue(Arrays.equals(expectedMin,tree.getRoot().getMinCoordinates()));\n  Assert.assertTrue(Arrays.equals(expectedMax,tree.getRoot().getMaxCoordinates()));\n  Assert.assertEquals(tree.getRoot().getArea(),45.0d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testInsertNoSplit(){\n  float[] elem=new float[]{5,5};\n  tree.insert(elem,1);\n  Assert.assertTrue(Arrays.equals(elem,tree.getRoot().getMinCoordinates()));\n  Assert.assertTrue(Arrays.equals(elem,tree.getRoot().getMaxCoordinates()));\n  tree.insert(new float[]{6,7},2);\n  tree.insert(new float[]{1,3},3);\n  tree.insert(new float[]{10,4},4);\n  tree.insert(new float[]{8,2},5);\n  Assert.assertEquals(tree.getRoot().getChildren().size(),5);\n  float[] expectedMin=new float[]{1,2};\n  float[] expectedMax=new float[]{10,7};\n  Assert.assertTrue(Arrays.equals(expectedMin,tree.getRoot().getMinCoordinates()));\n  Assert.assertTrue(Arrays.equals(expectedMax,tree.getRoot().getMaxCoordinates()));\n  Assert.assertEquals(tree.getRoot().getArea(),45.0d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 44
      },
      "nodeContext" : "float[] expectedMin=new float[]{1,2};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float[]"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 66,
    "startColumnNumber" : 26,
    "endLineNumber" : 66,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}