{
  "id" : 304,
  "expression" : "Resources",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/GradleLayerConfigurationsTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 81,
      "startColumnNumber" : 34,
      "endLineNumber" : 81,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 81,
        "startColumnNumber" : 34,
        "endLineNumber" : 81,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Resources.getResource(\"application/classes\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 34,
        "endLineNumber" : 81,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Resources.getResource(\"application/classes\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 81,
        "startColumnNumber" : 24,
        "endLineNumber" : 81,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/classes\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 81,
        "startColumnNumber" : 24,
        "endLineNumber" : 81,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 80,
        "startColumnNumber" : 14,
        "endLineNumber" : 81,
        "endColumnNumber" : 97
      },
      "nodeContext" : "classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 84,
      "startColumnNumber" : 18,
      "endLineNumber" : 84,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 18,
        "endLineNumber" : 84,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Resources.getResource(\"application/resources\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 84,
        "startColumnNumber" : 18,
        "endLineNumber" : 84,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Resources.getResource(\"application/resources\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/resources\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 83,
        "startColumnNumber" : 9,
        "endLineNumber" : 84,
        "endColumnNumber" : 82
      },
      "nodeContext" : "resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 89,
      "startColumnNumber" : 18,
      "endLineNumber" : 89,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 89,
        "startColumnNumber" : 18,
        "endLineNumber" : 89,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/libraryB.jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 89,
        "startColumnNumber" : 18,
        "endLineNumber" : 89,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 99
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 100
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 91,
      "startColumnNumber" : 18,
      "endLineNumber" : 91,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 91,
        "startColumnNumber" : 18,
        "endLineNumber" : 91,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/libraryA.jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 91,
        "startColumnNumber" : 18,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 99
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 100
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 93,
      "startColumnNumber" : 18,
      "endLineNumber" : 93,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 93,
        "startColumnNumber" : 18,
        "endLineNumber" : 93,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 93,
        "startColumnNumber" : 18,
        "endLineNumber" : 93,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 22
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 23
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Resources",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 97,
      "startColumnNumber" : 16,
      "endLineNumber" : 97,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 22
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 23
      },
      "nodeContext" : "allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Set<File> classesFiles=ImmutableSet.of(Paths.get(Resources.getResource(\"application/classes\").toURI()).toFile());\n  FileCollection classesFileCollection=new TestFileCollection(classesFiles);\n  File resourcesOutputDir=Paths.get(Resources.getResource(\"application/resources\").toURI()).toFile();\n  Set<File> allFiles=new HashSet<>(classesFiles);\n  allFiles.add(resourcesOutputDir);\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependency-1.0.0.jar\").toURI()).toFile());\n  allFiles.add(Paths.get(Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\").toURI()).toFile());\n  FileCollection runtimeFileCollection=new TestFileCollection(allFiles);\n  Mockito.when(mockProject.getConvention()).thenReturn(mockConvention);\n  Mockito.when(mockConvention.getPlugin(JavaPluginConvention.class)).thenReturn(mockJavaPluginConvention);\n  Mockito.when(mockJavaPluginConvention.getSourceSets()).thenReturn(mockSourceSetContainer);\n  Mockito.when(mockSourceSetContainer.getByName(\"main\")).thenReturn(mockMainSourceSet);\n  Mockito.when(mockMainSourceSet.getOutput()).thenReturn(mockMainSourceSetOutput);\n  Mockito.when(mockMainSourceSetOutput.getClassesDirs()).thenReturn(classesFileCollection);\n  Mockito.when(mockMainSourceSetOutput.getResourcesDir()).thenReturn(resourcesOutputDir);\n  Mockito.when(mockMainSourceSet.getRuntimeClasspath()).thenReturn(runtimeFileCollection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Resources.getResource(\"application/dependencies/dependencyX-1.0.0-SNAPSHOT.jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 81,
    "startColumnNumber" : 34,
    "endLineNumber" : 81,
    "endColumnNumber" : 43
  }, {
    "charLength" : 9,
    "startLineNumber" : 84,
    "startColumnNumber" : 18,
    "endLineNumber" : 84,
    "endColumnNumber" : 27
  }, {
    "charLength" : 9,
    "startLineNumber" : 89,
    "startColumnNumber" : 18,
    "endLineNumber" : 89,
    "endColumnNumber" : 27
  }, {
    "charLength" : 9,
    "startLineNumber" : 91,
    "startColumnNumber" : 18,
    "endLineNumber" : 91,
    "endColumnNumber" : 27
  }, {
    "charLength" : 9,
    "startLineNumber" : 93,
    "startColumnNumber" : 18,
    "endLineNumber" : 93,
    "endColumnNumber" : 27
  }, {
    "charLength" : 9,
    "startLineNumber" : 97,
    "startColumnNumber" : 16,
    "endLineNumber" : 97,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 6
  } ]
}