{
  "id" : 15,
  "expression" : "offColor",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/javase/src/main/java/com/google/zxing/client/j2se/MatrixToImageWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 71,
      "startColumnNumber" : 46,
      "endLineNumber" : 71,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 71,
        "startColumnNumber" : 23,
        "endLineNumber" : 71,
        "endColumnNumber" : 54
      },
      "nodeContext" : "row.get(x) ? onColor : offColor",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 54
      },
      "nodeContext" : "rowPixels[x]=row.get(x) ? onColor : offColor",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "rowPixels[x]=row.get(x) ? onColor : offColor;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 70,
        "startColumnNumber" : 38,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  rowPixels[x]=row.get(x) ? onColor : offColor;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  rowPixels[x]=row.get(x) ? onColor : offColor;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  row=matrix.getRow(y,row);\n  for (int x=0; x < width; x++) {\n    rowPixels[x]=row.get(x) ? onColor : offColor;\n  }\n  image.setRGB(0,y,width,1,rowPixels,0,width);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  row=matrix.getRow(y,row);\n  for (int x=0; x < width; x++) {\n    rowPixels[x]=row.get(x) ? onColor : offColor;\n  }\n  image.setRGB(0,y,width,1,rowPixels,0,width);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 60,
        "startColumnNumber" : 92,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  BufferedImage image=new BufferedImage(width,height,config.getBufferedImageColorModel());\n  int onColor=config.getPixelOnColor();\n  int offColor=config.getPixelOffColor();\n  int[] rowPixels=new int[width];\n  BitArray row=new BitArray(width);\n  for (int y=0; y < height; y++) {\n    row=matrix.getRow(y,row);\n    for (int x=0; x < width; x++) {\n      rowPixels[x]=row.get(x) ? onColor : offColor;\n    }\n    image.setRGB(0,y,width,1,rowPixels,0,width);\n  }\n  return image;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * As  {@link #toBufferedImage(BitMatrix)}, but allows customization of the output.\n * @param matrix {@link BitMatrix} to write\n * @param config output configuration\n * @return {@link BufferedImage} representation of the input\n */\npublic static BufferedImage toBufferedImage(BitMatrix matrix,MatrixToImageConfig config){\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  BufferedImage image=new BufferedImage(width,height,config.getBufferedImageColorModel());\n  int onColor=config.getPixelOnColor();\n  int offColor=config.getPixelOffColor();\n  int[] rowPixels=new int[width];\n  BitArray row=new BitArray(width);\n  for (int y=0; y < height; y++) {\n    row=matrix.getRow(y,row);\n    for (int x=0; x < width; x++) {\n      rowPixels[x]=row.get(x) ? onColor : offColor;\n    }\n    image.setRGB(0,y,width,1,rowPixels,0,width);\n  }\n  return image;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "rowPixels[x]=row.get(x) ? onColor : offColor;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 71,
    "startColumnNumber" : 46,
    "endLineNumber" : 71,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}