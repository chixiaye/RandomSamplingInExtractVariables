{
  "id" : 27,
  "expression" : "URL",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/AbstractCodecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "URL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 37,
      "startColumnNumber" : 43,
      "endLineNumber" : 37,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 37,
        "startColumnNumber" : 43,
        "endLineNumber" : 37,
        "endColumnNumber" : 73
      },
      "nodeContext" : "URL.valueOf(\"dubbo://1.1.1.1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 74
      },
      "nodeContext" : "given(channel.getUrl()).willReturn(URL.valueOf(\"dubbo://1.1.1.1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 75
      },
      "nodeContext" : "given(channel.getUrl()).willReturn(URL.valueOf(\"dubbo://1.1.1.1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 35,
        "startColumnNumber" : 63,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Channel channel=mock(Channel.class);\n  given(channel.getUrl()).willReturn(URL.valueOf(\"dubbo://1.1.1.1\"));\n  AbstractCodec.checkPayload(channel,1 * 1024 * 1024);\n  try {\n    AbstractCodec.checkPayload(channel,15 * 1024 * 1024);\n  }\n catch (  IOException expected) {\n    assertThat(expected.getMessage(),allOf(CoreMatchers.containsString(\"Data length too large: \"),CoreMatchers.containsString(\"max payload: \" + 8 * 1024 * 1024)));\n  }\n  verify(channel,VerificationModeFactory.atLeastOnce()).getUrl();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_checkPayload_default8M() throws Exception {\n  Channel channel=mock(Channel.class);\n  given(channel.getUrl()).willReturn(URL.valueOf(\"dubbo://1.1.1.1\"));\n  AbstractCodec.checkPayload(channel,1 * 1024 * 1024);\n  try {\n    AbstractCodec.checkPayload(channel,15 * 1024 * 1024);\n  }\n catch (  IOException expected) {\n    assertThat(expected.getMessage(),allOf(CoreMatchers.containsString(\"Data length too large: \"),CoreMatchers.containsString(\"max payload: \" + 8 * 1024 * 1024)));\n  }\n  verify(channel,VerificationModeFactory.atLeastOnce()).getUrl();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 75
      },
      "nodeContext" : "given(channel.getUrl()).willReturn(URL.valueOf(\"dubbo://1.1.1.1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.common.URL"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 37,
    "startColumnNumber" : 43,
    "endLineNumber" : 37,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}