{
  "id" : 10,
  "expression" : "\"Application registered itself as {}\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-client/src/main/java/de/codecentric/boot/admin/client/registration/DefaultApplicationRegistrator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Application registered itself as {}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 82,
      "startColumnNumber" : 16,
      "endLineNumber" : 82,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "LOGGER.info(\"Application registered itself as {}\",id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 59
      },
      "nodeContext" : "LOGGER.info(\"Application registered itself as {}\",id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 81,
        "startColumnNumber" : 50,
        "endLineNumber" : 83,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  LOGGER.info(\"Application registered itself as {}\",id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 86,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.registeredId.compareAndSet(null,id)) {\n  LOGGER.info(\"Application registered itself as {}\",id);\n}\n else {\n  LOGGER.debug(\"Application refreshed itself as {}\",id);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String id=this.registrationClient.register(adminUrl,application);\n  if (this.registeredId.compareAndSet(null,id)) {\n    LOGGER.info(\"Application registered itself as {}\",id);\n  }\n else {\n    LOGGER.debug(\"Application refreshed itself as {}\",id);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  String id=this.registrationClient.register(adminUrl,application);\n  if (this.registeredId.compareAndSet(null,id)) {\n    LOGGER.info(\"Application registered itself as {}\",id);\n  }\n else {\n    LOGGER.debug(\"Application refreshed itself as {}\",id);\n  }\n  return true;\n}\n catch (Exception ex) {\n  if (firstAttempt) {\n    LOGGER.warn(\"Failed to register application as {} at spring-boot-admin ({}): {}. Further attempts are logged on DEBUG level\",application,this.adminUrls,ex.getMessage());\n  }\n else {\n    LOGGER.debug(\"Failed to register application as {} at spring-boot-admin ({}): {}\",application,this.adminUrls,ex.getMessage());\n  }\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 78,
        "startColumnNumber" : 92,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    String id=this.registrationClient.register(adminUrl,application);\n    if (this.registeredId.compareAndSet(null,id)) {\n      LOGGER.info(\"Application registered itself as {}\",id);\n    }\n else {\n      LOGGER.debug(\"Application refreshed itself as {}\",id);\n    }\n    return true;\n  }\n catch (  Exception ex) {\n    if (firstAttempt) {\n      LOGGER.warn(\"Failed to register application as {} at spring-boot-admin ({}): {}. Further attempts are logged on DEBUG level\",application,this.adminUrls,ex.getMessage());\n    }\n else {\n      LOGGER.debug(\"Failed to register application as {} at spring-boot-admin ({}): {}\",application,this.adminUrls,ex.getMessage());\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 78,
        "startColumnNumber" : 1,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected boolean register(Application application,String adminUrl,boolean firstAttempt){\n  try {\n    String id=this.registrationClient.register(adminUrl,application);\n    if (this.registeredId.compareAndSet(null,id)) {\n      LOGGER.info(\"Application registered itself as {}\",id);\n    }\n else {\n      LOGGER.debug(\"Application refreshed itself as {}\",id);\n    }\n    return true;\n  }\n catch (  Exception ex) {\n    if (firstAttempt) {\n      LOGGER.warn(\"Failed to register application as {} at spring-boot-admin ({}): {}. Further attempts are logged on DEBUG level\",application,this.adminUrls,ex.getMessage());\n    }\n else {\n      LOGGER.debug(\"Failed to register application as {} at spring-boot-admin ({}): {}\",application,this.adminUrls,ex.getMessage());\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 59
      },
      "nodeContext" : "LOGGER.info(\"Application registered itself as {}\",id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 82,
    "startColumnNumber" : 16,
    "endLineNumber" : 82,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}