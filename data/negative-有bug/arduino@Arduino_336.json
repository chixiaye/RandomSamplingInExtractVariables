{
  "id" : 336,
  "expression" : "isEnabled()",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/EditorToolbar.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isEnabled()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 215,
      "startColumnNumber" : 9,
      "endLineNumber" : 215,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 20
      },
      "nodeContext" : "!isEnabled()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 218,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!isEnabled()) {\n  screen.setColor(new Color(0,0,0,100));\n  screen.fillRect(0,0,getWidth(),getHeight());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2464,
        "startLineNumber" : 141,
        "startColumnNumber" : 46,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (buttonImages == null) {\n    loadButtons();\n  }\n  if (stateImage == null) {\n    state=new int[buttonCount];\n    stateImage=new Image[buttonCount];\n    for (int i=0; i < buttonCount; i++) {\n      setState(i,INACTIVE,false);\n    }\n    y1=0;\n    y2=BUTTON_HEIGHT;\n    x1=new int[buttonCount];\n    x2=new int[buttonCount];\n  }\n  Dimension size=getSize();\n  if ((offscreen == null) || (size.width != width) || (size.height != height)) {\n    offscreen=createImage(size.width,size.height);\n    width=size.width;\n    height=size.height;\n    int offsetX=3;\n    for (int i=0; i < buttonCount; i++) {\n      x1[i]=offsetX;\n      if (i == 2 || i == 6)       x1[i]+=BUTTON_GAP;\n      x2[i]=x1[i] + BUTTON_WIDTH;\n      offsetX=x2[i];\n    }\n    x1[SERIAL]=width - BUTTON_WIDTH - 14;\n    x2[SERIAL]=width - 14;\n  }\n  Graphics g=offscreen.getGraphics();\n  g.setColor(bgcolor);\n  g.fillRect(0,0,width,height);\n  for (int i=0; i < buttonCount; i++) {\n    g.drawImage(stateImage[i],x1[i],y1,null);\n  }\n  g.setColor(statusColor);\n  g.setFont(statusFont);\n  if (currentRollover != -1) {\n    int statusY=(BUTTON_HEIGHT + g.getFontMetrics().getAscent()) / 2;\n    String status=shiftPressed ? titleShift[currentRollover] : title[currentRollover];\n    if (currentRollover != SERIAL)     g.drawString(status,(buttonCount - 1) * BUTTON_WIDTH + 3 * BUTTON_GAP,statusY);\n else {\n      int statusX=x1[SERIAL] - BUTTON_GAP;\n      statusX-=g.getFontMetrics().stringWidth(status);\n      g.drawString(status,statusX,statusY);\n    }\n  }\n  screen.drawImage(offscreen,0,0,null);\n  if (!isEnabled()) {\n    screen.setColor(new Color(0,0,0,100));\n    screen.fillRect(0,0,getWidth(),getHeight());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2520,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void paintComponent(Graphics screen){\n  if (buttonImages == null) {\n    loadButtons();\n  }\n  if (stateImage == null) {\n    state=new int[buttonCount];\n    stateImage=new Image[buttonCount];\n    for (int i=0; i < buttonCount; i++) {\n      setState(i,INACTIVE,false);\n    }\n    y1=0;\n    y2=BUTTON_HEIGHT;\n    x1=new int[buttonCount];\n    x2=new int[buttonCount];\n  }\n  Dimension size=getSize();\n  if ((offscreen == null) || (size.width != width) || (size.height != height)) {\n    offscreen=createImage(size.width,size.height);\n    width=size.width;\n    height=size.height;\n    int offsetX=3;\n    for (int i=0; i < buttonCount; i++) {\n      x1[i]=offsetX;\n      if (i == 2 || i == 6)       x1[i]+=BUTTON_GAP;\n      x2[i]=x1[i] + BUTTON_WIDTH;\n      offsetX=x2[i];\n    }\n    x1[SERIAL]=width - BUTTON_WIDTH - 14;\n    x2[SERIAL]=width - 14;\n  }\n  Graphics g=offscreen.getGraphics();\n  g.setColor(bgcolor);\n  g.fillRect(0,0,width,height);\n  for (int i=0; i < buttonCount; i++) {\n    g.drawImage(stateImage[i],x1[i],y1,null);\n  }\n  g.setColor(statusColor);\n  g.setFont(statusFont);\n  if (currentRollover != -1) {\n    int statusY=(BUTTON_HEIGHT + g.getFontMetrics().getAscent()) / 2;\n    String status=shiftPressed ? titleShift[currentRollover] : title[currentRollover];\n    if (currentRollover != SERIAL)     g.drawString(status,(buttonCount - 1) * BUTTON_WIDTH + 3 * BUTTON_GAP,statusY);\n else {\n      int statusX=x1[SERIAL] - BUTTON_GAP;\n      statusX-=g.getFontMetrics().stringWidth(status);\n      g.drawString(status,statusX,statusY);\n    }\n  }\n  screen.drawImage(offscreen,0,0,null);\n  if (!isEnabled()) {\n    screen.setColor(new Color(0,0,0,100));\n    screen.fillRect(0,0,getWidth(),getHeight());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 370,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 20
      },
      "nodeContext" : "!isEnabled()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 215,
    "startColumnNumber" : 9,
    "endLineNumber" : 215,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}