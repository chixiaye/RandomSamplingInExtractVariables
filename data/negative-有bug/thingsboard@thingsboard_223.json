{
  "id" : 223,
  "expression" : "DataType.DOUBLE",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/utils/TypeCastUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DataType.DOUBLE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 35,
      "startColumnNumber" : 41,
      "endLineNumber" : 35,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 35,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Map.entry(DataType.DOUBLE,bd.doubleValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 35,
        "startColumnNumber" : 24,
        "endLineNumber" : 35,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return Map.entry(DataType.DOUBLE,bd.doubleValue());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 34,
        "startColumnNumber" : 42,
        "endLineNumber" : 36,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  return Map.entry(DataType.DOUBLE,bd.doubleValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 34,
        "startColumnNumber" : 20,
        "endLineNumber" : 36,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (bd.scale() <= 16) {\n  return Map.entry(DataType.DOUBLE,bd.doubleValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 33,
        "startColumnNumber" : 91,
        "endLineNumber" : 37,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (bd.scale() <= 16) {\n    return Map.entry(DataType.DOUBLE,bd.doubleValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n  if (bd.scale() <= 16) {\n    return Map.entry(DataType.DOUBLE,bd.doubleValue());\n  }\n}\n else {\n  return Map.entry(DataType.LONG,bd.longValueExact());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 31,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BigDecimal bd=new BigDecimal(formattedValue);\n  if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n    if (bd.scale() <= 16) {\n      return Map.entry(DataType.DOUBLE,bd.doubleValue());\n    }\n  }\n else {\n    return Map.entry(DataType.LONG,bd.longValueExact());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 49
      },
      "nodeContext" : "try {\n  BigDecimal bd=new BigDecimal(formattedValue);\n  if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n    if (bd.scale() <= 16) {\n      return Map.entry(DataType.DOUBLE,bd.doubleValue());\n    }\n  }\n else {\n    return Map.entry(DataType.LONG,bd.longValueExact());\n  }\n}\n catch (RuntimeException ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 29,
        "startColumnNumber" : 29,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String formattedValue=value.replace(',','.');\n  try {\n    BigDecimal bd=new BigDecimal(formattedValue);\n    if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n      if (bd.scale() <= 16) {\n        return Map.entry(DataType.DOUBLE,bd.doubleValue());\n      }\n    }\n else {\n      return Map.entry(DataType.LONG,bd.longValueExact());\n    }\n  }\n catch (  RuntimeException ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isNumber(value)) {\n  String formattedValue=value.replace(',','.');\n  try {\n    BigDecimal bd=new BigDecimal(formattedValue);\n    if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n      if (bd.scale() <= 16) {\n        return Map.entry(DataType.DOUBLE,bd.doubleValue());\n      }\n    }\n else {\n      return Map.entry(DataType.LONG,bd.longValueExact());\n    }\n  }\n catch (  RuntimeException ignored) {\n  }\n}\n else if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n  return Map.entry(DataType.BOOLEAN,Boolean.parseBoolean(value));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 28,
        "startColumnNumber" : 70,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isNumber(value)) {\n    String formattedValue=value.replace(',','.');\n    try {\n      BigDecimal bd=new BigDecimal(formattedValue);\n      if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n        if (bd.scale() <= 16) {\n          return Map.entry(DataType.DOUBLE,bd.doubleValue());\n        }\n      }\n else {\n        return Map.entry(DataType.LONG,bd.longValueExact());\n      }\n    }\n catch (    RuntimeException ignored) {\n    }\n  }\n else   if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n    return Map.entry(DataType.BOOLEAN,Boolean.parseBoolean(value));\n  }\n  return Map.entry(DataType.STRING,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Map.Entry<DataType,Object> castValue(String value){\n  if (isNumber(value)) {\n    String formattedValue=value.replace(',','.');\n    try {\n      BigDecimal bd=new BigDecimal(formattedValue);\n      if (bd.stripTrailingZeros().scale() > 0 || isSimpleDouble(formattedValue)) {\n        if (bd.scale() <= 16) {\n          return Map.entry(DataType.DOUBLE,bd.doubleValue());\n        }\n      }\n else {\n        return Map.entry(DataType.LONG,bd.longValueExact());\n      }\n    }\n catch (    RuntimeException ignored) {\n    }\n  }\n else   if (value.equalsIgnoreCase(\"true\") || value.equalsIgnoreCase(\"false\")) {\n    return Map.entry(DataType.BOOLEAN,Boolean.parseBoolean(value));\n  }\n  return Map.entry(DataType.STRING,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 35,
        "startColumnNumber" : 24,
        "endLineNumber" : 35,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return Map.entry(DataType.DOUBLE,bd.doubleValue());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.thingsboard.server.common.data.kv.DataType"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 35,
    "startColumnNumber" : 41,
    "endLineNumber" : 35,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}