{
  "id" : 267,
  "expression" : "4",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 23,
      "endLineNumber" : 63,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 63,
        "startColumnNumber" : 13,
        "endLineNumber" : 63,
        "endColumnNumber" : 25
      },
      "nodeContext" : "lines.get(4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(lines.get(4))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(lines.get(4)).isEqualTo(\"↑     ↓\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(lines.get(4)).isEqualTo(\"↑     ↓\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 53,
        "startColumnNumber" : 52,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FailureAnalysis analysis=performAnalysis(CyclicBeanMethodsConfiguration.class);\n  List<String> lines=readDescriptionLines(analysis);\n  assertThat(lines).hasSize(9);\n  assertThat(lines.get(0)).isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n  assertThat(lines.get(1)).isEqualTo(\"\");\n  assertThat(lines.get(2)).isEqualTo(\"┌─────┐\");\n  assertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n  assertThat(lines.get(4)).isEqualTo(\"↑     ↓\");\n  assertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n  assertThat(lines.get(6)).isEqualTo(\"↑     ↓\");\n  assertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n  assertThat(lines.get(8)).isEqualTo(\"└─────┘\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 52,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void cyclicBeanMethods() throws IOException {\n  FailureAnalysis analysis=performAnalysis(CyclicBeanMethodsConfiguration.class);\n  List<String> lines=readDescriptionLines(analysis);\n  assertThat(lines).hasSize(9);\n  assertThat(lines.get(0)).isEqualTo(\"The dependencies of some of the beans in the application context form a cycle:\");\n  assertThat(lines.get(1)).isEqualTo(\"\");\n  assertThat(lines.get(2)).isEqualTo(\"┌─────┐\");\n  assertThat(lines.get(3)).startsWith(\"|  one defined in \" + InnerInnerConfiguration.class.getName());\n  assertThat(lines.get(4)).isEqualTo(\"↑     ↓\");\n  assertThat(lines.get(5)).startsWith(\"|  two defined in \" + InnerConfiguration.class.getName());\n  assertThat(lines.get(6)).isEqualTo(\"↑     ↓\");\n  assertThat(lines.get(7)).startsWith(\"|  three defined in \" + CyclicBeanMethodsConfiguration.class.getName());\n  assertThat(lines.get(8)).isEqualTo(\"└─────┘\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(lines.get(4)).isEqualTo(\"↑     ↓\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 23,
    "endLineNumber" : 63,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}