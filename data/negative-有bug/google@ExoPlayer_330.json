{
  "id" : 330,
  "expression" : "cropTop == 1f",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/transformer/src/main/java/com/google/android/exoplayer2/transformer/Presentation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cropTop == 1f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 205,
      "startColumnNumber" : 69,
      "endLineNumber" : 205,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 205,
        "startColumnNumber" : 10,
        "endLineNumber" : 205,
        "endColumnNumber" : 82
      },
      "nodeContext" : "cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 204,
        "startColumnNumber" : 6,
        "endLineNumber" : 206,
        "endColumnNumber" : 77
      },
      "nodeContext" : "checkState(cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f,\"setAspectRatio and setCrop cannot be called in the same instance\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 204,
        "startColumnNumber" : 6,
        "endLineNumber" : 206,
        "endColumnNumber" : 78
      },
      "nodeContext" : "checkState(cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f,\"setAspectRatio and setCrop cannot be called in the same instance\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 197,
        "startColumnNumber" : 73,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(aspectRatio > 0,\"aspect ratio \" + aspectRatio + \" must be positive\");\n  checkArgument(layout == LAYOUT_SCALE_TO_FIT || layout == LAYOUT_SCALE_TO_FIT_WITH_CROP || layout == LAYOUT_STRETCH_TO_FIT,\"invalid layout \" + layout);\n  checkState(cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f,\"setAspectRatio and setCrop cannot be called in the same instance\");\n  this.aspectRatio=aspectRatio;\n  this.layout=layout;\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the aspect ratio (width/height ratio) for the output frame. <p>Resizes a frame's width or height to conform to an  {@code aspectRatio}, given a  {@link Layout}.  {@code aspectRatio} defaults to {@link C#LENGTH_UNSET}, which corresponds to the same aspect ratio as the input frame.  {@code layout} defaults to {@link #LAYOUT_SCALE_TO_FIT}<p>Width and height values set may be rescaled by  {@link #setResolution(int)}, which is applied after aspect ratio changes. <p>Only one of  {@link #setCrop(float,float,float,float)} or {@code setAspectRatio} can becalled for one  {@link Presentation}.\n * @param aspectRatio The aspect ratio (width/height ratio) of the output frame. Must bepositive.\n * @return This builder.\n */\npublic Builder setAspectRatio(float aspectRatio,@Layout int layout){\n  checkArgument(aspectRatio > 0,\"aspect ratio \" + aspectRatio + \" must be positive\");\n  checkArgument(layout == LAYOUT_SCALE_TO_FIT || layout == LAYOUT_SCALE_TO_FIT_WITH_CROP || layout == LAYOUT_STRETCH_TO_FIT,\"invalid layout \" + layout);\n  checkState(cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f,\"setAspectRatio and setCrop cannot be called in the same instance\");\n  this.aspectRatio=aspectRatio;\n  this.layout=layout;\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 205,
        "startColumnNumber" : 10,
        "endLineNumber" : 205,
        "endColumnNumber" : 82
      },
      "nodeContext" : "cropLeft == -1f && cropRight == 1f && cropBottom == -1f && cropTop == 1f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 205,
    "startColumnNumber" : 69,
    "endLineNumber" : 205,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}