{
  "id" : 34,
  "expression" : "columns == 0",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "columns == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 226,
      "startColumnNumber" : 10,
      "endLineNumber" : 226,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 226,
        "startColumnNumber" : 10,
        "endLineNumber" : 226,
        "endColumnNumber" : 35
      },
      "nodeContext" : "columns == 0 || rows == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 226,
        "startColumnNumber" : 6,
        "endLineNumber" : 228,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (columns == 0 || rows == 0) {\n  throw new SubtitleDecoderException(\"Invalid cell resolution \" + columns + \" \"+ rows);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 223,
        "startColumnNumber" : 8,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int columns=Integer.parseInt(cellResolutionMatcher.group(1));\n  int rows=Integer.parseInt(cellResolutionMatcher.group(2));\n  if (columns == 0 || rows == 0) {\n    throw new SubtitleDecoderException(\"Invalid cell resolution \" + columns + \" \"+ rows);\n  }\n  return new CellResolution(columns,rows);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 233,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  int columns=Integer.parseInt(cellResolutionMatcher.group(1));\n  int rows=Integer.parseInt(cellResolutionMatcher.group(2));\n  if (columns == 0 || rows == 0) {\n    throw new SubtitleDecoderException(\"Invalid cell resolution \" + columns + \" \"+ rows);\n  }\n  return new CellResolution(columns,rows);\n}\n catch (NumberFormatException e) {\n  Log.w(TAG,\"Ignoring malformed cell resolution: \" + cellResolution);\n  return defaultValue;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 212,
        "startColumnNumber" : 38,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String cellResolution=xmlParser.getAttributeValue(TTP,\"cellResolution\");\n  if (cellResolution == null) {\n    return defaultValue;\n  }\n  Matcher cellResolutionMatcher=CELL_RESOLUTION.matcher(cellResolution);\n  if (!cellResolutionMatcher.matches()) {\n    Log.w(TAG,\"Ignoring malformed cell resolution: \" + cellResolution);\n    return defaultValue;\n  }\n  try {\n    int columns=Integer.parseInt(cellResolutionMatcher.group(1));\n    int rows=Integer.parseInt(cellResolutionMatcher.group(2));\n    if (columns == 0 || rows == 0) {\n      throw new SubtitleDecoderException(\"Invalid cell resolution \" + columns + \" \"+ rows);\n    }\n    return new CellResolution(columns,rows);\n  }\n catch (  NumberFormatException e) {\n    Log.w(TAG,\"Ignoring malformed cell resolution: \" + cellResolution);\n    return defaultValue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 211,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private CellResolution parseCellResolution(XmlPullParser xmlParser,CellResolution defaultValue) throws SubtitleDecoderException {\n  String cellResolution=xmlParser.getAttributeValue(TTP,\"cellResolution\");\n  if (cellResolution == null) {\n    return defaultValue;\n  }\n  Matcher cellResolutionMatcher=CELL_RESOLUTION.matcher(cellResolution);\n  if (!cellResolutionMatcher.matches()) {\n    Log.w(TAG,\"Ignoring malformed cell resolution: \" + cellResolution);\n    return defaultValue;\n  }\n  try {\n    int columns=Integer.parseInt(cellResolutionMatcher.group(1));\n    int rows=Integer.parseInt(cellResolutionMatcher.group(2));\n    if (columns == 0 || rows == 0) {\n      throw new SubtitleDecoderException(\"Invalid cell resolution \" + columns + \" \"+ rows);\n    }\n    return new CellResolution(columns,rows);\n  }\n catch (  NumberFormatException e) {\n    Log.w(TAG,\"Ignoring malformed cell resolution: \" + cellResolution);\n    return defaultValue;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 226,
        "startColumnNumber" : 10,
        "endLineNumber" : 226,
        "endColumnNumber" : 35
      },
      "nodeContext" : "columns == 0 || rows == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 226,
    "startColumnNumber" : 10,
    "endLineNumber" : 226,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}