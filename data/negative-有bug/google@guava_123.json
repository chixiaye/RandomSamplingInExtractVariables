{
  "id" : 123,
  "expression" : "new AbstractLoadingCache<Object,Object>(){\n  @Override public Object get(  Object key) throws ExecutionException {\n    Object v=valueRef.get();\n    if (v == null) {\n      throw new ExecutionException(cause);\n    }\n    return v;\n  }\n  @Override public Object getIfPresent(  Object key){\n    return valueRef.get();\n  }\n}\n",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/cache/AbstractLoadingCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AbstractLoadingCache<Object,Object>(){\n  @Override public Object get(  Object key) throws ExecutionException {\n    Object v=valueRef.get();\n    if (v == null) {\n      throw new ExecutionException(cause);\n    }\n    return v;\n  }\n  @Override public Object getIfPresent(  Object key){\n    return valueRef.get();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 442,
      "startLineNumber" : 38,
      "startColumnNumber" : 8,
      "endLineNumber" : 52,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 59,
    "astHeight" : 10,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 37,
        "startColumnNumber" : 33,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "cache=new AbstractLoadingCache<Object,Object>(){\n  @Override public Object get(  Object key) throws ExecutionException {\n    Object v=valueRef.get();\n    if (v == null) {\n      throw new ExecutionException(cause);\n    }\n    return v;\n  }\n  @Override public Object getIfPresent(  Object key){\n    return valueRef.get();\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 10
      },
      "nodeContext" : "LoadingCache<Object,Object> cache=new AbstractLoadingCache<Object,Object>(){\n  @Override public Object get(  Object key) throws ExecutionException {\n    Object v=valueRef.get();\n    if (v == null) {\n      throw new ExecutionException(cause);\n    }\n    return v;\n  }\n  @Override public Object getIfPresent(  Object key){\n    return valueRef.get();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 34,
        "startColumnNumber" : 41,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Exception cause=new Exception();\n  final AtomicReference<Object> valueRef=new AtomicReference<>();\n  LoadingCache<Object,Object> cache=new AbstractLoadingCache<Object,Object>(){\n    @Override public Object get(    Object key) throws ExecutionException {\n      Object v=valueRef.get();\n      if (v == null) {\n        throw new ExecutionException(cause);\n      }\n      return v;\n    }\n    @Override public Object getIfPresent(    Object key){\n      return valueRef.get();\n    }\n  }\n;\n  try {\n    cache.getUnchecked(new Object());\n    fail();\n  }\n catch (  UncheckedExecutionException expected) {\n    assertThat(expected).hasCauseThat().isEqualTo(cause);\n  }\n  Object newValue=new Object();\n  valueRef.set(newValue);\n  assertSame(newValue,cache.getUnchecked(new Object()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testGetUnchecked_checked(){\n  final Exception cause=new Exception();\n  final AtomicReference<Object> valueRef=new AtomicReference<>();\n  LoadingCache<Object,Object> cache=new AbstractLoadingCache<Object,Object>(){\n    @Override public Object get(    Object key) throws ExecutionException {\n      Object v=valueRef.get();\n      if (v == null) {\n        throw new ExecutionException(cause);\n      }\n      return v;\n    }\n    @Override public Object getIfPresent(    Object key){\n      return valueRef.get();\n    }\n  }\n;\n  try {\n    cache.getUnchecked(new Object());\n    fail();\n  }\n catch (  UncheckedExecutionException expected) {\n    assertThat(expected).hasCauseThat().isEqualTo(cause);\n  }\n  Object newValue=new Object();\n  valueRef.set(newValue);\n  assertSame(newValue,cache.getUnchecked(new Object()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 37,
        "startColumnNumber" : 33,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "cache=new AbstractLoadingCache<Object,Object>(){\n  @Override public Object get(  Object key) throws ExecutionException {\n    Object v=valueRef.get();\n    if (v == null) {\n      throw new ExecutionException(cause);\n    }\n    return v;\n  }\n  @Override public Object getIfPresent(  Object key){\n    return valueRef.get();\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 61,
      "astHeight" : 11
    },
    "tokenLength" : 24,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 442,
    "startLineNumber" : 38,
    "startColumnNumber" : 8,
    "endLineNumber" : 52,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}