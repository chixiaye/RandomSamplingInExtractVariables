{
  "id" : 49,
  "expression" : "he.buff[n]",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/gui/hexviewer/JHexEditorHEX.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "he.buff[n]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 88,
      "startColumnNumber" : 50,
      "endLineNumber" : 88,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Integer.toHexString(he.buff[n])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 88,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 61
      },
      "nodeContext" : "\"0\" + Integer.toHexString(he.buff[n])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 88,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(\"0\" + Integer.toHexString(he.buff[n]))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 62
      },
      "nodeContext" : "s=(\"0\" + Integer.toHexString(he.buff[n]))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String s=(\"0\" + Integer.toHexString(he.buff[n]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 67,
        "startColumnNumber" : 40,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (n == he.cursor) {\n    if (hasFocus()) {\n      g.setColor(Color.black);\n      he.fondo(g,(x * 3),y,2);\n      g.setColor(Color.blue);\n      int cursor=0;\n      he.fondo(g,(x * 3) + cursor,y,1);\n    }\n else {\n      g.setColor(Color.blue);\n      he.cuadro(g,(x * 3),y,2);\n    }\n    if (hasFocus())     g.setColor(Color.white);\n else     g.setColor(Color.black);\n  }\n else {\n    g.setColor(Color.black);\n  }\n  String s=(\"0\" + Integer.toHexString(he.buff[n]));\n  s=s.substring(s.length() - 2);\n  he.printString(g,s,((x++) * 3),y);\n  if (x == 16) {\n    x=0;\n    y++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int n=ini; n < fin; n++) {\n  if (n == he.cursor) {\n    if (hasFocus()) {\n      g.setColor(Color.black);\n      he.fondo(g,(x * 3),y,2);\n      g.setColor(Color.blue);\n      int cursor=0;\n      he.fondo(g,(x * 3) + cursor,y,1);\n    }\n else {\n      g.setColor(Color.blue);\n      he.cuadro(g,(x * 3),y,2);\n    }\n    if (hasFocus())     g.setColor(Color.white);\n else     g.setColor(Color.black);\n  }\n else {\n    g.setColor(Color.black);\n  }\n  String s=(\"0\" + Integer.toHexString(he.buff[n]));\n  s=s.substring(s.length() - 2);\n  he.printString(g,s,((x++) * 3),y);\n  if (x == 16) {\n    x=0;\n    y++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 162,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1469,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  debug(\"paint(\" + g + \")\");\n  debug(\"cursor=\" + he.cursor + \" buff.length=\"+ he.buff.length);\n  Dimension d=getMinimumSize();\n  g.setColor(Color.white);\n  g.fillRect(0,0,d.width,d.height);\n  g.setColor(Color.black);\n  g.setFont(JHexEditor.font);\n  int ini=he.getInicio() * 16;\n  int fin=ini + (he.getLineas() * 16);\n  if (fin > he.buff.length)   fin=he.buff.length;\n  int x=0;\n  int y=0;\n  for (int n=ini; n < fin; n++) {\n    if (n == he.cursor) {\n      if (hasFocus()) {\n        g.setColor(Color.black);\n        he.fondo(g,(x * 3),y,2);\n        g.setColor(Color.blue);\n        int cursor=0;\n        he.fondo(g,(x * 3) + cursor,y,1);\n      }\n else {\n        g.setColor(Color.blue);\n        he.cuadro(g,(x * 3),y,2);\n      }\n      if (hasFocus())       g.setColor(Color.white);\n else       g.setColor(Color.black);\n    }\n else {\n      g.setColor(Color.black);\n    }\n    String s=(\"0\" + Integer.toHexString(he.buff[n]));\n    s=s.substring(s.length() - 2);\n    he.printString(g,s,((x++) * 3),y);\n    if (x == 16) {\n      x=0;\n      y++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 271,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1513,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void paint(Graphics g){\n  debug(\"paint(\" + g + \")\");\n  debug(\"cursor=\" + he.cursor + \" buff.length=\"+ he.buff.length);\n  Dimension d=getMinimumSize();\n  g.setColor(Color.white);\n  g.fillRect(0,0,d.width,d.height);\n  g.setColor(Color.black);\n  g.setFont(JHexEditor.font);\n  int ini=he.getInicio() * 16;\n  int fin=ini + (he.getLineas() * 16);\n  if (fin > he.buff.length)   fin=he.buff.length;\n  int x=0;\n  int y=0;\n  for (int n=ini; n < fin; n++) {\n    if (n == he.cursor) {\n      if (hasFocus()) {\n        g.setColor(Color.black);\n        he.fondo(g,(x * 3),y,2);\n        g.setColor(Color.blue);\n        int cursor=0;\n        he.fondo(g,(x * 3) + cursor,y,1);\n      }\n else {\n        g.setColor(Color.blue);\n        he.cuadro(g,(x * 3),y,2);\n      }\n      if (hasFocus())       g.setColor(Color.white);\n else       g.setColor(Color.black);\n    }\n else {\n      g.setColor(Color.black);\n    }\n    String s=(\"0\" + Integer.toHexString(he.buff[n]));\n    s=s.substring(s.length() - 2);\n    he.printString(g,s,((x++) * 3),y);\n    if (x == 16) {\n      x=0;\n      y++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String s=(\"0\" + Integer.toHexString(he.buff[n]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 88,
    "startColumnNumber" : 50,
    "endLineNumber" : 88,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}