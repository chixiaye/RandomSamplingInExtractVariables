{
  "id" : 193,
  "expression" : "\"]\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/metadata/src/test/java/org/apache/kafka/timeline/SnapshottableHashTableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"]\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 254,
      "startColumnNumber" : 99,
      "endLineNumber" : 254,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 251,
        "startColumnNumber" : 39,
        "endLineNumber" : 254,
        "endColumnNumber" : 102
      },
      "nodeContext" : "\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 251,
        "startColumnNumber" : 18,
        "endLineNumber" : 254,
        "endColumnNumber" : 103
      },
      "nodeContext" : "new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 251,
        "startColumnNumber" : 12,
        "endLineNumber" : 254,
        "endColumnNumber" : 104
      },
      "nodeContext" : "throw new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 250,
        "startColumnNumber" : 61,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 250,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!extraObjects.isEmpty() || !remaining.isEmpty()) {\n  throw new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 236,
        "startColumnNumber" : 65,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IdentityHashMap<Object,Boolean> remaining=new IdentityHashMap<>();\n  for (  Object object : expected) {\n    remaining.put(object,true);\n  }\n  List<Object> extraObjects=new ArrayList<>();\n  int i=0;\n  while (iter.hasNext()) {\n    Object object=iter.next();\n    assertNotNull(object);\n    if (remaining.remove(object) == null) {\n      extraObjects.add(object);\n    }\n  }\n  if (!extraObjects.isEmpty() || !remaining.isEmpty()) {\n    throw new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that the given iterator contains the given elements, in any order. We compare using reference equality here, rather than object equality.\n */\nprivate static void assertIteratorYields(Iterator<? extends Object> iter,Object... expected){\n  IdentityHashMap<Object,Boolean> remaining=new IdentityHashMap<>();\n  for (  Object object : expected) {\n    remaining.put(object,true);\n  }\n  List<Object> extraObjects=new ArrayList<>();\n  int i=0;\n  while (iter.hasNext()) {\n    Object object=iter.next();\n    assertNotNull(object);\n    if (remaining.remove(object) == null) {\n      extraObjects.add(object);\n    }\n  }\n  if (!extraObjects.isEmpty() || !remaining.isEmpty()) {\n    throw new RuntimeException(\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 251,
        "startColumnNumber" : 39,
        "endLineNumber" : 254,
        "endColumnNumber" : 102
      },
      "nodeContext" : "\"Found extra object(s): [\" + String.join(\", \",extraObjects.stream().map(e -> e.toString()).collect(Collectors.toList())) + \"] and didn't find object(s): [\"+ String.join(\", \",remaining.keySet().stream().map(e -> e.toString()).collect(Collectors.toList()))+ \"]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 46,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 254,
    "startColumnNumber" : 99,
    "endLineNumber" : 254,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}