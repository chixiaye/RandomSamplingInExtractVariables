{
  "id" : 50,
  "expression" : "4",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/stackeditor/StackEditorActions3Test.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 15,
      "endLineNumber" : 52,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(4,getDataType(ordinal).getLength())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(4,getDataType(ordinal).getLength());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 41,
        "startColumnNumber" : 61,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  init(SIMPLE_STACK);\n  int ordinal=6;\n  setSelection(new int[]{ordinal});\n  assertEquals(\"\",model.getStatus());\n  invoke(pointerAction);\n  assertEquals(\"\",model.getStatus());\n  assertEquals(\"pointer\",getDataType(ordinal).getDisplayName());\n  assertEquals(\"pointer\",getDataType(ordinal).getName());\n  assertNull(((Pointer)getDataType(ordinal)).getDataType());\n  assertEquals(4,getDataType(ordinal).getLength());\n  assertEquals(4,model.getComponent(ordinal).getLength());\n  assertEquals(0x1e,model.getLength());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testCreatePointerOnUndefined() throws Exception {\n  init(SIMPLE_STACK);\n  int ordinal=6;\n  setSelection(new int[]{ordinal});\n  assertEquals(\"\",model.getStatus());\n  invoke(pointerAction);\n  assertEquals(\"\",model.getStatus());\n  assertEquals(\"pointer\",getDataType(ordinal).getDisplayName());\n  assertEquals(\"pointer\",getDataType(ordinal).getName());\n  assertNull(((Pointer)getDataType(ordinal)).getDataType());\n  assertEquals(4,getDataType(ordinal).getLength());\n  assertEquals(4,model.getComponent(ordinal).getLength());\n  assertEquals(0x1e,model.getLength());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(4,getDataType(ordinal).getLength());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 53,
      "startColumnNumber" : 15,
      "endLineNumber" : 53,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(4,model.getComponent(ordinal).getLength())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(4,model.getComponent(ordinal).getLength());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 41,
        "startColumnNumber" : 61,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  init(SIMPLE_STACK);\n  int ordinal=6;\n  setSelection(new int[]{ordinal});\n  assertEquals(\"\",model.getStatus());\n  invoke(pointerAction);\n  assertEquals(\"\",model.getStatus());\n  assertEquals(\"pointer\",getDataType(ordinal).getDisplayName());\n  assertEquals(\"pointer\",getDataType(ordinal).getName());\n  assertNull(((Pointer)getDataType(ordinal)).getDataType());\n  assertEquals(4,getDataType(ordinal).getLength());\n  assertEquals(4,model.getComponent(ordinal).getLength());\n  assertEquals(0x1e,model.getLength());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testCreatePointerOnUndefined() throws Exception {\n  init(SIMPLE_STACK);\n  int ordinal=6;\n  setSelection(new int[]{ordinal});\n  assertEquals(\"\",model.getStatus());\n  invoke(pointerAction);\n  assertEquals(\"\",model.getStatus());\n  assertEquals(\"pointer\",getDataType(ordinal).getDisplayName());\n  assertEquals(\"pointer\",getDataType(ordinal).getName());\n  assertNull(((Pointer)getDataType(ordinal)).getDataType());\n  assertEquals(4,getDataType(ordinal).getLength());\n  assertEquals(4,model.getComponent(ordinal).getLength());\n  assertEquals(0x1e,model.getLength());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(4,model.getComponent(ordinal).getLength());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 15,
    "endLineNumber" : 52,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 53,
    "startColumnNumber" : 15,
    "endLineNumber" : 53,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}