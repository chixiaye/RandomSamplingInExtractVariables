{
  "id" : 88,
  "expression" : "new ConsumeMessageDirectlyResultRequestHeader()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/proxy/src/test/java/org/apache/rocketmq/proxy/service/relay/LocalProxyRelayServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ConsumeMessageDirectlyResultRequestHeader()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 84,
      "startColumnNumber" : 66,
      "endLineNumber" : 84,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 84,
        "startColumnNumber" : 50,
        "endLineNumber" : 84,
        "endColumnNumber" : 113
      },
      "nodeContext" : "requestHeader=new ConsumeMessageDirectlyResultRequestHeader()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 114
      },
      "nodeContext" : "ConsumeMessageDirectlyResultRequestHeader requestHeader=new ConsumeMessageDirectlyResultRequestHeader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1365,
        "startLineNumber" : 83,
        "startColumnNumber" : 52,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConsumeMessageDirectlyResultRequestHeader requestHeader=new ConsumeMessageDirectlyResultRequestHeader();\n  String remark=\"ok\";\n  int opaque=123;\n  RemotingCommand remotingCommand=RemotingCommand.createRequestCommand(RequestCode.CONSUME_MESSAGE_DIRECTLY,null);\n  remotingCommand.setOpaque(opaque);\n  ConsumeMessageDirectlyResult result=new ConsumeMessageDirectlyResult();\n  result.setConsumeResult(CMResult.CR_SUCCESS);\n  ArgumentCaptor<RemotingCommand> argumentCaptor=ArgumentCaptor.forClass(RemotingCommand.class);\n  CompletableFuture<ProxyRelayResult<ConsumeMessageDirectlyResult>> future=localProxyRelayService.processConsumeMessageDirectly(ProxyContext.create(),remotingCommand,requestHeader);\n  future.complete(new ProxyRelayResult<>(ResponseCode.SUCCESS,remark,result));\n  Mockito.verify(nettyRemotingServerMock,Mockito.times(1)).processResponseCommand(Mockito.any(SimpleChannelHandlerContext.class),argumentCaptor.capture());\n  RemotingCommand remotingCommand1=argumentCaptor.getValue();\n  assertThat(remotingCommand1.getCode()).isEqualTo(ResponseCode.SUCCESS);\n  assertThat(remotingCommand1.getRemark()).isEqualTo(remark);\n  assertThat(remotingCommand1.getBody()).isEqualTo(result.encode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1424,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testProcessConsumeMessageDirectly(){\n  ConsumeMessageDirectlyResultRequestHeader requestHeader=new ConsumeMessageDirectlyResultRequestHeader();\n  String remark=\"ok\";\n  int opaque=123;\n  RemotingCommand remotingCommand=RemotingCommand.createRequestCommand(RequestCode.CONSUME_MESSAGE_DIRECTLY,null);\n  remotingCommand.setOpaque(opaque);\n  ConsumeMessageDirectlyResult result=new ConsumeMessageDirectlyResult();\n  result.setConsumeResult(CMResult.CR_SUCCESS);\n  ArgumentCaptor<RemotingCommand> argumentCaptor=ArgumentCaptor.forClass(RemotingCommand.class);\n  CompletableFuture<ProxyRelayResult<ConsumeMessageDirectlyResult>> future=localProxyRelayService.processConsumeMessageDirectly(ProxyContext.create(),remotingCommand,requestHeader);\n  future.complete(new ProxyRelayResult<>(ResponseCode.SUCCESS,remark,result));\n  Mockito.verify(nettyRemotingServerMock,Mockito.times(1)).processResponseCommand(Mockito.any(SimpleChannelHandlerContext.class),argumentCaptor.capture());\n  RemotingCommand remotingCommand1=argumentCaptor.getValue();\n  assertThat(remotingCommand1.getCode()).isEqualTo(ResponseCode.SUCCESS);\n  assertThat(remotingCommand1.getRemark()).isEqualTo(remark);\n  assertThat(remotingCommand1.getBody()).isEqualTo(result.encode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 114
      },
      "nodeContext" : "ConsumeMessageDirectlyResultRequestHeader requestHeader=new ConsumeMessageDirectlyResultRequestHeader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.header.ConsumeMessageDirectlyResultRequestHeader"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 84,
    "startColumnNumber" : 66,
    "endLineNumber" : 84,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}