{
  "id" : 148,
  "expression" : "\"s : ';'{}\\n\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestParserProfiler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"s : ';'{}\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 48,
      "startColumnNumber" : 4,
      "endLineNumber" : 48,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 11
      },
      "nodeContext" : "\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 46,
        "startColumnNumber" : 14,
        "endLineNumber" : 51,
        "endColumnNumber" : 7
      },
      "nodeContext" : "new Grammar(\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\",lg)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 46,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 7
      },
      "nodeContext" : "g=new Grammar(\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\",lg)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 8
      },
      "nodeContext" : "Grammar g=new Grammar(\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\",lg);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 45,
        "startColumnNumber" : 46,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\",lg);\n  DecisionInfo[] info=interpAndGetDecisionInfo(lg,g,\"s\",\";\");\n  assertEquals(1,info.length);\n  String expecting=\"{decision=0, contextSensitivities=0, errors=0, ambiguities=0, SLL_lookahead=1, \" + \"SLL_ATNTransitions=1, SLL_DFATransitions=0, LL_Fallback=0, LL_lookahead=0, LL_ATNTransitions=0}\";\n  assertEquals(expecting,info[0].toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testLL1() throws Exception {\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\",lg);\n  DecisionInfo[] info=interpAndGetDecisionInfo(lg,g,\"s\",\";\");\n  assertEquals(1,info.length);\n  String expecting=\"{decision=0, contextSensitivities=0, errors=0, ambiguities=0, SLL_lookahead=1, \" + \"SLL_ATNTransitions=1, SLL_DFATransitions=0, LL_Fallback=0, LL_lookahead=0, LL_ATNTransitions=0}\";\n  assertEquals(expecting,info[0].toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 11
      },
      "nodeContext" : "\"parser grammar T;\\n\" + \"s : ';'{}\\n\" + \"  | '.'\\n\"+ \"  ;\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 48,
    "startColumnNumber" : 4,
    "endLineNumber" : 48,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}