{
  "id" : 343,
  "expression" : "directBuf",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "directBuf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 390,
      "startColumnNumber" : 12,
      "endLineNumber" : 390,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 390,
        "startColumnNumber" : 12,
        "endLineNumber" : 390,
        "endColumnNumber" : 71
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 390,
        "startColumnNumber" : 12,
        "endLineNumber" : 390,
        "endColumnNumber" : 72
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 388,
        "startColumnNumber" : 42,
        "endLineNumber" : 393,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ByteBuf directBuf=alloc.directBuffer(readableBytes);\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 388,
        "startColumnNumber" : 8,
        "endLineNumber" : 393,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (alloc.isDirectBufferPooled()) {\n  ByteBuf directBuf=alloc.directBuffer(readableBytes);\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 380,
        "startColumnNumber" : 57,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 375,
        "startColumnNumber" : 4,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an off-heap copy of the specified  {@link ByteBuf}, and releases the original one. Note that this method does not create an off-heap copy if the allocation / deallocation cost is too high, but just returns the original  {@link ByteBuf}..\n */\nprotected final ByteBuf newDirectBuffer(ByteBuf buf){\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 390,
        "startColumnNumber" : 12,
        "endLineNumber" : 390,
        "endColumnNumber" : 72
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "directBuf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 392,
      "startColumnNumber" : 19,
      "endLineNumber" : 392,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 392,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return directBuf;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 388,
        "startColumnNumber" : 42,
        "endLineNumber" : 393,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ByteBuf directBuf=alloc.directBuffer(readableBytes);\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 388,
        "startColumnNumber" : 8,
        "endLineNumber" : 393,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (alloc.isDirectBufferPooled()) {\n  ByteBuf directBuf=alloc.directBuffer(readableBytes);\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 380,
        "startColumnNumber" : 57,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 375,
        "startColumnNumber" : 4,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an off-heap copy of the specified  {@link ByteBuf}, and releases the original one. Note that this method does not create an off-heap copy if the allocation / deallocation cost is too high, but just returns the original  {@link ByteBuf}..\n */\nprotected final ByteBuf newDirectBuffer(ByteBuf buf){\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 392,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return directBuf;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "directBuf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 396,
      "startColumnNumber" : 12,
      "endLineNumber" : 396,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 396,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 29
      },
      "nodeContext" : "directBuf != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (directBuf != null) {\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 380,
        "startColumnNumber" : 57,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 375,
        "startColumnNumber" : 4,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an off-heap copy of the specified  {@link ByteBuf}, and releases the original one. Note that this method does not create an off-heap copy if the allocation / deallocation cost is too high, but just returns the original  {@link ByteBuf}..\n */\nprotected final ByteBuf newDirectBuffer(ByteBuf buf){\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 396,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 29
      },
      "nodeContext" : "directBuf != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "directBuf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 397,
      "startColumnNumber" : 12,
      "endLineNumber" : 397,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 397,
        "endColumnNumber" : 71
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 397,
        "endColumnNumber" : 72
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 396,
        "startColumnNumber" : 31,
        "endLineNumber" : 400,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (directBuf != null) {\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 380,
        "startColumnNumber" : 57,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 375,
        "startColumnNumber" : 4,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an off-heap copy of the specified  {@link ByteBuf}, and releases the original one. Note that this method does not create an off-heap copy if the allocation / deallocation cost is too high, but just returns the original  {@link ByteBuf}..\n */\nprotected final ByteBuf newDirectBuffer(ByteBuf buf){\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 397,
        "endColumnNumber" : 72
      },
      "nodeContext" : "directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "directBuf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 399,
      "startColumnNumber" : 19,
      "endLineNumber" : 399,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 399,
        "startColumnNumber" : 12,
        "endLineNumber" : 399,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return directBuf;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 396,
        "startColumnNumber" : 31,
        "endLineNumber" : 400,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (directBuf != null) {\n  directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n  ReferenceCountUtil.safeRelease(buf);\n  return directBuf;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 380,
        "startColumnNumber" : 57,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 375,
        "startColumnNumber" : 4,
        "endLineNumber" : 404,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an off-heap copy of the specified  {@link ByteBuf}, and releases the original one. Note that this method does not create an off-heap copy if the allocation / deallocation cost is too high, but just returns the original  {@link ByteBuf}..\n */\nprotected final ByteBuf newDirectBuffer(ByteBuf buf){\n  final int readableBytes=buf.readableBytes();\n  if (readableBytes == 0) {\n    ReferenceCountUtil.safeRelease(buf);\n    return Unpooled.EMPTY_BUFFER;\n  }\n  final ByteBufAllocator alloc=alloc();\n  if (alloc.isDirectBufferPooled()) {\n    ByteBuf directBuf=alloc.directBuffer(readableBytes);\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  final ByteBuf directBuf=ByteBufUtil.threadLocalDirectBuffer();\n  if (directBuf != null) {\n    directBuf.writeBytes(buf,buf.readerIndex(),readableBytes);\n    ReferenceCountUtil.safeRelease(buf);\n    return directBuf;\n  }\n  return buf;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 399,
        "startColumnNumber" : 12,
        "endLineNumber" : 399,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return directBuf;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 390,
    "startColumnNumber" : 12,
    "endLineNumber" : 390,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 392,
    "startColumnNumber" : 19,
    "endLineNumber" : 392,
    "endColumnNumber" : 28
  }, {
    "charLength" : 9,
    "startLineNumber" : 396,
    "startColumnNumber" : 12,
    "endLineNumber" : 396,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 397,
    "startColumnNumber" : 12,
    "endLineNumber" : 397,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 399,
    "startColumnNumber" : 19,
    "endLineNumber" : 399,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}