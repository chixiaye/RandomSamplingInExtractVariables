{
  "id" : 393,
  "expression" : "Long",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowWithBellmanFord.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Long",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 39,
      "startColumnNumber" : 24,
      "endLineNumber" : 39,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 39,
        "startColumnNumber" : 24,
        "endLineNumber" : 39,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Long.MAX_VALUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 39,
        "startColumnNumber" : 11,
        "endLineNumber" : 39,
        "endColumnNumber" : 38
      },
      "nodeContext" : "bottleNeck=Long.MAX_VALUE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 39
      },
      "nodeContext" : "long bottleNeck=Long.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 36,
        "startColumnNumber" : 53,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long bottleNeck=Long.MAX_VALUE;\n  for (  Edge edge : path)   bottleNeck=min(bottleNeck,edge.remainingCapacity());\n  for (  Edge edge : path) {\n    edge.augment(bottleNeck);\n    minCost+=bottleNeck * edge.originalCost;\n  }\n  maxFlow+=bottleNeck;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((path=getAugmentingPath()).size() != 0) {\n  long bottleNeck=Long.MAX_VALUE;\n  for (  Edge edge : path)   bottleNeck=min(bottleNeck,edge.remainingCapacity());\n  for (  Edge edge : path) {\n    edge.augment(bottleNeck);\n    minCost+=bottleNeck * edge.originalCost;\n  }\n  maxFlow+=bottleNeck;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 32,
        "startColumnNumber" : 22,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Edge> path;\n  while ((path=getAugmentingPath()).size() != 0) {\n    long bottleNeck=Long.MAX_VALUE;\n    for (    Edge edge : path)     bottleNeck=min(bottleNeck,edge.remainingCapacity());\n    for (    Edge edge : path) {\n      edge.augment(bottleNeck);\n      minCost+=bottleNeck * edge.originalCost;\n    }\n    maxFlow+=bottleNeck;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void solve(){\n  List<Edge> path;\n  while ((path=getAugmentingPath()).size() != 0) {\n    long bottleNeck=Long.MAX_VALUE;\n    for (    Edge edge : path)     bottleNeck=min(bottleNeck,edge.remainingCapacity());\n    for (    Edge edge : path) {\n      edge.augment(bottleNeck);\n      minCost+=bottleNeck * edge.originalCost;\n    }\n    maxFlow+=bottleNeck;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 39
      },
      "nodeContext" : "long bottleNeck=Long.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 39,
    "startColumnNumber" : 24,
    "endLineNumber" : 39,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}