{
  "id" : 317,
  "expression" : "Math.abs(current1 - current2) < 0.1 && i1 > 0",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.erd.ui/src/org/jkiss/dbeaver/erd/ui/layout/GraphAnimation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.abs(current1 - current2) < 0.1 && i1 > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 196,
      "startColumnNumber" : 8,
      "endLineNumber" : 196,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 12,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n  prev1=current1;\n  prev2=current2;\n  i1--;\n  i2--;\n  current1=(double)i1 / size1;\n  current2=(double)i2 / size2;\n}\n else if (current1 < current2) {\n  points1.getPoint(p,i1);\n  points1.getPoint(q,i1 + 1);\n  p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n  p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n  points1.insertPoint(p,i1 + 1);\n  prev1=prev2=current2;\n  i2--;\n  current2=(double)i2 / size2;\n}\n else {\n  points2.getPoint(p,i2);\n  points2.getPoint(q,i2 + 1);\n  p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n  p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n  points2.insertPoint(p,i2 + 1);\n  prev2=prev1=current1;\n  i1--;\n  current1=(double)i1 / size1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 260,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 195,
        "startColumnNumber" : 3,
        "endLineNumber" : 240,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n    prev1=current1;\n    prev2=current2;\n    i1--;\n    i2--;\n    current1=(double)i1 / size1;\n    current2=(double)i2 / size2;\n  }\n else   if (current1 < current2) {\n    points1.getPoint(p,i1);\n    points1.getPoint(q,i1 + 1);\n    p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n    p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n    points1.insertPoint(p,i1 + 1);\n    prev1=prev2=current2;\n    i2--;\n    current2=(double)i2 / size2;\n  }\n else {\n    points2.getPoint(p,i2);\n    points2.getPoint(q,i2 + 1);\n    p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n    p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n    points2.insertPoint(p,i2 + 1);\n    prev2=prev1=current1;\n    i1--;\n    current1=(double)i1 / size1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 194,
        "startColumnNumber" : 3,
        "endLineNumber" : 240,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (i1 > 0 || i2 > 0) {\n  if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n    prev1=current1;\n    prev2=current2;\n    i1--;\n    i2--;\n    current1=(double)i1 / size1;\n    current2=(double)i2 / size2;\n  }\n else   if (current1 < current2) {\n    points1.getPoint(p,i1);\n    points1.getPoint(q,i1 + 1);\n    p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n    p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n    points1.insertPoint(p,i1 + 1);\n    prev1=prev2=current2;\n    i2--;\n    current2=(double)i2 / size2;\n  }\n else {\n    points2.getPoint(p,i2);\n    points2.getPoint(q,i2 + 1);\n    p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n    p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n    points2.insertPoint(p,i2 + 1);\n    prev2=prev1=current1;\n    i1--;\n    current1=(double)i1 / size1;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 269,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 179,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point p=new Point(), q=new Point();\n  int size1=points1.size() - 1;\n  int size2=points2.size() - 1;\n  int i1=size1;\n  int i2=size2;\n  double current1=1.0;\n  double current2=1.0;\n  double prev1=1.0;\n  double prev2=1.0;\n  while (i1 > 0 || i2 > 0) {\n    if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n      prev1=current1;\n      prev2=current2;\n      i1--;\n      i2--;\n      current1=(double)i1 / size1;\n      current2=(double)i2 / size2;\n    }\n else     if (current1 < current2) {\n      points1.getPoint(p,i1);\n      points1.getPoint(q,i1 + 1);\n      p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n      p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n      points1.insertPoint(p,i1 + 1);\n      prev1=prev2=current2;\n      i2--;\n      current2=(double)i2 / size2;\n    }\n else {\n      points2.getPoint(p,i2);\n      points2.getPoint(q,i2 + 1);\n      p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n      p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n      points2.insertPoint(p,i2 + 1);\n      prev2=prev1=current1;\n      i1--;\n      current1=(double)i1 / size1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 331,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (points1 != null && points1.size() != points2.size()) {\n  Point p=new Point(), q=new Point();\n  int size1=points1.size() - 1;\n  int size2=points2.size() - 1;\n  int i1=size1;\n  int i2=size2;\n  double current1=1.0;\n  double current2=1.0;\n  double prev1=1.0;\n  double prev2=1.0;\n  while (i1 > 0 || i2 > 0) {\n    if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n      prev1=current1;\n      prev2=current2;\n      i1--;\n      i2--;\n      current1=(double)i1 / size1;\n      current2=(double)i2 / size2;\n    }\n else     if (current1 < current2) {\n      points1.getPoint(p,i1);\n      points1.getPoint(q,i1 + 1);\n      p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n      p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n      points1.insertPoint(p,i1 + 1);\n      prev1=prev2=current2;\n      i2--;\n      current2=(double)i2 / size2;\n    }\n else {\n      points2.getPoint(p,i2);\n      points2.getPoint(q,i2 + 1);\n      p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n      p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n      points2.insertPoint(p,i2 + 1);\n      prev2=prev1=current1;\n      i1--;\n      current1=(double)i1 / size1;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 343,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 173,
        "startColumnNumber" : 1,
        "endLineNumber" : 243,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  PointList points1=(PointList)initialStates.get(conn);\n  PointList points2=conn.getPoints().getCopy();\n  if (points1 != null && points1.size() != points2.size()) {\n    Point p=new Point(), q=new Point();\n    int size1=points1.size() - 1;\n    int size2=points2.size() - 1;\n    int i1=size1;\n    int i2=size2;\n    double current1=1.0;\n    double current2=1.0;\n    double prev1=1.0;\n    double prev2=1.0;\n    while (i1 > 0 || i2 > 0) {\n      if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n        prev1=current1;\n        prev2=current2;\n        i1--;\n        i2--;\n        current1=(double)i1 / size1;\n        current2=(double)i2 / size2;\n      }\n else       if (current1 < current2) {\n        points1.getPoint(p,i1);\n        points1.getPoint(q,i1 + 1);\n        p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n        p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n        points1.insertPoint(p,i1 + 1);\n        prev1=prev2=current2;\n        i2--;\n        current2=(double)i2 / size2;\n      }\n else {\n        points2.getPoint(p,i2);\n        points2.getPoint(q,i2 + 1);\n        p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n        p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n        points2.insertPoint(p,i2 + 1);\n        prev2=prev1=current1;\n        i1--;\n        current1=(double)i1 / size1;\n      }\n    }\n  }\n  finalStates.put(conn,points2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 372,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 172,
        "startColumnNumber" : 1,
        "endLineNumber" : 243,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void recordFinalState(Connection conn){\n  PointList points1=(PointList)initialStates.get(conn);\n  PointList points2=conn.getPoints().getCopy();\n  if (points1 != null && points1.size() != points2.size()) {\n    Point p=new Point(), q=new Point();\n    int size1=points1.size() - 1;\n    int size2=points2.size() - 1;\n    int i1=size1;\n    int i2=size2;\n    double current1=1.0;\n    double current2=1.0;\n    double prev1=1.0;\n    double prev2=1.0;\n    while (i1 > 0 || i2 > 0) {\n      if (Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0) {\n        prev1=current1;\n        prev2=current2;\n        i1--;\n        i2--;\n        current1=(double)i1 / size1;\n        current2=(double)i2 / size2;\n      }\n else       if (current1 < current2) {\n        points1.getPoint(p,i1);\n        points1.getPoint(q,i1 + 1);\n        p.x=(int)(((q.x * (current2 - current1) + p.x * (prev1 - current2)) / (prev1 - current1)));\n        p.y=(int)(((q.y * (current2 - current1) + p.y * (prev1 - current2)) / (prev1 - current1)));\n        points1.insertPoint(p,i1 + 1);\n        prev1=prev2=current2;\n        i2--;\n        current2=(double)i2 / size2;\n      }\n else {\n        points2.getPoint(p,i2);\n        points2.getPoint(q,i2 + 1);\n        p.x=(int)(((q.x * (current1 - current2) + p.x * (prev2 - current1)) / (prev2 - current2)));\n        p.y=(int)(((q.y * (current1 - current2) + p.y * (prev2 - current1)) / (prev2 - current2)));\n        points2.insertPoint(p,i2 + 1);\n        prev2=prev1=current1;\n        i1--;\n        current1=(double)i1 / size1;\n      }\n    }\n  }\n  finalStates.put(conn,points2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 381,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Math.abs(current1 - current2) < 0.1 && i1 > 0 && i2 > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 12,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 196,
    "startColumnNumber" : 8,
    "endLineNumber" : 196,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}