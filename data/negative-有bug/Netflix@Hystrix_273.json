{
  "id" : 273,
  "expression" : "new CountDownLatch(1)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixThreadPoolTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CountDownLatch(1)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 133,
      "startColumnNumber" : 37,
      "endLineNumber" : 133,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 133,
        "startColumnNumber" : 29,
        "endLineNumber" : 133,
        "endColumnNumber" : 58
      },
      "nodeContext" : "start=new CountDownLatch(1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch start=new CountDownLatch(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 127,
        "startColumnNumber" : 79,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixThreadPool pool=Factory.getInstance(HystrixThreadPoolKey.Factory.asKey(\"threadPoolFactoryTest\"),HystrixThreadPoolPropertiesTest.getUnitTestPropertiesBuilder());\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(HystrixPlugins.getInstance().getConcurrencyStrategy(),pool);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    Factory.shutdown();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1549,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2500) public void testUnsubscribeHystrixThreadPool() throws InterruptedException {\n  HystrixThreadPool pool=Factory.getInstance(HystrixThreadPoolKey.Factory.asKey(\"threadPoolFactoryTest\"),HystrixThreadPoolPropertiesTest.getUnitTestPropertiesBuilder());\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(HystrixPlugins.getInstance().getConcurrencyStrategy(),pool);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    Factory.shutdown();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch start=new CountDownLatch(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.CountDownLatch"
  }, {
    "nodeContext" : "new CountDownLatch(1)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 134,
      "startColumnNumber" : 35,
      "endLineNumber" : 134,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 134,
        "startColumnNumber" : 29,
        "endLineNumber" : 134,
        "endColumnNumber" : 56
      },
      "nodeContext" : "end=new CountDownLatch(1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 57
      },
      "nodeContext" : "final CountDownLatch end=new CountDownLatch(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 127,
        "startColumnNumber" : 79,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixThreadPool pool=Factory.getInstance(HystrixThreadPoolKey.Factory.asKey(\"threadPoolFactoryTest\"),HystrixThreadPoolPropertiesTest.getUnitTestPropertiesBuilder());\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(HystrixPlugins.getInstance().getConcurrencyStrategy(),pool);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    Factory.shutdown();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1549,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2500) public void testUnsubscribeHystrixThreadPool() throws InterruptedException {\n  HystrixThreadPool pool=Factory.getInstance(HystrixThreadPoolKey.Factory.asKey(\"threadPoolFactoryTest\"),HystrixThreadPoolPropertiesTest.getUnitTestPropertiesBuilder());\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(HystrixPlugins.getInstance().getConcurrencyStrategy(),pool);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    Factory.shutdown();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 57
      },
      "nodeContext" : "final CountDownLatch end=new CountDownLatch(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.CountDownLatch"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 133,
    "startColumnNumber" : 37,
    "endLineNumber" : 133,
    "endColumnNumber" : 58
  }, {
    "charLength" : 21,
    "startLineNumber" : 134,
    "startColumnNumber" : 35,
    "endLineNumber" : 134,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}