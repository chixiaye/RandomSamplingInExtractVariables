{
  "id" : 450,
  "expression" : "(emailSent ? 1231 : 1237)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/CloningParameterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(emailSent ? 1231 : 1237)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 98,
      "startColumnNumber" : 38,
      "endLineNumber" : 98,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 98,
        "startColumnNumber" : 21,
        "endLineNumber" : 98,
        "endColumnNumber" : 63
      },
      "nodeContext" : "prime * result + (emailSent ? 1231 : 1237)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 63
      },
      "nodeContext" : "result=prime * result + (emailSent ? 1231 : 1237)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 64
      },
      "nodeContext" : "result=prime * result + (emailSent ? 1231 : 1237);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 94,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int prime=31;\n  int result=1;\n  result=prime * result + getOuterType().hashCode();\n  result=prime * result + (emailSent ? 1231 : 1237);\n  result=prime * result + ((name == null) ? 0 : name.hashCode());\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public int hashCode(){\n  final int prime=31;\n  int result=1;\n  result=prime * result + getOuterType().hashCode();\n  result=prime * result + (emailSent ? 1231 : 1237);\n  result=prime * result + ((name == null) ? 0 : name.hashCode());\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 64
      },
      "nodeContext" : "result=prime * result + (emailSent ? 1231 : 1237);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 98,
    "startColumnNumber" : 38,
    "endLineNumber" : 98,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}