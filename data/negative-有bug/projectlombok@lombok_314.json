{
  "id" : 314,
  "expression" : "f.getModifiers()",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/core/AST.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "f.getModifiers()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 204,
      "startColumnNumber" : 25,
      "endLineNumber" : 204,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 204,
        "startColumnNumber" : 7,
        "endLineNumber" : 204,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Modifier.isStatic(f.getModifiers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 204,
        "startColumnNumber" : 3,
        "endLineNumber" : 204,
        "endColumnNumber" : 53
      },
      "nodeContext" : "if (Modifier.isStatic(f.getModifiers())) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 203,
        "startColumnNumber" : 40,
        "endLineNumber" : 227,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (Modifier.isStatic(f.getModifiers()))   continue;\n  Class<?> t=f.getType();\n  int dim=0;\n  if (t.isArray()) {\n    while (t.isArray()) {\n      dim++;\n      t=t.getComponentType();\n    }\n  }\n else {\n    while (Collection.class.isAssignableFrom(t)) {\n      dim++;\n      t=getComponentType(f.getGenericType());\n    }\n  }\n  for (  Class<?> statementType : getStatementTypes()) {\n    if (statementType.isAssignableFrom(t)) {\n      f.setAccessible(true);\n      fields.add(new FieldAccess(f,dim));\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 203,
        "startColumnNumber" : 2,
        "endLineNumber" : 227,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Field f : c.getDeclaredFields()) {\n  if (Modifier.isStatic(f.getModifiers()))   continue;\n  Class<?> t=f.getType();\n  int dim=0;\n  if (t.isArray()) {\n    while (t.isArray()) {\n      dim++;\n      t=t.getComponentType();\n    }\n  }\n else {\n    while (Collection.class.isAssignableFrom(t)) {\n      dim++;\n      t=getComponentType(f.getGenericType());\n    }\n  }\n  for (  Class<?> statementType : getStatementTypes()) {\n    if (statementType.isAssignableFrom(t)) {\n      f.setAccessible(true);\n      fields.add(new FieldAccess(f,dim));\n      break;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 201,
        "startColumnNumber" : 68,
        "endLineNumber" : 229,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (c == Object.class || c == null)   return;\n  for (  Field f : c.getDeclaredFields()) {\n    if (Modifier.isStatic(f.getModifiers()))     continue;\n    Class<?> t=f.getType();\n    int dim=0;\n    if (t.isArray()) {\n      while (t.isArray()) {\n        dim++;\n        t=t.getComponentType();\n      }\n    }\n else {\n      while (Collection.class.isAssignableFrom(t)) {\n        dim++;\n        t=getComponentType(f.getGenericType());\n      }\n    }\n    for (    Class<?> statementType : getStatementTypes()) {\n      if (statementType.isAssignableFrom(t)) {\n        f.setAccessible(true);\n        fields.add(new FieldAccess(f,dim));\n        break;\n      }\n    }\n  }\n  getFields(c.getSuperclass(),fields);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 201,
        "startColumnNumber" : 1,
        "endLineNumber" : 229,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void getFields(Class<?> c,Collection<FieldAccess> fields){\n  if (c == Object.class || c == null)   return;\n  for (  Field f : c.getDeclaredFields()) {\n    if (Modifier.isStatic(f.getModifiers()))     continue;\n    Class<?> t=f.getType();\n    int dim=0;\n    if (t.isArray()) {\n      while (t.isArray()) {\n        dim++;\n        t=t.getComponentType();\n      }\n    }\n else {\n      while (Collection.class.isAssignableFrom(t)) {\n        dim++;\n        t=getComponentType(f.getGenericType());\n      }\n    }\n    for (    Class<?> statementType : getStatementTypes()) {\n      if (statementType.isAssignableFrom(t)) {\n        f.setAccessible(true);\n        fields.add(new FieldAccess(f,dim));\n        break;\n      }\n    }\n  }\n  getFields(c.getSuperclass(),fields);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 204,
        "startColumnNumber" : 3,
        "endLineNumber" : 204,
        "endColumnNumber" : 53
      },
      "nodeContext" : "if (Modifier.isStatic(f.getModifiers())) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 204,
    "startColumnNumber" : 25,
    "endLineNumber" : 204,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}