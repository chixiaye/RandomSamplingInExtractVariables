{
  "id" : 448,
  "expression" : "fab",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/catalog/java/io/material/catalog/adaptive/AdaptiveUtils.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 78,
      "startColumnNumber" : 10,
      "endLineNumber" : 78,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.VISIBLE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 76,
        "startColumnNumber" : 62,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  }, {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 39
      },
      "nodeContext" : "fab.setVisibility(View.VISIBLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "fab.setVisibility(View.VISIBLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 78,
        "startColumnNumber" : 23,
        "endLineNumber" : 80,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  fab.setVisibility(View.VISIBLE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.VISIBLE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 76,
        "startColumnNumber" : 62,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "fab.setVisibility(View.VISIBLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  }, {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 86,
      "startColumnNumber" : 10,
      "endLineNumber" : 86,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 86,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 84,
        "startColumnNumber" : 68,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 86,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  }, {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 87,
      "startColumnNumber" : 8,
      "endLineNumber" : 87,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 36
      },
      "nodeContext" : "fab.setVisibility(View.GONE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 37
      },
      "nodeContext" : "fab.setVisibility(View.GONE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 86,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 84,
        "startColumnNumber" : 68,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 37
      },
      "nodeContext" : "fab.setVisibility(View.GONE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  }, {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 95,
      "startColumnNumber" : 10,
      "endLineNumber" : 95,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 93,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 21
      },
      "nodeContext" : "fab != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  }, {
    "nodeContext" : "fab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 96,
      "startColumnNumber" : 8,
      "endLineNumber" : 96,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 36
      },
      "nodeContext" : "fab.setVisibility(View.GONE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 37
      },
      "nodeContext" : "fab.setVisibility(View.GONE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 23,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fab != null) {\n  fab.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 93,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.VISIBLE);\n  }\n  bottomNav.setVisibility(View.VISIBLE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.GONE);\n}\n else if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.VISIBLE);\n  navDrawer.setVisibility(View.GONE);\n  navFab.shrink();\n}\n else {\n  if (fab != null) {\n    fab.setVisibility(View.GONE);\n  }\n  bottomNav.setVisibility(View.GONE);\n  navRail.setVisibility(View.GONE);\n  navDrawer.setVisibility(View.VISIBLE);\n  navFab.extend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2388,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the visibility of the main navigation view components according to screen size. <p>The small screen layout should have a bottom navigation and optionally a fab. The medium layout should have a navigation rail with a fab, and the large layout should have a navigation drawer with an extended fab.\n */\nstatic void updateNavigationViewLayout(int screenWidth,@NonNull DrawerLayout drawerLayout,@NonNull NavigationView modalNavDrawer,@Nullable FloatingActionButton fab,@NonNull BottomNavigationView bottomNav,@NonNull NavigationRailView navRail,@NonNull NavigationView navDrawer,@NonNull ExtendedFloatingActionButton navFab){\n  drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n  setNavRailButtonOnClickListener(drawerLayout,navRail.getHeaderView().findViewById(R.id.nav_button),modalNavDrawer);\n  setModalDrawerButtonOnClickListener(drawerLayout,modalNavDrawer.getHeaderView(0).findViewById(R.id.nav_button),modalNavDrawer);\n  modalNavDrawer.setNavigationItemSelectedListener(new OnNavigationItemSelectedListener(){\n    @Override public boolean onNavigationItemSelected(    @NonNull MenuItem item){\n      modalNavDrawer.setCheckedItem(item);\n      drawerLayout.closeDrawer(modalNavDrawer);\n      return true;\n    }\n  }\n);\n  if (screenWidth < AdaptiveUtils.MEDIUM_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.VISIBLE);\n    }\n    bottomNav.setVisibility(View.VISIBLE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.GONE);\n  }\n else   if (screenWidth < AdaptiveUtils.LARGE_SCREEN_WIDTH_SIZE) {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.VISIBLE);\n    navDrawer.setVisibility(View.GONE);\n    navFab.shrink();\n  }\n else {\n    if (fab != null) {\n      fab.setVisibility(View.GONE);\n    }\n    bottomNav.setVisibility(View.GONE);\n    navRail.setVisibility(View.GONE);\n    navDrawer.setVisibility(View.VISIBLE);\n    navFab.extend();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 37
      },
      "nodeContext" : "fab.setVisibility(View.GONE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.floatingactionbutton.FloatingActionButton"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 78,
    "startColumnNumber" : 10,
    "endLineNumber" : 78,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 86,
    "startColumnNumber" : 10,
    "endLineNumber" : 86,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 87,
    "startColumnNumber" : 8,
    "endLineNumber" : 87,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 95,
    "startColumnNumber" : 10,
    "endLineNumber" : 95,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 96,
    "startColumnNumber" : 8,
    "endLineNumber" : 96,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}