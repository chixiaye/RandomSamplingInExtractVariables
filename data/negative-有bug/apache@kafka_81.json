{
  "id" : 81,
  "expression" : "supplier.theCapturedProcessor()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "supplier.theCapturedProcessor()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 108,
      "startColumnNumber" : 16,
      "endLineNumber" : 108,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 59
      },
      "nodeContext" : "supplier.theCapturedProcessor().processed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 93,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 94,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 81,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final TestInputTopic<String,String> inputTopic=driver.createInputTopic(topic1,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n  inputTopic.pipeInput(\"A\",\"1\",10L);\n  inputTopic.pipeInput(\"B\",\"2\",15L);\n  inputTopic.pipeInput(\"A\",\"3\",20L);\n  inputTopic.pipeInput(\"B\",\"4\",18L);\n  inputTopic.pipeInput(\"C\",\"5\",5L);\n  inputTopic.pipeInput(\"D\",\"6\",25L);\n  inputTopic.pipeInput(\"B\",\"7\",15L);\n  inputTopic.pipeInput(\"C\",\"8\",10L);\n  assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),CONFIG,Instant.ofEpochMilli(0L))){\n  final TestInputTopic<String,String> inputTopic=driver.createInputTopic(topic1,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n  inputTopic.pipeInput(\"A\",\"1\",10L);\n  inputTopic.pipeInput(\"B\",\"2\",15L);\n  inputTopic.pipeInput(\"A\",\"3\",20L);\n  inputTopic.pipeInput(\"B\",\"4\",18L);\n  inputTopic.pipeInput(\"C\",\"5\",5L);\n  inputTopic.pipeInput(\"D\",\"6\",25L);\n  inputTopic.pipeInput(\"B\",\"7\",15L);\n  inputTopic.pipeInput(\"C\",\"8\",10L);\n  assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 197,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2352,
        "startLineNumber" : 61,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamsBuilder builder=new StreamsBuilder();\n  final String topic1=\"topic1\";\n  final KTable<String,String> table1=builder.table(topic1,consumed);\n  final KTable<String,String> table2=table1.groupBy(MockMapper.noOpKeyValueMapper(),stringSerialized).aggregate(MockInitializer.STRING_INIT,MockAggregator.TOSTRING_ADDER,MockAggregator.TOSTRING_REMOVER,Materialized.<String,String,KeyValueStore<Bytes,byte[]>>as(\"topic1-Canonized\").withValueSerde(stringSerde));\n  table2.toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),CONFIG,Instant.ofEpochMilli(0L))){\n    final TestInputTopic<String,String> inputTopic=driver.createInputTopic(topic1,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n    inputTopic.pipeInput(\"A\",\"1\",10L);\n    inputTopic.pipeInput(\"B\",\"2\",15L);\n    inputTopic.pipeInput(\"A\",\"3\",20L);\n    inputTopic.pipeInput(\"B\",\"4\",18L);\n    inputTopic.pipeInput(\"C\",\"5\",5L);\n    inputTopic.pipeInput(\"D\",\"6\",25L);\n    inputTopic.pipeInput(\"B\",\"7\",15L);\n    inputTopic.pipeInput(\"C\",\"8\",10L);\n    assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2389,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAggBasic(){\n  final StreamsBuilder builder=new StreamsBuilder();\n  final String topic1=\"topic1\";\n  final KTable<String,String> table1=builder.table(topic1,consumed);\n  final KTable<String,String> table2=table1.groupBy(MockMapper.noOpKeyValueMapper(),stringSerialized).aggregate(MockInitializer.STRING_INIT,MockAggregator.TOSTRING_ADDER,MockAggregator.TOSTRING_REMOVER,Materialized.<String,String,KeyValueStore<Bytes,byte[]>>as(\"topic1-Canonized\").withValueSerde(stringSerde));\n  table2.toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),CONFIG,Instant.ofEpochMilli(0L))){\n    final TestInputTopic<String,String> inputTopic=driver.createInputTopic(topic1,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO);\n    inputTopic.pipeInput(\"A\",\"1\",10L);\n    inputTopic.pipeInput(\"B\",\"2\",15L);\n    inputTopic.pipeInput(\"A\",\"3\",20L);\n    inputTopic.pipeInput(\"B\",\"4\",18L);\n    inputTopic.pipeInput(\"C\",\"5\",5L);\n    inputTopic.pipeInput(\"D\",\"6\",25L);\n    inputTopic.pipeInput(\"B\",\"7\",15L);\n    inputTopic.pipeInput(\"C\",\"8\",10L);\n    assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"0+1\",10L),new KeyValueTimestamp<>(\"B\",\"0+2\",15L),new KeyValueTimestamp<>(\"A\",\"0+1-1\",20L),new KeyValueTimestamp<>(\"A\",\"0+1-1+3\",20L),new KeyValueTimestamp<>(\"B\",\"0+2-2\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4\",18L),new KeyValueTimestamp<>(\"C\",\"0+5\",5L),new KeyValueTimestamp<>(\"D\",\"0+6\",25L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4\",18L),new KeyValueTimestamp<>(\"B\",\"0+2-2+4-4+7\",18L),new KeyValueTimestamp<>(\"C\",\"0+5-5\",10L),new KeyValueTimestamp<>(\"C\",\"0+5-5+8\",10L)),supplier.theCapturedProcessor().processed());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 59
      },
      "nodeContext" : "supplier.theCapturedProcessor().processed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.test.MockApiProcessor<java.lang.String,java.lang.Object,java.lang.Void,java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 108,
    "startColumnNumber" : 16,
    "endLineNumber" : 108,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}