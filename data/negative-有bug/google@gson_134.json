{
  "id" : 134,
  "expression" : "Class.class",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Class.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 43,
      "startColumnNumber" : 80,
      "endLineNumber" : 43,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 43,
        "startColumnNumber" : 38,
        "endLineNumber" : 43,
        "endColumnNumber" : 92
      },
      "nodeContext" : "unsafeClass.getMethod(\"allocateInstance\",Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 43,
        "startColumnNumber" : 19,
        "endLineNumber" : 43,
        "endColumnNumber" : 92
      },
      "nodeContext" : "allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 93
      },
      "nodeContext" : "final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n  Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n  f.setAccessible(true);\n  final Object unsafe=f.get(null);\n  final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)allocateInstance.invoke(unsafe,c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n  Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n  f.setAccessible(true);\n  final Object unsafe=f.get(null);\n  final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)allocateInstance.invoke(unsafe,c);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 93
      },
      "nodeContext" : "final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Class>"
  }, {
    "nodeContext" : "Class.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 44,
      "endLineNumber" : 61,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,Object.class);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,Object.class);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 70,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Class>"
  }, {
    "nodeContext" : "Class.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 57,
      "endLineNumber" : 61,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,Object.class);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,Object.class);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 70,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Class>"
  }, {
    "nodeContext" : "Class.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 80,
      "startColumnNumber" : 49,
      "endLineNumber" : 80,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 79,
        "startColumnNumber" : 32,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 79,
        "startColumnNumber" : 13,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n  getConstructorId.setAccessible(true);\n  final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n  final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,constructorId);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n  getConstructorId.setAccessible(true);\n  final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n  final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,constructorId);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 79,
        "startColumnNumber" : 32,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Class>"
  }, {
    "nodeContext" : "Class.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 84,
      "startColumnNumber" : 44,
      "endLineNumber" : 84,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 84,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 83,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 67
      },
      "nodeContext" : "newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 68
      },
      "nodeContext" : "final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n  getConstructorId.setAccessible(true);\n  final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n  final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,constructorId);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n  getConstructorId.setAccessible(true);\n  final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n  final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n  newInstance.setAccessible(true);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)newInstance.invoke(null,c,constructorId);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 84,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Class>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 43,
    "startColumnNumber" : 80,
    "endLineNumber" : 43,
    "endColumnNumber" : 91
  }, {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 44,
    "endLineNumber" : 61,
    "endColumnNumber" : 55
  }, {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 57,
    "endLineNumber" : 61,
    "endColumnNumber" : 68
  }, {
    "charLength" : 11,
    "startLineNumber" : 80,
    "startColumnNumber" : 49,
    "endLineNumber" : 80,
    "endColumnNumber" : 60
  }, {
    "charLength" : 11,
    "startLineNumber" : 84,
    "startColumnNumber" : 44,
    "endLineNumber" : 84,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}