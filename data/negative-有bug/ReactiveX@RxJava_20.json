{
  "id" : 20,
  "expression" : "calcElementOffset(index + step,mask)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/rxjava3/operators/SpscArrayQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "calcElementOffset(index + step,mask)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 75,
      "startColumnNumber" : 34,
      "endLineNumber" : 75,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 72
      },
      "nodeContext" : "lvElement(calcElementOffset(index + step,mask))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 72
      },
      "nodeContext" : "null == lvElement(calcElementOffset(index + step,mask))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null == lvElement(calcElementOffset(index + step,mask))) {\n  producerLookAhead=index + step;\n}\n else if (null != lvElement(offset)) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 73,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int step=lookAheadStep;\n  if (null == lvElement(calcElementOffset(index + step,mask))) {\n    producerLookAhead=index + step;\n  }\n else   if (null != lvElement(offset)) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (index >= producerLookAhead) {\n  int step=lookAheadStep;\n  if (null == lvElement(calcElementOffset(index + step,mask))) {\n    producerLookAhead=index + step;\n  }\n else   if (null != lvElement(offset)) {\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 65,
        "startColumnNumber" : 30,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == e) {\n    throw new NullPointerException(\"Null is not a valid element\");\n  }\n  final int mask=this.mask;\n  final long index=producerIndex.get();\n  final int offset=calcElementOffset(index,mask);\n  if (index >= producerLookAhead) {\n    int step=lookAheadStep;\n    if (null == lvElement(calcElementOffset(index + step,mask))) {\n      producerLookAhead=index + step;\n    }\n else     if (null != lvElement(offset)) {\n      return false;\n    }\n  }\n  soElement(offset,e);\n  soProducerIndex(index + 1);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean offer(E e){\n  if (null == e) {\n    throw new NullPointerException(\"Null is not a valid element\");\n  }\n  final int mask=this.mask;\n  final long index=producerIndex.get();\n  final int offset=calcElementOffset(index,mask);\n  if (index >= producerLookAhead) {\n    int step=lookAheadStep;\n    if (null == lvElement(calcElementOffset(index + step,mask))) {\n      producerLookAhead=index + step;\n    }\n else     if (null != lvElement(offset)) {\n      return false;\n    }\n  }\n  soElement(offset,e);\n  soProducerIndex(index + 1);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 72
      },
      "nodeContext" : "null == lvElement(calcElementOffset(index + step,mask))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 75,
    "startColumnNumber" : 34,
    "endLineNumber" : 75,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}