{
  "id" : 162,
  "expression" : "latch.await(2,SECONDS)",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/CallTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "latch.await(2,SECONDS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 83,
      "startColumnNumber" : 15,
      "endLineNumber" : 83,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertTrue(latch.await(2,SECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertTrue(latch.await(2,SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 63,
        "startColumnNumber" : 63,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  RestAdapter ra=new RestAdapter.Builder().endpoint(server.getUrl(\"/\").toString()).build();\n  Service example=ra.create(Service.class);\n  server.enqueue(new MockResponse().setBody(\"Hi\"));\n  final AtomicReference<Response<String>> responseRef=new AtomicReference<>();\n  final CountDownLatch latch=new CountDownLatch(1);\n  example.getMethod().enqueue(new Callback<String>(){\n    @Override public void success(    Response<String> response){\n      responseRef.set(response);\n      latch.countDown();\n    }\n    @Override public void failure(    Throwable t){\n      t.printStackTrace();\n    }\n  }\n);\n  assertTrue(latch.await(2,SECONDS));\n  Response<String> response=responseRef.get();\n  assertThat(response.isSuccess()).isTrue();\n  assertThat(response.body()).isEqualTo(\"Hi\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void http200Async() throws InterruptedException {\n  RestAdapter ra=new RestAdapter.Builder().endpoint(server.getUrl(\"/\").toString()).build();\n  Service example=ra.create(Service.class);\n  server.enqueue(new MockResponse().setBody(\"Hi\"));\n  final AtomicReference<Response<String>> responseRef=new AtomicReference<>();\n  final CountDownLatch latch=new CountDownLatch(1);\n  example.getMethod().enqueue(new Callback<String>(){\n    @Override public void success(    Response<String> response){\n      responseRef.set(response);\n      latch.countDown();\n    }\n    @Override public void failure(    Throwable t){\n      t.printStackTrace();\n    }\n  }\n);\n  assertTrue(latch.await(2,SECONDS));\n  Response<String> response=responseRef.get();\n  assertThat(response.isSuccess()).isTrue();\n  assertThat(response.body()).isEqualTo(\"Hi\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertTrue(latch.await(2,SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 83,
    "startColumnNumber" : 15,
    "endLineNumber" : 83,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}