{
  "id" : 77,
  "expression" : "\"ms, reflected=\"",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTestPerformance/src/androidTest/java/org/greenrobot/greendao/performance/ReflectionPerformanceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ms, reflected=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 64,
      "startColumnNumber" : 45,
      "endLineNumber" : 64,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 64,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 46
      },
      "nodeContext" : "\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 71
      },
      "nodeContext" : "\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\" + ((float)time2) / time",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 72
      },
      "nodeContext" : "DaoLog.d(\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\" + ((float)time2) / time)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 73
      },
      "nodeContext" : "DaoLog.d(\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\" + ((float)time2) / time);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 49,
        "startColumnNumber" : 62,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int count=100000;\n  long start=System.currentTimeMillis();\n  for (int i=0; i < count; i++) {\n    setIntValue(i);\n  }\n  long time=System.currentTimeMillis() - start;\n  Method method=getClass().getMethod(\"setIntValue\",int.class);\n  long start2=System.currentTimeMillis();\n  for (int i=0; i < count; i++) {\n    method.invoke(this,i);\n  }\n  long time2=System.currentTimeMillis() - start2;\n  DaoLog.d(\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\" + ((float)time2) / time);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testSetIntPerf() throws SecurityException, NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {\n  int count=100000;\n  long start=System.currentTimeMillis();\n  for (int i=0; i < count; i++) {\n    setIntValue(i);\n  }\n  long time=System.currentTimeMillis() - start;\n  Method method=getClass().getMethod(\"setIntValue\",int.class);\n  long start2=System.currentTimeMillis();\n  for (int i=0; i < count; i++) {\n    method.invoke(this,i);\n  }\n  long time2=System.currentTimeMillis() - start2;\n  DaoLog.d(\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2 + \" refelected ops/s, slower=\" + ((float)time2) / time);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 64,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"set int: normal=\" + time + \"ms, reflected=\"+ time2+ \"ms, \"+ 1000 * count / time2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 64,
    "startColumnNumber" : 45,
    "endLineNumber" : 64,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}