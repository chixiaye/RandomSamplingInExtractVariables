{
  "id" : 334,
  "expression" : "childOnCheckedStateChangedListener",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/catalog/java/io/material/catalog/checkbox/CheckBoxMainDemoFragment.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "childOnCheckedStateChangedListener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 94,
      "startColumnNumber" : 44,
      "endLineNumber" : 94,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 79
      },
      "nodeContext" : "((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 80
      },
      "nodeContext" : "((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 92,
        "startColumnNumber" : 46,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (CheckBox child : childrenCheckBoxes) {\n  ((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2582,
        "startLineNumber" : 42,
        "startColumnNumber" : 93,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  View view=layoutInflater.inflate(R.layout.cat_checkbox,viewGroup,false);\n  ViewGroup toggleContainer=view.findViewById(R.id.checkbox_toggle_container);\n  List<CheckBox> toggledCheckBoxes=DemoUtils.findViewsWithType(toggleContainer,CheckBox.class);\n  List<MaterialCheckBox> allCheckBoxes=DemoUtils.findViewsWithType(view,MaterialCheckBox.class);\n  CheckBox checkBoxToggle=view.findViewById(R.id.checkbox_toggle);\n  checkBoxToggle.setOnCheckedChangeListener((  CompoundButton buttonView,  boolean isChecked) -> {\n    for (    CheckBox cb : toggledCheckBoxes) {\n      cb.setEnabled(isChecked);\n    }\n  }\n);\n  CheckBox checkBoxToggleError=view.findViewById(R.id.checkbox_toggle_error);\n  checkBoxToggleError.setOnCheckedChangeListener((  CompoundButton buttonView,  boolean isChecked) -> {\n    for (    MaterialCheckBox cb : allCheckBoxes) {\n      cb.setErrorShown(isChecked);\n    }\n  }\n);\n  CheckBox firstChild=view.findViewById(R.id.checkbox_child_1);\n  firstChild.setChecked(true);\n  ViewGroup indeterminateContainer=view.findViewById(R.id.checkbox_indeterminate_container);\n  List<CheckBox> childrenCheckBoxes=DemoUtils.findViewsWithType(indeterminateContainer,CheckBox.class);\n  MaterialCheckBox checkBoxParent=view.findViewById(R.id.checkbox_parent);\n  OnCheckedStateChangedListener parentOnCheckedStateChangedListener=(checkBox,state) -> {\n    boolean isChecked=checkBox.isChecked();\n    if (state != MaterialCheckBox.STATE_INDETERMINATE) {\n      isUpdatingChildren=true;\n      for (      CheckBox child : childrenCheckBoxes) {\n        child.setChecked(isChecked);\n      }\n      isUpdatingChildren=false;\n    }\n  }\n;\n  checkBoxParent.addOnCheckedStateChangedListener(parentOnCheckedStateChangedListener);\n  OnCheckedStateChangedListener childOnCheckedStateChangedListener=(checkBox,state) -> {\n    if (isUpdatingChildren) {\n      return;\n    }\n    setParentState(checkBoxParent,childrenCheckBoxes,parentOnCheckedStateChangedListener);\n  }\n;\n  for (  CheckBox child : childrenCheckBoxes) {\n    ((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener);\n  }\n  setParentState(checkBoxParent,childrenCheckBoxes,parentOnCheckedStateChangedListener);\n  return view;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2719,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public View onCreateDemoView(LayoutInflater layoutInflater,@Nullable ViewGroup viewGroup,@Nullable Bundle bundle){\n  View view=layoutInflater.inflate(R.layout.cat_checkbox,viewGroup,false);\n  ViewGroup toggleContainer=view.findViewById(R.id.checkbox_toggle_container);\n  List<CheckBox> toggledCheckBoxes=DemoUtils.findViewsWithType(toggleContainer,CheckBox.class);\n  List<MaterialCheckBox> allCheckBoxes=DemoUtils.findViewsWithType(view,MaterialCheckBox.class);\n  CheckBox checkBoxToggle=view.findViewById(R.id.checkbox_toggle);\n  checkBoxToggle.setOnCheckedChangeListener((  CompoundButton buttonView,  boolean isChecked) -> {\n    for (    CheckBox cb : toggledCheckBoxes) {\n      cb.setEnabled(isChecked);\n    }\n  }\n);\n  CheckBox checkBoxToggleError=view.findViewById(R.id.checkbox_toggle_error);\n  checkBoxToggleError.setOnCheckedChangeListener((  CompoundButton buttonView,  boolean isChecked) -> {\n    for (    MaterialCheckBox cb : allCheckBoxes) {\n      cb.setErrorShown(isChecked);\n    }\n  }\n);\n  CheckBox firstChild=view.findViewById(R.id.checkbox_child_1);\n  firstChild.setChecked(true);\n  ViewGroup indeterminateContainer=view.findViewById(R.id.checkbox_indeterminate_container);\n  List<CheckBox> childrenCheckBoxes=DemoUtils.findViewsWithType(indeterminateContainer,CheckBox.class);\n  MaterialCheckBox checkBoxParent=view.findViewById(R.id.checkbox_parent);\n  OnCheckedStateChangedListener parentOnCheckedStateChangedListener=(checkBox,state) -> {\n    boolean isChecked=checkBox.isChecked();\n    if (state != MaterialCheckBox.STATE_INDETERMINATE) {\n      isUpdatingChildren=true;\n      for (      CheckBox child : childrenCheckBoxes) {\n        child.setChecked(isChecked);\n      }\n      isUpdatingChildren=false;\n    }\n  }\n;\n  checkBoxParent.addOnCheckedStateChangedListener(parentOnCheckedStateChangedListener);\n  OnCheckedStateChangedListener childOnCheckedStateChangedListener=(checkBox,state) -> {\n    if (isUpdatingChildren) {\n      return;\n    }\n    setParentState(checkBoxParent,childrenCheckBoxes,parentOnCheckedStateChangedListener);\n  }\n;\n  for (  CheckBox child : childrenCheckBoxes) {\n    ((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener);\n  }\n  setParentState(checkBoxParent,childrenCheckBoxes,parentOnCheckedStateChangedListener);\n  return view;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 79
      },
      "nodeContext" : "((MaterialCheckBox)child).addOnCheckedStateChangedListener(childOnCheckedStateChangedListener)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.checkbox.MaterialCheckBox.OnCheckedStateChangedListener"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 94,
    "startColumnNumber" : 44,
    "endLineNumber" : 94,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}