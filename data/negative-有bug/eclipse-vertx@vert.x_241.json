{
  "id" : 241,
  "expression" : "file",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/file/impl/URLBundleFileResolverTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 33,
      "startColumnNumber" : 15,
      "endLineNumber" : 33,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 33,
        "startColumnNumber" : 15,
        "endLineNumber" : 33,
        "endColumnNumber" : 28
      },
      "nodeContext" : "file.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertTrue(file.exists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertTrue(file.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 29,
        "startColumnNumber" : 37,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String fileName=\"java/lang/Object.class\";\n  assertFalse(resolver.getFileCache().getFile(fileName).exists());\n  File file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n  file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testResolveURLBundle(){\n  String fileName=\"java/lang/Object.class\";\n  assertFalse(resolver.getFileCache().getFile(fileName).exists());\n  File file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n  file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertTrue(file.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 38,
      "startColumnNumber" : 15,
      "endLineNumber" : 38,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 38,
        "endColumnNumber" : 28
      },
      "nodeContext" : "file.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertTrue(file.exists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertTrue(file.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 29,
        "startColumnNumber" : 37,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String fileName=\"java/lang/Object.class\";\n  assertFalse(resolver.getFileCache().getFile(fileName).exists());\n  File file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n  file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testResolveURLBundle(){\n  String fileName=\"java/lang/Object.class\";\n  assertFalse(resolver.getFileCache().getFile(fileName).exists());\n  File file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n  file=resolver.resolveFile(fileName);\n  assertTrue(file.exists());\n  assertTrue(resolver.getFileCache().getFile(fileName).exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertTrue(file.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 33,
    "startColumnNumber" : 15,
    "endLineNumber" : 33,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 38,
    "startColumnNumber" : 15,
    "endLineNumber" : 38,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}