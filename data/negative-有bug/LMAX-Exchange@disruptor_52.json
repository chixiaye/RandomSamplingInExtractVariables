{
  "id" : 52,
  "expression" : "ringBuffer",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/SequenceGroup.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ringBuffer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 123,
      "startColumnNumber" : 60,
      "endLineNumber" : 123,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 81
      },
      "nodeContext" : "SequenceGroups.addSequences(this,SEQUENCE_UPDATER,ringBuffer,sequence)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 82
      },
      "nodeContext" : "SequenceGroups.addSequences(this,SEQUENCE_UPDATER,ringBuffer,sequence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SequenceGroups.addSequences(this,SEQUENCE_UPDATER,ringBuffer,sequence);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Adds a sequence to the sequence group after threads have started to publish to the Disruptor.  It will set the sequences to cursor value of the ringBuffer just after adding them.  This should prevent any nasty rewind/wrapping effects. \n * @param ringBuffer The ringBuffer that the owner of this sequence group willbe pulling it's events from.\n * @param sequence The sequence to add.\n */\npublic void addWhileRunning(RingBuffer<?> ringBuffer,Sequence sequence){\n  SequenceGroups.addSequences(this,SEQUENCE_UPDATER,ringBuffer,sequence);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 24,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 82
      },
      "nodeContext" : "SequenceGroups.addSequences(this,SEQUENCE_UPDATER,ringBuffer,sequence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.RingBuffer<>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 123,
    "startColumnNumber" : 60,
    "endLineNumber" : 123,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}