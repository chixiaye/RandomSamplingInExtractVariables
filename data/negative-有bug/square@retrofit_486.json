{
  "id" : 486,
  "expression" : "new ResultObservable<>(responseObservable)",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-adapters/rxjava3/src/main/java/retrofit2/adapter/rxjava3/RxJava3CallAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ResultObservable<>(responseObservable)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 61
      },
      "nodeContext" : "observable=new ResultObservable<>(responseObservable)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 62
      },
      "nodeContext" : "observable=new ResultObservable<>(responseObservable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 71,
        "startColumnNumber" : 18,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  observable=new ResultObservable<>(responseObservable);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isResult) {\n  observable=new ResultObservable<>(responseObservable);\n}\n else if (isBody) {\n  observable=new BodyObservable<>(responseObservable);\n}\n else {\n  observable=responseObservable;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 66,
        "startColumnNumber" : 36,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Observable<Response<R>> responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call);\n  Observable<?> observable;\n  if (isResult) {\n    observable=new ResultObservable<>(responseObservable);\n  }\n else   if (isBody) {\n    observable=new BodyObservable<>(responseObservable);\n  }\n else {\n    observable=responseObservable;\n  }\n  if (scheduler != null) {\n    observable=observable.subscribeOn(scheduler);\n  }\n  if (isFlowable) {\n    return observable.toFlowable(BackpressureStrategy.MISSING);\n  }\n  if (isSingle) {\n    return observable.singleOrError();\n  }\n  if (isMaybe) {\n    return observable.singleElement();\n  }\n  if (isCompletable) {\n    return observable.ignoreElements();\n  }\n  return RxJavaPlugins.onAssembly(observable);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object adapt(Call<R> call){\n  Observable<Response<R>> responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call);\n  Observable<?> observable;\n  if (isResult) {\n    observable=new ResultObservable<>(responseObservable);\n  }\n else   if (isBody) {\n    observable=new BodyObservable<>(responseObservable);\n  }\n else {\n    observable=responseObservable;\n  }\n  if (scheduler != null) {\n    observable=observable.subscribeOn(scheduler);\n  }\n  if (isFlowable) {\n    return observable.toFlowable(BackpressureStrategy.MISSING);\n  }\n  if (isSingle) {\n    return observable.singleOrError();\n  }\n  if (isMaybe) {\n    return observable.singleElement();\n  }\n  if (isCompletable) {\n    return observable.ignoreElements();\n  }\n  return RxJavaPlugins.onAssembly(observable);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 62
      },
      "nodeContext" : "observable=new ResultObservable<>(responseObservable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "retrofit2.adapter.rxjava3.ResultObservable"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}