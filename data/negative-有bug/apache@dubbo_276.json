{
  "id" : 276,
  "expression" : "\"\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/config/MethodConfig.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 143,
      "startColumnNumber" : 12,
      "endLineNumber" : 143,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\".equals(method.oninvoke())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 143,
        "startColumnNumber" : 11,
        "endLineNumber" : 143,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!\"\".equals(method.oninvoke())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!\"\".equals(method.oninvoke())) {\n  this.setOninvoke(method.oninvoke());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 137,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO remove this construct, the callback method processing logic needs to rely on Spring context\n */\n@Deprecated public MethodConfig(Method method){\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 143,
        "startColumnNumber" : 11,
        "endLineNumber" : 143,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!\"\".equals(method.oninvoke())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 146,
      "startColumnNumber" : 12,
      "endLineNumber" : 146,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\".equals(method.onreturn())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 146,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!\"\".equals(method.onreturn())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!\"\".equals(method.onreturn())) {\n  this.setOnreturn(method.onreturn());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 137,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO remove this construct, the callback method processing logic needs to rely on Spring context\n */\n@Deprecated public MethodConfig(Method method){\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 146,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!\"\".equals(method.onreturn())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 149,
      "startColumnNumber" : 12,
      "endLineNumber" : 149,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 39
      },
      "nodeContext" : "\"\".equals(method.onthrow())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 149,
        "startColumnNumber" : 11,
        "endLineNumber" : 149,
        "endColumnNumber" : 39
      },
      "nodeContext" : "!\"\".equals(method.onthrow())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!\"\".equals(method.onthrow())) {\n  this.setOnthrow(method.onthrow());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 137,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO remove this construct, the callback method processing logic needs to rely on Spring context\n */\n@Deprecated public MethodConfig(Method method){\n  appendAnnotation(Method.class,method);\n  this.setReturn(method.isReturn());\n  if (!\"\".equals(method.oninvoke())) {\n    this.setOninvoke(method.oninvoke());\n  }\n  if (!\"\".equals(method.onreturn())) {\n    this.setOnreturn(method.onreturn());\n  }\n  if (!\"\".equals(method.onthrow())) {\n    this.setOnthrow(method.onthrow());\n  }\n  if (method.arguments() != null && method.arguments().length != 0) {\n    List<ArgumentConfig> argumentConfigs=new ArrayList<ArgumentConfig>(method.arguments().length);\n    this.setArguments(argumentConfigs);\n    for (int i=0; i < method.arguments().length; i++) {\n      ArgumentConfig argumentConfig=new ArgumentConfig(method.arguments()[i]);\n      argumentConfigs.add(argumentConfig);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 149,
        "startColumnNumber" : 11,
        "endLineNumber" : 149,
        "endColumnNumber" : 39
      },
      "nodeContext" : "!\"\".equals(method.onthrow())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 143,
    "startColumnNumber" : 12,
    "endLineNumber" : 143,
    "endColumnNumber" : 14
  }, {
    "charLength" : 2,
    "startLineNumber" : 146,
    "startColumnNumber" : 12,
    "endLineNumber" : 146,
    "endColumnNumber" : 14
  }, {
    "charLength" : 2,
    "startLineNumber" : 149,
    "startColumnNumber" : 12,
    "endLineNumber" : 149,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}