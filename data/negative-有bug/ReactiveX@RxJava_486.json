{
  "id" : 486,
  "expression" : "source.window(boundary)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableWindowWithObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.window(boundary)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 64,
      "startColumnNumber" : 8,
      "endLineNumber" : 64,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "source.window(boundary).subscribe(wo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 46
      },
      "nodeContext" : "source.window(boundary).subscribe(wo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1610,
        "startLineNumber" : 36,
        "startColumnNumber" : 49,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishSubject<Integer> source=PublishSubject.create();\n  PublishSubject<Integer> boundary=PublishSubject.create();\n  final Observer<Object> o=TestHelper.mockObserver();\n  final List<Observer<Object>> values=new ArrayList<Observer<Object>>();\n  Observer<Observable<Integer>> wo=new DefaultObserver<Observable<Integer>>(){\n    @Override public void onNext(    Observable<Integer> args){\n      final Observer<Object> mo=TestHelper.mockObserver();\n      values.add(mo);\n      args.subscribe(mo);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n;\n  source.window(boundary).subscribe(wo);\n  int n=30;\n  for (int i=0; i < n; i++) {\n    source.onNext(i);\n    if (i % 3 == 2 && i < n - 1) {\n      boundary.onNext(i / 3);\n    }\n  }\n  source.onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  assertEquals(n / 3,values.size());\n  int j=0;\n  for (  Observer<Object> mo : values) {\n    verify(mo,never()).onError(any(Throwable.class));\n    for (int i=0; i < 3; i++) {\n      verify(mo).onNext(j + i);\n    }\n    verify(mo).onComplete();\n    j+=3;\n  }\n  verify(o).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1666,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWindowViaObservableNormal1(){\n  PublishSubject<Integer> source=PublishSubject.create();\n  PublishSubject<Integer> boundary=PublishSubject.create();\n  final Observer<Object> o=TestHelper.mockObserver();\n  final List<Observer<Object>> values=new ArrayList<Observer<Object>>();\n  Observer<Observable<Integer>> wo=new DefaultObserver<Observable<Integer>>(){\n    @Override public void onNext(    Observable<Integer> args){\n      final Observer<Object> mo=TestHelper.mockObserver();\n      values.add(mo);\n      args.subscribe(mo);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n;\n  source.window(boundary).subscribe(wo);\n  int n=30;\n  for (int i=0; i < n; i++) {\n    source.onNext(i);\n    if (i % 3 == 2 && i < n - 1) {\n      boundary.onNext(i / 3);\n    }\n  }\n  source.onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  assertEquals(n / 3,values.size());\n  int j=0;\n  for (  Observer<Object> mo : values) {\n    verify(mo,never()).onError(any(Throwable.class));\n    for (int i=0; i < 3; i++) {\n      verify(mo).onNext(j + i);\n    }\n    verify(mo).onComplete();\n    j+=3;\n  }\n  verify(o).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 46
      },
      "nodeContext" : "source.window(boundary).subscribe(wo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.Observable<io.reactivex.Observable<java.lang.Integer>>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 64,
    "startColumnNumber" : 8,
    "endLineNumber" : 64,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}