{
  "id" : 366,
  "expression" : "(int)expectedSize",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/internal/Files.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)expectedSize",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 51,
      "startColumnNumber" : 38,
      "endLineNumber" : 51,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ByteStreams.toByteArray(in,(int)expectedSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 49,
        "startColumnNumber" : 11,
        "endLineNumber" : 51,
        "endColumnNumber" : 57
      },
      "nodeContext" : "expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "return expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 41,
        "startColumnNumber" : 79,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (expectedSize > Integer.MAX_VALUE) {\n    throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n  }\n  return expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a file of the given expected size from the given input stream, if it will fit into a byte array. This method handles the case where the file size changes between when the size is read and when the contents are read from the stream.\n */\nstatic byte[] readFile(InputStream in,long expectedSize) throws IOException {\n  if (expectedSize > Integer.MAX_VALUE) {\n    throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n  }\n  return expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ByteStreams.toByteArray(in,(int)expectedSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 51,
    "startColumnNumber" : 38,
    "endLineNumber" : 51,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}