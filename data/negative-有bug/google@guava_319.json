{
  "id" : 319,
  "expression" : "boolean.class",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/base/Defaults.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "boolean.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 46,
      "startColumnNumber" : 18,
      "endLineNumber" : 46,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 10,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "type == boolean.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (type == boolean.class) {\n  return (T)Boolean.FALSE;\n}\n else if (type == char.class) {\n  return (T)Character.valueOf('\\0');\n}\n else if (type == byte.class) {\n  return (T)Byte.valueOf((byte)0);\n}\n else if (type == short.class) {\n  return (T)Short.valueOf((short)0);\n}\n else if (type == int.class) {\n  return (T)Integer.valueOf(0);\n}\n else if (type == long.class) {\n  return (T)Long.valueOf(0L);\n}\n else if (type == float.class) {\n  return (T)FLOAT_DEFAULT;\n}\n else if (type == double.class) {\n  return (T)DOUBLE_DEFAULT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 45,
        "startColumnNumber" : 28,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type == boolean.class) {\n    return (T)Boolean.FALSE;\n  }\n else   if (type == char.class) {\n    return (T)Character.valueOf('\\0');\n  }\n else   if (type == byte.class) {\n    return (T)Byte.valueOf((byte)0);\n  }\n else   if (type == short.class) {\n    return (T)Short.valueOf((short)0);\n  }\n else   if (type == int.class) {\n    return (T)Integer.valueOf(0);\n  }\n else   if (type == long.class) {\n    return (T)Long.valueOf(0L);\n  }\n else   if (type == float.class) {\n    return (T)FLOAT_DEFAULT;\n  }\n else   if (type == double.class) {\n    return (T)DOUBLE_DEFAULT;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type.isPrimitive()) {\n  if (type == boolean.class) {\n    return (T)Boolean.FALSE;\n  }\n else   if (type == char.class) {\n    return (T)Character.valueOf('\\0');\n  }\n else   if (type == byte.class) {\n    return (T)Byte.valueOf((byte)0);\n  }\n else   if (type == short.class) {\n    return (T)Short.valueOf((short)0);\n  }\n else   if (type == int.class) {\n    return (T)Integer.valueOf(0);\n  }\n else   if (type == long.class) {\n    return (T)Long.valueOf(0L);\n  }\n else   if (type == float.class) {\n    return (T)FLOAT_DEFAULT;\n  }\n else   if (type == double.class) {\n    return (T)DOUBLE_DEFAULT;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 43,
        "startColumnNumber" : 50,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(type);\n  if (type.isPrimitive()) {\n    if (type == boolean.class) {\n      return (T)Boolean.FALSE;\n    }\n else     if (type == char.class) {\n      return (T)Character.valueOf('\\0');\n    }\n else     if (type == byte.class) {\n      return (T)Byte.valueOf((byte)0);\n    }\n else     if (type == short.class) {\n      return (T)Short.valueOf((short)0);\n    }\n else     if (type == int.class) {\n      return (T)Integer.valueOf(0);\n    }\n else     if (type == long.class) {\n      return (T)Long.valueOf(0L);\n    }\n else     if (type == float.class) {\n      return (T)FLOAT_DEFAULT;\n    }\n else     if (type == double.class) {\n      return (T)DOUBLE_DEFAULT;\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the default value of  {@code type} as defined by JLS --- {@code 0} for numbers, {@code false} for {@code boolean} and {@code '\\0'} for {@code char}. For non-primitive types and {@code void},  {@code null} is returned.\n */\n@SuppressWarnings(\"unchecked\") @CheckForNull public static <T>T defaultValue(Class<T> type){\n  checkNotNull(type);\n  if (type.isPrimitive()) {\n    if (type == boolean.class) {\n      return (T)Boolean.FALSE;\n    }\n else     if (type == char.class) {\n      return (T)Character.valueOf('\\0');\n    }\n else     if (type == byte.class) {\n      return (T)Byte.valueOf((byte)0);\n    }\n else     if (type == short.class) {\n      return (T)Short.valueOf((short)0);\n    }\n else     if (type == int.class) {\n      return (T)Integer.valueOf(0);\n    }\n else     if (type == long.class) {\n      return (T)Long.valueOf(0L);\n    }\n else     if (type == float.class) {\n      return (T)FLOAT_DEFAULT;\n    }\n else     if (type == double.class) {\n      return (T)DOUBLE_DEFAULT;\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 10,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "type == boolean.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 46,
    "startColumnNumber" : 18,
    "endLineNumber" : 46,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}