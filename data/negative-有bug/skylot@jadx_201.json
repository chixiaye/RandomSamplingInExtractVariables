{
  "id" : 201,
  "expression" : "dir.resolve(fileName)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/utils/fileswatcher/FilesWatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dir.resolve(fileName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 84,
      "startColumnNumber" : 16,
      "endLineNumber" : 84,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 84,
        "startColumnNumber" : 9,
        "endLineNumber" : 84,
        "endColumnNumber" : 37
      },
      "nodeContext" : "path=dir.resolve(fileName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Path path=dir.resolve(fileName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 75,
        "startColumnNumber" : 48,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (cancel.get() || Thread.interrupted()) {\n    return;\n  }\n  WatchEvent.Kind<?> kind=event.kind();\n  if (kind == OVERFLOW) {\n    continue;\n  }\n  Path fileName=((WatchEvent<Path>)event).context();\n  Path path=dir.resolve(fileName);\n  Set<Path> files=this.files.get(dir);\n  if (files == null || files.contains(path)) {\n    listener.accept(path,(WatchEvent.Kind<Path>)kind);\n  }\n  if (kind == ENTRY_CREATE) {\n    try {\n      if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n        registerDirs(path);\n      }\n    }\n catch (    Exception e) {\n      LOG.warn(\"Failed to update directory watch: {}\",path,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 75,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (WatchEvent<?> event : key.pollEvents()) {\n  if (cancel.get() || Thread.interrupted()) {\n    return;\n  }\n  WatchEvent.Kind<?> kind=event.kind();\n  if (kind == OVERFLOW) {\n    continue;\n  }\n  Path fileName=((WatchEvent<Path>)event).context();\n  Path path=dir.resolve(fileName);\n  Set<Path> files=this.files.get(dir);\n  if (files == null || files.contains(path)) {\n    listener.accept(path,(WatchEvent.Kind<Path>)kind);\n  }\n  if (kind == ENTRY_CREATE) {\n    try {\n      if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n        registerDirs(path);\n      }\n    }\n catch (    Exception e) {\n      LOG.warn(\"Failed to update directory watch: {}\",path,e);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 132,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WatchKey key;\n  try {\n    key=watcher.take();\n  }\n catch (  InterruptedException e) {\n    LOG.debug(\"File watcher interrupted\");\n    return;\n  }\n  Path dir=keys.get(key);\n  if (dir == null) {\n    LOG.warn(\"Unknown directory key: {}\",key);\n    continue;\n  }\n  for (  WatchEvent<?> event : key.pollEvents()) {\n    if (cancel.get() || Thread.interrupted()) {\n      return;\n    }\n    WatchEvent.Kind<?> kind=event.kind();\n    if (kind == OVERFLOW) {\n      continue;\n    }\n    Path fileName=((WatchEvent<Path>)event).context();\n    Path path=dir.resolve(fileName);\n    Set<Path> files=this.files.get(dir);\n    if (files == null || files.contains(path)) {\n      listener.accept(path,(WatchEvent.Kind<Path>)kind);\n    }\n    if (kind == ENTRY_CREATE) {\n      try {\n        if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n          registerDirs(path);\n        }\n      }\n catch (      Exception e) {\n        LOG.warn(\"Failed to update directory watch: {}\",path,e);\n      }\n    }\n  }\n  boolean valid=key.reset();\n  if (!valid) {\n    keys.remove(key);\n    if (keys.isEmpty()) {\n      LOG.debug(\"File watcher stopped: all watch keys removed\");\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (!cancel.get()) {\n  WatchKey key;\n  try {\n    key=watcher.take();\n  }\n catch (  InterruptedException e) {\n    LOG.debug(\"File watcher interrupted\");\n    return;\n  }\n  Path dir=keys.get(key);\n  if (dir == null) {\n    LOG.warn(\"Unknown directory key: {}\",key);\n    continue;\n  }\n  for (  WatchEvent<?> event : key.pollEvents()) {\n    if (cancel.get() || Thread.interrupted()) {\n      return;\n    }\n    WatchEvent.Kind<?> kind=event.kind();\n    if (kind == OVERFLOW) {\n      continue;\n    }\n    Path fileName=((WatchEvent<Path>)event).context();\n    Path path=dir.resolve(fileName);\n    Set<Path> files=this.files.get(dir);\n    if (files == null || files.contains(path)) {\n      listener.accept(path,(WatchEvent.Kind<Path>)kind);\n    }\n    if (kind == ENTRY_CREATE) {\n      try {\n        if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n          registerDirs(path);\n        }\n      }\n catch (      Exception e) {\n        LOG.warn(\"Failed to update directory watch: {}\",path,e);\n      }\n    }\n  }\n  boolean valid=key.reset();\n  if (!valid) {\n    keys.remove(key);\n    if (keys.isEmpty()) {\n      LOG.debug(\"File watcher stopped: all watch keys removed\");\n      return;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 211,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 59,
        "startColumnNumber" : 21,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  cancel.set(false);\n  LOG.debug(\"File watcher started for {} dirs\",keys.size());\n  while (!cancel.get()) {\n    WatchKey key;\n    try {\n      key=watcher.take();\n    }\n catch (    InterruptedException e) {\n      LOG.debug(\"File watcher interrupted\");\n      return;\n    }\n    Path dir=keys.get(key);\n    if (dir == null) {\n      LOG.warn(\"Unknown directory key: {}\",key);\n      continue;\n    }\n    for (    WatchEvent<?> event : key.pollEvents()) {\n      if (cancel.get() || Thread.interrupted()) {\n        return;\n      }\n      WatchEvent.Kind<?> kind=event.kind();\n      if (kind == OVERFLOW) {\n        continue;\n      }\n      Path fileName=((WatchEvent<Path>)event).context();\n      Path path=dir.resolve(fileName);\n      Set<Path> files=this.files.get(dir);\n      if (files == null || files.contains(path)) {\n        listener.accept(path,(WatchEvent.Kind<Path>)kind);\n      }\n      if (kind == ENTRY_CREATE) {\n        try {\n          if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n            registerDirs(path);\n          }\n        }\n catch (        Exception e) {\n          LOG.warn(\"Failed to update directory watch: {}\",path,e);\n        }\n      }\n    }\n    boolean valid=key.reset();\n    if (!valid) {\n      keys.remove(key);\n      if (keys.isEmpty()) {\n        LOG.debug(\"File watcher stopped: all watch keys removed\");\n        return;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public void watch(){\n  cancel.set(false);\n  LOG.debug(\"File watcher started for {} dirs\",keys.size());\n  while (!cancel.get()) {\n    WatchKey key;\n    try {\n      key=watcher.take();\n    }\n catch (    InterruptedException e) {\n      LOG.debug(\"File watcher interrupted\");\n      return;\n    }\n    Path dir=keys.get(key);\n    if (dir == null) {\n      LOG.warn(\"Unknown directory key: {}\",key);\n      continue;\n    }\n    for (    WatchEvent<?> event : key.pollEvents()) {\n      if (cancel.get() || Thread.interrupted()) {\n        return;\n      }\n      WatchEvent.Kind<?> kind=event.kind();\n      if (kind == OVERFLOW) {\n        continue;\n      }\n      Path fileName=((WatchEvent<Path>)event).context();\n      Path path=dir.resolve(fileName);\n      Set<Path> files=this.files.get(dir);\n      if (files == null || files.contains(path)) {\n        listener.accept(path,(WatchEvent.Kind<Path>)kind);\n      }\n      if (kind == ENTRY_CREATE) {\n        try {\n          if (Files.isDirectory(path,NOFOLLOW_LINKS)) {\n            registerDirs(path);\n          }\n        }\n catch (        Exception e) {\n          LOG.warn(\"Failed to update directory watch: {}\",path,e);\n        }\n      }\n    }\n    boolean valid=key.reset();\n    if (!valid) {\n      keys.remove(key);\n      if (keys.isEmpty()) {\n        LOG.debug(\"File watcher stopped: all watch keys removed\");\n        return;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Path path=dir.resolve(fileName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.nio.file.Path"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 84,
    "startColumnNumber" : 16,
    "endLineNumber" : 84,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}