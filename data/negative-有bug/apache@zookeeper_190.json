{
  "id" : 190,
  "expression" : "tab",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/zookeeper-server/src/main/java/org/apache/zookeeper/server/SnapshotRecursiveSummary.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 114,
      "startColumnNumber" : 21,
      "endLineNumber" : 114,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 114,
        "startColumnNumber" : 21,
        "endLineNumber" : 114,
        "endColumnNumber" : 44
      },
      "nodeContext" : "tab + \" \" + name+ \"\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 45
      },
      "nodeContext" : "builder.append(tab + \" \" + name+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 46
      },
      "nodeContext" : "builder.append(tab + \" \" + name+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 112,
        "startColumnNumber" : 44,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (maxDepth == 0 || level <= maxDepth) {\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long[] printZnode(DataTree dataTree,String name,StringBuilder builder,int level,int maxDepth){\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 46
      },
      "nodeContext" : "builder.append(tab + \" \" + name+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 115,
      "startColumnNumber" : 21,
      "endLineNumber" : 115,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 115,
        "startColumnNumber" : 21,
        "endLineNumber" : 115,
        "endColumnNumber" : 67
      },
      "nodeContext" : "tab + \"   children: \" + (result[0] - 1)+ \"\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 68
      },
      "nodeContext" : "builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 69
      },
      "nodeContext" : "builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 112,
        "startColumnNumber" : 44,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (maxDepth == 0 || level <= maxDepth) {\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long[] printZnode(DataTree dataTree,String name,StringBuilder builder,int level,int maxDepth){\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 69
      },
      "nodeContext" : "builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tab",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 116,
      "startColumnNumber" : 21,
      "endLineNumber" : 116,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 116,
        "startColumnNumber" : 21,
        "endLineNumber" : 116,
        "endColumnNumber" : 57
      },
      "nodeContext" : "tab + \"   data: \" + result[1]+ \"\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 58
      },
      "nodeContext" : "builder.append(tab + \"   data: \" + result[1]+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 59
      },
      "nodeContext" : "builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 112,
        "startColumnNumber" : 44,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (maxDepth == 0 || level <= maxDepth) {\n  String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n  builder.append(tab + \" \" + name+ \"\\n\");\n  builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n  builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n  builder.append(childBuilder);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long[] printZnode(DataTree dataTree,String name,StringBuilder builder,int level,int maxDepth){\n  DataNode n=dataTree.getNode(name);\n  Set<String> children;\n  long dataSum=0L;\nsynchronized (n) {\n    if (n.data != null) {\n      dataSum+=n.data.length;\n    }\n    children=n.getChildren();\n  }\n  long[] result={1L,dataSum};\n  if (children.size() == 0) {\n    return result;\n  }\n  StringBuilder childBuilder=new StringBuilder();\n  for (  String child : children) {\n    long[] childResult=printZnode(dataTree,name + (name.equals(\"/\") ? \"\" : \"/\") + child,childBuilder,level + 1,maxDepth);\n    result[0]=result[0] + childResult[0];\n    result[1]=result[1] + childResult[1];\n  }\n  if (maxDepth == 0 || level <= maxDepth) {\n    String tab=String.join(\"\",Collections.nCopies(level,\"--\"));\n    builder.append(tab + \" \" + name+ \"\\n\");\n    builder.append(tab + \"   children: \" + (result[0] - 1)+ \"\\n\");\n    builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n    builder.append(childBuilder);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 59
      },
      "nodeContext" : "builder.append(tab + \"   data: \" + result[1]+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 114,
    "startColumnNumber" : 21,
    "endLineNumber" : 114,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 115,
    "startColumnNumber" : 21,
    "endLineNumber" : 115,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 116,
    "startColumnNumber" : 21,
    "endLineNumber" : 116,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}