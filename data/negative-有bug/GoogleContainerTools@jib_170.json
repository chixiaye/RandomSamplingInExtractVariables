{
  "id" : 170,
  "expression" : "\"bar\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/filesystem/FileOperationsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"bar\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 52,
      "startColumnNumber" : 51,
      "endLineNumber" : 52,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 37,
        "startColumnNumber" : 64,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path destDir=temporaryFolder.newFolder().toPath();\n  Path libraryA=Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI());\n  Path libraryB=Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI());\n  Path dirLayer=Paths.get(Resources.getResource(\"layer\").toURI());\n  FileOperations.copy(ImmutableList.of(libraryA,libraryB,dirLayer),destDir);\n  assertFilesEqual(libraryA,destDir.resolve(\"libraryA.jar\"));\n  assertFilesEqual(libraryB,destDir.resolve(\"libraryB.jar\"));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\")));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"c\")));\n  assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n  assertFilesEqual(dirLayer.resolve(\"c\").resolve(\"cat\"),destDir.resolve(\"layer\").resolve(\"c\").resolve(\"cat\"));\n  assertFilesEqual(dirLayer.resolve(\"foo\"),destDir.resolve(\"layer\").resolve(\"foo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCopy() throws IOException, URISyntaxException {\n  Path destDir=temporaryFolder.newFolder().toPath();\n  Path libraryA=Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI());\n  Path libraryB=Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI());\n  Path dirLayer=Paths.get(Resources.getResource(\"layer\").toURI());\n  FileOperations.copy(ImmutableList.of(libraryA,libraryB,dirLayer),destDir);\n  assertFilesEqual(libraryA,destDir.resolve(\"libraryA.jar\"));\n  assertFilesEqual(libraryB,destDir.resolve(\"libraryB.jar\"));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\")));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"c\")));\n  assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n  assertFilesEqual(dirLayer.resolve(\"c\").resolve(\"cat\"),destDir.resolve(\"layer\").resolve(\"c\").resolve(\"cat\"));\n  assertFilesEqual(dirLayer.resolve(\"foo\"),destDir.resolve(\"layer\").resolve(\"foo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"bar\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 53,
      "startColumnNumber" : 67,
      "endLineNumber" : 53,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 73
      },
      "nodeContext" : "destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 37,
        "startColumnNumber" : 64,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path destDir=temporaryFolder.newFolder().toPath();\n  Path libraryA=Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI());\n  Path libraryB=Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI());\n  Path dirLayer=Paths.get(Resources.getResource(\"layer\").toURI());\n  FileOperations.copy(ImmutableList.of(libraryA,libraryB,dirLayer),destDir);\n  assertFilesEqual(libraryA,destDir.resolve(\"libraryA.jar\"));\n  assertFilesEqual(libraryB,destDir.resolve(\"libraryB.jar\"));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\")));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"c\")));\n  assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n  assertFilesEqual(dirLayer.resolve(\"c\").resolve(\"cat\"),destDir.resolve(\"layer\").resolve(\"c\").resolve(\"cat\"));\n  assertFilesEqual(dirLayer.resolve(\"foo\"),destDir.resolve(\"layer\").resolve(\"foo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCopy() throws IOException, URISyntaxException {\n  Path destDir=temporaryFolder.newFolder().toPath();\n  Path libraryA=Paths.get(Resources.getResource(\"application/dependencies/libraryA.jar\").toURI());\n  Path libraryB=Paths.get(Resources.getResource(\"application/dependencies/libraryB.jar\").toURI());\n  Path dirLayer=Paths.get(Resources.getResource(\"layer\").toURI());\n  FileOperations.copy(ImmutableList.of(libraryA,libraryB,dirLayer),destDir);\n  assertFilesEqual(libraryA,destDir.resolve(\"libraryA.jar\"));\n  assertFilesEqual(libraryB,destDir.resolve(\"libraryB.jar\"));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\")));\n  Assert.assertTrue(Files.exists(destDir.resolve(\"layer\").resolve(\"c\")));\n  assertFilesEqual(dirLayer.resolve(\"a\").resolve(\"b\").resolve(\"bar\"),destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\"));\n  assertFilesEqual(dirLayer.resolve(\"c\").resolve(\"cat\"),destDir.resolve(\"layer\").resolve(\"c\").resolve(\"cat\"));\n  assertFilesEqual(dirLayer.resolve(\"foo\"),destDir.resolve(\"layer\").resolve(\"foo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 73
      },
      "nodeContext" : "destDir.resolve(\"layer\").resolve(\"a\").resolve(\"b\").resolve(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 52,
    "startColumnNumber" : 51,
    "endLineNumber" : 52,
    "endColumnNumber" : 56
  }, {
    "charLength" : 5,
    "startLineNumber" : 53,
    "startColumnNumber" : 67,
    "endLineNumber" : 53,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}