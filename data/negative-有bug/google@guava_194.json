{
  "id" : 194,
  "expression" : "CollectionFeature.GENERAL_PURPOSE",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/collect/ForwardingSortedSetTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CollectionFeature.GENERAL_PURPOSE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 141,
      "startColumnNumber" : 16,
      "endLineNumber" : 141,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n  @Override protected SortedSet<String> create(  String[] elements){\n    return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n  }\n  @Override public List<String> order(  List<String> insertionOrder){\n    return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n  }\n}\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 30
      },
      "nodeContext" : "SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n  @Override protected SortedSet<String> create(  String[] elements){\n    return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n  }\n  @Override public List<String> order(  List<String> insertionOrder){\n    return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n  }\n}\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE).createTestSuite()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 81,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 31
      },
      "nodeContext" : "suite.addTest(SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n  @Override protected SortedSet<String> create(  String[] elements){\n    return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n  }\n  @Override public List<String> order(  List<String> insertionOrder){\n    return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n  }\n}\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE).createTestSuite())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 84,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 32
      },
      "nodeContext" : "suite.addTest(SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n  @Override protected SortedSet<String> create(  String[] elements){\n    return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n  }\n  @Override public List<String> order(  List<String> insertionOrder){\n    return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n  }\n}\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE).createTestSuite());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 85,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 119,
        "startColumnNumber" : 29,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestSuite suite=new TestSuite();\n  suite.addTestSuite(ForwardingSortedSetTest.class);\n  suite.addTest(SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n    @Override protected SortedSet<String> create(    String[] elements){\n      return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n    }\n    @Override public List<String> order(    List<String> insertionOrder){\n      return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n    }\n  }\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE).createTestSuite());\n  return suite;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Test suite(){\n  TestSuite suite=new TestSuite();\n  suite.addTestSuite(ForwardingSortedSetTest.class);\n  suite.addTest(SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n    @Override protected SortedSet<String> create(    String[] elements){\n      return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n    }\n    @Override public List<String> order(    List<String> insertionOrder){\n      return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n    }\n  }\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE).createTestSuite());\n  return suite;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "SortedSetTestSuiteBuilder.using(new TestStringSortedSetGenerator(){\n  @Override protected SortedSet<String> create(  String[] elements){\n    return new StandardImplForwardingSortedSet<>(new SafeTreeSet<String>(Arrays.asList(elements)));\n  }\n  @Override public List<String> order(  List<String> insertionOrder){\n    return Lists.newArrayList(Sets.newTreeSet(insertionOrder));\n  }\n}\n).named(\"ForwardingSortedSet[SafeTreeSet] with standard implementations\").withFeatures(CollectionSize.ANY,CollectionFeature.KNOWN_ORDER,CollectionFeature.GENERAL_PURPOSE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 79,
      "astHeight" : 13
    },
    "tokenLength" : 3,
    "type" : "com.google.common.collect.testing.features.CollectionFeature"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 141,
    "startColumnNumber" : 16,
    "endLineNumber" : 141,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}