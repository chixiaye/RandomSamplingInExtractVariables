{
  "id" : 413,
  "expression" : "HiveRecordCursorProvider.class",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/main/java/com/facebook/presto/hive/HiveClientModule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HiveRecordCursorProvider.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 134,
      "startColumnNumber" : 96,
      "endLineNumber" : 134,
      "endColumnNumber" : 126
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 134,
        "startColumnNumber" : 75,
        "endLineNumber" : 134,
        "endColumnNumber" : 127
      },
      "nodeContext" : "newSetBinder(binder,HiveRecordCursorProvider.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 134,
        "startColumnNumber" : 46,
        "endLineNumber" : 134,
        "endColumnNumber" : 127
      },
      "nodeContext" : "recordCursorProviderBinder=newSetBinder(binder,HiveRecordCursorProvider.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 128
      },
      "nodeContext" : "Multibinder<HiveRecordCursorProvider> recordCursorProviderBinder=newSetBinder(binder,HiveRecordCursorProvider.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7895,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  binder.bind(HiveConnectorId.class).toInstance(new HiveConnectorId(connectorId));\n  binder.bind(TypeTranslator.class).toInstance(new HiveTypeTranslator());\n  binder.bind(CoercionPolicy.class).to(HiveCoercionPolicy.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfigurationInitializer.class).in(Scopes.SINGLETON);\n  newSetBinder(binder,DynamicConfigurationProvider.class);\n  configBinder(binder).bindConfig(HiveClientConfig.class);\n  binder.bind(HiveSessionProperties.class).in(Scopes.SINGLETON);\n  binder.bind(HiveTableProperties.class).in(Scopes.SINGLETON);\n  binder.bind(HiveAnalyzeProperties.class).in(Scopes.SINGLETON);\n  binder.bind(NamenodeStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(NamenodeStats.class).as(generatedNameOf(NamenodeStats.class,connectorId));\n  binder.bind(PrestoS3ClientFactory.class).in(Scopes.SINGLETON);\n  binder.bind(DirectoryLister.class).annotatedWith(ForCachingDirectoryLister.class).to(HadoopDirectoryLister.class).in(Scopes.SINGLETON);\n  binder.bind(DirectoryLister.class).to(CachingDirectoryLister.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(DirectoryLister.class).as(generatedNameOf(CachingDirectoryLister.class,connectorId));\n  Multibinder<HiveRecordCursorProvider> recordCursorProviderBinder=newSetBinder(binder,HiveRecordCursorProvider.class);\n  recordCursorProviderBinder.addBinding().to(S3SelectRecordCursorProvider.class).in(Scopes.SINGLETON);\n  recordCursorProviderBinder.addBinding().to(GenericHiveRecordCursorProvider.class).in(Scopes.SINGLETON);\n  binder.bind(HiveWriterStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HiveWriterStats.class).as(generatedNameOf(HiveWriterStats.class,connectorId));\n  binder.bind(HiveFileRenamer.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HiveFileRenamer.class).as(generatedNameOf(HiveFileRenamer.class,connectorId));\n  newSetBinder(binder,EventClient.class).addBinding().to(HiveEventClient.class).in(Scopes.SINGLETON);\n  binder.bind(HivePartitionManager.class).in(Scopes.SINGLETON);\n  binder.bind(LocationService.class).to(HiveLocationService.class).in(Scopes.SINGLETON);\n  binder.bind(TableParameterCodec.class).in(Scopes.SINGLETON);\n  binder.bind(HivePartitionStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HivePartitionStats.class).as(generatedNameOf(HivePartitionStats.class,connectorId));\n  binder.bind(HiveMetadataFactory.class).in(Scopes.SINGLETON);\n  binder.bind(new TypeLiteral<Supplier<TransactionalMetadata>>(){\n  }\n).to(HiveMetadataFactory.class).in(Scopes.SINGLETON);\n  binder.bind(StagingFileCommitter.class).to(HiveStagingFileCommitter.class).in(Scopes.SINGLETON);\n  binder.bind(ZeroRowFileCreator.class).to(HiveZeroRowFileCreator.class).in(Scopes.SINGLETON);\n  binder.bind(PartitionObjectBuilder.class).to(HivePartitionObjectBuilder.class).in(Scopes.SINGLETON);\n  binder.bind(HiveTransactionManager.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorSplitManager.class).to(HiveSplitManager.class).in(Scopes.SINGLETON);\n  binder.bind(CacheQuotaRequirementProvider.class).to(ConfigBasedCacheQuotaRequirementProvider.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(ConnectorSplitManager.class).as(generatedNameOf(HiveSplitManager.class,connectorId));\n  binder.bind(ConnectorPageSourceProvider.class).to(HivePageSourceProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorPageSinkProvider.class).to(HivePageSinkProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorNodePartitioningProvider.class).to(HiveNodePartitioningProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorPlanOptimizerProvider.class).to(HivePlanOptimizerProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorMetadataUpdaterProvider.class).to(HiveMetadataUpdaterProvider.class).in(Scopes.SINGLETON);\n  jsonCodecBinder(binder).bindJsonCodec(PartitionUpdate.class);\n  smileCodecBinder(binder).bindSmileCodec(PartitionUpdate.class);\n  binder.bind(FileFormatDataSourceStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(FileFormatDataSourceStats.class).as(generatedNameOf(FileFormatDataSourceStats.class,connectorId));\n  binder.bind(EncryptionLibrary.class).annotatedWith(ForCryptoService.class).to(UnsupportedEncryptionLibrary.class).in(Scopes.SINGLETON);\n  binder.bind(EncryptionLibrary.class).annotatedWith(ForUnknown.class).to(UnsupportedEncryptionLibrary.class).in(Scopes.SINGLETON);\n  binder.bind(HiveDwrfEncryptionProvider.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(ParquetCacheConfig.class,connectorId);\n  Multibinder<HiveBatchPageSourceFactory> pageSourceFactoryBinder=newSetBinder(binder,HiveBatchPageSourceFactory.class);\n  pageSourceFactoryBinder.addBinding().to(OrcBatchPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(DwrfBatchPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(ParquetPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(RcFilePageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(PageFilePageSourceFactory.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(OrcCacheConfig.class,connectorId);\n  binder.bind(TupleDomainFilterCache.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsEnvironment.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfiguration.class).annotatedWith(ForMetastoreHdfsEnvironment.class).to(HiveCachingHdfsConfiguration.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfiguration.class).annotatedWith(ForCachingFileSystem.class).to(HiveHdfsConfiguration.class).in(Scopes.SINGLETON);\n  Multibinder<HiveSelectivePageSourceFactory> selectivePageSourceFactoryBinder=newSetBinder(binder,HiveSelectivePageSourceFactory.class);\n  selectivePageSourceFactoryBinder.addBinding().to(OrcSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  selectivePageSourceFactoryBinder.addBinding().to(DwrfSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  selectivePageSourceFactoryBinder.addBinding().to(ParquetSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  binder.bind(DataSinkFactory.class).to(OutputStreamDataSinkFactory.class).in(Scopes.SINGLETON);\n  Multibinder<HiveFileWriterFactory> fileWriterFactoryBinder=newSetBinder(binder,HiveFileWriterFactory.class);\n  binder.bind(OrcFileWriterFactory.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(OrcFileWriterFactory.class).as(generatedNameOf(OrcFileWriterFactory.class,connectorId));\n  configBinder(binder).bindConfig(OrcFileWriterConfig.class);\n  fileWriterFactoryBinder.addBinding().to(OrcFileWriterFactory.class).in(Scopes.SINGLETON);\n  fileWriterFactoryBinder.addBinding().to(RcFileFileWriterFactory.class).in(Scopes.SINGLETON);\n  fileWriterFactoryBinder.addBinding().to(PageFileWriterFactory.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(ParquetFileWriterConfig.class);\n  fileWriterFactoryBinder.addBinding().to(ParquetFileWriterFactory.class).in(Scopes.SINGLETON);\n  binder.install(new MetastoreClientModule());\n  binder.bind(HiveEncryptionInformationProvider.class).in(Scopes.SINGLETON);\n  newSetBinder(binder,EncryptionInformationSource.class);\n  binder.bind(PartitionMutator.class).to(HivePartitionMutator.class).in(Scopes.SINGLETON);\n  binder.bind(ColumnConverterProvider.class).to(HiveColumnConverterProvider.class).in(Scopes.SINGLETON);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1153,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7950,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void configure(Binder binder){\n  binder.bind(HiveConnectorId.class).toInstance(new HiveConnectorId(connectorId));\n  binder.bind(TypeTranslator.class).toInstance(new HiveTypeTranslator());\n  binder.bind(CoercionPolicy.class).to(HiveCoercionPolicy.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfigurationInitializer.class).in(Scopes.SINGLETON);\n  newSetBinder(binder,DynamicConfigurationProvider.class);\n  configBinder(binder).bindConfig(HiveClientConfig.class);\n  binder.bind(HiveSessionProperties.class).in(Scopes.SINGLETON);\n  binder.bind(HiveTableProperties.class).in(Scopes.SINGLETON);\n  binder.bind(HiveAnalyzeProperties.class).in(Scopes.SINGLETON);\n  binder.bind(NamenodeStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(NamenodeStats.class).as(generatedNameOf(NamenodeStats.class,connectorId));\n  binder.bind(PrestoS3ClientFactory.class).in(Scopes.SINGLETON);\n  binder.bind(DirectoryLister.class).annotatedWith(ForCachingDirectoryLister.class).to(HadoopDirectoryLister.class).in(Scopes.SINGLETON);\n  binder.bind(DirectoryLister.class).to(CachingDirectoryLister.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(DirectoryLister.class).as(generatedNameOf(CachingDirectoryLister.class,connectorId));\n  Multibinder<HiveRecordCursorProvider> recordCursorProviderBinder=newSetBinder(binder,HiveRecordCursorProvider.class);\n  recordCursorProviderBinder.addBinding().to(S3SelectRecordCursorProvider.class).in(Scopes.SINGLETON);\n  recordCursorProviderBinder.addBinding().to(GenericHiveRecordCursorProvider.class).in(Scopes.SINGLETON);\n  binder.bind(HiveWriterStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HiveWriterStats.class).as(generatedNameOf(HiveWriterStats.class,connectorId));\n  binder.bind(HiveFileRenamer.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HiveFileRenamer.class).as(generatedNameOf(HiveFileRenamer.class,connectorId));\n  newSetBinder(binder,EventClient.class).addBinding().to(HiveEventClient.class).in(Scopes.SINGLETON);\n  binder.bind(HivePartitionManager.class).in(Scopes.SINGLETON);\n  binder.bind(LocationService.class).to(HiveLocationService.class).in(Scopes.SINGLETON);\n  binder.bind(TableParameterCodec.class).in(Scopes.SINGLETON);\n  binder.bind(HivePartitionStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(HivePartitionStats.class).as(generatedNameOf(HivePartitionStats.class,connectorId));\n  binder.bind(HiveMetadataFactory.class).in(Scopes.SINGLETON);\n  binder.bind(new TypeLiteral<Supplier<TransactionalMetadata>>(){\n  }\n).to(HiveMetadataFactory.class).in(Scopes.SINGLETON);\n  binder.bind(StagingFileCommitter.class).to(HiveStagingFileCommitter.class).in(Scopes.SINGLETON);\n  binder.bind(ZeroRowFileCreator.class).to(HiveZeroRowFileCreator.class).in(Scopes.SINGLETON);\n  binder.bind(PartitionObjectBuilder.class).to(HivePartitionObjectBuilder.class).in(Scopes.SINGLETON);\n  binder.bind(HiveTransactionManager.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorSplitManager.class).to(HiveSplitManager.class).in(Scopes.SINGLETON);\n  binder.bind(CacheQuotaRequirementProvider.class).to(ConfigBasedCacheQuotaRequirementProvider.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(ConnectorSplitManager.class).as(generatedNameOf(HiveSplitManager.class,connectorId));\n  binder.bind(ConnectorPageSourceProvider.class).to(HivePageSourceProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorPageSinkProvider.class).to(HivePageSinkProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorNodePartitioningProvider.class).to(HiveNodePartitioningProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorPlanOptimizerProvider.class).to(HivePlanOptimizerProvider.class).in(Scopes.SINGLETON);\n  binder.bind(ConnectorMetadataUpdaterProvider.class).to(HiveMetadataUpdaterProvider.class).in(Scopes.SINGLETON);\n  jsonCodecBinder(binder).bindJsonCodec(PartitionUpdate.class);\n  smileCodecBinder(binder).bindSmileCodec(PartitionUpdate.class);\n  binder.bind(FileFormatDataSourceStats.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(FileFormatDataSourceStats.class).as(generatedNameOf(FileFormatDataSourceStats.class,connectorId));\n  binder.bind(EncryptionLibrary.class).annotatedWith(ForCryptoService.class).to(UnsupportedEncryptionLibrary.class).in(Scopes.SINGLETON);\n  binder.bind(EncryptionLibrary.class).annotatedWith(ForUnknown.class).to(UnsupportedEncryptionLibrary.class).in(Scopes.SINGLETON);\n  binder.bind(HiveDwrfEncryptionProvider.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(ParquetCacheConfig.class,connectorId);\n  Multibinder<HiveBatchPageSourceFactory> pageSourceFactoryBinder=newSetBinder(binder,HiveBatchPageSourceFactory.class);\n  pageSourceFactoryBinder.addBinding().to(OrcBatchPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(DwrfBatchPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(ParquetPageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(RcFilePageSourceFactory.class).in(Scopes.SINGLETON);\n  pageSourceFactoryBinder.addBinding().to(PageFilePageSourceFactory.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(OrcCacheConfig.class,connectorId);\n  binder.bind(TupleDomainFilterCache.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsEnvironment.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfiguration.class).annotatedWith(ForMetastoreHdfsEnvironment.class).to(HiveCachingHdfsConfiguration.class).in(Scopes.SINGLETON);\n  binder.bind(HdfsConfiguration.class).annotatedWith(ForCachingFileSystem.class).to(HiveHdfsConfiguration.class).in(Scopes.SINGLETON);\n  Multibinder<HiveSelectivePageSourceFactory> selectivePageSourceFactoryBinder=newSetBinder(binder,HiveSelectivePageSourceFactory.class);\n  selectivePageSourceFactoryBinder.addBinding().to(OrcSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  selectivePageSourceFactoryBinder.addBinding().to(DwrfSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  selectivePageSourceFactoryBinder.addBinding().to(ParquetSelectivePageSourceFactory.class).in(Scopes.SINGLETON);\n  binder.bind(DataSinkFactory.class).to(OutputStreamDataSinkFactory.class).in(Scopes.SINGLETON);\n  Multibinder<HiveFileWriterFactory> fileWriterFactoryBinder=newSetBinder(binder,HiveFileWriterFactory.class);\n  binder.bind(OrcFileWriterFactory.class).in(Scopes.SINGLETON);\n  newExporter(binder).export(OrcFileWriterFactory.class).as(generatedNameOf(OrcFileWriterFactory.class,connectorId));\n  configBinder(binder).bindConfig(OrcFileWriterConfig.class);\n  fileWriterFactoryBinder.addBinding().to(OrcFileWriterFactory.class).in(Scopes.SINGLETON);\n  fileWriterFactoryBinder.addBinding().to(RcFileFileWriterFactory.class).in(Scopes.SINGLETON);\n  fileWriterFactoryBinder.addBinding().to(PageFileWriterFactory.class).in(Scopes.SINGLETON);\n  configBinder(binder).bindConfig(ParquetFileWriterConfig.class);\n  fileWriterFactoryBinder.addBinding().to(ParquetFileWriterFactory.class).in(Scopes.SINGLETON);\n  binder.install(new MetastoreClientModule());\n  binder.bind(HiveEncryptionInformationProvider.class).in(Scopes.SINGLETON);\n  newSetBinder(binder,EncryptionInformationSource.class);\n  binder.bind(PartitionMutator.class).to(HivePartitionMutator.class).in(Scopes.SINGLETON);\n  binder.bind(ColumnConverterProvider.class).to(HiveColumnConverterProvider.class).in(Scopes.SINGLETON);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1163,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 128
      },
      "nodeContext" : "Multibinder<HiveRecordCursorProvider> recordCursorProviderBinder=newSetBinder(binder,HiveRecordCursorProvider.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.facebook.presto.hive.HiveRecordCursorProvider>"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 134,
    "startColumnNumber" : 96,
    "endLineNumber" : 134,
    "endColumnNumber" : 126
  } ],
  "layoutRelationDataList" : [ ]
}