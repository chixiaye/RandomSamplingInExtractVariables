{
  "id" : 5,
  "expression" : "adjacencyMatrix[from][to]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/ai/GeneticAlgorithm_travelingSalesman.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "adjacencyMatrix[from][to]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 139,
      "startColumnNumber" : 23,
      "endLineNumber" : 139,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 139,
        "startColumnNumber" : 17,
        "endLineNumber" : 139,
        "endColumnNumber" : 48
      },
      "nodeContext" : "max - adjacencyMatrix[from][to]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 48
      },
      "nodeContext" : "fitness+=max - adjacencyMatrix[from][to]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 49
      },
      "nodeContext" : "fitness+=max - adjacencyMatrix[from][to];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 136,
        "startColumnNumber" : 32,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int from=in.cities[i - 1];\n  int to=in.cities[i];\n  fitness+=max - adjacencyMatrix[from][to];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i < n; i++) {\n  int from=in.cities[i - 1];\n  int to=in.cities[i];\n  fitness+=max - adjacencyMatrix[from][to];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 132,
        "startColumnNumber" : 86,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double fitness=0;\n  for (int i=1; i < n; i++) {\n    int from=in.cities[i - 1];\n    int to=in.cities[i];\n    fitness+=max - adjacencyMatrix[from][to];\n  }\n  int last=in.cities[n - 1];\n  int first=in.cities[0];\n  fitness+=max - adjacencyMatrix[last][first];\n  return Math.pow(fitness,power);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static double fitness(Individual in,double[][] adjacencyMatrix,double max,int n){\n  double fitness=0;\n  for (int i=1; i < n; i++) {\n    int from=in.cities[i - 1];\n    int to=in.cities[i];\n    fitness+=max - adjacencyMatrix[from][to];\n  }\n  int last=in.cities[n - 1];\n  int first=in.cities[0];\n  fitness+=max - adjacencyMatrix[last][first];\n  return Math.pow(fitness,power);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 49
      },
      "nodeContext" : "fitness+=max - adjacencyMatrix[from][to];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 139,
    "startColumnNumber" : 23,
    "endLineNumber" : 139,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}