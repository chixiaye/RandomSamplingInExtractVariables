{
  "id" : 418,
  "expression" : "useLine",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/datepicker/DateFormatTextWatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "useLine",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 69,
      "startColumnNumber" : 53,
      "endLineNumber" : 69,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 69,
        "startColumnNumber" : 30,
        "endLineNumber" : 69,
        "endColumnNumber" : 81
      },
      "nodeContext" : "invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 82
      },
      "nodeContext" : "textLayout.setError(invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 83
      },
      "nodeContext" : "textLayout.setError(invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 55,
        "startColumnNumber" : 14,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TextInputLayout textLayout=DateFormatTextWatcher.this.textInputLayout;\n  DateFormat df=DateFormatTextWatcher.this.dateFormat;\n  Context context=textLayout.getContext();\n  String invalidFormat=context.getString(R.string.mtrl_picker_invalid_format);\n  String useLine=String.format(context.getString(R.string.mtrl_picker_invalid_format_use),sanitizeDateString(formatHint));\n  String exampleLine=String.format(context.getString(R.string.mtrl_picker_invalid_format_example),sanitizeDateString(df.format(new Date(UtcDates.getTodayCalendar().getTimeInMillis()))));\n  textLayout.setError(invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine);\n  onInvalidDate();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  TextInputLayout textLayout=DateFormatTextWatcher.this.textInputLayout;\n  DateFormat df=DateFormatTextWatcher.this.dateFormat;\n  Context context=textLayout.getContext();\n  String invalidFormat=context.getString(R.string.mtrl_picker_invalid_format);\n  String useLine=String.format(context.getString(R.string.mtrl_picker_invalid_format_use),sanitizeDateString(formatHint));\n  String exampleLine=String.format(context.getString(R.string.mtrl_picker_invalid_format_example),sanitizeDateString(df.format(new Date(UtcDates.getTodayCalendar().getTimeInMillis()))));\n  textLayout.setError(invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine);\n  onInvalidDate();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 102,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 83
      },
      "nodeContext" : "textLayout.setError(invalidFormat + \"\\n\" + useLine+ \"\\n\"+ exampleLine);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 69,
    "startColumnNumber" : 53,
    "endLineNumber" : 69,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}