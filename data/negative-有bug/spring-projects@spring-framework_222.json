{
  "id" : 222,
  "expression" : "message.getType()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/NettyWebSocketSessionSupport.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "message.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 82,
      "startColumnNumber" : 40,
      "endLineNumber" : 82,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "WebSocketMessage.Type.TEXT.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n  return new TextWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 80,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected WebSocketFrame toFrame(WebSocketMessage message){\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "WebSocketMessage.Type.TEXT.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.reactive.socket.WebSocketMessage.Type"
  }, {
    "nodeContext" : "message.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 85,
      "startColumnNumber" : 47,
      "endLineNumber" : 85,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 85,
        "endColumnNumber" : 65
      },
      "nodeContext" : "WebSocketMessage.Type.BINARY.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 85,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n  return new TextWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 80,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected WebSocketFrame toFrame(WebSocketMessage message){\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 85,
        "endColumnNumber" : 65
      },
      "nodeContext" : "WebSocketMessage.Type.BINARY.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.reactive.socket.WebSocketMessage.Type"
  }, {
    "nodeContext" : "message.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 88,
      "startColumnNumber" : 45,
      "endLineNumber" : 88,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 11,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "WebSocketMessage.Type.PING.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 88,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 85,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n  return new TextWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 80,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected WebSocketFrame toFrame(WebSocketMessage message){\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 11,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "WebSocketMessage.Type.PING.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.reactive.socket.WebSocketMessage.Type"
  }, {
    "nodeContext" : "message.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 91,
      "startColumnNumber" : 45,
      "endLineNumber" : 91,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 63
      },
      "nodeContext" : "WebSocketMessage.Type.PONG.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 91,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 88,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 85,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n  return new TextWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 80,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected WebSocketFrame toFrame(WebSocketMessage message){\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 63
      },
      "nodeContext" : "WebSocketMessage.Type.PONG.equals(message.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.reactive.socket.WebSocketMessage.Type"
  }, {
    "nodeContext" : "message.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 95,
      "startColumnNumber" : 68,
      "endLineNumber" : 95,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 38,
        "endLineNumber" : 95,
        "endColumnNumber" : 85
      },
      "nodeContext" : "\"Unexpected message type: \" + message.getType()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 95,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 86
      },
      "nodeContext" : "new IllegalArgumentException(\"Unexpected message type: \" + message.getType())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 95,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 87
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 94,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 91,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 88,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 85,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n  return new TextWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n  return new BinaryWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PING.equals(message.getType())) {\n  return new PingWebSocketFrame(byteBuf);\n}\n else if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n  return new PongWebSocketFrame(byteBuf);\n}\n else {\n  throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 80,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected WebSocketFrame toFrame(WebSocketMessage message){\n  ByteBuf byteBuf=NettyDataBufferFactory.toByteBuf(message.getPayload());\n  if (WebSocketMessage.Type.TEXT.equals(message.getType())) {\n    return new TextWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.BINARY.equals(message.getType())) {\n    return new BinaryWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PING.equals(message.getType())) {\n    return new PingWebSocketFrame(byteBuf);\n  }\n else   if (WebSocketMessage.Type.PONG.equals(message.getType())) {\n    return new PongWebSocketFrame(byteBuf);\n  }\n else {\n    throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 95,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 87
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unexpected message type: \" + message.getType());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.reactive.socket.WebSocketMessage.Type"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 82,
    "startColumnNumber" : 40,
    "endLineNumber" : 82,
    "endColumnNumber" : 57
  }, {
    "charLength" : 17,
    "startLineNumber" : 85,
    "startColumnNumber" : 47,
    "endLineNumber" : 85,
    "endColumnNumber" : 64
  }, {
    "charLength" : 17,
    "startLineNumber" : 88,
    "startColumnNumber" : 45,
    "endLineNumber" : 88,
    "endColumnNumber" : 62
  }, {
    "charLength" : 17,
    "startLineNumber" : 91,
    "startColumnNumber" : 45,
    "endLineNumber" : 91,
    "endColumnNumber" : 62
  }, {
    "charLength" : 17,
    "startLineNumber" : 95,
    "startColumnNumber" : 68,
    "endLineNumber" : 95,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}