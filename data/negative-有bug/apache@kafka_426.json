{
  "id" : 426,
  "expression" : "\"anyTopic\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/LogAndSkipOnInvalidTimestampTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"anyTopic\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 43,
      "startColumnNumber" : 16,
      "endLineNumber" : 43,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 41,
        "startColumnNumber" : 31,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "extractor.extract(new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty()),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "timestamp=extractor.extract(new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty()),0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 10
      },
      "nodeContext" : "final long timestamp=extractor.extract(new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty()),0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 37,
        "startColumnNumber" : 47,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long invalidMetadataTimestamp=-42;\n  final TimestampExtractor extractor=new LogAndSkipOnInvalidTimestamp();\n  final long timestamp=extractor.extract(new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty()),0);\n  assertThat(timestamp,is(invalidMetadataTimestamp));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void logAndSkipOnInvalidTimestamp(){\n  final long invalidMetadataTimestamp=-42;\n  final TimestampExtractor extractor=new LogAndSkipOnInvalidTimestamp();\n  final long timestamp=extractor.extract(new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty()),0);\n  assertThat(timestamp,is(invalidMetadataTimestamp));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "new ConsumerRecord<>(\"anyTopic\",0,0,invalidMetadataTimestamp,TimestampType.NO_TIMESTAMP_TYPE,0,0,null,null,new RecordHeaders(),Optional.empty())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 43,
    "startColumnNumber" : 16,
    "endLineNumber" : 43,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}