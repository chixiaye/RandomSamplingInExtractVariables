{
  "id" : 472,
  "expression" : "new ClassDerivedBeanDefinition(beanClass)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ClassDerivedBeanDefinition(beanClass)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 431,
      "startColumnNumber" : 46,
      "endLineNumber" : 431,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 431,
        "startColumnNumber" : 29,
        "endLineNumber" : 431,
        "endColumnNumber" : 87
      },
      "nodeContext" : "beanDefinition=new ClassDerivedBeanDefinition(beanClass)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 431,
        "startColumnNumber" : 2,
        "endLineNumber" : 431,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ClassDerivedBeanDefinition beanDefinition=new ClassDerivedBeanDefinition(beanClass);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 429,
        "startColumnNumber" : 76,
        "endLineNumber" : 441,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassDerivedBeanDefinition beanDefinition=new ClassDerivedBeanDefinition(beanClass);\n  if (supplier != null) {\n    beanDefinition.setInstanceSupplier(supplier);\n  }\n  for (  BeanDefinitionCustomizer customizer : customizers) {\n    customizer.customize(beanDefinition);\n  }\n  String nameToUse=(beanName != null ? beanName : beanClass.getName());\n  registerBeanDefinition(nameToUse,beanDefinition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 413,
        "startColumnNumber" : 1,
        "endLineNumber" : 441,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Register a bean from the given bean class, using the given supplier for obtaining a new instance (typically declared as a lambda expression or method reference), optionally customizing its bean definition metadata (again typically declared as a lambda expression or method reference). <p>This method can be overridden to adapt the registration mechanism for all  {@code registerBean} methods (since they all delegate to this one).\n * @param beanName the name of the bean (may be {@code null})\n * @param beanClass the class of the bean\n * @param supplier a callback for creating an instance of the bean (in caseof  {@code null}, resolving a public constructor to be autowired instead)\n * @param customizers one or more callbacks for customizing the factory's{@link BeanDefinition}, e.g. setting a lazy-init or primary flag\n * @since 5.0\n */\npublic <T>void registerBean(@Nullable String beanName,Class<T> beanClass,@Nullable Supplier<T> supplier,BeanDefinitionCustomizer... customizers){\n  ClassDerivedBeanDefinition beanDefinition=new ClassDerivedBeanDefinition(beanClass);\n  if (supplier != null) {\n    beanDefinition.setInstanceSupplier(supplier);\n  }\n  for (  BeanDefinitionCustomizer customizer : customizers) {\n    customizer.customize(beanDefinition);\n  }\n  String nameToUse=(beanName != null ? beanName : beanClass.getName());\n  registerBeanDefinition(nameToUse,beanDefinition);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 431,
        "startColumnNumber" : 2,
        "endLineNumber" : 431,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ClassDerivedBeanDefinition beanDefinition=new ClassDerivedBeanDefinition(beanClass);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.springframework.context.support.GenericApplicationContext.ClassDerivedBeanDefinition"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 431,
    "startColumnNumber" : 46,
    "endLineNumber" : 431,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}