{
  "id" : 415,
  "expression" : "(ctx instanceof MultiThreadedWorkerContext)",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/LocalEventBusTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ctx instanceof MultiThreadedWorkerContext)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 672,
      "startColumnNumber" : 56,
      "endLineNumber" : 672,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 672,
        "startColumnNumber" : 55,
        "endLineNumber" : 672,
        "endColumnNumber" : 99
      },
      "nodeContext" : "!(ctx instanceof MultiThreadedWorkerContext)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 672,
        "startColumnNumber" : 23,
        "endLineNumber" : 672,
        "endColumnNumber" : 99
      },
      "nodeContext" : "ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 672,
        "startColumnNumber" : 12,
        "endLineNumber" : 672,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 672,
        "startColumnNumber" : 12,
        "endLineNumber" : 672,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 671,
        "startColumnNumber" : 17,
        "endLineNumber" : 673,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 669,
        "startColumnNumber" : 10,
        "endLineNumber" : 673,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (multiThreaded) {\n  assertTrue(ctx instanceof MultiThreadedWorkerContext);\n}\n else {\n  assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 668,
        "startColumnNumber" : 20,
        "endLineNumber" : 674,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (multiThreaded) {\n    assertTrue(ctx instanceof MultiThreadedWorkerContext);\n  }\n else {\n    assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 668,
        "startColumnNumber" : 8,
        "endLineNumber" : 676,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (worker) {\n  if (multiThreaded) {\n    assertTrue(ctx instanceof MultiThreadedWorkerContext);\n  }\n else {\n    assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n  }\n}\n else {\n  assertTrue(ctx instanceof EventLoopContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 666,
        "startColumnNumber" : 26,
        "endLineNumber" : 700,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ctx=context;\n  if (worker) {\n    if (multiThreaded) {\n      assertTrue(ctx instanceof MultiThreadedWorkerContext);\n    }\n else {\n      assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n    }\n  }\n else {\n    assertTrue(ctx instanceof EventLoopContext);\n  }\n  Thread thr=Thread.currentThread();\n  MessageConsumer<?> reg=vertx.eventBus().consumer(ADDRESS1).handler(msg -> {\n    assertSame(ctx,context);\n    if (!worker) {\n      assertSame(thr,Thread.currentThread());\n    }\n    msg.reply(\"bar\");\n  }\n);\n  reg.completionHandler(ar -> {\n    assertTrue(ar.succeeded());\n    assertSame(ctx,context);\n    if (!worker) {\n      assertSame(thr,Thread.currentThread());\n    }\n    vertx.eventBus().send(ADDRESS1,\"foo\",onSuccess((    Message<Object> reply) -> {\n      assertSame(ctx,context);\n      if (!worker) {\n        assertSame(thr,Thread.currentThread());\n      }\n      assertEquals(\"bar\",reply.body());\n      testComplete();\n    }\n));\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 665,
        "startColumnNumber" : 6,
        "endLineNumber" : 700,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void start(){\n  ctx=context;\n  if (worker) {\n    if (multiThreaded) {\n      assertTrue(ctx instanceof MultiThreadedWorkerContext);\n    }\n else {\n      assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n    }\n  }\n else {\n    assertTrue(ctx instanceof EventLoopContext);\n  }\n  Thread thr=Thread.currentThread();\n  MessageConsumer<?> reg=vertx.eventBus().consumer(ADDRESS1).handler(msg -> {\n    assertSame(ctx,context);\n    if (!worker) {\n      assertSame(thr,Thread.currentThread());\n    }\n    msg.reply(\"bar\");\n  }\n);\n  reg.completionHandler(ar -> {\n    assertTrue(ar.succeeded());\n    assertSame(ctx,context);\n    if (!worker) {\n      assertSame(thr,Thread.currentThread());\n    }\n    vertx.eventBus().send(ADDRESS1,\"foo\",onSuccess((    Message<Object> reply) -> {\n      assertSame(ctx,context);\n      if (!worker) {\n        assertSame(thr,Thread.currentThread());\n      }\n      assertEquals(\"bar\",reply.body());\n      testComplete();\n    }\n));\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 672,
        "startColumnNumber" : 12,
        "endLineNumber" : 672,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertTrue(ctx instanceof WorkerContext && !(ctx instanceof MultiThreadedWorkerContext));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 672,
    "startColumnNumber" : 56,
    "endLineNumber" : 672,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}