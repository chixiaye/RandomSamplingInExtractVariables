{
  "id" : 405,
  "expression" : "entry.getValue()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/eventbus/DeliveryOptions.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 77,
      "startColumnNumber" : 14,
      "endLineNumber" : 77,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 77,
        "startColumnNumber" : 14,
        "endLineNumber" : 77,
        "endColumnNumber" : 48
      },
      "nodeContext" : "entry.getValue() instanceof String",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 13,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(entry.getValue() instanceof String)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!(entry.getValue() instanceof String)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!(entry.getValue() instanceof String)) {\n  throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 76,
        "startColumnNumber" : 50,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : hdrs) {\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hdrs != null) {\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a delivery options from JSON\n * @param json  the JSON\n */\npublic DeliveryOptions(JsonObject json){\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!(entry.getValue() instanceof String)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "entry.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 78,
      "startColumnNumber" : 85,
      "endLineNumber" : 78,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 78,
        "startColumnNumber" : 85,
        "endLineNumber" : 78,
        "endColumnNumber" : 112
      },
      "nodeContext" : "entry.getValue().getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 78,
        "startColumnNumber" : 42,
        "endLineNumber" : 78,
        "endColumnNumber" : 112
      },
      "nodeContext" : "\"Invalid type for message header value \" + entry.getValue().getClass()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 113
      },
      "nodeContext" : "new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 114
      },
      "nodeContext" : "throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 77,
        "startColumnNumber" : 51,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!(entry.getValue() instanceof String)) {\n  throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 76,
        "startColumnNumber" : 50,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : hdrs) {\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hdrs != null) {\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a delivery options from JSON\n * @param json  the JSON\n */\npublic DeliveryOptions(JsonObject json){\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 114
      },
      "nodeContext" : "throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "entry.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 80,
      "startColumnNumber" : 44,
      "endLineNumber" : 80,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 80,
        "startColumnNumber" : 36,
        "endLineNumber" : 80,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(String)entry.getValue()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "headers.set(entry.getKey(),(String)entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "headers.set(entry.getKey(),(String)entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 76,
        "startColumnNumber" : 50,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : hdrs) {\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hdrs != null) {\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a delivery options from JSON\n * @param json  the JSON\n */\npublic DeliveryOptions(JsonObject json){\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "headers.set(entry.getKey(),(String)entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 77,
    "startColumnNumber" : 14,
    "endLineNumber" : 77,
    "endColumnNumber" : 30
  }, {
    "charLength" : 16,
    "startLineNumber" : 78,
    "startColumnNumber" : 85,
    "endLineNumber" : 78,
    "endColumnNumber" : 101
  }, {
    "charLength" : 16,
    "startLineNumber" : 80,
    "startColumnNumber" : 44,
    "endLineNumber" : 80,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}