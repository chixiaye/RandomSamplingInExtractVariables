{
  "id" : 345,
  "expression" : "\"pSysProps1\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/integration-tests/src/test/java/org/springframework/core/env/EnvironmentSystemIntegrationTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"pSysProps1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 453,
      "startColumnNumber" : 35,
      "endLineNumber" : 453,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 453,
        "startColumnNumber" : 2,
        "endLineNumber" : 453,
        "endColumnNumber" : 67
      },
      "nodeContext" : "mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 453,
        "startColumnNumber" : 2,
        "endLineNumber" : 453,
        "endColumnNumber" : 68
      },
      "nodeContext" : "mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2673,
        "startLineNumber" : 417,
        "startColumnNumber" : 85,
        "endLineNumber" : 459,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  MockServletContext servletContext=new MockServletContext();\n  servletContext.addInitParameter(\"pCommon\",\"pCommonContextValue\");\n  servletContext.addInitParameter(\"pContext1\",\"pContext1Value\");\n  MockServletConfig servletConfig=new MockServletConfig(servletContext);\n  servletConfig.addInitParameter(\"pCommon\",\"pCommonConfigValue\");\n  servletConfig.addInitParameter(\"pConfig1\",\"pConfig1Value\");\n  AbstractRefreshableWebApplicationContext ctx=new AnnotationConfigWebApplicationContext();\n  ctx.setConfigLocation(EnvironmentAwareBean.class.getName());\n  ctx.setServletConfig(servletConfig);\n  ctx.refresh();\n  ConfigurableEnvironment environment=ctx.getEnvironment();\n  assertThat(environment).isInstanceOf(StandardServletEnvironment.class);\n  MutablePropertySources propertySources=environment.getPropertySources();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)));\n  assertThat(environment.getProperty(\"pContext1\")).isEqualTo(\"pContext1Value\");\n  assertThat(environment.getProperty(\"pConfig1\")).isEqualTo(\"pConfig1Value\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME)));\n  MockPropertySource mockSystemProperties=new MockPropertySource(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME);\n  mockSystemProperties.setProperty(\"pCommon\",\"pCommonSysPropsValue\");\n  mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n  propertySources.replace(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME,mockSystemProperties);\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 416,
        "startColumnNumber" : 1,
        "endLineNumber" : 459,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void registerServletParamPropertySources_AbstractRefreshableWebApplicationContext(){\n  MockServletContext servletContext=new MockServletContext();\n  servletContext.addInitParameter(\"pCommon\",\"pCommonContextValue\");\n  servletContext.addInitParameter(\"pContext1\",\"pContext1Value\");\n  MockServletConfig servletConfig=new MockServletConfig(servletContext);\n  servletConfig.addInitParameter(\"pCommon\",\"pCommonConfigValue\");\n  servletConfig.addInitParameter(\"pConfig1\",\"pConfig1Value\");\n  AbstractRefreshableWebApplicationContext ctx=new AnnotationConfigWebApplicationContext();\n  ctx.setConfigLocation(EnvironmentAwareBean.class.getName());\n  ctx.setServletConfig(servletConfig);\n  ctx.refresh();\n  ConfigurableEnvironment environment=ctx.getEnvironment();\n  assertThat(environment).isInstanceOf(StandardServletEnvironment.class);\n  MutablePropertySources propertySources=environment.getPropertySources();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)));\n  assertThat(environment.getProperty(\"pContext1\")).isEqualTo(\"pContext1Value\");\n  assertThat(environment.getProperty(\"pConfig1\")).isEqualTo(\"pConfig1Value\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME)));\n  MockPropertySource mockSystemProperties=new MockPropertySource(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME);\n  mockSystemProperties.setProperty(\"pCommon\",\"pCommonSysPropsValue\");\n  mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n  propertySources.replace(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME,mockSystemProperties);\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 453,
        "startColumnNumber" : 2,
        "endLineNumber" : 453,
        "endColumnNumber" : 68
      },
      "nodeContext" : "mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"pSysProps1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 458,
      "startColumnNumber" : 37,
      "endLineNumber" : 458,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 458,
        "startColumnNumber" : 13,
        "endLineNumber" : 458,
        "endColumnNumber" : 50
      },
      "nodeContext" : "environment.getProperty(\"pSysProps1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 458,
        "startColumnNumber" : 2,
        "endLineNumber" : 458,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(environment.getProperty(\"pSysProps1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 458,
        "startColumnNumber" : 2,
        "endLineNumber" : 458,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 458,
        "startColumnNumber" : 2,
        "endLineNumber" : 458,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2673,
        "startLineNumber" : 417,
        "startColumnNumber" : 85,
        "endLineNumber" : 459,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  MockServletContext servletContext=new MockServletContext();\n  servletContext.addInitParameter(\"pCommon\",\"pCommonContextValue\");\n  servletContext.addInitParameter(\"pContext1\",\"pContext1Value\");\n  MockServletConfig servletConfig=new MockServletConfig(servletContext);\n  servletConfig.addInitParameter(\"pCommon\",\"pCommonConfigValue\");\n  servletConfig.addInitParameter(\"pConfig1\",\"pConfig1Value\");\n  AbstractRefreshableWebApplicationContext ctx=new AnnotationConfigWebApplicationContext();\n  ctx.setConfigLocation(EnvironmentAwareBean.class.getName());\n  ctx.setServletConfig(servletConfig);\n  ctx.refresh();\n  ConfigurableEnvironment environment=ctx.getEnvironment();\n  assertThat(environment).isInstanceOf(StandardServletEnvironment.class);\n  MutablePropertySources propertySources=environment.getPropertySources();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)));\n  assertThat(environment.getProperty(\"pContext1\")).isEqualTo(\"pContext1Value\");\n  assertThat(environment.getProperty(\"pConfig1\")).isEqualTo(\"pConfig1Value\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME)));\n  MockPropertySource mockSystemProperties=new MockPropertySource(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME);\n  mockSystemProperties.setProperty(\"pCommon\",\"pCommonSysPropsValue\");\n  mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n  propertySources.replace(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME,mockSystemProperties);\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 416,
        "startColumnNumber" : 1,
        "endLineNumber" : 459,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void registerServletParamPropertySources_AbstractRefreshableWebApplicationContext(){\n  MockServletContext servletContext=new MockServletContext();\n  servletContext.addInitParameter(\"pCommon\",\"pCommonContextValue\");\n  servletContext.addInitParameter(\"pContext1\",\"pContext1Value\");\n  MockServletConfig servletConfig=new MockServletConfig(servletContext);\n  servletConfig.addInitParameter(\"pCommon\",\"pCommonConfigValue\");\n  servletConfig.addInitParameter(\"pConfig1\",\"pConfig1Value\");\n  AbstractRefreshableWebApplicationContext ctx=new AnnotationConfigWebApplicationContext();\n  ctx.setConfigLocation(EnvironmentAwareBean.class.getName());\n  ctx.setServletConfig(servletConfig);\n  ctx.refresh();\n  ConfigurableEnvironment environment=ctx.getEnvironment();\n  assertThat(environment).isInstanceOf(StandardServletEnvironment.class);\n  MutablePropertySources propertySources=environment.getPropertySources();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(propertySources.contains(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME)).isTrue();\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONTEXT_PROPERTY_SOURCE_NAME)));\n  assertThat(environment.getProperty(\"pContext1\")).isEqualTo(\"pContext1Value\");\n  assertThat(environment.getProperty(\"pConfig1\")).isEqualTo(\"pConfig1Value\");\n  assertThat(propertySources.precedenceOf(PropertySource.named(StandardServletEnvironment.SERVLET_CONFIG_PROPERTY_SOURCE_NAME))).isLessThan(propertySources.precedenceOf(PropertySource.named(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME)));\n  MockPropertySource mockSystemProperties=new MockPropertySource(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME);\n  mockSystemProperties.setProperty(\"pCommon\",\"pCommonSysPropsValue\");\n  mockSystemProperties.setProperty(\"pSysProps1\",\"pSysProps1Value\");\n  propertySources.replace(StandardEnvironment.SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME,mockSystemProperties);\n  assertThat(environment.getProperty(\"pCommon\")).isEqualTo(\"pCommonConfigValue\");\n  assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 247,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 458,
        "startColumnNumber" : 2,
        "endLineNumber" : 458,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(environment.getProperty(\"pSysProps1\")).isEqualTo(\"pSysProps1Value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 453,
    "startColumnNumber" : 35,
    "endLineNumber" : 453,
    "endColumnNumber" : 47
  }, {
    "charLength" : 12,
    "startLineNumber" : 458,
    "startColumnNumber" : 37,
    "endLineNumber" : 458,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}