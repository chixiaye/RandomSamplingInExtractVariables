{
  "id" : 53,
  "expression" : "this",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/debugging/Java8LocationImpl.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 31
      },
      "nodeContext" : "this.stackTraceLine",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 58
      },
      "nodeContext" : "this.stackTraceLine=\"-> at <<unknown line>>\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.stackTraceLine=\"-> at <<unknown line>>\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 46,
        "startColumnNumber" : 30,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filtered == null) {\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n else {\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 93,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Eagerly compute the stacktrace line from the stackTraceHolder. Storing the Throwable is memory-intensive for tests that have large stacktraces and have a lot of invocations on mocks.\n */\nprivate void computeStackTraceInformation(StackTraceFilter stackTraceFilter,Throwable stackTraceHolder,boolean isInline){\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.stackTraceLine=\"-> at <<unknown line>>\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.debugging.Java8LocationImpl"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 48,
      "startColumnNumber" : 12,
      "endLineNumber" : 48,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 27
      },
      "nodeContext" : "this.sourceFile",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.sourceFile=\"<unknown source file>\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.sourceFile=\"<unknown source file>\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 46,
        "startColumnNumber" : 30,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filtered == null) {\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n else {\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 93,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Eagerly compute the stacktrace line from the stackTraceHolder. Storing the Throwable is memory-intensive for tests that have large stacktraces and have a lot of invocations on mocks.\n */\nprivate void computeStackTraceInformation(StackTraceFilter stackTraceFilter,Throwable stackTraceHolder,boolean isInline){\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.sourceFile=\"<unknown source file>\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.debugging.Java8LocationImpl"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 12,
      "endLineNumber" : 50,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 31
      },
      "nodeContext" : "this.stackTraceLine",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.stackTraceLine=\"-> at \" + filtered",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.stackTraceLine=\"-> at \" + filtered;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filtered == null) {\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n else {\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 93,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Eagerly compute the stacktrace line from the stackTraceHolder. Storing the Throwable is memory-intensive for tests that have large stacktraces and have a lot of invocations on mocks.\n */\nprivate void computeStackTraceInformation(StackTraceFilter stackTraceFilter,Throwable stackTraceHolder,boolean isInline){\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.stackTraceLine=\"-> at \" + filtered;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.debugging.Java8LocationImpl"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 12,
      "endLineNumber" : 51,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 27
      },
      "nodeContext" : "this.sourceFile",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.sourceFile=filtered.getFileName()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.sourceFile=filtered.getFileName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filtered == null) {\n  this.stackTraceLine=\"-> at <<unknown line>>\";\n  this.sourceFile=\"<unknown source file>\";\n}\n else {\n  this.stackTraceLine=\"-> at \" + filtered;\n  this.sourceFile=filtered.getFileName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 93,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Eagerly compute the stacktrace line from the stackTraceHolder. Storing the Throwable is memory-intensive for tests that have large stacktraces and have a lot of invocations on mocks.\n */\nprivate void computeStackTraceInformation(StackTraceFilter stackTraceFilter,Throwable stackTraceHolder,boolean isInline){\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered;\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.sourceFile=filtered.getFileName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.debugging.Java8LocationImpl"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 48,
    "startColumnNumber" : 12,
    "endLineNumber" : 48,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 12,
    "endLineNumber" : 50,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 12,
    "endLineNumber" : 51,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}