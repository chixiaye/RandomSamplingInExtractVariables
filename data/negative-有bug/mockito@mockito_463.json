{
  "id" : 463,
  "expression" : "\"should not have raised a CNFE\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitoutil/ClassLoadersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"should not have raised a CNFE\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 324,
      "startColumnNumber" : 52,
      "endLineNumber" : 324,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 324,
        "startColumnNumber" : 36,
        "endLineNumber" : 324,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assertions.fail(\"should not have raised a CNFE\",cnfe)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 324,
        "startColumnNumber" : 36,
        "endLineNumber" : 324,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.fail(\"should not have raised a CNFE\",cnfe);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 323,
        "startColumnNumber" : 70,
        "endLineNumber" : 325,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  Assertions.fail(\"should not have raised a CNFE\",cnfe);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 323,
        "startColumnNumber" : 34,
        "endLineNumber" : 325,
        "endColumnNumber" : 33
      },
      "nodeContext" : "catch (ClassNotFoundException cnfe) {\n  Assertions.fail(\"should not have raised a CNFE\",cnfe);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 309,
        "startColumnNumber" : 32,
        "endLineNumber" : 325,
        "endColumnNumber" : 33
      },
      "nodeContext" : "try {\n  assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"java.lang.String\")).describedAs(\"can load JDK type\").isNotNull();\n  assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"org.mockitoutil.ClassLoadersTest$ClassUsingInterface1\")).describedAs(\"can load classloader types\").isNotNull();\n}\n catch (ClassNotFoundException cnfe) {\n  Assertions.fail(\"should not have raised a CNFE\",cnfe);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1871,
        "startLineNumber" : 300,
        "startColumnNumber" : 46,
        "endLineNumber" : 327,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  assertThat(this.getClass().getClassLoader()).describedAs(\"runnable is reloaded in given classloader\").isEqualTo(cl);\n  assertThat(Thread.currentThread().getContextClassLoader()).describedAs(\"Thread context classloader is using given classloader\").isEqualTo(cl);\n  try {\n    assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"java.lang.String\")).describedAs(\"can load JDK type\").isNotNull();\n    assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"org.mockitoutil.ClassLoadersTest$ClassUsingInterface1\")).describedAs(\"can load classloader types\").isNotNull();\n  }\n catch (  ClassNotFoundException cnfe) {\n    Assertions.fail(\"should not have raised a CNFE\",cnfe);\n  }\n  executed.set(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 299,
        "startColumnNumber" : 28,
        "endLineNumber" : 327,
        "endColumnNumber" : 29
      },
      "nodeContext" : "@Override public void run(){\n  assertThat(this.getClass().getClassLoader()).describedAs(\"runnable is reloaded in given classloader\").isEqualTo(cl);\n  assertThat(Thread.currentThread().getContextClassLoader()).describedAs(\"Thread context classloader is using given classloader\").isEqualTo(cl);\n  try {\n    assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"java.lang.String\")).describedAs(\"can load JDK type\").isNotNull();\n    assertThat(Thread.currentThread().getContextClassLoader().loadClass(\"org.mockitoutil.ClassLoadersTest$ClassUsingInterface1\")).describedAs(\"can load classloader types\").isNotNull();\n  }\n catch (  ClassNotFoundException cnfe) {\n    Assertions.fail(\"should not have raised a CNFE\",cnfe);\n  }\n  executed.set(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 324,
        "startColumnNumber" : 36,
        "endLineNumber" : 324,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.fail(\"should not have raised a CNFE\",cnfe);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 324,
    "startColumnNumber" : 52,
    "endLineNumber" : 324,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}