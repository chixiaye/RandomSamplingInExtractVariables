{
  "id" : 403,
  "expression" : "bits",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/frame/field/DoubleFieldWriter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bits",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 24,
      "endLineNumber" : 76,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 76,
        "startColumnNumber" : 24,
        "endLineNumber" : 76,
        "endColumnNumber" : 45
      },
      "nodeContext" : "bits & Long.MIN_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 76,
        "startColumnNumber" : 23,
        "endLineNumber" : 76,
        "endColumnNumber" : 46
      },
      "nodeContext" : "(bits & Long.MIN_VALUE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 23,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(bits & Long.MIN_VALUE) >> 11",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 76,
        "startColumnNumber" : 22,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "((bits & Long.MIN_VALUE) >> 11)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 76,
        "startColumnNumber" : 22,
        "endLineNumber" : 76,
        "endColumnNumber" : 70
      },
      "nodeContext" : "((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 76,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 70
      },
      "nodeContext" : "mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 71
      },
      "nodeContext" : "final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final long bits=Double.doubleToLongBits(n);\n  final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n  return Long.reverseBytes(bits ^ mask);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transforms a double into a form where it can be compared as unsigned bytes without decoding.\n */\npublic static long transform(final double n){\n  final long bits=Double.doubleToLongBits(n);\n  final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n  return Long.reverseBytes(bits ^ mask);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 71
      },
      "nodeContext" : "final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "bits",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 29,
      "endLineNumber" : 77,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 77,
        "startColumnNumber" : 29,
        "endLineNumber" : 77,
        "endColumnNumber" : 40
      },
      "nodeContext" : "bits ^ mask",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 77,
        "startColumnNumber" : 11,
        "endLineNumber" : 77,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Long.reverseBytes(bits ^ mask)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return Long.reverseBytes(bits ^ mask);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final long bits=Double.doubleToLongBits(n);\n  final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n  return Long.reverseBytes(bits ^ mask);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transforms a double into a form where it can be compared as unsigned bytes without decoding.\n */\npublic static long transform(final double n){\n  final long bits=Double.doubleToLongBits(n);\n  final long mask=((bits & Long.MIN_VALUE) >> 11) | Long.MIN_VALUE;\n  return Long.reverseBytes(bits ^ mask);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return Long.reverseBytes(bits ^ mask);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 24,
    "endLineNumber" : 76,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 29,
    "endLineNumber" : 77,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}