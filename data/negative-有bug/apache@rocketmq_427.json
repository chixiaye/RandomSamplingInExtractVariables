{
  "id" : 427,
  "expression" : "ak",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/acl/src/main/java/org/apache/rocketmq/acl/common/AclClientRPCHook.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ak",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 63,
      "startColumnNumber" : 28,
      "endLineNumber" : 63,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 31
      },
      "nodeContext" : "map.put(ACCESS_KEY,ak)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "map.put(ACCESS_KEY,ak);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1306,
        "startLineNumber" : 59,
        "startColumnNumber" : 118,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CommandCustomHeader header=request.readCustomHeader();\n  SortedMap<String,String> map=new TreeMap<String,String>();\n  map.put(ACCESS_KEY,ak);\n  if (securityToken != null) {\n    map.put(SECURITY_TOKEN,securityToken);\n  }\n  try {\n    if (null != header) {\n      Field[] fields=fieldCache.get(header.getClass());\n      if (null == fields) {\n        fields=header.getClass().getDeclaredFields();\n        for (        Field field : fields) {\n          field.setAccessible(true);\n        }\n        Field[] tmp=fieldCache.putIfAbsent(header.getClass(),fields);\n        if (null != tmp) {\n          fields=tmp;\n        }\n      }\n      for (      Field field : fields) {\n        Object value=field.get(header);\n        if (null != value && !field.isSynthetic()) {\n          map.put(field.getName(),value.toString());\n        }\n      }\n    }\n    return map;\n  }\n catch (  Exception e) {\n    throw new RuntimeException(\"incompatible exception.\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1420,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected SortedMap<String,String> parseRequestContent(RemotingCommand request,String ak,String securityToken){\n  CommandCustomHeader header=request.readCustomHeader();\n  SortedMap<String,String> map=new TreeMap<String,String>();\n  map.put(ACCESS_KEY,ak);\n  if (securityToken != null) {\n    map.put(SECURITY_TOKEN,securityToken);\n  }\n  try {\n    if (null != header) {\n      Field[] fields=fieldCache.get(header.getClass());\n      if (null == fields) {\n        fields=header.getClass().getDeclaredFields();\n        for (        Field field : fields) {\n          field.setAccessible(true);\n        }\n        Field[] tmp=fieldCache.putIfAbsent(header.getClass(),fields);\n        if (null != tmp) {\n          fields=tmp;\n        }\n      }\n      for (      Field field : fields) {\n        Object value=field.get(header);\n        if (null != value && !field.isSynthetic()) {\n          map.put(field.getName(),value.toString());\n        }\n      }\n    }\n    return map;\n  }\n catch (  Exception e) {\n    throw new RuntimeException(\"incompatible exception.\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "map.put(ACCESS_KEY,ak);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 63,
    "startColumnNumber" : 28,
    "endLineNumber" : 63,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}