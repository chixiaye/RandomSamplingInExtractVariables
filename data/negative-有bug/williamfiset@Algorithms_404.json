{
  "id" : 404,
  "expression" : "pattern.length()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/strings/BoyerMooreStringSearchTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pattern.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 86,
      "startColumnNumber" : 27,
      "endLineNumber" : 86,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 86,
        "startColumnNumber" : 11,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "text.length() < pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "isNull(text) || isNull(pattern) || text.length() < pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n  return new ArrayList<>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 78,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param text the text being searched in\n * @param pattern the pattern that needs to be searched in text\n * @return a list of beginning index of text where pattern exits\n */\nprivate List<Integer> getOccurrencesBruteForce(String text,String pattern){\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 86,
        "startColumnNumber" : 11,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "text.length() < pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "pattern.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 87,
      "startColumnNumber" : 11,
      "endLineNumber" : 87,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "pattern.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n  return new ArrayList<>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 78,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param text the text being searched in\n * @param pattern the pattern that needs to be searched in text\n * @return a list of beginning index of text where pattern exits\n */\nprivate List<Integer> getOccurrencesBruteForce(String text,String pattern){\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "pattern.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "pattern.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 91,
      "startColumnNumber" : 56,
      "endLineNumber" : 91,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 91,
        "startColumnNumber" : 40,
        "endLineNumber" : 91,
        "endColumnNumber" : 72
      },
      "nodeContext" : "text.length() - pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 91,
        "startColumnNumber" : 40,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "text.length() - pattern.length() + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 91,
        "startColumnNumber" : 28,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "textIndex < text.length() - pattern.length() + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n  boolean match=true;\n  for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n    if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n      match=false;\n      break;\n    }\n  }\n  if (match) {\n    occurrences.add(textIndex);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 78,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param text the text being searched in\n * @param pattern the pattern that needs to be searched in text\n * @return a list of beginning index of text where pattern exits\n */\nprivate List<Integer> getOccurrencesBruteForce(String text,String pattern){\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 91,
        "startColumnNumber" : 28,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "textIndex < text.length() - pattern.length() + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "pattern.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 93,
      "startColumnNumber" : 40,
      "endLineNumber" : 93,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 56
      },
      "nodeContext" : "patIndex < pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n  if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n    match=false;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 91,
        "startColumnNumber" : 91,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean match=true;\n  for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n    if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n      match=false;\n      break;\n    }\n  }\n  if (match) {\n    occurrences.add(textIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n  boolean match=true;\n  for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n    if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n      match=false;\n      break;\n    }\n  }\n  if (match) {\n    occurrences.add(textIndex);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 83,
        "startColumnNumber" : 78,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param text the text being searched in\n * @param pattern the pattern that needs to be searched in text\n * @return a list of beginning index of text where pattern exits\n */\nprivate List<Integer> getOccurrencesBruteForce(String text,String pattern){\n  if (isNull(text) || isNull(pattern) || text.length() < pattern.length() || pattern.length() == 0) {\n    return new ArrayList<>();\n  }\n  List<Integer> occurrences=new ArrayList<>();\n  for (int textIndex=0; textIndex < text.length() - pattern.length() + 1; textIndex++) {\n    boolean match=true;\n    for (int patIndex=0; patIndex < pattern.length(); patIndex++) {\n      if (text.charAt(textIndex + patIndex) != pattern.charAt(patIndex)) {\n        match=false;\n        break;\n      }\n    }\n    if (match) {\n      occurrences.add(textIndex);\n    }\n  }\n  return occurrences;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 56
      },
      "nodeContext" : "patIndex < pattern.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 86,
    "startColumnNumber" : 27,
    "endLineNumber" : 86,
    "endColumnNumber" : 43
  }, {
    "charLength" : 16,
    "startLineNumber" : 87,
    "startColumnNumber" : 11,
    "endLineNumber" : 87,
    "endColumnNumber" : 27
  }, {
    "charLength" : 16,
    "startLineNumber" : 91,
    "startColumnNumber" : 56,
    "endLineNumber" : 91,
    "endColumnNumber" : 72
  }, {
    "charLength" : 16,
    "startLineNumber" : 93,
    "startColumnNumber" : 40,
    "endLineNumber" : 93,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}