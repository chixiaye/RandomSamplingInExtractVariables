{
  "id" : 385,
  "expression" : "SymbolShapeHint",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/test/java/com/google/zxing/datamatrix/encoder/SymbolInfoTestCase.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 37,
      "startColumnNumber" : 32,
      "endLineNumber" : 37,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 37,
        "startColumnNumber" : 32,
        "endLineNumber" : 37,
        "endColumnNumber" : 63
      },
      "nodeContext" : "SymbolShapeHint.FORCE_RECTANGLE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 37,
        "startColumnNumber" : 11,
        "endLineNumber" : 37,
        "endColumnNumber" : 64
      },
      "nodeContext" : "SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 64
      },
      "nodeContext" : "info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 65
      },
      "nodeContext" : "info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 65
      },
      "nodeContext" : "info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 51,
      "startColumnNumber" : 32,
      "endLineNumber" : 51,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 51,
        "startColumnNumber" : 32,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "SymbolShapeHint.FORCE_SQUARE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 51,
        "startColumnNumber" : 11,
        "endLineNumber" : 51,
        "endColumnNumber" : 61
      },
      "nodeContext" : "SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 61
      },
      "nodeContext" : "info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 65,
      "startColumnNumber" : 28,
      "endLineNumber" : 65,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 65,
        "startColumnNumber" : 28,
        "endLineNumber" : 65,
        "endColumnNumber" : 59
      },
      "nodeContext" : "SymbolShapeHint.FORCE_RECTANGLE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 61
      },
      "nodeContext" : "SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n  fail(\"There's no rectangular symbol for 50 data codewords\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n  fail(\"There's no rectangular symbol for 50 data codewords\");\n}\n catch (IllegalArgumentException iae) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 61
      },
      "nodeContext" : "SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 77,
      "startColumnNumber" : 29,
      "endLineNumber" : 77,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 29,
        "endLineNumber" : 77,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 77,
        "endColumnNumber" : 85
      },
      "nodeContext" : "SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 85
      },
      "nodeContext" : "info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 86
      },
      "nodeContext" : "info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 29,
        "endLineNumber" : 77,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 83,
      "startColumnNumber" : 29,
      "endLineNumber" : 83,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 83,
        "startColumnNumber" : 29,
        "endLineNumber" : 83,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 82,
        "startColumnNumber" : 11,
        "endLineNumber" : 83,
        "endColumnNumber" : 85
      },
      "nodeContext" : "SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 85
      },
      "nodeContext" : "info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 86
      },
      "nodeContext" : "info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 83,
        "startColumnNumber" : 29,
        "endLineNumber" : 83,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 90,
      "startColumnNumber" : 29,
      "endLineNumber" : 90,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 90,
        "startColumnNumber" : 29,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 89,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 81
      },
      "nodeContext" : "SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 81
      },
      "nodeContext" : "info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 82
      },
      "nodeContext" : "info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 90,
        "startColumnNumber" : 29,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 96,
      "startColumnNumber" : 29,
      "endLineNumber" : 96,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 96,
        "startColumnNumber" : 29,
        "endLineNumber" : 96,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 95,
        "startColumnNumber" : 11,
        "endLineNumber" : 96,
        "endColumnNumber" : 81
      },
      "nodeContext" : "SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 81
      },
      "nodeContext" : "info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 82
      },
      "nodeContext" : "info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 96,
        "startColumnNumber" : 29,
        "endLineNumber" : 96,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 102,
      "startColumnNumber" : 29,
      "endLineNumber" : 102,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 102,
        "startColumnNumber" : 29,
        "endLineNumber" : 102,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 101,
        "startColumnNumber" : 11,
        "endLineNumber" : 102,
        "endColumnNumber" : 81
      },
      "nodeContext" : "SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 81
      },
      "nodeContext" : "info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 82
      },
      "nodeContext" : "info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 102,
        "startColumnNumber" : 29,
        "endLineNumber" : 102,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  }, {
    "nodeContext" : "SymbolShapeHint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 108,
      "startColumnNumber" : 29,
      "endLineNumber" : 108,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 108,
        "startColumnNumber" : 29,
        "endLineNumber" : 108,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 107,
        "startColumnNumber" : 11,
        "endLineNumber" : 108,
        "endColumnNumber" : 81
      },
      "nodeContext" : "SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 81
      },
      "nodeContext" : "info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 82
      },
      "nodeContext" : "info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3039,
        "startLineNumber" : 29,
        "startColumnNumber" : 31,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3077,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSymbolInfo(){\n  SymbolInfo info=SymbolInfo.lookup(3);\n  assertEquals(5,info.getErrorCodewords());\n  assertEquals(8,info.matrixWidth);\n  assertEquals(8,info.matrixHeight);\n  assertEquals(10,info.getSymbolWidth());\n  assertEquals(10,info.getSymbolHeight());\n  info=SymbolInfo.lookup(3,SymbolShapeHint.FORCE_RECTANGLE);\n  assertEquals(7,info.getErrorCodewords());\n  assertEquals(16,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(18,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9);\n  assertEquals(11,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(6,info.matrixHeight);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(8,info.getSymbolHeight());\n  info=SymbolInfo.lookup(9,SymbolShapeHint.FORCE_SQUARE);\n  assertEquals(12,info.getErrorCodewords());\n  assertEquals(14,info.matrixWidth);\n  assertEquals(14,info.matrixHeight);\n  assertEquals(16,info.getSymbolWidth());\n  assertEquals(16,info.getSymbolHeight());\n  try {\n    SymbolInfo.lookup(1559);\n    fail(\"There's no rectangular symbol for more than 1558 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  try {\n    SymbolInfo.lookup(50,SymbolShapeHint.FORCE_RECTANGLE);\n    fail(\"There's no rectangular symbol for 50 data codewords\");\n  }\n catch (  IllegalArgumentException iae) {\n  }\n  info=SymbolInfo.lookup(35);\n  assertEquals(24,info.getSymbolWidth());\n  assertEquals(24,info.getSymbolHeight());\n  Dimension fixedSize=new Dimension(26,26);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,fixedSize,fixedSize,false);\n  assertNull(info);\n  Dimension minSize=fixedSize;\n  Dimension maxSize=new Dimension(32,32);\n  info=SymbolInfo.lookup(35,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(40,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(26,info.getSymbolWidth());\n  assertEquals(26,info.getSymbolHeight());\n  info=SymbolInfo.lookup(45,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNotNull(info);\n  assertEquals(32,info.getSymbolWidth());\n  assertEquals(32,info.getSymbolHeight());\n  info=SymbolInfo.lookup(63,SymbolShapeHint.FORCE_NONE,minSize,maxSize,false);\n  assertNull(info);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 108,
        "startColumnNumber" : 29,
        "endLineNumber" : 108,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SymbolShapeHint.FORCE_NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.datamatrix.encoder.SymbolShapeHint"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 37,
    "startColumnNumber" : 32,
    "endLineNumber" : 37,
    "endColumnNumber" : 47
  }, {
    "charLength" : 15,
    "startLineNumber" : 51,
    "startColumnNumber" : 32,
    "endLineNumber" : 51,
    "endColumnNumber" : 47
  }, {
    "charLength" : 15,
    "startLineNumber" : 65,
    "startColumnNumber" : 28,
    "endLineNumber" : 65,
    "endColumnNumber" : 43
  }, {
    "charLength" : 15,
    "startLineNumber" : 77,
    "startColumnNumber" : 29,
    "endLineNumber" : 77,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 83,
    "startColumnNumber" : 29,
    "endLineNumber" : 83,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 90,
    "startColumnNumber" : 29,
    "endLineNumber" : 90,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 96,
    "startColumnNumber" : 29,
    "endLineNumber" : 96,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 102,
    "startColumnNumber" : 29,
    "endLineNumber" : 102,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 108,
    "startColumnNumber" : 29,
    "endLineNumber" : 108,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  } ]
}