{
  "id" : 259,
  "expression" : "CHHapticEngine",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/backends/gdx-backend-robovm-metalangle/src/com/badlogic/gdx/backends/iosrobovm/IOSHaptics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CHHapticEngine",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 37,
      "startColumnNumber" : 34,
      "endLineNumber" : 37,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 37,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 74
      },
      "nodeContext" : "CHHapticEngine.capabilitiesForHardware()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 37,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 92
      },
      "nodeContext" : "CHHapticEngine.capabilitiesForHardware().supportsHaptics()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 37,
        "startColumnNumber" : 20,
        "endLineNumber" : 37,
        "endColumnNumber" : 92
      },
      "nodeContext" : "useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 37,
        "startColumnNumber" : 3,
        "endLineNumber" : 37,
        "endColumnNumber" : 92
      },
      "nodeContext" : "hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 37,
        "startColumnNumber" : 3,
        "endLineNumber" : 37,
        "endColumnNumber" : 93
      },
      "nodeContext" : "hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 36,
        "startColumnNumber" : 96,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n  if (hapticsSupport) {\n    try {\n      hapticEngine=new CHHapticEngine();\n    }\n catch (    NSErrorException e) {\n      Gdx.app.error(\"IOSHaptics\",\"Error creating CHHapticEngine. Haptics will be disabled. \" + e);\n      hapticsSupport=false;\n      return;\n    }\n    hapticEngine.setPlaysHapticsOnly(true);\n    hapticEngine.setAutoShutdownEnabled(true);\n    hapticEngine.setResetHandler(new Runnable(){\n      @Override public void run(){\n        hapticEngine.start(new VoidBlock1<NSError>(){\n          @Override public void invoke(          NSError nsError){\n            if (nsError != null) {\n              Gdx.app.error(\"IOSHaptics\",\"Error restarting CHHapticEngine. Haptics will be disabled.\");\n              hapticsSupport=false;\n            }\n          }\n        }\n);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (NSProcessInfo.getSharedProcessInfo().getOperatingSystemVersion().getMajorVersion() >= 13) {\n  hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n  if (hapticsSupport) {\n    try {\n      hapticEngine=new CHHapticEngine();\n    }\n catch (    NSErrorException e) {\n      Gdx.app.error(\"IOSHaptics\",\"Error creating CHHapticEngine. Haptics will be disabled. \" + e);\n      hapticsSupport=false;\n      return;\n    }\n    hapticEngine.setPlaysHapticsOnly(true);\n    hapticEngine.setAutoShutdownEnabled(true);\n    hapticEngine.setResetHandler(new Runnable(){\n      @Override public void run(){\n        hapticEngine.start(new VoidBlock1<NSError>(){\n          @Override public void invoke(          NSError nsError){\n            if (nsError != null) {\n              Gdx.app.error(\"IOSHaptics\",\"Error restarting CHHapticEngine. Haptics will be disabled.\");\n              hapticsSupport=false;\n            }\n          }\n        }\n);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 34,
        "startColumnNumber" : 40,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  vibratorSupport=useHaptics && UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Phone;\n  if (NSProcessInfo.getSharedProcessInfo().getOperatingSystemVersion().getMajorVersion() >= 13) {\n    hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n    if (hapticsSupport) {\n      try {\n        hapticEngine=new CHHapticEngine();\n      }\n catch (      NSErrorException e) {\n        Gdx.app.error(\"IOSHaptics\",\"Error creating CHHapticEngine. Haptics will be disabled. \" + e);\n        hapticsSupport=false;\n        return;\n      }\n      hapticEngine.setPlaysHapticsOnly(true);\n      hapticEngine.setAutoShutdownEnabled(true);\n      hapticEngine.setResetHandler(new Runnable(){\n        @Override public void run(){\n          hapticEngine.start(new VoidBlock1<NSError>(){\n            @Override public void invoke(            NSError nsError){\n              if (nsError != null) {\n                Gdx.app.error(\"IOSHaptics\",\"Error restarting CHHapticEngine. Haptics will be disabled.\");\n                hapticsSupport=false;\n              }\n            }\n          }\n);\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public IOSHaptics(boolean useHaptics){\n  vibratorSupport=useHaptics && UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Phone;\n  if (NSProcessInfo.getSharedProcessInfo().getOperatingSystemVersion().getMajorVersion() >= 13) {\n    hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n    if (hapticsSupport) {\n      try {\n        hapticEngine=new CHHapticEngine();\n      }\n catch (      NSErrorException e) {\n        Gdx.app.error(\"IOSHaptics\",\"Error creating CHHapticEngine. Haptics will be disabled. \" + e);\n        hapticsSupport=false;\n        return;\n      }\n      hapticEngine.setPlaysHapticsOnly(true);\n      hapticEngine.setAutoShutdownEnabled(true);\n      hapticEngine.setResetHandler(new Runnable(){\n        @Override public void run(){\n          hapticEngine.start(new VoidBlock1<NSError>(){\n            @Override public void invoke(            NSError nsError){\n              if (nsError != null) {\n                Gdx.app.error(\"IOSHaptics\",\"Error restarting CHHapticEngine. Haptics will be disabled.\");\n                hapticsSupport=false;\n              }\n            }\n          }\n);\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 37,
        "startColumnNumber" : 3,
        "endLineNumber" : 37,
        "endColumnNumber" : 93
      },
      "nodeContext" : "hapticsSupport=useHaptics && CHHapticEngine.capabilitiesForHardware().supportsHaptics();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 37,
    "startColumnNumber" : 34,
    "endLineNumber" : 37,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}