{
  "id" : 332,
  "expression" : "new ArrayList<Command>()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/CumulativeCommandEventCounterStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayList<Command>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 290,
      "startColumnNumber" : 35,
      "endLineNumber" : 290,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 290,
        "startColumnNumber" : 22,
        "endLineNumber" : 290,
        "endColumnNumber" : 59
      },
      "nodeContext" : "saturators=new ArrayList<Command>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<Command> saturators=new ArrayList<Command>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 278,
        "startColumnNumber" : 40,
        "endLineNumber" : 332,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-CumulativeCounter-H\");\n  stream=CumulativeCommandEventCounterStream.getInstance(key,10,500);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(5).subscribe(getSubscriber(latch));\n  List<Command> saturators=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,500,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  Command rejected1=Command.from(groupKey,key,HystrixEventType.SUCCESS,0,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);\n  Command rejected2=Command.from(groupKey,key,HystrixEventType.SUCCESS,0,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);\n  for (  final Command saturator : saturators) {\n    new Thread(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        saturator.observe();\n      }\n    }\n)).start();\n  }\n  try {\n    Thread.sleep(100);\n  }\n catch (  InterruptedException ie) {\n    fail(ie.getMessage());\n  }\n  rejected1.observe();\n  rejected2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertTrue(rejected1.isResponseSemaphoreRejected());\n  assertTrue(rejected2.isResponseSemaphoreRejected());\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.SUCCESS.ordinal()]=10;\n  expected[HystrixEventType.SEMAPHORE_REJECTED.ordinal()]=2;\n  expected[HystrixEventType.FALLBACK_SUCCESS.ordinal()]=2;\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 300,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2485,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 332,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSemaphoreRejected(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-CumulativeCounter-H\");\n  stream=CumulativeCommandEventCounterStream.getInstance(key,10,500);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(5).subscribe(getSubscriber(latch));\n  List<Command> saturators=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,500,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  Command rejected1=Command.from(groupKey,key,HystrixEventType.SUCCESS,0,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);\n  Command rejected2=Command.from(groupKey,key,HystrixEventType.SUCCESS,0,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE);\n  for (  final Command saturator : saturators) {\n    new Thread(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        saturator.observe();\n      }\n    }\n)).start();\n  }\n  try {\n    Thread.sleep(100);\n  }\n catch (  InterruptedException ie) {\n    fail(ie.getMessage());\n  }\n  rejected1.observe();\n  rejected2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertTrue(rejected1.isResponseSemaphoreRejected());\n  assertTrue(rejected2.isResponseSemaphoreRejected());\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.SUCCESS.ordinal()]=10;\n  expected[HystrixEventType.SEMAPHORE_REJECTED.ordinal()]=2;\n  expected[HystrixEventType.FALLBACK_SUCCESS.ordinal()]=2;\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<Command> saturators=new ArrayList<Command>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<com.netflix.hystrix.metric.CommandStreamTest.Command>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 290,
    "startColumnNumber" : 35,
    "endLineNumber" : 290,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}