{
  "id" : 79,
  "expression" : "coordinatorRedirectInfo.doLocal(null)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/server/http/CoordinatorRedirectInfoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "coordinatorRedirectInfo.doLocal(null)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 47,
      "startColumnNumber" : 22,
      "endLineNumber" : 47,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assert.assertTrue(coordinatorRedirectInfo.doLocal(null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertTrue(coordinatorRedirectInfo.doLocal(null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EasyMock.expect(druidCoordinator.isLeader()).andReturn(true).anyTimes();\n  EasyMock.replay(druidCoordinator);\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(null));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/leader\"));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/isLeader\"));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/other/path\"));\n  EasyMock.verify(druidCoordinator);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDoLocalWhenLeading(){\n  EasyMock.expect(druidCoordinator.isLeader()).andReturn(true).anyTimes();\n  EasyMock.replay(druidCoordinator);\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(null));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/leader\"));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/isLeader\"));\n  Assert.assertTrue(coordinatorRedirectInfo.doLocal(\"/druid/coordinator/v1/other/path\"));\n  EasyMock.verify(druidCoordinator);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertTrue(coordinatorRedirectInfo.doLocal(null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 47,
    "startColumnNumber" : 22,
    "endLineNumber" : 47,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}