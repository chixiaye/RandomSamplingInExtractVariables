{
  "id" : 395,
  "expression" : "Flowable",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableSkipLastTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 52,
      "endLineNumber" : 96,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 96,
        "startColumnNumber" : 52,
        "endLineNumber" : 96,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Flowable.bufferSize()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 96,
        "startColumnNumber" : 52,
        "endLineNumber" : 96,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Flowable.bufferSize() * 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 96,
        "startColumnNumber" : 32,
        "endLineNumber" : 96,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Observable.range(0,Flowable.bufferSize() * 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 96,
        "startColumnNumber" : 32,
        "endLineNumber" : 96,
        "endColumnNumber" : 115
      },
      "nodeContext" : "Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 96,
        "startColumnNumber" : 28,
        "endLineNumber" : 96,
        "endColumnNumber" : 115
      },
      "nodeContext" : "o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 95,
        "startColumnNumber" : 47,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastWithBackpressure(){\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable"
  }, {
    "nodeContext" : "Flowable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 88,
      "endLineNumber" : 96,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 96,
        "startColumnNumber" : 88,
        "endLineNumber" : 96,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Flowable.bufferSize()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 96,
        "startColumnNumber" : 88,
        "endLineNumber" : 96,
        "endColumnNumber" : 114
      },
      "nodeContext" : "Flowable.bufferSize() + 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 96,
        "startColumnNumber" : 32,
        "endLineNumber" : 96,
        "endColumnNumber" : 115
      },
      "nodeContext" : "Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 96,
        "startColumnNumber" : 28,
        "endLineNumber" : 96,
        "endColumnNumber" : 115
      },
      "nodeContext" : "o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 95,
        "startColumnNumber" : 47,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastWithBackpressure(){\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 116
      },
      "nodeContext" : "Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable"
  }, {
    "nodeContext" : "Flowable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 101,
      "startColumnNumber" : 22,
      "endLineNumber" : 101,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 101,
        "startColumnNumber" : 22,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Flowable.bufferSize()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 101,
        "startColumnNumber" : 21,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(Flowable.bufferSize())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 101,
        "startColumnNumber" : 21,
        "endLineNumber" : 101,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(Flowable.bufferSize()) - 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals((Flowable.bufferSize()) - 10,ts.valueCount())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 95,
        "startColumnNumber" : 47,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastWithBackpressure(){\n  Observable<Integer> o=Observable.range(0,Flowable.bufferSize() * 2).skipLast(Flowable.bufferSize() + 10);\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.observeOn(Schedulers.computation()).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals((Flowable.bufferSize()) - 10,ts.valueCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 52,
    "endLineNumber" : 96,
    "endColumnNumber" : 60
  }, {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 88,
    "endLineNumber" : 96,
    "endColumnNumber" : 96
  }, {
    "charLength" : 8,
    "startLineNumber" : 101,
    "startColumnNumber" : 22,
    "endLineNumber" : 101,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}