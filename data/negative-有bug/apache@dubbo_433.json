{
  "id" : 433,
  "expression" : "isConnected()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isConnected()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 178,
      "startColumnNumber" : 17,
      "endLineNumber" : 178,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 178,
        "endColumnNumber" : 30
      },
      "nodeContext" : "!isConnected()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 180,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!isConnected()) {\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 176,
        "startColumnNumber" : 18,
        "endLineNumber" : 181,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!isConnected()) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2488,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  boolean ret=future.awaitUninterruptibly(getConnectTimeout(),MILLISECONDS);\n  if (ret && future.isSuccess()) {\n    Channel newChannel=future.channel();\n    try {\n      Channel oldChannel=NettyClient.this.channel;\n      if (oldChannel != null) {\n        try {\n          if (logger.isInfoEnabled()) {\n            logger.info(\"Close old netty channel \" + oldChannel + \" on create new netty channel \"+ newChannel);\n          }\n          oldChannel.close();\n        }\n  finally {\n          NettyChannel.removeChannelIfDisconnected(oldChannel);\n        }\n      }\n    }\n  finally {\n      if (NettyClient.this.isClosed()) {\n        try {\n          if (logger.isInfoEnabled()) {\n            logger.info(\"Close new netty channel \" + newChannel + \", because the client closed.\");\n          }\n          newChannel.close();\n        }\n  finally {\n          NettyClient.this.channel=null;\n          NettyChannel.removeChannelIfDisconnected(newChannel);\n        }\n      }\n else {\n        NettyClient.this.channel=newChannel;\n      }\n    }\n  }\n else   if (future.cause() != null) {\n    throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \", error message is:\"+ future.cause().getMessage(),future.cause());\n  }\n else {\n    throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \" client-side timeout \"+ getConnectTimeout()+ \"ms (elapsed: \"+ (System.currentTimeMillis() - start)+ \"ms) from netty client \"+ NetUtils.getLocalHost()+ \" using dubbo version \"+ Version.getVersion());\n  }\n}\n  finally {\n  if (!isConnected()) {\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 181,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2624,
        "startLineNumber" : 130,
        "startColumnNumber" : 48,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long start=System.currentTimeMillis();\n  ChannelFuture future=bootstrap.connect(getConnectAddress());\n  try {\n    boolean ret=future.awaitUninterruptibly(getConnectTimeout(),MILLISECONDS);\n    if (ret && future.isSuccess()) {\n      Channel newChannel=future.channel();\n      try {\n        Channel oldChannel=NettyClient.this.channel;\n        if (oldChannel != null) {\n          try {\n            if (logger.isInfoEnabled()) {\n              logger.info(\"Close old netty channel \" + oldChannel + \" on create new netty channel \"+ newChannel);\n            }\n            oldChannel.close();\n          }\n  finally {\n            NettyChannel.removeChannelIfDisconnected(oldChannel);\n          }\n        }\n      }\n  finally {\n        if (NettyClient.this.isClosed()) {\n          try {\n            if (logger.isInfoEnabled()) {\n              logger.info(\"Close new netty channel \" + newChannel + \", because the client closed.\");\n            }\n            newChannel.close();\n          }\n  finally {\n            NettyClient.this.channel=null;\n            NettyChannel.removeChannelIfDisconnected(newChannel);\n          }\n        }\n else {\n          NettyClient.this.channel=newChannel;\n        }\n      }\n    }\n else     if (future.cause() != null) {\n      throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \", error message is:\"+ future.cause().getMessage(),future.cause());\n    }\n else {\n      throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \" client-side timeout \"+ getConnectTimeout()+ \"ms (elapsed: \"+ (System.currentTimeMillis() - start)+ \"ms) from netty client \"+ NetUtils.getLocalHost()+ \" using dubbo version \"+ Version.getVersion());\n    }\n  }\n  finally {\n    if (!isConnected()) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2682,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doConnect() throws Throwable {\n  long start=System.currentTimeMillis();\n  ChannelFuture future=bootstrap.connect(getConnectAddress());\n  try {\n    boolean ret=future.awaitUninterruptibly(getConnectTimeout(),MILLISECONDS);\n    if (ret && future.isSuccess()) {\n      Channel newChannel=future.channel();\n      try {\n        Channel oldChannel=NettyClient.this.channel;\n        if (oldChannel != null) {\n          try {\n            if (logger.isInfoEnabled()) {\n              logger.info(\"Close old netty channel \" + oldChannel + \" on create new netty channel \"+ newChannel);\n            }\n            oldChannel.close();\n          }\n  finally {\n            NettyChannel.removeChannelIfDisconnected(oldChannel);\n          }\n        }\n      }\n  finally {\n        if (NettyClient.this.isClosed()) {\n          try {\n            if (logger.isInfoEnabled()) {\n              logger.info(\"Close new netty channel \" + newChannel + \", because the client closed.\");\n            }\n            newChannel.close();\n          }\n  finally {\n            NettyClient.this.channel=null;\n            NettyChannel.removeChannelIfDisconnected(newChannel);\n          }\n        }\n else {\n          NettyClient.this.channel=newChannel;\n        }\n      }\n    }\n else     if (future.cause() != null) {\n      throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \", error message is:\"+ future.cause().getMessage(),future.cause());\n    }\n else {\n      throw new RemotingException(this,\"client(url: \" + getUrl() + \") failed to connect to server \"+ getRemoteAddress()+ \" client-side timeout \"+ getConnectTimeout()+ \"ms (elapsed: \"+ (System.currentTimeMillis() - start)+ \"ms) from netty client \"+ NetUtils.getLocalHost()+ \" using dubbo version \"+ Version.getVersion());\n    }\n  }\n  finally {\n    if (!isConnected()) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 178,
        "endColumnNumber" : 30
      },
      "nodeContext" : "!isConnected()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 178,
    "startColumnNumber" : 17,
    "endLineNumber" : 178,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}