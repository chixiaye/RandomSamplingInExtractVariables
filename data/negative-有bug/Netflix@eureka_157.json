{
  "id" : 157,
  "expression" : "clsStr",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-dashboard/src/test/java/com/netflix/eureka2/classTypeAdapterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clsStr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 27,
      "startColumnNumber" : 26,
      "endLineNumber" : 27,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 27,
        "startColumnNumber" : 26,
        "endLineNumber" : 27,
        "endColumnNumber" : 40
      },
      "nodeContext" : "clsStr != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertTrue(clsStr != null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertTrue(clsStr != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 13,
        "startColumnNumber" : 36,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Gson gson=new GsonBuilder().registerTypeAdapter(Class.class,new SimpleGsonClassTypeAdapter()).create();\n  Map<String,String> data=new HashMap<>();\n  data.put(\"name\",\"Barak Obama\");\n  data.put(\"place\",\"washington DC.\");\n  final String str=gson.toJson(data);\n  Assert.assertTrue(str != null);\n  Assert.assertTrue(!str.isEmpty());\n  Map<String,Class> classMap=new HashMap<>();\n  classMap.put(\"string\",String.class);\n  classMap.put(\"number\",Integer.class);\n  final String clsStr=gson.toJson(classMap);\n  Assert.assertTrue(clsStr != null);\n  Assert.assertTrue(!clsStr.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void simpleTypeAdapter(){\n  Gson gson=new GsonBuilder().registerTypeAdapter(Class.class,new SimpleGsonClassTypeAdapter()).create();\n  Map<String,String> data=new HashMap<>();\n  data.put(\"name\",\"Barak Obama\");\n  data.put(\"place\",\"washington DC.\");\n  final String str=gson.toJson(data);\n  Assert.assertTrue(str != null);\n  Assert.assertTrue(!str.isEmpty());\n  Map<String,Class> classMap=new HashMap<>();\n  classMap.put(\"string\",String.class);\n  classMap.put(\"number\",Integer.class);\n  final String clsStr=gson.toJson(classMap);\n  Assert.assertTrue(clsStr != null);\n  Assert.assertTrue(!clsStr.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertTrue(clsStr != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "clsStr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 28,
      "startColumnNumber" : 27,
      "endLineNumber" : 28,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 28,
        "endColumnNumber" : 43
      },
      "nodeContext" : "clsStr.isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 28,
        "startColumnNumber" : 26,
        "endLineNumber" : 28,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!clsStr.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertTrue(!clsStr.isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Assert.assertTrue(!clsStr.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 13,
        "startColumnNumber" : 36,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Gson gson=new GsonBuilder().registerTypeAdapter(Class.class,new SimpleGsonClassTypeAdapter()).create();\n  Map<String,String> data=new HashMap<>();\n  data.put(\"name\",\"Barak Obama\");\n  data.put(\"place\",\"washington DC.\");\n  final String str=gson.toJson(data);\n  Assert.assertTrue(str != null);\n  Assert.assertTrue(!str.isEmpty());\n  Map<String,Class> classMap=new HashMap<>();\n  classMap.put(\"string\",String.class);\n  classMap.put(\"number\",Integer.class);\n  final String clsStr=gson.toJson(classMap);\n  Assert.assertTrue(clsStr != null);\n  Assert.assertTrue(!clsStr.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void simpleTypeAdapter(){\n  Gson gson=new GsonBuilder().registerTypeAdapter(Class.class,new SimpleGsonClassTypeAdapter()).create();\n  Map<String,String> data=new HashMap<>();\n  data.put(\"name\",\"Barak Obama\");\n  data.put(\"place\",\"washington DC.\");\n  final String str=gson.toJson(data);\n  Assert.assertTrue(str != null);\n  Assert.assertTrue(!str.isEmpty());\n  Map<String,Class> classMap=new HashMap<>();\n  classMap.put(\"string\",String.class);\n  classMap.put(\"number\",Integer.class);\n  final String clsStr=gson.toJson(classMap);\n  Assert.assertTrue(clsStr != null);\n  Assert.assertTrue(!clsStr.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Assert.assertTrue(!clsStr.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 27,
    "startColumnNumber" : 26,
    "endLineNumber" : 27,
    "endColumnNumber" : 32
  }, {
    "charLength" : 6,
    "startLineNumber" : 28,
    "startColumnNumber" : 27,
    "endLineNumber" : 28,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}