{
  "id" : 88,
  "expression" : "StringUtils",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/tcc/src/main/java/io/seata/rm/tcc/interceptor/ActionContextUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 64,
      "startColumnNumber" : 32,
      "endLineNumber" : 64,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 32,
        "endLineNumber" : 64,
        "endColumnNumber" : 70
      },
      "nodeContext" : "StringUtils.isBlank(param.paramName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 64,
        "startColumnNumber" : 28,
        "endLineNumber" : 68,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (StringUtils.isBlank(param.paramName())) {\n  context.put(fieldName,paramObject);\n}\n else {\n  context.put(param.paramName(),paramObject);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 69,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (StringUtils.isBlank(param.paramName())) {\n    context.put(fieldName,paramObject);\n  }\n else {\n    context.put(param.paramName(),paramObject);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (param.isParamInProperty()) {\n  context.putAll(fetchContextFromObject(targetObject));\n}\n else {\n  if (StringUtils.isBlank(param.paramName())) {\n    context.put(fieldName,paramObject);\n  }\n else {\n    context.put(param.paramName(),paramObject);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 58,
        "startColumnNumber" : 36,
        "endLineNumber" : 70,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(targetObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 80,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (index >= 0) {\n  @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(targetObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n else {\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(paramObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 53,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n  f.setAccessible(true);\n  Object paramObject=f.get(targetParam);\n  int index=param.index();\n  if (index >= 0) {\n    @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(targetObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n else {\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(paramObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (annotation != null) {\n  BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n  f.setAccessible(true);\n  Object paramObject=f.get(targetParam);\n  int index=param.index();\n  if (index >= 0) {\n    @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(targetObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n else {\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(paramObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1656,
        "startLineNumber" : 49,
        "startColumnNumber" : 35,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String fieldName=f.getName();\n  Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n  if (annotation != null) {\n    BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n    f.setAccessible(true);\n    Object paramObject=f.get(targetParam);\n    int index=param.index();\n    if (index >= 0) {\n      @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(targetObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n else {\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(paramObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Field f : fields) {\n  String fieldName=f.getName();\n  Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n  if (annotation != null) {\n    BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n    f.setAccessible(true);\n    Object paramObject=f.get(targetParam);\n    int index=param.index();\n    if (index >= 0) {\n      @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(targetObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n else {\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(paramObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 158,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1919,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,Object> context=new HashMap<String,Object>(8);\n  List<Field> fields=new ArrayList<Field>();\n  getAllField(targetParam.getClass(),fields);\n  for (  Field f : fields) {\n    String fieldName=f.getName();\n    Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n    if (annotation != null) {\n      BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n      f.setAccessible(true);\n      Object paramObject=f.get(targetParam);\n      int index=param.index();\n      if (index >= 0) {\n        @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(targetObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n else {\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(paramObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n    }\n  }\n  return context;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Map<String,Object> context=new HashMap<String,Object>(8);\n  List<Field> fields=new ArrayList<Field>();\n  getAllField(targetParam.getClass(),fields);\n  for (  Field f : fields) {\n    String fieldName=f.getName();\n    Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n    if (annotation != null) {\n      BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n      f.setAccessible(true);\n      Object paramObject=f.get(targetParam);\n      int index=param.index();\n      if (index >= 0) {\n        @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(targetObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n else {\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(paramObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n    }\n  }\n  return context;\n}\n catch (Throwable t) {\n  throw new FrameworkException(t,\"fetchContextFromObject failover\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 214,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2051,
        "startLineNumber" : 44,
        "startColumnNumber" : 81,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Map<String,Object> context=new HashMap<String,Object>(8);\n    List<Field> fields=new ArrayList<Field>();\n    getAllField(targetParam.getClass(),fields);\n    for (    Field f : fields) {\n      String fieldName=f.getName();\n      Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n      if (annotation != null) {\n        BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n        f.setAccessible(true);\n        Object paramObject=f.get(targetParam);\n        int index=param.index();\n        if (index >= 0) {\n          @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(targetObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n else {\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(paramObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n      }\n    }\n    return context;\n  }\n catch (  Throwable t) {\n    throw new FrameworkException(t,\"fetchContextFromObject failover\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2264,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Extracting context data from parameters\n * @param targetParam the target param\n * @return map map\n */\npublic static Map<String,Object> fetchContextFromObject(Object targetParam){\n  try {\n    Map<String,Object> context=new HashMap<String,Object>(8);\n    List<Field> fields=new ArrayList<Field>();\n    getAllField(targetParam.getClass(),fields);\n    for (    Field f : fields) {\n      String fieldName=f.getName();\n      Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n      if (annotation != null) {\n        BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n        f.setAccessible(true);\n        Object paramObject=f.get(targetParam);\n        int index=param.index();\n        if (index >= 0) {\n          @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(targetObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n else {\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(paramObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n      }\n    }\n    return context;\n  }\n catch (  Throwable t) {\n    throw new FrameworkException(t,\"fetchContextFromObject failover\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 32,
        "endLineNumber" : 64,
        "endColumnNumber" : 70
      },
      "nodeContext" : "StringUtils.isBlank(param.paramName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.common.util.StringUtils"
  }, {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 74,
      "startColumnNumber" : 32,
      "endLineNumber" : 74,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 74,
        "endColumnNumber" : 70
      },
      "nodeContext" : "StringUtils.isBlank(param.paramName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 74,
        "startColumnNumber" : 28,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (StringUtils.isBlank(param.paramName())) {\n  context.put(fieldName,paramObject);\n}\n else {\n  context.put(param.paramName(),paramObject);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 73,
        "startColumnNumber" : 31,
        "endLineNumber" : 79,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (StringUtils.isBlank(param.paramName())) {\n    context.put(fieldName,paramObject);\n  }\n else {\n    context.put(param.paramName(),paramObject);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 79,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (param.isParamInProperty()) {\n  context.putAll(fetchContextFromObject(paramObject));\n}\n else {\n  if (StringUtils.isBlank(param.paramName())) {\n    context.put(fieldName,paramObject);\n  }\n else {\n    context.put(param.paramName(),paramObject);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 70,
        "startColumnNumber" : 27,
        "endLineNumber" : 80,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(paramObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 80,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (index >= 0) {\n  @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(targetObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n else {\n  if (param.isParamInProperty()) {\n    context.putAll(fetchContextFromObject(paramObject));\n  }\n else {\n    if (StringUtils.isBlank(param.paramName())) {\n      context.put(fieldName,paramObject);\n    }\n else {\n      context.put(param.paramName(),paramObject);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 53,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n  f.setAccessible(true);\n  Object paramObject=f.get(targetParam);\n  int index=param.index();\n  if (index >= 0) {\n    @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(targetObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n else {\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(paramObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (annotation != null) {\n  BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n  f.setAccessible(true);\n  Object paramObject=f.get(targetParam);\n  int index=param.index();\n  if (index >= 0) {\n    @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(targetObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n else {\n    if (param.isParamInProperty()) {\n      context.putAll(fetchContextFromObject(paramObject));\n    }\n else {\n      if (StringUtils.isBlank(param.paramName())) {\n        context.put(fieldName,paramObject);\n      }\n else {\n        context.put(param.paramName(),paramObject);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1656,
        "startLineNumber" : 49,
        "startColumnNumber" : 35,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String fieldName=f.getName();\n  Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n  if (annotation != null) {\n    BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n    f.setAccessible(true);\n    Object paramObject=f.get(targetParam);\n    int index=param.index();\n    if (index >= 0) {\n      @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(targetObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n else {\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(paramObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Field f : fields) {\n  String fieldName=f.getName();\n  Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n  if (annotation != null) {\n    BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n    f.setAccessible(true);\n    Object paramObject=f.get(targetParam);\n    int index=param.index();\n    if (index >= 0) {\n      @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(targetObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n else {\n      if (param.isParamInProperty()) {\n        context.putAll(fetchContextFromObject(paramObject));\n      }\n else {\n        if (StringUtils.isBlank(param.paramName())) {\n          context.put(fieldName,paramObject);\n        }\n else {\n          context.put(param.paramName(),paramObject);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 158,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1919,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,Object> context=new HashMap<String,Object>(8);\n  List<Field> fields=new ArrayList<Field>();\n  getAllField(targetParam.getClass(),fields);\n  for (  Field f : fields) {\n    String fieldName=f.getName();\n    Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n    if (annotation != null) {\n      BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n      f.setAccessible(true);\n      Object paramObject=f.get(targetParam);\n      int index=param.index();\n      if (index >= 0) {\n        @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(targetObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n else {\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(paramObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n    }\n  }\n  return context;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Map<String,Object> context=new HashMap<String,Object>(8);\n  List<Field> fields=new ArrayList<Field>();\n  getAllField(targetParam.getClass(),fields);\n  for (  Field f : fields) {\n    String fieldName=f.getName();\n    Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n    if (annotation != null) {\n      BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n      f.setAccessible(true);\n      Object paramObject=f.get(targetParam);\n      int index=param.index();\n      if (index >= 0) {\n        @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(targetObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n else {\n        if (param.isParamInProperty()) {\n          context.putAll(fetchContextFromObject(paramObject));\n        }\n else {\n          if (StringUtils.isBlank(param.paramName())) {\n            context.put(fieldName,paramObject);\n          }\n else {\n            context.put(param.paramName(),paramObject);\n          }\n        }\n      }\n    }\n  }\n  return context;\n}\n catch (Throwable t) {\n  throw new FrameworkException(t,\"fetchContextFromObject failover\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 214,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2051,
        "startLineNumber" : 44,
        "startColumnNumber" : 81,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Map<String,Object> context=new HashMap<String,Object>(8);\n    List<Field> fields=new ArrayList<Field>();\n    getAllField(targetParam.getClass(),fields);\n    for (    Field f : fields) {\n      String fieldName=f.getName();\n      Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n      if (annotation != null) {\n        BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n        f.setAccessible(true);\n        Object paramObject=f.get(targetParam);\n        int index=param.index();\n        if (index >= 0) {\n          @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(targetObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n else {\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(paramObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n      }\n    }\n    return context;\n  }\n catch (  Throwable t) {\n    throw new FrameworkException(t,\"fetchContextFromObject failover\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2264,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Extracting context data from parameters\n * @param targetParam the target param\n * @return map map\n */\npublic static Map<String,Object> fetchContextFromObject(Object targetParam){\n  try {\n    Map<String,Object> context=new HashMap<String,Object>(8);\n    List<Field> fields=new ArrayList<Field>();\n    getAllField(targetParam.getClass(),fields);\n    for (    Field f : fields) {\n      String fieldName=f.getName();\n      Annotation annotation=f.getAnnotation(BusinessActionContextParameter.class);\n      if (annotation != null) {\n        BusinessActionContextParameter param=(BusinessActionContextParameter)annotation;\n        f.setAccessible(true);\n        Object paramObject=f.get(targetParam);\n        int index=param.index();\n        if (index >= 0) {\n          @SuppressWarnings(\"unchecked\") Object targetObject=((List<Object>)paramObject).get(index);\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(targetObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n else {\n          if (param.isParamInProperty()) {\n            context.putAll(fetchContextFromObject(paramObject));\n          }\n else {\n            if (StringUtils.isBlank(param.paramName())) {\n              context.put(fieldName,paramObject);\n            }\n else {\n              context.put(param.paramName(),paramObject);\n            }\n          }\n        }\n      }\n    }\n    return context;\n  }\n catch (  Throwable t) {\n    throw new FrameworkException(t,\"fetchContextFromObject failover\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 74,
        "endColumnNumber" : 70
      },
      "nodeContext" : "StringUtils.isBlank(param.paramName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.common.util.StringUtils"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 64,
    "startColumnNumber" : 32,
    "endLineNumber" : 64,
    "endColumnNumber" : 43
  }, {
    "charLength" : 11,
    "startLineNumber" : 74,
    "startColumnNumber" : 32,
    "endLineNumber" : 74,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}