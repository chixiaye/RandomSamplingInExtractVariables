{
  "id" : 501,
  "expression" : "\"test\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-triple/src/test/java/org/apache/dubbo/rpc/protocol/tri/UnaryClientStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"test\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 43,
      "startColumnNumber" : 39,
      "endLineNumber" : 43,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 43,
        "startColumnNumber" : 18,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ServiceConfigURL(\"test\",\"1.2.3.4\",8080)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "url=new ServiceConfigURL(\"test\",\"1.2.3.4\",8080)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 64
      },
      "nodeContext" : "URL url=new ServiceConfigURL(\"test\",\"1.2.3.4\",8080);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 42,
        "startColumnNumber" : 27,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=new ServiceConfigURL(\"test\",\"1.2.3.4\",8080);\n  final Executor executor=Mockito.mock(Executor.class);\n  final UnaryClientStream stream=UnaryClientStream.unary(url,executor);\n  final StreamObserver<Object> observer=stream.asStreamObserver();\n  RpcInvocation inv=Mockito.mock(RpcInvocation.class);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  final Invoker mockInvoker=Mockito.mock(Invoker.class);\n  when(mockInvoker.getUrl()).thenReturn(url);\n  when(inv.getInvoker()).thenReturn(mockInvoker);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  verify(mockInvoker,times(2)).getUrl();\n  TransportObserver transportObserver=Mockito.mock(TransportObserver.class);\n  stream.subscribe(transportObserver);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  Mockito.verify(transportObserver).tryOnMetadata(any(),anyBoolean());\n  MethodDescriptor md=Mockito.mock(MethodDescriptor.class);\n  when(md.isNeedWrap()).thenReturn(true);\n  when(md.isStream()).thenReturn(false);\n  stream.method(md);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  String[] params=new String[]{\"rainbow ponies!\"};\n  when(inv.getArguments()).thenReturn(params);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1952,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @SuppressWarnings(\"all\") public void testInit(){\n  URL url=new ServiceConfigURL(\"test\",\"1.2.3.4\",8080);\n  final Executor executor=Mockito.mock(Executor.class);\n  final UnaryClientStream stream=UnaryClientStream.unary(url,executor);\n  final StreamObserver<Object> observer=stream.asStreamObserver();\n  RpcInvocation inv=Mockito.mock(RpcInvocation.class);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  final Invoker mockInvoker=Mockito.mock(Invoker.class);\n  when(mockInvoker.getUrl()).thenReturn(url);\n  when(inv.getInvoker()).thenReturn(mockInvoker);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  verify(mockInvoker,times(2)).getUrl();\n  TransportObserver transportObserver=Mockito.mock(TransportObserver.class);\n  stream.subscribe(transportObserver);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  Mockito.verify(transportObserver).tryOnMetadata(any(),anyBoolean());\n  MethodDescriptor md=Mockito.mock(MethodDescriptor.class);\n  when(md.isNeedWrap()).thenReturn(true);\n  when(md.isStream()).thenReturn(false);\n  stream.method(md);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n  String[] params=new String[]{\"rainbow ponies!\"};\n  when(inv.getArguments()).thenReturn(params);\n  Assertions.assertThrows(NullPointerException.class,() -> observer.onNext(inv));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 64
      },
      "nodeContext" : "URL url=new ServiceConfigURL(\"test\",\"1.2.3.4\",8080);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 43,
    "startColumnNumber" : 39,
    "endLineNumber" : 43,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}