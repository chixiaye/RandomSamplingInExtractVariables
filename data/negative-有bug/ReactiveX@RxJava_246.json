{
  "id" : 246,
  "expression" : "new Runnable(){\n  @Override public void run(){\n    System.out.println(\"Done\");\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableReplayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Runnable(){\n  @Override public void run(){\n    System.out.println(\"Done\");\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 163,
      "startLineNumber" : 496,
      "startColumnNumber" : 12,
      "endLineNumber" : 501,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 18,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 482,
        "startColumnNumber" : 12,
        "endLineNumber" : 501,
        "endColumnNumber" : 14
      },
      "nodeContext" : "result.subscribe(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    System.out.println(t1);\n  }\n}\n,new Consumer<Throwable>(){\n  @Override public void accept(  Throwable t1){\n    t1.printStackTrace();\n  }\n}\n,new Runnable(){\n  @Override public void run(){\n    System.out.println(\"Done\");\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 482,
        "startColumnNumber" : 12,
        "endLineNumber" : 501,
        "endColumnNumber" : 15
      },
      "nodeContext" : "result.subscribe(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    System.out.println(t1);\n  }\n}\n,new Consumer<Throwable>(){\n  @Override public void accept(  Throwable t1){\n    t1.printStackTrace();\n  }\n}\n,new Runnable(){\n  @Override public void run(){\n    System.out.println(\"Done\");\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 479,
        "startColumnNumber" : 36,
        "endLineNumber" : 503,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  effectCounter.set(0);\n  System.out.printf(\"- %d -%n\",i);\n  result.subscribe(new Consumer<Integer>(){\n    @Override public void accept(    Integer t1){\n      System.out.println(t1);\n    }\n  }\n,new Consumer<Throwable>(){\n    @Override public void accept(    Throwable t1){\n      t1.printStackTrace();\n    }\n  }\n,new Runnable(){\n    @Override public void run(){\n      System.out.println(\"Done\");\n    }\n  }\n);\n  assertEquals(2,effectCounter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 479,
        "startColumnNumber" : 8,
        "endLineNumber" : 503,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < 3; i++) {\n  effectCounter.set(0);\n  System.out.printf(\"- %d -%n\",i);\n  result.subscribe(new Consumer<Integer>(){\n    @Override public void accept(    Integer t1){\n      System.out.println(t1);\n    }\n  }\n,new Consumer<Throwable>(){\n    @Override public void accept(    Throwable t1){\n      t1.printStackTrace();\n    }\n  }\n,new Runnable(){\n    @Override public void run(){\n      System.out.println(\"Done\");\n    }\n  }\n);\n  assertEquals(2,effectCounter.get());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1469,
        "startLineNumber" : 460,
        "startColumnNumber" : 44,
        "endLineNumber" : 504,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger effectCounter=new AtomicInteger();\n  Observable<Integer> source=Observable.just(1,2,3,4).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer v){\n      effectCounter.incrementAndGet();\n      System.out.println(\"Sideeffect #\" + v);\n    }\n  }\n);\n  Observable<Integer> result=source.replay(new Function<Observable<Integer>,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Observable<Integer> o){\n      return o.take(2);\n    }\n  }\n);\n  for (int i=1; i < 3; i++) {\n    effectCounter.set(0);\n    System.out.printf(\"- %d -%n\",i);\n    result.subscribe(new Consumer<Integer>(){\n      @Override public void accept(      Integer t1){\n        System.out.println(t1);\n      }\n    }\n,new Consumer<Throwable>(){\n      @Override public void accept(      Throwable t1){\n        t1.printStackTrace();\n      }\n    }\n,new Runnable(){\n      @Override public void run(){\n        System.out.println(\"Done\");\n      }\n    }\n);\n    assertEquals(2,effectCounter.get());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 459,
        "startColumnNumber" : 4,
        "endLineNumber" : 504,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSynchronousDisconnect(){\n  final AtomicInteger effectCounter=new AtomicInteger();\n  Observable<Integer> source=Observable.just(1,2,3,4).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer v){\n      effectCounter.incrementAndGet();\n      System.out.println(\"Sideeffect #\" + v);\n    }\n  }\n);\n  Observable<Integer> result=source.replay(new Function<Observable<Integer>,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Observable<Integer> o){\n      return o.take(2);\n    }\n  }\n);\n  for (int i=1; i < 3; i++) {\n    effectCounter.set(0);\n    System.out.printf(\"- %d -%n\",i);\n    result.subscribe(new Consumer<Integer>(){\n      @Override public void accept(      Integer t1){\n        System.out.println(t1);\n      }\n    }\n,new Consumer<Throwable>(){\n      @Override public void accept(      Throwable t1){\n        t1.printStackTrace();\n      }\n    }\n,new Runnable(){\n      @Override public void run(){\n        System.out.println(\"Done\");\n      }\n    }\n);\n    assertEquals(2,effectCounter.get());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 482,
        "startColumnNumber" : 12,
        "endLineNumber" : 501,
        "endColumnNumber" : 14
      },
      "nodeContext" : "result.subscribe(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    System.out.println(t1);\n  }\n}\n,new Consumer<Throwable>(){\n  @Override public void accept(  Throwable t1){\n    t1.printStackTrace();\n  }\n}\n,new Runnable(){\n  @Override public void run(){\n    System.out.println(\"Done\");\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 9
    },
    "tokenLength" : 7,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 163,
    "startLineNumber" : 496,
    "startColumnNumber" : 12,
    "endLineNumber" : 501,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}