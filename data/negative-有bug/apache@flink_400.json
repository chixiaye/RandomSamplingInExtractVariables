{
  "id" : 400,
  "expression" : "new StringBuilder()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/util/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 125,
      "startColumnNumber" : 27,
      "endLineNumber" : 125,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 125,
        "endColumnNumber" : 46
      },
      "nodeContext" : "sb=new StringBuilder()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 47
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 123,
        "startColumnNumber" : 59,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int len=str.length();\n  StringBuilder sb=new StringBuilder();\n  for (int i=0; i < len; i+=1) {\n    char c=str.charAt(i);\nswitch (c) {\ncase '\\b':      sb.append(\"\\\\b\");\n    break;\ncase '\\t':  sb.append(\"\\\\t\");\nbreak;\ncase '\\n':sb.append(\"\\\\n\");\nbreak;\ncase '\\f':sb.append(\"\\\\f\");\nbreak;\ncase '\\r':sb.append(\"\\\\r\");\nbreak;\ndefault:sb.append(c);\n}\n}\nreturn sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Replaces control characters by their escape-coded version. For example, if the string contains a line break character ('\\n'), this character will be replaced by the two characters backslash '\\' and 'n'. As a consequence, the resulting string will not contain any more control characters.\n * @param str The string in which to replace the control characters.\n * @return The string with the replaced characters.\n */\npublic static String showControlCharacters(String str){\n  int len=str.length();\n  StringBuilder sb=new StringBuilder();\n  for (int i=0; i < len; i+=1) {\n    char c=str.charAt(i);\nswitch (c) {\ncase '\\b':      sb.append(\"\\\\b\");\n    break;\ncase '\\t':  sb.append(\"\\\\t\");\nbreak;\ncase '\\n':sb.append(\"\\\\n\");\nbreak;\ncase '\\f':sb.append(\"\\\\f\");\nbreak;\ncase '\\r':sb.append(\"\\\\r\");\nbreak;\ndefault:sb.append(c);\n}\n}\nreturn sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 47
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 125,
    "startColumnNumber" : 27,
    "endLineNumber" : 125,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}