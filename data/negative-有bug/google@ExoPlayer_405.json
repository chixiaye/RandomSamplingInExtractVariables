{
  "id" : 405,
  "expression" : "textCueAfterDecoding.text.toString()",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/test/java/com/google/android/exoplayer2/text/CueSerializationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "textCueAfterDecoding.text.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 114,
      "startColumnNumber" : 15,
      "endLineNumber" : 114,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(textCueAfterDecoding.text.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertThat(textCueAfterDecoding.text.toString()).isEqualTo(textCue.text.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertThat(textCueAfterDecoding.text.toString()).isEqualTo(textCue.text.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1870,
        "startLineNumber" : 86,
        "startColumnNumber" : 59,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CueEncoder encoder=new CueEncoder();\n  CueDecoder decoder=new CueDecoder();\n  Spannable spannable=SpannableString.valueOf(\"text text\");\n  spannable.setSpan(new StrikethroughSpan(),0,\"text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new StyleSpan(Typeface.BOLD),0,\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new StyleSpan(Typeface.ITALIC),0,\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new UnderlineSpan(),\"text \".length(),\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Cue textCue=new Cue.Builder().setText(spannable).build();\n  Bitmap bitmap=Bitmap.createBitmap(1,1,Bitmap.Config.ARGB_8888);\n  Cue bitmapCue=new Cue.Builder().setBitmap(bitmap).build();\n  byte[] encodedCues=encoder.encode(ImmutableList.of(textCue,bitmapCue));\n  List<Cue> cuesAfterDecoding=decoder.decode(encodedCues);\n  assertThat(cuesAfterDecoding).hasSize(2);\n  Cue textCueAfterDecoding=cuesAfterDecoding.get(0);\n  Cue bitmapCueAfterDecoding=cuesAfterDecoding.get(1);\n  assertThat(textCueAfterDecoding.text.toString()).isEqualTo(textCue.text.toString());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasStrikethroughSpanBetween(0,\"text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasBoldSpanBetween(0,\"text text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasItalicSpanBetween(0,\"text text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasUnderlineSpanBetween(\"text \".length(),\"text text\".length());\n  assertThat(bitmapCueAfterDecoding.bitmap.sameAs(bitmap)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void serializingBitmapCueAndCueWithAndroidSpans(){\n  CueEncoder encoder=new CueEncoder();\n  CueDecoder decoder=new CueDecoder();\n  Spannable spannable=SpannableString.valueOf(\"text text\");\n  spannable.setSpan(new StrikethroughSpan(),0,\"text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new StyleSpan(Typeface.BOLD),0,\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new StyleSpan(Typeface.ITALIC),0,\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  spannable.setSpan(new UnderlineSpan(),\"text \".length(),\"text text\".length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Cue textCue=new Cue.Builder().setText(spannable).build();\n  Bitmap bitmap=Bitmap.createBitmap(1,1,Bitmap.Config.ARGB_8888);\n  Cue bitmapCue=new Cue.Builder().setBitmap(bitmap).build();\n  byte[] encodedCues=encoder.encode(ImmutableList.of(textCue,bitmapCue));\n  List<Cue> cuesAfterDecoding=decoder.decode(encodedCues);\n  assertThat(cuesAfterDecoding).hasSize(2);\n  Cue textCueAfterDecoding=cuesAfterDecoding.get(0);\n  Cue bitmapCueAfterDecoding=cuesAfterDecoding.get(1);\n  assertThat(textCueAfterDecoding.text.toString()).isEqualTo(textCue.text.toString());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasStrikethroughSpanBetween(0,\"text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasBoldSpanBetween(0,\"text text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasItalicSpanBetween(0,\"text text\".length());\n  SpannedSubject.assertThat((Spanned)textCueAfterDecoding.text).hasUnderlineSpanBetween(\"text \".length(),\"text text\".length());\n  assertThat(bitmapCueAfterDecoding.bitmap.sameAs(bitmap)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 284,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertThat(textCueAfterDecoding.text.toString()).isEqualTo(textCue.text.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 114,
    "startColumnNumber" : 15,
    "endLineNumber" : 114,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}