{
  "id" : 126,
  "expression" : "CompressionStrategy",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/segment/indexing/RealtimeTuningConfigTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CompressionStrategy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 151,
      "startColumnNumber" : 50,
      "endLineNumber" : 151,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 151,
        "startColumnNumber" : 50,
        "endLineNumber" : 151,
        "endColumnNumber" : 74
      },
      "nodeContext" : "CompressionStrategy.NONE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 151,
        "startColumnNumber" : 24,
        "endLineNumber" : 151,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new IndexSpec(null,null,CompressionStrategy.NONE,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2423,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String jsonStr=\"{\\n\" + \"  \\\"type\\\": \\\"realtime\\\",\\n\" + \"  \\\"maxRowsInMemory\\\": 100,\\n\"+ \"  \\\"intermediatePersistPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"windowPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"basePersistDirectory\\\": \\\"/tmp/xxx\\\",\\n\"+ \"  \\\"maxPendingPersists\\\": 100,\\n\"+ \"  \\\"persistThreadPriority\\\": 100,\\n\"+ \"  \\\"mergeThreadPriority\\\": 100,\\n\"+ \"  \\\"reportParseExceptions\\\": true,\\n\"+ \"  \\\"handoffConditionTimeout\\\": 100,\\n\"+ \"  \\\"alertTimeout\\\": 70,\\n\"+ \"  \\\"indexSpec\\\": { \\\"metricCompression\\\" : \\\"NONE\\\" },\\n\"+ \"  \\\"indexSpecForIntermediatePersists\\\": { \\\"dimensionCompression\\\" : \\\"uncompressed\\\" },\\n\"+ \"  \\\"appendableIndexSpec\\\": { \\\"type\\\" : \\\"onheap\\\" }\\n\"+ \"}\";\n  ObjectMapper mapper=TestHelper.makeJsonMapper();\n  RealtimeTuningConfig config=(RealtimeTuningConfig)mapper.readValue(mapper.writeValueAsString(mapper.readValue(jsonStr,TuningConfig.class)),TuningConfig.class);\n  Assert.assertEquals(\"/tmp/xxx\",config.getBasePersistDirectory().toString());\n  Assert.assertEquals(new OnheapIncrementalIndex.Spec(),config.getAppendableIndexSpec());\n  Assert.assertEquals(100,config.getHandoffConditionTimeout());\n  Assert.assertEquals(70,config.getAlertTimeout());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getIntermediatePersistPeriod());\n  Assert.assertEquals(new NumberedShardSpec(0,1),config.getShardSpec());\n  Assert.assertEquals(100,config.getMaxPendingPersists());\n  Assert.assertEquals(100,config.getMaxRowsInMemory());\n  Assert.assertEquals(100,config.getMergeThreadPriority());\n  Assert.assertEquals(100,config.getPersistThreadPriority());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getWindowPeriod());\n  Assert.assertEquals(true,config.isReportParseExceptions());\n  Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n  Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2489,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerdeWithNonDefaults() throws Exception {\n  String jsonStr=\"{\\n\" + \"  \\\"type\\\": \\\"realtime\\\",\\n\" + \"  \\\"maxRowsInMemory\\\": 100,\\n\"+ \"  \\\"intermediatePersistPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"windowPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"basePersistDirectory\\\": \\\"/tmp/xxx\\\",\\n\"+ \"  \\\"maxPendingPersists\\\": 100,\\n\"+ \"  \\\"persistThreadPriority\\\": 100,\\n\"+ \"  \\\"mergeThreadPriority\\\": 100,\\n\"+ \"  \\\"reportParseExceptions\\\": true,\\n\"+ \"  \\\"handoffConditionTimeout\\\": 100,\\n\"+ \"  \\\"alertTimeout\\\": 70,\\n\"+ \"  \\\"indexSpec\\\": { \\\"metricCompression\\\" : \\\"NONE\\\" },\\n\"+ \"  \\\"indexSpecForIntermediatePersists\\\": { \\\"dimensionCompression\\\" : \\\"uncompressed\\\" },\\n\"+ \"  \\\"appendableIndexSpec\\\": { \\\"type\\\" : \\\"onheap\\\" }\\n\"+ \"}\";\n  ObjectMapper mapper=TestHelper.makeJsonMapper();\n  RealtimeTuningConfig config=(RealtimeTuningConfig)mapper.readValue(mapper.writeValueAsString(mapper.readValue(jsonStr,TuningConfig.class)),TuningConfig.class);\n  Assert.assertEquals(\"/tmp/xxx\",config.getBasePersistDirectory().toString());\n  Assert.assertEquals(new OnheapIncrementalIndex.Spec(),config.getAppendableIndexSpec());\n  Assert.assertEquals(100,config.getHandoffConditionTimeout());\n  Assert.assertEquals(70,config.getAlertTimeout());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getIntermediatePersistPeriod());\n  Assert.assertEquals(new NumberedShardSpec(0,1),config.getShardSpec());\n  Assert.assertEquals(100,config.getMaxPendingPersists());\n  Assert.assertEquals(100,config.getMaxRowsInMemory());\n  Assert.assertEquals(100,config.getMergeThreadPriority());\n  Assert.assertEquals(100,config.getPersistThreadPriority());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getWindowPeriod());\n  Assert.assertEquals(true,config.isReportParseExceptions());\n  Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n  Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.data.CompressionStrategy"
  }, {
    "nodeContext" : "CompressionStrategy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 153,
      "startColumnNumber" : 28,
      "endLineNumber" : 153,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 153,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CompressionStrategy.UNCOMPRESSED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2423,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String jsonStr=\"{\\n\" + \"  \\\"type\\\": \\\"realtime\\\",\\n\" + \"  \\\"maxRowsInMemory\\\": 100,\\n\"+ \"  \\\"intermediatePersistPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"windowPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"basePersistDirectory\\\": \\\"/tmp/xxx\\\",\\n\"+ \"  \\\"maxPendingPersists\\\": 100,\\n\"+ \"  \\\"persistThreadPriority\\\": 100,\\n\"+ \"  \\\"mergeThreadPriority\\\": 100,\\n\"+ \"  \\\"reportParseExceptions\\\": true,\\n\"+ \"  \\\"handoffConditionTimeout\\\": 100,\\n\"+ \"  \\\"alertTimeout\\\": 70,\\n\"+ \"  \\\"indexSpec\\\": { \\\"metricCompression\\\" : \\\"NONE\\\" },\\n\"+ \"  \\\"indexSpecForIntermediatePersists\\\": { \\\"dimensionCompression\\\" : \\\"uncompressed\\\" },\\n\"+ \"  \\\"appendableIndexSpec\\\": { \\\"type\\\" : \\\"onheap\\\" }\\n\"+ \"}\";\n  ObjectMapper mapper=TestHelper.makeJsonMapper();\n  RealtimeTuningConfig config=(RealtimeTuningConfig)mapper.readValue(mapper.writeValueAsString(mapper.readValue(jsonStr,TuningConfig.class)),TuningConfig.class);\n  Assert.assertEquals(\"/tmp/xxx\",config.getBasePersistDirectory().toString());\n  Assert.assertEquals(new OnheapIncrementalIndex.Spec(),config.getAppendableIndexSpec());\n  Assert.assertEquals(100,config.getHandoffConditionTimeout());\n  Assert.assertEquals(70,config.getAlertTimeout());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getIntermediatePersistPeriod());\n  Assert.assertEquals(new NumberedShardSpec(0,1),config.getShardSpec());\n  Assert.assertEquals(100,config.getMaxPendingPersists());\n  Assert.assertEquals(100,config.getMaxRowsInMemory());\n  Assert.assertEquals(100,config.getMergeThreadPriority());\n  Assert.assertEquals(100,config.getPersistThreadPriority());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getWindowPeriod());\n  Assert.assertEquals(true,config.isReportParseExceptions());\n  Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n  Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2489,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerdeWithNonDefaults() throws Exception {\n  String jsonStr=\"{\\n\" + \"  \\\"type\\\": \\\"realtime\\\",\\n\" + \"  \\\"maxRowsInMemory\\\": 100,\\n\"+ \"  \\\"intermediatePersistPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"windowPeriod\\\": \\\"PT1H\\\",\\n\"+ \"  \\\"basePersistDirectory\\\": \\\"/tmp/xxx\\\",\\n\"+ \"  \\\"maxPendingPersists\\\": 100,\\n\"+ \"  \\\"persistThreadPriority\\\": 100,\\n\"+ \"  \\\"mergeThreadPriority\\\": 100,\\n\"+ \"  \\\"reportParseExceptions\\\": true,\\n\"+ \"  \\\"handoffConditionTimeout\\\": 100,\\n\"+ \"  \\\"alertTimeout\\\": 70,\\n\"+ \"  \\\"indexSpec\\\": { \\\"metricCompression\\\" : \\\"NONE\\\" },\\n\"+ \"  \\\"indexSpecForIntermediatePersists\\\": { \\\"dimensionCompression\\\" : \\\"uncompressed\\\" },\\n\"+ \"  \\\"appendableIndexSpec\\\": { \\\"type\\\" : \\\"onheap\\\" }\\n\"+ \"}\";\n  ObjectMapper mapper=TestHelper.makeJsonMapper();\n  RealtimeTuningConfig config=(RealtimeTuningConfig)mapper.readValue(mapper.writeValueAsString(mapper.readValue(jsonStr,TuningConfig.class)),TuningConfig.class);\n  Assert.assertEquals(\"/tmp/xxx\",config.getBasePersistDirectory().toString());\n  Assert.assertEquals(new OnheapIncrementalIndex.Spec(),config.getAppendableIndexSpec());\n  Assert.assertEquals(100,config.getHandoffConditionTimeout());\n  Assert.assertEquals(70,config.getAlertTimeout());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getIntermediatePersistPeriod());\n  Assert.assertEquals(new NumberedShardSpec(0,1),config.getShardSpec());\n  Assert.assertEquals(100,config.getMaxPendingPersists());\n  Assert.assertEquals(100,config.getMaxRowsInMemory());\n  Assert.assertEquals(100,config.getMergeThreadPriority());\n  Assert.assertEquals(100,config.getPersistThreadPriority());\n  Assert.assertEquals(new Period(\"PT1H\"),config.getWindowPeriod());\n  Assert.assertEquals(true,config.isReportParseExceptions());\n  Assert.assertEquals(new IndexSpec(null,null,CompressionStrategy.NONE,null),config.getIndexSpec());\n  Assert.assertEquals(new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null),config.getIndexSpecForIntermediatePersists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new IndexSpec(null,CompressionStrategy.UNCOMPRESSED,null,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.data.CompressionStrategy"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 151,
    "startColumnNumber" : 50,
    "endLineNumber" : 151,
    "endColumnNumber" : 69
  }, {
    "charLength" : 19,
    "startLineNumber" : 153,
    "startColumnNumber" : 28,
    "endLineNumber" : 153,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}