{
  "id" : 300,
  "expression" : "1000",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 279,
      "startColumnNumber" : 25,
      "endLineNumber" : 279,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 279,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Thread.sleep(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 279,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Thread.sleep(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 277,
        "startColumnNumber" : 82,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 277,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10 && ledgerExistsInBookKeeper(offloadedLedger); i++) {\n  writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2643,
        "startLineNumber" : 243,
        "startColumnNumber" : 109,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String tenant=\"offload-test-deletion-lag-\" + randomName(4);\n  final String namespace=tenant + \"/ns1\";\n  final String topic=\"persistent://\" + namespace + \"/topic1\";\n  pulsarCluster.runAdminCommandOnAnyBroker(\"tenants\",\"create\",\"--allowed-clusters\",pulsarCluster.getClusterName(),\"--admin-roles\",\"offload-admin\",tenant);\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"create\",\"--clusters\",pulsarCluster.getClusterName(),namespace);\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"set-offload-threshold\",\"--size\",\"0\",namespace);\n  String output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"Unset for namespace\"));\n  long offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(5000);\n  Assert.assertTrue(ledgerExistsInBookKeeper(offloadedLedger));\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"set-offload-deletion-lag\",namespace,\"--lag\",\"0m\");\n  output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"0 minute(s)\"));\n  offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  for (int i=0; i < 10 && ledgerExistsInBookKeeper(offloadedLedger); i++) {\n    writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n    Thread.sleep(1000);\n  }\n  Assert.assertFalse(ledgerExistsInBookKeeper(offloadedLedger));\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"clear-offload-deletion-lag\",namespace);\n  Thread.sleep(5);\n  output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"Unset for namespace\"));\n  offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(5000);\n  Assert.assertTrue(ledgerExistsInBookKeeper(offloadedLedger));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testPublishOffloadAndConsumeDeletionLag(String serviceUrl,String adminUrl) throws Exception {\n  final String tenant=\"offload-test-deletion-lag-\" + randomName(4);\n  final String namespace=tenant + \"/ns1\";\n  final String topic=\"persistent://\" + namespace + \"/topic1\";\n  pulsarCluster.runAdminCommandOnAnyBroker(\"tenants\",\"create\",\"--allowed-clusters\",pulsarCluster.getClusterName(),\"--admin-roles\",\"offload-admin\",tenant);\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"create\",\"--clusters\",pulsarCluster.getClusterName(),namespace);\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"set-offload-threshold\",\"--size\",\"0\",namespace);\n  String output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"Unset for namespace\"));\n  long offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(5000);\n  Assert.assertTrue(ledgerExistsInBookKeeper(offloadedLedger));\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"set-offload-deletion-lag\",namespace,\"--lag\",\"0m\");\n  output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"0 minute(s)\"));\n  offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  for (int i=0; i < 10 && ledgerExistsInBookKeeper(offloadedLedger); i++) {\n    writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n    Thread.sleep(1000);\n  }\n  Assert.assertFalse(ledgerExistsInBookKeeper(offloadedLedger));\n  pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"clear-offload-deletion-lag\",namespace);\n  Thread.sleep(5);\n  output=pulsarCluster.runAdminCommandOnAnyBroker(\"namespaces\",\"get-offload-deletion-lag\",namespace).getStdout();\n  Assert.assertTrue(output.contains(\"Unset for namespace\"));\n  offloadedLedger=writeAndWaitForOffload(serviceUrl,adminUrl,topic);\n  Thread.sleep(5000);\n  Assert.assertTrue(ledgerExistsInBookKeeper(offloadedLedger));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 279,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Thread.sleep(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 279,
    "startColumnNumber" : 25,
    "endLineNumber" : 279,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}