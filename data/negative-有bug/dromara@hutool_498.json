{
  "id" : 498,
  "expression" : "new String[]{\"3\",\"4\"}",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/math/ArrangementTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[]{\"3\",\"4\"}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 46,
      "startColumnNumber" : 27,
      "endLineNumber" : 46,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertArrayEquals(new String[]{\"3\",\"4\"},list.get(8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertArrayEquals(new String[]{\"3\",\"4\"},list.get(8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 34,
        "startColumnNumber" : 26,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Arrangement arrangement=new Arrangement(new String[]{\"1\",\"2\",\"3\",\"4\"});\n  List<String[]> list=arrangement.select(2);\n  Assert.assertEquals(Arrangement.count(4,2),list.size());\n  Assert.assertArrayEquals(new String[]{\"1\",\"2\"},list.get(0));\n  Assert.assertArrayEquals(new String[]{\"1\",\"3\"},list.get(1));\n  Assert.assertArrayEquals(new String[]{\"1\",\"4\"},list.get(2));\n  Assert.assertArrayEquals(new String[]{\"2\",\"1\"},list.get(3));\n  Assert.assertArrayEquals(new String[]{\"2\",\"3\"},list.get(4));\n  Assert.assertArrayEquals(new String[]{\"2\",\"4\"},list.get(5));\n  Assert.assertArrayEquals(new String[]{\"3\",\"1\"},list.get(6));\n  Assert.assertArrayEquals(new String[]{\"3\",\"2\"},list.get(7));\n  Assert.assertArrayEquals(new String[]{\"3\",\"4\"},list.get(8));\n  Assert.assertArrayEquals(new String[]{\"4\",\"1\"},list.get(9));\n  Assert.assertArrayEquals(new String[]{\"4\",\"2\"},list.get(10));\n  Assert.assertArrayEquals(new String[]{\"4\",\"3\"},list.get(11));\n  List<String[]> selectAll=arrangement.selectAll();\n  Assert.assertEquals(Arrangement.countAll(4),selectAll.size());\n  List<String[]> list2=arrangement.select(0);\n  Assert.assertEquals(1,list2.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1257,
        "startLineNumber" : 33,
        "startColumnNumber" : 1,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void selectTest(){\n  Arrangement arrangement=new Arrangement(new String[]{\"1\",\"2\",\"3\",\"4\"});\n  List<String[]> list=arrangement.select(2);\n  Assert.assertEquals(Arrangement.count(4,2),list.size());\n  Assert.assertArrayEquals(new String[]{\"1\",\"2\"},list.get(0));\n  Assert.assertArrayEquals(new String[]{\"1\",\"3\"},list.get(1));\n  Assert.assertArrayEquals(new String[]{\"1\",\"4\"},list.get(2));\n  Assert.assertArrayEquals(new String[]{\"2\",\"1\"},list.get(3));\n  Assert.assertArrayEquals(new String[]{\"2\",\"3\"},list.get(4));\n  Assert.assertArrayEquals(new String[]{\"2\",\"4\"},list.get(5));\n  Assert.assertArrayEquals(new String[]{\"3\",\"1\"},list.get(6));\n  Assert.assertArrayEquals(new String[]{\"3\",\"2\"},list.get(7));\n  Assert.assertArrayEquals(new String[]{\"3\",\"4\"},list.get(8));\n  Assert.assertArrayEquals(new String[]{\"4\",\"1\"},list.get(9));\n  Assert.assertArrayEquals(new String[]{\"4\",\"2\"},list.get(10));\n  Assert.assertArrayEquals(new String[]{\"4\",\"3\"},list.get(11));\n  List<String[]> selectAll=arrangement.selectAll();\n  Assert.assertEquals(Arrangement.countAll(4),selectAll.size());\n  List<String[]> list2=arrangement.select(0);\n  Assert.assertEquals(1,list2.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertArrayEquals(new String[]{\"3\",\"4\"},list.get(8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 46,
    "startColumnNumber" : 27,
    "endLineNumber" : 46,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}