{
  "id" : 263,
  "expression" : "headers",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/client/OkClientTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "headers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 54,
      "startColumnNumber" : 4,
      "endLineNumber" : 54,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 41
      },
      "nodeContext" : "headers.add(new Header(\"kit\",\"kat\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 42
      },
      "nodeContext" : "headers.add(new Header(\"kit\",\"kat\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void headers(){\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 42
      },
      "nodeContext" : "headers.add(new Header(\"kit\",\"kat\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<retrofit.client.Header>"
  }, {
    "nodeContext" : "headers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 55,
      "startColumnNumber" : 4,
      "endLineNumber" : 55,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 41
      },
      "nodeContext" : "headers.add(new Header(\"foo\",\"bar\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 42
      },
      "nodeContext" : "headers.add(new Header(\"foo\",\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void headers(){\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 42
      },
      "nodeContext" : "headers.add(new Header(\"foo\",\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<retrofit.client.Header>"
  }, {
    "nodeContext" : "headers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 56,
      "startColumnNumber" : 58,
      "endLineNumber" : 56,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 56,
        "startColumnNumber" : 22,
        "endLineNumber" : 56,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new Request(\"GET\",HOST + \"/this/\",headers,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 72
      },
      "nodeContext" : "request=new Request(\"GET\",HOST + \"/this/\",headers,null)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void headers(){\n  List<Header> headers=new ArrayList<Header>();\n  headers.add(new Header(\"kit\",\"kat\"));\n  headers.add(new Header(\"foo\",\"bar\"));\n  Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n  com.squareup.okhttp.Request okRequest=OkClient.createRequest(request);\n  Headers okHeaders=okRequest.headers();\n  assertThat(okHeaders.size()).isEqualTo(2);\n  assertThat(okHeaders.get(\"kit\")).isEqualTo(\"kat\");\n  assertThat(okHeaders.get(\"foo\")).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Request request=new Request(\"GET\",HOST + \"/this/\",headers,null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<retrofit.client.Header>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 54,
    "startColumnNumber" : 4,
    "endLineNumber" : 54,
    "endColumnNumber" : 11
  }, {
    "charLength" : 7,
    "startLineNumber" : 55,
    "startColumnNumber" : 4,
    "endLineNumber" : 55,
    "endColumnNumber" : 11
  }, {
    "charLength" : 7,
    "startLineNumber" : 56,
    "startColumnNumber" : 58,
    "endLineNumber" : 56,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}