{
  "id" : 376,
  "expression" : "5",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/server/remotetask/TestBackoff.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 182,
      "startColumnNumber" : 48,
      "endLineNumber" : 182,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(backoff.getFailureCount(),5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(backoff.getFailureCount(),5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2522,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestingTicker ticker=new TestingTicker();\n  ticker.increment(1,NANOSECONDS);\n  Backoff backoff=new Backoff(1,new Duration(15,SECONDS),ticker,ImmutableList.of(new Duration(0,SECONDS),new Duration(1,SECONDS),new Duration(2,SECONDS),new Duration(4,SECONDS),new Duration(8,SECONDS)));\n  assertEquals(backoff.getFailureCount(),0);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),1);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  long backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),0);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),2);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),1);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),3);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),1);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),2);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),4);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),3);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),4);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),5);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),7);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),8);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertTrue(backoff.failure());\n  assertEquals(backoff.getFailureCount(),6);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),15);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),8);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 328,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDelay(){\n  TestingTicker ticker=new TestingTicker();\n  ticker.increment(1,NANOSECONDS);\n  Backoff backoff=new Backoff(1,new Duration(15,SECONDS),ticker,ImmutableList.of(new Duration(0,SECONDS),new Duration(1,SECONDS),new Duration(2,SECONDS),new Duration(4,SECONDS),new Duration(8,SECONDS)));\n  assertEquals(backoff.getFailureCount(),0);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),1);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  long backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),0);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),2);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),0);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),1);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),3);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),1);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),2);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),4);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),3);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),4);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertFalse(backoff.failure());\n  assertEquals(backoff.getFailureCount(),5);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),7);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),8);\n  ticker.increment(backoffDelay,NANOSECONDS);\n  assertTrue(backoff.failure());\n  assertEquals(backoff.getFailureCount(),6);\n  assertEquals(backoff.getFailureDuration().roundTo(SECONDS),15);\n  backoffDelay=backoff.getBackoffDelayNanos();\n  assertEquals(NANOSECONDS.toSeconds(backoffDelay),8);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 334,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(backoff.getFailureCount(),5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 182,
    "startColumnNumber" : 48,
    "endLineNumber" : 182,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}