{
  "id" : 292,
  "expression" : "setterMethod",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/openmessaging/src/main/java/io/openmessaging/rocketmq/utils/BeanUtils.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 123,
      "startColumnNumber" : 12,
      "endLineNumber" : 123,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 71
      },
      "nodeContext" : "setterMethod.invoke(obj,Boolean.valueOf(value.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 72
      },
      "nodeContext" : "setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 122,
        "startColumnNumber" : 44,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 72
      },
      "nodeContext" : "setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 125,
      "startColumnNumber" : 12,
      "endLineNumber" : 125,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 71
      },
      "nodeContext" : "setterMethod.invoke(obj,Integer.valueOf(value.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 72
      },
      "nodeContext" : "setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 124,
        "startColumnNumber" : 51,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 124,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 72
      },
      "nodeContext" : "setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 127,
      "startColumnNumber" : 12,
      "endLineNumber" : 127,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 70
      },
      "nodeContext" : "setterMethod.invoke(obj,Double.valueOf(value.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 71
      },
      "nodeContext" : "setterMethod.invoke(obj,Double.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 126,
        "startColumnNumber" : 50,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 126,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 124,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 71
      },
      "nodeContext" : "setterMethod.invoke(obj,Double.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 129,
      "startColumnNumber" : 12,
      "endLineNumber" : 129,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 69
      },
      "nodeContext" : "setterMethod.invoke(obj,Float.valueOf(value.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 70
      },
      "nodeContext" : "setterMethod.invoke(obj,Float.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 128,
        "startColumnNumber" : 49,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 128,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 126,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 124,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 70
      },
      "nodeContext" : "setterMethod.invoke(obj,Float.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 131,
      "startColumnNumber" : 12,
      "endLineNumber" : 131,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 68
      },
      "nodeContext" : "setterMethod.invoke(obj,Long.valueOf(value.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 69
      },
      "nodeContext" : "setterMethod.invoke(obj,Long.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 130,
        "startColumnNumber" : 48,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 130,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 128,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 126,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 124,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 69
      },
      "nodeContext" : "setterMethod.invoke(obj,Long.valueOf(value.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "setterMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 133,
      "startColumnNumber" : 12,
      "endLineNumber" : 133,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 43
      },
      "nodeContext" : "setterMethod.invoke(obj,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "setterMethod.invoke(obj,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 130,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 128,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 126,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 124,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "if (parameterClass == Boolean.TYPE) {\n  setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n}\n else if (parameterClass == Integer.TYPE) {\n  setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n}\n else if (parameterClass == Double.TYPE) {\n  setterMethod.invoke(obj,Double.valueOf(value.toString()));\n}\n else if (parameterClass == Float.TYPE) {\n  setterMethod.invoke(obj,Float.valueOf(value.toString()));\n}\n else if (parameterClass == Long.TYPE) {\n  setterMethod.invoke(obj,Long.valueOf(value.toString()));\n}\n else setterMethod.invoke(obj,value);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 119,
        "startColumnNumber" : 102,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void setProperties(Class<?> clazz,Object obj,String methodName,Object value) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n  Class<?> parameterClass=getMethodClass(clazz,methodName);\n  Method setterMethod=clazz.getMethod(methodName,parameterClass);\n  if (parameterClass == Boolean.TYPE) {\n    setterMethod.invoke(obj,Boolean.valueOf(value.toString()));\n  }\n else   if (parameterClass == Integer.TYPE) {\n    setterMethod.invoke(obj,Integer.valueOf(value.toString()));\n  }\n else   if (parameterClass == Double.TYPE) {\n    setterMethod.invoke(obj,Double.valueOf(value.toString()));\n  }\n else   if (parameterClass == Float.TYPE) {\n    setterMethod.invoke(obj,Float.valueOf(value.toString()));\n  }\n else   if (parameterClass == Long.TYPE) {\n    setterMethod.invoke(obj,Long.valueOf(value.toString()));\n  }\n else   setterMethod.invoke(obj,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 44
      },
      "nodeContext" : "setterMethod.invoke(obj,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 123,
    "startColumnNumber" : 12,
    "endLineNumber" : 123,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 125,
    "startColumnNumber" : 12,
    "endLineNumber" : 125,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 127,
    "startColumnNumber" : 12,
    "endLineNumber" : 127,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 129,
    "startColumnNumber" : 12,
    "endLineNumber" : 129,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 131,
    "startColumnNumber" : 12,
    "endLineNumber" : 131,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 133,
    "startColumnNumber" : 12,
    "endLineNumber" : 133,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}