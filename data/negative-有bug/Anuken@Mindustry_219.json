{
  "id" : 219,
  "expression" : "0.01f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/units/RepairTurret.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0.01f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 124,
      "startColumnNumber" : 22,
      "endLineNumber" : 124,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 124,
        "startColumnNumber" : 11,
        "endLineNumber" : 124,
        "endColumnNumber" : 27
      },
      "nodeContext" : "strength > 0.01f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (strength > 0.01f) {\n  float originX=x + Angles.trnsx(rotation,length), originY=y + Angles.trnsy(rotation,length);\n  Draw.z(Layer.flyingUnit + 1);\n  Draw.color(laserColor);\n  float f=(Time.time / 85f + rand.random(1f)) % 1f;\n  Draw.alpha(1f - Interp.pow5In.apply(f));\n  Lines.stroke(strength * pulseStroke);\n  Lines.circle(lastEnd.x,lastEnd.y,1f + f * pulseRadius);\n  Draw.color(laserColor);\n  Drawf.laser(laser,laserEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n  Draw.z(Layer.flyingUnit + 1.1f);\n  Draw.color(laserTopColor);\n  Drawf.laser(laserTop,laserTopEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n  Draw.color();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1604,
        "startLineNumber" : 105,
        "startColumnNumber" : 127,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rand.setSeed(id + (target instanceof   Entityc e ? e.id() : 0));\n  if (target != null) {\n    float originX=x + Angles.trnsx(rotation,length), originY=y + Angles.trnsy(rotation,length);\n    lastEnd.set(target).sub(originX,originY);\n    lastEnd.setLength(Math.max(2f,lastEnd.len()));\n    lastEnd.add(offset.trns(rand.random(360f) + Time.time / 2f,Mathf.sin(Time.time + rand.random(200f),55f,rand.random(target.hitSize() * 0.2f,target.hitSize() * 0.45f))).rotate(target instanceof     Rotc rot ? rot.rotation() : 0f));\n    lastEnd.add(originX,originY);\n  }\n  if (strength > 0.01f) {\n    float originX=x + Angles.trnsx(rotation,length), originY=y + Angles.trnsy(rotation,length);\n    Draw.z(Layer.flyingUnit + 1);\n    Draw.color(laserColor);\n    float f=(Time.time / 85f + rand.random(1f)) % 1f;\n    Draw.alpha(1f - Interp.pow5In.apply(f));\n    Lines.stroke(strength * pulseStroke);\n    Lines.circle(lastEnd.x,lastEnd.y,1f + f * pulseRadius);\n    Draw.color(laserColor);\n    Drawf.laser(laser,laserEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n    Draw.z(Layer.flyingUnit + 1.1f);\n    Draw.color(laserTopColor);\n    Drawf.laser(laserTop,laserTopEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n    Draw.color();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2087,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void drawBeam(float x,float y,float rotation,float length,int id,@Nullable Sized target,Team team,float strength,float pulseStroke,float pulseRadius,float beamWidth,Vec2 lastEnd,Vec2 offset,Color laserColor,Color laserTopColor,TextureRegion laser,TextureRegion laserEnd,TextureRegion laserTop,TextureRegion laserTopEnd){\n  rand.setSeed(id + (target instanceof   Entityc e ? e.id() : 0));\n  if (target != null) {\n    float originX=x + Angles.trnsx(rotation,length), originY=y + Angles.trnsy(rotation,length);\n    lastEnd.set(target).sub(originX,originY);\n    lastEnd.setLength(Math.max(2f,lastEnd.len()));\n    lastEnd.add(offset.trns(rand.random(360f) + Time.time / 2f,Mathf.sin(Time.time + rand.random(200f),55f,rand.random(target.hitSize() * 0.2f,target.hitSize() * 0.45f))).rotate(target instanceof     Rotc rot ? rot.rotation() : 0f));\n    lastEnd.add(originX,originY);\n  }\n  if (strength > 0.01f) {\n    float originX=x + Angles.trnsx(rotation,length), originY=y + Angles.trnsy(rotation,length);\n    Draw.z(Layer.flyingUnit + 1);\n    Draw.color(laserColor);\n    float f=(Time.time / 85f + rand.random(1f)) % 1f;\n    Draw.alpha(1f - Interp.pow5In.apply(f));\n    Lines.stroke(strength * pulseStroke);\n    Lines.circle(lastEnd.x,lastEnd.y,1f + f * pulseRadius);\n    Draw.color(laserColor);\n    Drawf.laser(laser,laserEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n    Draw.z(Layer.flyingUnit + 1.1f);\n    Draw.color(laserTopColor);\n    Drawf.laser(laserTop,laserTopEnd,originX,originY,lastEnd.x,lastEnd.y,strength * beamWidth);\n    Draw.color();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 124,
        "startColumnNumber" : 11,
        "endLineNumber" : 124,
        "endColumnNumber" : 27
      },
      "nodeContext" : "strength > 0.01f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 124,
    "startColumnNumber" : 22,
    "endLineNumber" : 124,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}