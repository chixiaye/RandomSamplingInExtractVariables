{
  "id" : 270,
  "expression" : "HttpHeaders.class",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/web/client/ApplicationOperationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HttpHeaders.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 68,
      "startColumnNumber" : 76,
      "endLineNumber" : 68,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 68,
        "startColumnNumber" : 52,
        "endLineNumber" : 68,
        "endColumnNumber" : 94
      },
      "nodeContext" : "ArgumentCaptor.forClass(HttpHeaders.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 68,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 94
      },
      "nodeContext" : "headersCaptor=ArgumentCaptor.forClass(HttpHeaders.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ArgumentCaptor<HttpHeaders> headersCaptor=ArgumentCaptor.forClass(HttpHeaders.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 60,
        "startColumnNumber" : 31,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpHeaders headers=new HttpHeaders();\n  headers.add(\"auth\",\"foo:bar\");\n  when(headersProvider.getHeaders(eq(application))).thenReturn(headers);\n  StepVerifier.create(ops.getInfo(application)).verifyComplete();\n  ArgumentCaptor<URI> uriCaptor=ArgumentCaptor.forClass(URI.class);\n  ArgumentCaptor<HttpHeaders> headersCaptor=ArgumentCaptor.forClass(HttpHeaders.class);\n  verify(webClient,times(1)).get().uri(uriCaptor.capture()).accept(eq(MediaType.APPLICATION_JSON)).retrieve();\n  assertThat(uriCaptor.getValue()).isEqualTo(URI.create(\"http://mgmt/info\"));\n  assertThat(headersCaptor.getValue()).containsEntry(\"auth\",singletonList(\"foo:bar\"));\n  assertThat(headersCaptor.getValue()).containsEntry(\"Accept\",singletonList(MediaType.APPLICATION_JSON_VALUE));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Ignore(\"Needs resolving of https://jira.spring.io/browse/SPR-15286\") public void test_getInfo(){\n  HttpHeaders headers=new HttpHeaders();\n  headers.add(\"auth\",\"foo:bar\");\n  when(headersProvider.getHeaders(eq(application))).thenReturn(headers);\n  StepVerifier.create(ops.getInfo(application)).verifyComplete();\n  ArgumentCaptor<URI> uriCaptor=ArgumentCaptor.forClass(URI.class);\n  ArgumentCaptor<HttpHeaders> headersCaptor=ArgumentCaptor.forClass(HttpHeaders.class);\n  verify(webClient,times(1)).get().uri(uriCaptor.capture()).accept(eq(MediaType.APPLICATION_JSON)).retrieve();\n  assertThat(uriCaptor.getValue()).isEqualTo(URI.create(\"http://mgmt/info\"));\n  assertThat(headersCaptor.getValue()).containsEntry(\"auth\",singletonList(\"foo:bar\"));\n  assertThat(headersCaptor.getValue()).containsEntry(\"Accept\",singletonList(MediaType.APPLICATION_JSON_VALUE));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ArgumentCaptor<HttpHeaders> headersCaptor=ArgumentCaptor.forClass(HttpHeaders.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<de.codecentric.boot.admin.server.web.client.HttpHeaders>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 68,
    "startColumnNumber" : 76,
    "endLineNumber" : 68,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}