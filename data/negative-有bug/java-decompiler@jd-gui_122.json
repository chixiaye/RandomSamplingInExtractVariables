{
  "id" : 122,
  "expression" : "hyperlink",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/TypePage.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hyperlink",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 282,
      "startColumnNumber" : 71,
      "endLineNumber" : 282,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 282,
        "startColumnNumber" : 47,
        "endLineNumber" : 282,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(HyperlinkReferenceData)hyperlink",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 282,
        "startColumnNumber" : 46,
        "endLineNumber" : 282,
        "endColumnNumber" : 81
      },
      "nodeContext" : "((HyperlinkReferenceData)hyperlink)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 282,
        "startColumnNumber" : 46,
        "endLineNumber" : 282,
        "endColumnNumber" : 91
      },
      "nodeContext" : "((HyperlinkReferenceData)hyperlink).reference",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 282,
        "startColumnNumber" : 34,
        "endLineNumber" : 282,
        "endColumnNumber" : 91
      },
      "nodeContext" : "reference=((HyperlinkReferenceData)hyperlink).reference",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 282,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 280,
        "startColumnNumber" : 86,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 278,
        "startColumnNumber" : 51,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (highlightFlags.indexOf('r') != -1) {\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3181,
        "startLineNumber" : 236,
        "startColumnNumber" : 68,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((highlightFlags != null) && (highlightPattern != null)) {\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 374,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3672,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void matchQueryAndAddDocumentRange(Map<String,String> parameters,HashMap<String,DeclarationData> declarations,TreeMap<Integer,HyperlinkData> hyperlinks,ArrayList<StringData> strings,List<DocumentRange> ranges){\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 282,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.HyperlinkPage.HyperlinkData"
  }, {
    "nodeContext" : "hyperlink",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 286,
      "startColumnNumber" : 104,
      "endLineNumber" : 286,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 286,
        "startColumnNumber" : 104,
        "endLineNumber" : 286,
        "endColumnNumber" : 127
      },
      "nodeContext" : "hyperlink.startPosition",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 159
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 160
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 285,
        "startColumnNumber" : 93,
        "endLineNumber" : 287,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 285,
        "startColumnNumber" : 24,
        "endLineNumber" : 287,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n  matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 284,
        "startColumnNumber" : 69,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matchScope(highlightScope,reference.owner)) {\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 280,
        "startColumnNumber" : 86,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 278,
        "startColumnNumber" : 51,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (highlightFlags.indexOf('r') != -1) {\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3181,
        "startLineNumber" : 236,
        "startColumnNumber" : 68,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((highlightFlags != null) && (highlightPattern != null)) {\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 374,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3672,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void matchQueryAndAddDocumentRange(Map<String,String> parameters,HashMap<String,DeclarationData> declarations,TreeMap<Integer,HyperlinkData> hyperlinks,ArrayList<StringData> strings,List<DocumentRange> ranges){\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 160
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.HyperlinkPage.HyperlinkData"
  }, {
    "nodeContext" : "hyperlink",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 286,
      "startColumnNumber" : 129,
      "endLineNumber" : 286,
      "endColumnNumber" : 138
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 286,
        "startColumnNumber" : 129,
        "endLineNumber" : 286,
        "endColumnNumber" : 150
      },
      "nodeContext" : "hyperlink.endPosition",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 159
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 160
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 285,
        "startColumnNumber" : 93,
        "endLineNumber" : 287,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 285,
        "startColumnNumber" : 24,
        "endLineNumber" : 287,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n  matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 284,
        "startColumnNumber" : 69,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matchScope(highlightScope,reference.owner)) {\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 280,
        "startColumnNumber" : 86,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 278,
        "startColumnNumber" : 51,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (highlightFlags.indexOf('r') != -1) {\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3181,
        "startLineNumber" : 236,
        "startColumnNumber" : 68,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((highlightFlags != null) && (highlightPattern != null)) {\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 374,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3672,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void matchQueryAndAddDocumentRange(Map<String,String> parameters,HashMap<String,DeclarationData> declarations,TreeMap<Integer,HyperlinkData> hyperlinks,ArrayList<StringData> strings,List<DocumentRange> ranges){\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 286,
        "endColumnNumber" : 160
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.HyperlinkPage.HyperlinkData"
  }, {
    "nodeContext" : "hyperlink",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 289,
      "startColumnNumber" : 78,
      "endLineNumber" : 289,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 289,
        "startColumnNumber" : 78,
        "endLineNumber" : 289,
        "endColumnNumber" : 101
      },
      "nodeContext" : "hyperlink.startPosition",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 133
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 134
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 288,
        "startColumnNumber" : 89,
        "endLineNumber" : 290,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 288,
        "startColumnNumber" : 24,
        "endLineNumber" : 290,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n  matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 284,
        "startColumnNumber" : 69,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matchScope(highlightScope,reference.owner)) {\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 280,
        "startColumnNumber" : 86,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 278,
        "startColumnNumber" : 51,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (highlightFlags.indexOf('r') != -1) {\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3181,
        "startLineNumber" : 236,
        "startColumnNumber" : 68,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((highlightFlags != null) && (highlightPattern != null)) {\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 374,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3672,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void matchQueryAndAddDocumentRange(Map<String,String> parameters,HashMap<String,DeclarationData> declarations,TreeMap<Integer,HyperlinkData> hyperlinks,ArrayList<StringData> strings,List<DocumentRange> ranges){\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 134
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.HyperlinkPage.HyperlinkData"
  }, {
    "nodeContext" : "hyperlink",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 289,
      "startColumnNumber" : 103,
      "endLineNumber" : 289,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 289,
        "startColumnNumber" : 103,
        "endLineNumber" : 289,
        "endColumnNumber" : 124
      },
      "nodeContext" : "hyperlink.endPosition",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 133
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 134
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 288,
        "startColumnNumber" : 89,
        "endLineNumber" : 290,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 288,
        "startColumnNumber" : 24,
        "endLineNumber" : 290,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n  matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 284,
        "startColumnNumber" : 69,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 291,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matchScope(highlightScope,reference.owner)) {\n  if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n    matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n  if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n    matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 280,
        "startColumnNumber" : 86,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 292,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n  HyperlinkData hyperlink=entry.getValue();\n  ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n  if (matchScope(highlightScope,reference.owner)) {\n    if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n      matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n    if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n      matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 278,
        "startColumnNumber" : 51,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 278,
        "startColumnNumber" : 12,
        "endLineNumber" : 293,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (highlightFlags.indexOf('r') != -1) {\n  for (  Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n    HyperlinkData hyperlink=entry.getValue();\n    ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n    if (matchScope(highlightScope,reference.owner)) {\n      if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n        matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n      if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n        matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3181,
        "startLineNumber" : 236,
        "startColumnNumber" : 68,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((highlightFlags != null) && (highlightPattern != null)) {\n  String highlightScope=parameters.get(\"highlightScope\");\n  String regexp=createRegExp(highlightPattern);\n  Pattern pattern=Pattern.compile(regexp + \".*\");\n  if (highlightFlags.indexOf('s') != -1) {\n    Pattern patternForString=Pattern.compile(regexp);\n    for (    StringData data : strings) {\n      if (matchScope(highlightScope,data.owner)) {\n        Matcher matcher=patternForString.matcher(data.text);\n        int offset=data.startPosition;\n        while (matcher.find()) {\n          ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n        }\n      }\n    }\n  }\n  boolean t=(highlightFlags.indexOf('t') != -1);\n  boolean f=(highlightFlags.indexOf('f') != -1);\n  boolean m=(highlightFlags.indexOf('m') != -1);\n  boolean c=(highlightFlags.indexOf('c') != -1);\n  if (highlightFlags.indexOf('d') != -1) {\n    for (    Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n      DeclarationData declaration=entry.getValue();\n      if (matchScope(highlightScope,declaration.typeName)) {\n        if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n        }\n        if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n          matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n        }\n      }\n    }\n  }\n  if (highlightFlags.indexOf('r') != -1) {\n    for (    Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n      HyperlinkData hyperlink=entry.getValue();\n      ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n      if (matchScope(highlightScope,reference.owner)) {\n        if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n          matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n        if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n          matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 374,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3672,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void matchQueryAndAddDocumentRange(Map<String,String> parameters,HashMap<String,DeclarationData> declarations,TreeMap<Integer,HyperlinkData> hyperlinks,ArrayList<StringData> strings,List<DocumentRange> ranges){\n  String highlightFlags=parameters.get(\"highlightFlags\");\n  String highlightPattern=parameters.get(\"highlightPattern\");\n  if ((highlightFlags != null) && (highlightPattern != null)) {\n    String highlightScope=parameters.get(\"highlightScope\");\n    String regexp=createRegExp(highlightPattern);\n    Pattern pattern=Pattern.compile(regexp + \".*\");\n    if (highlightFlags.indexOf('s') != -1) {\n      Pattern patternForString=Pattern.compile(regexp);\n      for (      StringData data : strings) {\n        if (matchScope(highlightScope,data.owner)) {\n          Matcher matcher=patternForString.matcher(data.text);\n          int offset=data.startPosition;\n          while (matcher.find()) {\n            ranges.add(new DocumentRange(offset + matcher.start(),offset + matcher.end()));\n          }\n        }\n      }\n    }\n    boolean t=(highlightFlags.indexOf('t') != -1);\n    boolean f=(highlightFlags.indexOf('f') != -1);\n    boolean m=(highlightFlags.indexOf('m') != -1);\n    boolean c=(highlightFlags.indexOf('c') != -1);\n    if (highlightFlags.indexOf('d') != -1) {\n      for (      Map.Entry<String,DeclarationData> entry : declarations.entrySet()) {\n        DeclarationData declaration=entry.getValue();\n        if (matchScope(highlightScope,declaration.typeName)) {\n          if ((t && declaration.isAType()) || (c && declaration.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(declaration.typeName),declaration.startPosition,declaration.endPosition,ranges);\n          }\n          if ((f && declaration.isAField()) || (m && declaration.isAMethod())) {\n            matchAndAddDocumentRange(pattern,declaration.name,declaration.startPosition,declaration.endPosition,ranges);\n          }\n        }\n      }\n    }\n    if (highlightFlags.indexOf('r') != -1) {\n      for (      Map.Entry<Integer,HyperlinkData> entry : hyperlinks.entrySet()) {\n        HyperlinkData hyperlink=entry.getValue();\n        ReferenceData reference=((HyperlinkReferenceData)hyperlink).reference;\n        if (matchScope(highlightScope,reference.owner)) {\n          if ((t && reference.isAType()) || (c && reference.isAConstructor())) {\n            matchAndAddDocumentRange(pattern,getMostInnerTypeName(reference.typeName),hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n          if ((f && reference.isAField()) || (m && reference.isAMethod())) {\n            matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 439,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 289,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 134
      },
      "nodeContext" : "matchAndAddDocumentRange(pattern,reference.name,hyperlink.startPosition,hyperlink.endPosition,ranges);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.HyperlinkPage.HyperlinkData"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 282,
    "startColumnNumber" : 71,
    "endLineNumber" : 282,
    "endColumnNumber" : 80
  }, {
    "charLength" : 9,
    "startLineNumber" : 286,
    "startColumnNumber" : 104,
    "endLineNumber" : 286,
    "endColumnNumber" : 113
  }, {
    "charLength" : 9,
    "startLineNumber" : 286,
    "startColumnNumber" : 129,
    "endLineNumber" : 286,
    "endColumnNumber" : 138
  }, {
    "charLength" : 9,
    "startLineNumber" : 289,
    "startColumnNumber" : 78,
    "endLineNumber" : 289,
    "endColumnNumber" : 87
  }, {
    "charLength" : 9,
    "startLineNumber" : 289,
    "startColumnNumber" : 103,
    "endLineNumber" : 289,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}