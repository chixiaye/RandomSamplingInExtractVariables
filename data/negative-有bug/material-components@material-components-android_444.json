{
  "id" : 444,
  "expression" : "startColor",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/progressindicator/CircularIndeterminateAnimatorDelegate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "startColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 199,
      "startColumnNumber" : 70,
      "endLineNumber" : 199,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 91
      },
      "nodeContext" : "segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 92
      },
      "nodeContext" : "segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 187,
        "startColumnNumber" : 50,
        "endLineNumber" : 201,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n  int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n  int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n  int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n  float colorFraction=interpolator.getInterpolation(timeFraction);\n  segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 187,
        "startColumnNumber" : 6,
        "endLineNumber" : 201,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (timeFraction >= 0 && timeFraction <= 1) {\n  int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n  int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n  int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n  int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n  float colorFraction=interpolator.getInterpolation(timeFraction);\n  segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 184,
        "startColumnNumber" : 70,
        "endLineNumber" : 202,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float timeFraction=getFractionInRange(playtime,DELAY_TO_FADE_IN_MS[cycleIndex],DURATION_TO_FADE_IN_MS);\n  if (timeFraction >= 0 && timeFraction <= 1) {\n    int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n    int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n    int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n    int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n    float colorFraction=interpolator.getInterpolation(timeFraction);\n    segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 202,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int cycleIndex=0; cycleIndex < TOTAL_CYCLES; cycleIndex++) {\n  float timeFraction=getFractionInRange(playtime,DELAY_TO_FADE_IN_MS[cycleIndex],DURATION_TO_FADE_IN_MS);\n  if (timeFraction >= 0 && timeFraction <= 1) {\n    int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n    int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n    int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n    int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n    float colorFraction=interpolator.getInterpolation(timeFraction);\n    segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 183,
        "startColumnNumber" : 54,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int cycleIndex=0; cycleIndex < TOTAL_CYCLES; cycleIndex++) {\n    float timeFraction=getFractionInRange(playtime,DELAY_TO_FADE_IN_MS[cycleIndex],DURATION_TO_FADE_IN_MS);\n    if (timeFraction >= 0 && timeFraction <= 1) {\n      int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n      int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n      int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n      int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n      float colorFraction=interpolator.getInterpolation(timeFraction);\n      segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the segment color array based on current playtime. \n */\nprivate void maybeUpdateSegmentColors(int playtime){\n  for (int cycleIndex=0; cycleIndex < TOTAL_CYCLES; cycleIndex++) {\n    float timeFraction=getFractionInRange(playtime,DELAY_TO_FADE_IN_MS[cycleIndex],DURATION_TO_FADE_IN_MS);\n    if (timeFraction >= 0 && timeFraction <= 1) {\n      int startColorIndex=(cycleIndex + indicatorColorIndexOffset) % baseSpec.indicatorColors.length;\n      int endColorIndex=(startColorIndex + 1) % baseSpec.indicatorColors.length;\n      int startColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[startColorIndex],drawable.getAlpha());\n      int endColor=MaterialColors.compositeARGBWithAlpha(baseSpec.indicatorColors[endColorIndex],drawable.getAlpha());\n      float colorFraction=interpolator.getInterpolation(timeFraction);\n      segmentColors[0]=ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 199,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ArgbEvaluatorCompat.getInstance().evaluate(colorFraction,startColor,endColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 199,
    "startColumnNumber" : 70,
    "endLineNumber" : 199,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}