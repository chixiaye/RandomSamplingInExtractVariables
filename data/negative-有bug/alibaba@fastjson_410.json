{
  "id" : 410,
  "expression" : "new JSONSerializer(out)",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/CollectionSerializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new JSONSerializer(out)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 20,
      "startColumnNumber" : 29,
      "endLineNumber" : 20,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 89
      },
      "nodeContext" : "listSerializer.write(new JSONSerializer(out),Collections.EMPTY_LIST,null,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 90
      },
      "nodeContext" : "listSerializer.write(new JSONSerializer(out),Collections.EMPTY_LIST,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=new SerializeWriter();\n  CollectionCodec listSerializer=CollectionCodec.instance;\n  listSerializer.write(new JSONSerializer(out),Collections.EMPTY_LIST,null,null);\n  Assert.assertEquals(\"[]\",out.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  SerializeWriter out=new SerializeWriter();\n  CollectionCodec listSerializer=CollectionCodec.instance;\n  listSerializer.write(new JSONSerializer(out),Collections.EMPTY_LIST,null,null);\n  Assert.assertEquals(\"[]\",out.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 90
      },
      "nodeContext" : "listSerializer.write(new JSONSerializer(out),Collections.EMPTY_LIST,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.alibaba.fastjson.serializer.JSONSerializer"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 20,
    "startColumnNumber" : 29,
    "endLineNumber" : 20,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}