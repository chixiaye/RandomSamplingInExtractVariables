{
  "id" : 71,
  "expression" : "getClass()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketChannelNotYetConnectedTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 87,
      "startColumnNumber" : 49,
      "endLineNumber" : 87,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new DefaultThreadFactory(getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 86,
        "startColumnNumber" : 46,
        "endLineNumber" : 87,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new SingleThreadEventLoop(new DefaultThreadFactory(getClass()),NioHandler.newFactory().newHandler())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 86,
        "startColumnNumber" : 38,
        "endLineNumber" : 87,
        "endColumnNumber" : 99
      },
      "nodeContext" : "group=new SingleThreadEventLoop(new DefaultThreadFactory(getClass()),NioHandler.newFactory().newHandler())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 100
      },
      "nodeContext" : "SingleThreadEventLoop group=new SingleThreadEventLoop(new DefaultThreadFactory(getClass()),NioHandler.newFactory().newHandler());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 85,
        "startColumnNumber" : 66,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SingleThreadEventLoop group=new SingleThreadEventLoop(new DefaultThreadFactory(getClass()),NioHandler.newFactory().newHandler());\n  ServerBootstrap sb=new ServerBootstrap().group(group);\n  Channel serverChannel=sb.childHandler(new ChannelHandlerAdapter(){\n    @Override public void channelActive(    ChannelHandlerContext ctx) throws Exception {\n      ctx.writeAndFlush(Unpooled.copyInt(42));\n    }\n  }\n).channel(NioServerSocketChannel.class).bind(0).get();\n  final CountDownLatch readLatch=new CountDownLatch(1);\n  bootstrap.handler(new ByteToMessageDecoder(){\n    @Override public void handlerAdded0(    ChannelHandlerContext ctx) throws Exception {\n      assertFalse(ctx.channel().isActive());\n      ctx.read();\n    }\n    @Override protected void decode(    ChannelHandlerContext ctx,    ByteBuf in) throws Exception {\n      assertThat(in.readableBytes()).isLessThanOrEqualTo(Integer.BYTES);\n      if (in.readableBytes() == Integer.BYTES) {\n        assertThat(in.readInt()).isEqualTo(42);\n        readLatch.countDown();\n      }\n    }\n  }\n);\n  bootstrap.connect(serverChannel.localAddress()).sync();\n  readLatch.await();\n  group.shutdownGracefully().await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void run(Bootstrap bootstrap) throws Throwable {\n  SingleThreadEventLoop group=new SingleThreadEventLoop(new DefaultThreadFactory(getClass()),NioHandler.newFactory().newHandler());\n  ServerBootstrap sb=new ServerBootstrap().group(group);\n  Channel serverChannel=sb.childHandler(new ChannelHandlerAdapter(){\n    @Override public void channelActive(    ChannelHandlerContext ctx) throws Exception {\n      ctx.writeAndFlush(Unpooled.copyInt(42));\n    }\n  }\n).channel(NioServerSocketChannel.class).bind(0).get();\n  final CountDownLatch readLatch=new CountDownLatch(1);\n  bootstrap.handler(new ByteToMessageDecoder(){\n    @Override public void handlerAdded0(    ChannelHandlerContext ctx) throws Exception {\n      assertFalse(ctx.channel().isActive());\n      ctx.read();\n    }\n    @Override protected void decode(    ChannelHandlerContext ctx,    ByteBuf in) throws Exception {\n      assertThat(in.readableBytes()).isLessThanOrEqualTo(Integer.BYTES);\n      if (in.readableBytes() == Integer.BYTES) {\n        assertThat(in.readInt()).isEqualTo(42);\n        readLatch.countDown();\n      }\n    }\n  }\n);\n  bootstrap.connect(serverChannel.localAddress()).sync();\n  readLatch.await();\n  group.shutdownGracefully().await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 197,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new DefaultThreadFactory(getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 87,
    "startColumnNumber" : 49,
    "endLineNumber" : 87,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}