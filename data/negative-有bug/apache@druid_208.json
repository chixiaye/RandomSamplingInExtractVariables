{
  "id" : 208,
  "expression" : "\"line\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/test/java/org/apache/druid/java/util/common/parsers/FlatTextFormatParserTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"line\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 118,
      "startColumnNumber" : 33,
      "endLineNumber" : 118,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 45
      },
      "nodeContext" : "concat(format,\"header\",\"line\",\"1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 117,
        "startColumnNumber" : 38,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 117,
        "startColumnNumber" : 26,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 24,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 117,
        "startColumnNumber" : 19,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 6
      },
      "nodeContext" : "final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int skipHeaderRows=2;\n  final Parser<String,Object> parser=PARSER_FACTORY.get(format,false,skipHeaderRows);\n  parser.startFileFromBeginning();\n  final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n  int index;\n  for (index=0; index < skipHeaderRows; index++) {\n    Assert.assertNull(parser.parseToMap(body[index]));\n  }\n  final Map<String,Object> jsonMap=parser.parseToMap(body[index]);\n  Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"column_1\",\"hello\",\"column_2\",\"world\",\"column_3\",\"foo\"),jsonMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWithSkipHeaderRows(){\n  final int skipHeaderRows=2;\n  final Parser<String,Object> parser=PARSER_FACTORY.get(format,false,skipHeaderRows);\n  parser.startFileFromBeginning();\n  final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n  int index;\n  for (index=0; index < skipHeaderRows; index++) {\n    Assert.assertNull(parser.parseToMap(body[index]));\n  }\n  final Map<String,Object> jsonMap=parser.parseToMap(body[index]);\n  Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"column_1\",\"hello\",\"column_2\",\"world\",\"column_3\",\"foo\"),jsonMap);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 45
      },
      "nodeContext" : "concat(format,\"header\",\"line\",\"1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"line\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 119,
      "startColumnNumber" : 33,
      "endLineNumber" : 119,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "concat(format,\"header\",\"line\",\"2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 117,
        "startColumnNumber" : 38,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 117,
        "startColumnNumber" : 26,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 24,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 117,
        "startColumnNumber" : 19,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 6
      },
      "nodeContext" : "final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int skipHeaderRows=2;\n  final Parser<String,Object> parser=PARSER_FACTORY.get(format,false,skipHeaderRows);\n  parser.startFileFromBeginning();\n  final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n  int index;\n  for (index=0; index < skipHeaderRows; index++) {\n    Assert.assertNull(parser.parseToMap(body[index]));\n  }\n  final Map<String,Object> jsonMap=parser.parseToMap(body[index]);\n  Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"column_1\",\"hello\",\"column_2\",\"world\",\"column_3\",\"foo\"),jsonMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWithSkipHeaderRows(){\n  final int skipHeaderRows=2;\n  final Parser<String,Object> parser=PARSER_FACTORY.get(format,false,skipHeaderRows);\n  parser.startFileFromBeginning();\n  final String[] body=new String[]{concat(format,\"header\",\"line\",\"1\"),concat(format,\"header\",\"line\",\"2\"),concat(format,\"hello\",\"world\",\"foo\")};\n  int index;\n  for (index=0; index < skipHeaderRows; index++) {\n    Assert.assertNull(parser.parseToMap(body[index]));\n  }\n  final Map<String,Object> jsonMap=parser.parseToMap(body[index]);\n  Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"column_1\",\"hello\",\"column_2\",\"world\",\"column_3\",\"foo\"),jsonMap);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "concat(format,\"header\",\"line\",\"2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 118,
    "startColumnNumber" : 33,
    "endLineNumber" : 118,
    "endColumnNumber" : 39
  }, {
    "charLength" : 6,
    "startLineNumber" : 119,
    "startColumnNumber" : 33,
    "endLineNumber" : 119,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}