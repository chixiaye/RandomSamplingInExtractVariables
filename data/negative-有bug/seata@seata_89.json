{
  "id" : 89,
  "expression" : "new MySQLInsertRecognizer(sql,ast)",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/sql/SQLVisitorFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MySQLInsertRecognizer(sql,ast)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 55,
      "startColumnNumber" : 29,
      "endLineNumber" : 55,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "recognizer=new MySQLInsertRecognizer(sql,ast)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 65
      },
      "nodeContext" : "recognizer=new MySQLInsertRecognizer(sql,ast);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 54,
        "startColumnNumber" : 51,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  recognizer=new MySQLInsertRecognizer(sql,ast);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ast instanceof SQLInsertStatement) {\n  recognizer=new MySQLInsertRecognizer(sql,ast);\n}\n else if (ast instanceof SQLUpdateStatement) {\n  recognizer=new MySQLUpdateRecognizer(sql,ast);\n}\n else if (ast instanceof SQLDeleteStatement) {\n  recognizer=new MySQLDeleteRecognizer(sql,ast);\n}\n else if (ast instanceof SQLSelectStatement) {\n  if (((SQLSelectStatement)ast).getSelect().getFirstQueryBlock().isForUpdate()) {\n    recognizer=new MySQLSelectForUpdateRecognizer(sql,ast);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 53,
        "startColumnNumber" : 58,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (ast instanceof SQLInsertStatement) {\n    recognizer=new MySQLInsertRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLUpdateStatement) {\n    recognizer=new MySQLUpdateRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLDeleteStatement) {\n    recognizer=new MySQLDeleteRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLSelectStatement) {\n    if (((SQLSelectStatement)ast).getSelect().getFirstQueryBlock().isForUpdate()) {\n      recognizer=new MySQLSelectForUpdateRecognizer(sql,ast);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (JdbcConstants.MYSQL.equalsIgnoreCase(dbType)) {\n  if (ast instanceof SQLInsertStatement) {\n    recognizer=new MySQLInsertRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLUpdateStatement) {\n    recognizer=new MySQLUpdateRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLDeleteStatement) {\n    recognizer=new MySQLDeleteRecognizer(sql,ast);\n  }\n else   if (ast instanceof SQLSelectStatement) {\n    if (((SQLSelectStatement)ast).getSelect().getFirstQueryBlock().isForUpdate()) {\n      recognizer=new MySQLSelectForUpdateRecognizer(sql,ast);\n    }\n  }\n}\n else {\n  throw new UnsupportedOperationException(\"Just support MySQL by now!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 46,
        "startColumnNumber" : 63,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<SQLStatement> asts=SQLUtils.parseStatements(sql,dbType);\n  if (asts == null || asts.size() != 1) {\n    throw new UnsupportedOperationException(\"Unsupported SQL: \" + sql);\n  }\n  SQLRecognizer recognizer=null;\n  SQLStatement ast=asts.get(0);\n  if (JdbcConstants.MYSQL.equalsIgnoreCase(dbType)) {\n    if (ast instanceof SQLInsertStatement) {\n      recognizer=new MySQLInsertRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLUpdateStatement) {\n      recognizer=new MySQLUpdateRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLDeleteStatement) {\n      recognizer=new MySQLDeleteRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLSelectStatement) {\n      if (((SQLSelectStatement)ast).getSelect().getFirstQueryBlock().isForUpdate()) {\n        recognizer=new MySQLSelectForUpdateRecognizer(sql,ast);\n      }\n    }\n  }\n else {\n    throw new UnsupportedOperationException(\"Just support MySQL by now!\");\n  }\n  return recognizer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1340,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get sql recognizer.\n * @param sql    the sql\n * @param dbType the db type\n * @return the sql recognizer\n */\npublic static SQLRecognizer get(String sql,String dbType){\n  List<SQLStatement> asts=SQLUtils.parseStatements(sql,dbType);\n  if (asts == null || asts.size() != 1) {\n    throw new UnsupportedOperationException(\"Unsupported SQL: \" + sql);\n  }\n  SQLRecognizer recognizer=null;\n  SQLStatement ast=asts.get(0);\n  if (JdbcConstants.MYSQL.equalsIgnoreCase(dbType)) {\n    if (ast instanceof SQLInsertStatement) {\n      recognizer=new MySQLInsertRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLUpdateStatement) {\n      recognizer=new MySQLUpdateRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLDeleteStatement) {\n      recognizer=new MySQLDeleteRecognizer(sql,ast);\n    }\n else     if (ast instanceof SQLSelectStatement) {\n      if (((SQLSelectStatement)ast).getSelect().getFirstQueryBlock().isForUpdate()) {\n        recognizer=new MySQLSelectForUpdateRecognizer(sql,ast);\n      }\n    }\n  }\n else {\n    throw new UnsupportedOperationException(\"Just support MySQL by now!\");\n  }\n  return recognizer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 65
      },
      "nodeContext" : "recognizer=new MySQLInsertRecognizer(sql,ast);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.seata.rm.datasource.sql.druid.MySQLInsertRecognizer"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 55,
    "startColumnNumber" : 29,
    "endLineNumber" : 55,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}