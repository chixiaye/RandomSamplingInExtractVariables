{
  "id" : 158,
  "expression" : "multipleRegistry.isAvailable()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-registry/dubbo-registry-multiple/src/test/java/org/apache/dubbo/registry/multiple/MultipleRegistry2S2RTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "multipleRegistry.isAvailable()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 126,
      "startColumnNumber" : 30,
      "endLineNumber" : 126,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assertions.assertTrue(multipleRegistry.isAvailable())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assertions.assertTrue(multipleRegistry.isAvailable());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2688,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertEquals(2,multipleRegistry.origReferenceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.origReferenceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.origReferenceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.origServiceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.origServiceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.origServiceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.effectReferenceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.effectReferenceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.effectReferenceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.effectServiceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.effectServiceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.effectServiceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertTrue(multipleRegistry.getServiceRegistries().containsKey(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.getServiceRegistries().containsKey(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.getServiceRegistries().values().size());\n  Assertions.assertNotNull(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()));\n  Assertions.assertNotNull(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()),MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()),MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(multipleRegistry.getApplicationName(),\"vic\");\n  Assertions.assertTrue(multipleRegistry.isAvailable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 232,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2728,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParamConfig(){\n  Assertions.assertEquals(2,multipleRegistry.origReferenceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.origReferenceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.origReferenceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.origServiceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.origServiceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.origServiceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.effectReferenceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.effectReferenceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.effectReferenceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.effectServiceRegistryURLs.size());\n  Assertions.assertTrue(multipleRegistry.effectServiceRegistryURLs.contains(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.effectServiceRegistryURLs.contains(zookeeperRegistryURLStr2));\n  Assertions.assertTrue(multipleRegistry.getServiceRegistries().containsKey(zookeeperRegistryURLStr));\n  Assertions.assertTrue(multipleRegistry.getServiceRegistries().containsKey(zookeeperRegistryURLStr2));\n  Assertions.assertEquals(2,multipleRegistry.getServiceRegistries().values().size());\n  Assertions.assertNotNull(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()));\n  Assertions.assertNotNull(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()),MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getServiceRegistries().values()),MultipleRegistryTestUtil.getZookeeperRegistry(multipleRegistry.getReferenceRegistries().values()));\n  Assertions.assertEquals(multipleRegistry.getApplicationName(),\"vic\");\n  Assertions.assertTrue(multipleRegistry.isAvailable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assertions.assertTrue(multipleRegistry.isAvailable());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 126,
    "startColumnNumber" : 30,
    "endLineNumber" : 126,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}