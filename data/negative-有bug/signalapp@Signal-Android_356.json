{
  "id" : 356,
  "expression" : "\"getUserId did not return an integer\"",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/util/RingtoneUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"getUserId did not return an integer\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 79,
      "startColumnNumber" : 19,
      "endLineNumber" : 79,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Log.w(TAG,\"getUserId did not return an integer\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Log.w(TAG,\"getUserId did not return an integer\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 78,
        "startColumnNumber" : 13,
        "endLineNumber" : 80,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Log.w(TAG,\"getUserId did not return an integer\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (userId instanceof Integer) {\n  return (Integer)userId;\n}\n else {\n  Log.w(TAG,\"getUserId did not return an integer\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object userId=Context.class.getMethod(\"getUserId\").invoke(context);\n  if (userId instanceof Integer) {\n    return (Integer)userId;\n  }\n else {\n    Log.w(TAG,\"getUserId did not return an integer\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Object userId=Context.class.getMethod(\"getUserId\").invoke(context);\n  if (userId instanceof Integer) {\n    return (Integer)userId;\n  }\n else {\n    Log.w(TAG,\"getUserId did not return an integer\");\n  }\n}\n catch (IllegalAccessException|InvocationTargetException|NoSuchMethodException e) {\n  Log.w(TAG,\"Unable to getUserId via reflection\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 73,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Object userId=Context.class.getMethod(\"getUserId\").invoke(context);\n    if (userId instanceof Integer) {\n      return (Integer)userId;\n    }\n else {\n      Log.w(TAG,\"getUserId did not return an integer\");\n    }\n  }\n catch (  IllegalAccessException|InvocationTargetException|NoSuchMethodException e) {\n    Log.w(TAG,\"Unable to getUserId via reflection\",e);\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"JavaReflectionMemberAccess\") @SuppressLint(\"DiscouragedPrivateApi\") private static int getUserId(@NonNull Context context){\n  try {\n    Object userId=Context.class.getMethod(\"getUserId\").invoke(context);\n    if (userId instanceof Integer) {\n      return (Integer)userId;\n    }\n else {\n      Log.w(TAG,\"getUserId did not return an integer\");\n    }\n  }\n catch (  IllegalAccessException|InvocationTargetException|NoSuchMethodException e) {\n    Log.w(TAG,\"Unable to getUserId via reflection\",e);\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Log.w(TAG,\"getUserId did not return an integer\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 79,
    "startColumnNumber" : 19,
    "endLineNumber" : 79,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}