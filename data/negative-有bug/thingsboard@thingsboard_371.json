{
  "id" : 371,
  "expression" : "savedTenant.getId().getId().toString()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/test/java/org/thingsboard/server/controller/BaseUserControllerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "savedTenant.getId().getId().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 104,
      "startColumnNumber" : 34,
      "endLineNumber" : 104,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 104,
        "startColumnNumber" : 17,
        "endLineNumber" : 104,
        "endColumnNumber" : 72
      },
      "nodeContext" : "\"/api/tenant/\" + savedTenant.getId().getId().toString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 73
      },
      "nodeContext" : "doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 43
      },
      "nodeContext" : "doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString()).andExpect(status().isOk())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 44
      },
      "nodeContext" : "doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString()).andExpect(status().isOk());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 50,
        "startColumnNumber" : 48,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  loginSysAdmin();\n  Tenant tenant=new Tenant();\n  tenant.setTitle(\"My tenant\");\n  Tenant savedTenant=doPost(\"/api/tenant\",tenant,Tenant.class);\n  Assert.assertNotNull(savedTenant);\n  String email=\"tenant2@thingsboard.org\";\n  User user=new User();\n  user.setAuthority(Authority.TENANT_ADMIN);\n  user.setTenantId(savedTenant.getId());\n  user.setEmail(email);\n  user.setFirstName(\"Joe\");\n  user.setLastName(\"Downs\");\n  User savedUser=doPost(\"/api/user\",user,User.class);\n  Assert.assertNotNull(savedUser);\n  Assert.assertNotNull(savedUser.getId());\n  Assert.assertTrue(savedUser.getCreatedTime() > 0);\n  Assert.assertEquals(user.getEmail(),savedUser.getEmail());\n  User foundUser=doGet(\"/api/user/\" + savedUser.getId().getId().toString(),User.class);\n  Assert.assertEquals(foundUser,savedUser);\n  logout();\n  doGet(\"/api/noauth/activate?activateToken={activateToken}\",TestMailService.currentActivateToken).andExpect(status().isSeeOther()).andExpect(header().string(HttpHeaders.LOCATION,\"/login/createPassword?activateToken=\" + TestMailService.currentActivateToken));\n  JsonNode activateRequest=new ObjectMapper().createObjectNode().put(\"activateToken\",TestMailService.currentActivateToken).put(\"password\",\"testPassword\");\n  JsonNode tokenInfo=readResponse(doPost(\"/api/noauth/activate\",activateRequest).andExpect(status().isOk()),JsonNode.class);\n  validateAndSetJwtToken(tokenInfo,email);\n  doGet(\"/api/auth/user\").andExpect(status().isOk()).andExpect(jsonPath(\"$.authority\",is(Authority.TENANT_ADMIN.name()))).andExpect(jsonPath(\"$.email\",is(email)));\n  logout();\n  login(email,\"testPassword\");\n  doGet(\"/api/auth/user\").andExpect(status().isOk()).andExpect(jsonPath(\"$.authority\",is(Authority.TENANT_ADMIN.name()))).andExpect(jsonPath(\"$.email\",is(email)));\n  loginSysAdmin();\n  doDelete(\"/api/user/\" + savedUser.getId().getId().toString()).andExpect(status().isOk());\n  doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString()).andExpect(status().isOk());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 327,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2464,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSaveUser() throws Exception {\n  loginSysAdmin();\n  Tenant tenant=new Tenant();\n  tenant.setTitle(\"My tenant\");\n  Tenant savedTenant=doPost(\"/api/tenant\",tenant,Tenant.class);\n  Assert.assertNotNull(savedTenant);\n  String email=\"tenant2@thingsboard.org\";\n  User user=new User();\n  user.setAuthority(Authority.TENANT_ADMIN);\n  user.setTenantId(savedTenant.getId());\n  user.setEmail(email);\n  user.setFirstName(\"Joe\");\n  user.setLastName(\"Downs\");\n  User savedUser=doPost(\"/api/user\",user,User.class);\n  Assert.assertNotNull(savedUser);\n  Assert.assertNotNull(savedUser.getId());\n  Assert.assertTrue(savedUser.getCreatedTime() > 0);\n  Assert.assertEquals(user.getEmail(),savedUser.getEmail());\n  User foundUser=doGet(\"/api/user/\" + savedUser.getId().getId().toString(),User.class);\n  Assert.assertEquals(foundUser,savedUser);\n  logout();\n  doGet(\"/api/noauth/activate?activateToken={activateToken}\",TestMailService.currentActivateToken).andExpect(status().isSeeOther()).andExpect(header().string(HttpHeaders.LOCATION,\"/login/createPassword?activateToken=\" + TestMailService.currentActivateToken));\n  JsonNode activateRequest=new ObjectMapper().createObjectNode().put(\"activateToken\",TestMailService.currentActivateToken).put(\"password\",\"testPassword\");\n  JsonNode tokenInfo=readResponse(doPost(\"/api/noauth/activate\",activateRequest).andExpect(status().isOk()),JsonNode.class);\n  validateAndSetJwtToken(tokenInfo,email);\n  doGet(\"/api/auth/user\").andExpect(status().isOk()).andExpect(jsonPath(\"$.authority\",is(Authority.TENANT_ADMIN.name()))).andExpect(jsonPath(\"$.email\",is(email)));\n  logout();\n  login(email,\"testPassword\");\n  doGet(\"/api/auth/user\").andExpect(status().isOk()).andExpect(jsonPath(\"$.authority\",is(Authority.TENANT_ADMIN.name()))).andExpect(jsonPath(\"$.email\",is(email)));\n  loginSysAdmin();\n  doDelete(\"/api/user/\" + savedUser.getId().getId().toString()).andExpect(status().isOk());\n  doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString()).andExpect(status().isOk());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 335,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 73
      },
      "nodeContext" : "doDelete(\"/api/tenant/\" + savedTenant.getId().getId().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 104,
    "startColumnNumber" : 34,
    "endLineNumber" : 104,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}