{
  "id" : 24,
  "expression" : "nextLength",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTestPerformance/src/androidTest/java/org/greenrobot/greendao/performance/StringGenerator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nextLength",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 51,
      "startColumnNumber" : 36,
      "endLineNumber" : 51,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 51,
        "startColumnNumber" : 27,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "new char[nextLength]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "chars=new char[nextLength]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "char[] chars=new char[nextLength];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n  char[] chars=new char[nextLength];\n  for (int j=0; j < nextLength; j++) {\n    chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n  }\n  strings[i]=new String(chars);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < count; i++) {\n  int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n  char[] chars=new char[nextLength];\n  for (int j=0; j < nextLength; j++) {\n    chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n  }\n  strings[i]=new String(chars);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 40,
        "startColumnNumber" : 63,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] strings=new String[count];\n  Random lengthRandom=new Random();\n  lengthRandom.setSeed(SEED);\n  Random stringRandom=new Random();\n  stringRandom.setSeed(SEED);\n  for (int i=0; i < count; i++) {\n    int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n    char[] chars=new char[nextLength];\n    for (int j=0; j < nextLength; j++) {\n      chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n    }\n    strings[i]=new String(chars);\n  }\n  return strings;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates the same random sequence of strings.\n */\npublic static String[] createFixedRandomStrings(int count){\n  String[] strings=new String[count];\n  Random lengthRandom=new Random();\n  lengthRandom.setSeed(SEED);\n  Random stringRandom=new Random();\n  stringRandom.setSeed(SEED);\n  for (int i=0; i < count; i++) {\n    int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n    char[] chars=new char[nextLength];\n    for (int j=0; j < nextLength; j++) {\n      chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n    }\n    strings[i]=new String(chars);\n  }\n  return strings;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "char[] chars=new char[nextLength];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "nextLength",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 52,
      "startColumnNumber" : 32,
      "endLineNumber" : 52,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "j < nextLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < nextLength; j++) {\n  chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n  char[] chars=new char[nextLength];\n  for (int j=0; j < nextLength; j++) {\n    chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n  }\n  strings[i]=new String(chars);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < count; i++) {\n  int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n  char[] chars=new char[nextLength];\n  for (int j=0; j < nextLength; j++) {\n    chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n  }\n  strings[i]=new String(chars);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 40,
        "startColumnNumber" : 63,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] strings=new String[count];\n  Random lengthRandom=new Random();\n  lengthRandom.setSeed(SEED);\n  Random stringRandom=new Random();\n  stringRandom.setSeed(SEED);\n  for (int i=0; i < count; i++) {\n    int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n    char[] chars=new char[nextLength];\n    for (int j=0; j < nextLength; j++) {\n      chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n    }\n    strings[i]=new String(chars);\n  }\n  return strings;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates the same random sequence of strings.\n */\npublic static String[] createFixedRandomStrings(int count){\n  String[] strings=new String[count];\n  Random lengthRandom=new Random();\n  lengthRandom.setSeed(SEED);\n  Random stringRandom=new Random();\n  stringRandom.setSeed(SEED);\n  for (int i=0; i < count; i++) {\n    int nextLength=MIN_LENGTH + lengthRandom.nextInt(MAX_LENGTH - MIN_LENGTH - 1);\n    char[] chars=new char[nextLength];\n    for (int j=0; j < nextLength; j++) {\n      chars[j]=CHARS[stringRandom.nextInt(CHARS.length)];\n    }\n    strings[i]=new String(chars);\n  }\n  return strings;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "j < nextLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 51,
    "startColumnNumber" : 36,
    "endLineNumber" : 51,
    "endColumnNumber" : 46
  }, {
    "charLength" : 10,
    "startLineNumber" : 52,
    "startColumnNumber" : 32,
    "endLineNumber" : 52,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}