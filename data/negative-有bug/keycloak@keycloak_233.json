{
  "id" : 233,
  "expression" : "userLabel",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/authentication/requiredactions/ConsoleUpdateTotp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "userLabel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 80,
      "startColumnNumber" : 113,
      "endLineNumber" : 80,
      "endColumnNumber" : 122
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 80,
        "startColumnNumber" : 45,
        "endLineNumber" : 80,
        "endColumnNumber" : 123
      },
      "nodeContext" : "OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 80,
        "startColumnNumber" : 27,
        "endLineNumber" : 80,
        "endColumnNumber" : 123
      },
      "nodeContext" : "credentialModel=OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 124
      },
      "nodeContext" : "OTPCredentialModel credentialModel=OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 71,
        "startColumnNumber" : 61,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EventBuilder event=context.getEvent();\n  event.event(EventType.UPDATE_TOTP);\n  MultivaluedMap<String,String> formData=context.getHttpRequest().getDecodedFormParameters();\n  String challengeResponse=formData.getFirst(\"totp\");\n  String totpSecret=context.getAuthenticationSession().getAuthNote(\"totpSecret\");\n  String userLabel=formData.getFirst(\"userLabel\");\n  OTPPolicy policy=context.getRealm().getOTPPolicy();\n  OTPCredentialModel credentialModel=OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel);\n  if (Validation.isBlank(challengeResponse)) {\n    context.challenge(challenge(context).message(Messages.MISSING_TOTP));\n    return;\n  }\n else   if (!CredentialValidation.validOTP(challengeResponse,credentialModel,policy.getLookAheadWindow())) {\n    context.challenge(challenge(context).message(Messages.INVALID_TOTP));\n    return;\n  }\n  if (!CredentialHelper.createOTPCredential(context.getSession(),context.getRealm(),context.getUser(),challengeResponse,credentialModel)) {\n    context.challenge(challenge(context).message(Messages.INVALID_TOTP));\n    return;\n  }\n  context.getAuthenticationSession().removeAuthNote(\"totpSecret\");\n  context.success();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void processAction(RequiredActionContext context){\n  EventBuilder event=context.getEvent();\n  event.event(EventType.UPDATE_TOTP);\n  MultivaluedMap<String,String> formData=context.getHttpRequest().getDecodedFormParameters();\n  String challengeResponse=formData.getFirst(\"totp\");\n  String totpSecret=context.getAuthenticationSession().getAuthNote(\"totpSecret\");\n  String userLabel=formData.getFirst(\"userLabel\");\n  OTPPolicy policy=context.getRealm().getOTPPolicy();\n  OTPCredentialModel credentialModel=OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel);\n  if (Validation.isBlank(challengeResponse)) {\n    context.challenge(challenge(context).message(Messages.MISSING_TOTP));\n    return;\n  }\n else   if (!CredentialValidation.validOTP(challengeResponse,credentialModel,policy.getLookAheadWindow())) {\n    context.challenge(challenge(context).message(Messages.INVALID_TOTP));\n    return;\n  }\n  if (!CredentialHelper.createOTPCredential(context.getSession(),context.getRealm(),context.getUser(),challengeResponse,credentialModel)) {\n    context.challenge(challenge(context).message(Messages.INVALID_TOTP));\n    return;\n  }\n  context.getAuthenticationSession().removeAuthNote(\"totpSecret\");\n  context.success();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 124
      },
      "nodeContext" : "OTPCredentialModel credentialModel=OTPCredentialModel.createFromPolicy(context.getRealm(),totpSecret,userLabel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 80,
    "startColumnNumber" : 113,
    "endLineNumber" : 80,
    "endColumnNumber" : 122
  } ],
  "layoutRelationDataList" : [ ]
}