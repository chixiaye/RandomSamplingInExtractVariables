{
  "id" : 105,
  "expression" : "partitionBy",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/Over.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "partitionBy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 55,
      "startColumnNumber" : 55,
      "endLineNumber" : 55,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 55,
        "startColumnNumber" : 41,
        "endLineNumber" : 55,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Arrays.asList(partitionBy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 55,
        "startColumnNumber" : 15,
        "endLineNumber" : 55,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new OverWindowPartitioned(Arrays.asList(partitionBy))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 69
      },
      "nodeContext" : "return new OverWindowPartitioned(Arrays.asList(partitionBy));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 54,
        "startColumnNumber" : 79,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return new OverWindowPartitioned(Arrays.asList(partitionBy));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Partitions the elements on some partition keys. <p>Each partition is individually sorted and aggregate functions are applied to each partition separately.\n * @param partitionBy list of field references\n * @return an over window with defined partitioning\n */\npublic static OverWindowPartitioned partitionBy(Expression... partitionBy){\n  return new OverWindowPartitioned(Arrays.asList(partitionBy));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 20,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 69
      },
      "nodeContext" : "return new OverWindowPartitioned(Arrays.asList(partitionBy));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.table.expressions.Expression[]"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 55,
    "startColumnNumber" : 55,
    "endLineNumber" : 55,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}