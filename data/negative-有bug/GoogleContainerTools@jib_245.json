{
  "id" : 245,
  "expression" : "registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null)",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPusherIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 65,
      "startLineNumber" : 83,
      "startColumnNumber" : 23,
      "endLineNumber" : 83,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertFalse(registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assert.assertFalse(registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1764,
        "startLineNumber" : 62,
        "startColumnNumber" : 80,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Blob testLayerBlob=Blobs.from(\"crepecake\");\n  DescriptorDigest testLayerBlobDigest=DescriptorDigest.fromHash(\"52a9e4d4ba4333ce593707f98564fee1e6d898db0d3602408c0b2a6a424d357c\");\n  Blob testContainerConfigurationBlob=Blobs.from(\"12345\");\n  DescriptorDigest testContainerConfigurationBlobDigest=DescriptorDigest.fromHash(\"5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5\");\n  V22ManifestTemplate expectedManifestTemplate=new V22ManifestTemplate();\n  expectedManifestTemplate.addLayer(9,testLayerBlobDigest);\n  expectedManifestTemplate.setContainerConfiguration(5,testContainerConfigurationBlobDigest);\n  RegistryClient registryClient=RegistryClient.factory(BUILD_LOGGER,\"localhost:5000\",\"testimage\").setAllowInsecureRegistries(true).newRegistryClient();\n  Assert.assertFalse(registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null));\n  Assert.assertFalse(registryClient.pushBlob(testContainerConfigurationBlobDigest,testContainerConfigurationBlob,null));\n  registryClient.pushManifest(expectedManifestTemplate,\"latest\");\n  V22ManifestTemplate manifestTemplate=registryClient.pullManifest(\"latest\",V22ManifestTemplate.class);\n  Assert.assertEquals(1,manifestTemplate.getLayers().size());\n  Assert.assertEquals(testLayerBlobDigest,manifestTemplate.getLayers().get(0).getDigest());\n  Assert.assertEquals(testContainerConfigurationBlobDigest,manifestTemplate.getContainerConfiguration().getDigest());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Tests manifest pushing. This test is a comprehensive test of push and pull. \n */\n@Test public void testPush() throws DigestException, IOException, RegistryException {\n  Blob testLayerBlob=Blobs.from(\"crepecake\");\n  DescriptorDigest testLayerBlobDigest=DescriptorDigest.fromHash(\"52a9e4d4ba4333ce593707f98564fee1e6d898db0d3602408c0b2a6a424d357c\");\n  Blob testContainerConfigurationBlob=Blobs.from(\"12345\");\n  DescriptorDigest testContainerConfigurationBlobDigest=DescriptorDigest.fromHash(\"5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5\");\n  V22ManifestTemplate expectedManifestTemplate=new V22ManifestTemplate();\n  expectedManifestTemplate.addLayer(9,testLayerBlobDigest);\n  expectedManifestTemplate.setContainerConfiguration(5,testContainerConfigurationBlobDigest);\n  RegistryClient registryClient=RegistryClient.factory(BUILD_LOGGER,\"localhost:5000\",\"testimage\").setAllowInsecureRegistries(true).newRegistryClient();\n  Assert.assertFalse(registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null));\n  Assert.assertFalse(registryClient.pushBlob(testContainerConfigurationBlobDigest,testContainerConfigurationBlob,null));\n  registryClient.pushManifest(expectedManifestTemplate,\"latest\");\n  V22ManifestTemplate manifestTemplate=registryClient.pullManifest(\"latest\",V22ManifestTemplate.class);\n  Assert.assertEquals(1,manifestTemplate.getLayers().size());\n  Assert.assertEquals(testLayerBlobDigest,manifestTemplate.getLayers().get(0).getDigest());\n  Assert.assertEquals(testContainerConfigurationBlobDigest,manifestTemplate.getContainerConfiguration().getDigest());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assert.assertFalse(registryClient.pushBlob(testLayerBlobDigest,testLayerBlob,null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 65,
    "startLineNumber" : 83,
    "startColumnNumber" : 23,
    "endLineNumber" : 83,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}