{
  "id" : 497,
  "expression" : "name",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/http/snoop/HttpSnoopClientHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 40,
      "startColumnNumber" : 71,
      "endLineNumber" : 40,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 40,
        "startColumnNumber" : 45,
        "endLineNumber" : 40,
        "endColumnNumber" : 76
      },
      "nodeContext" : "response.headers().getAll(name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 40,
        "startColumnNumber" : 20,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (CharSequence value : response.headers().getAll(name)) {\n  System.err.println(\"HEADER: \" + name + \" = \"+ value);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 39,
        "startColumnNumber" : 68,
        "endLineNumber" : 43,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.err.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CharSequence name : response.headers().names()) {\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.err.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 38,
        "startColumnNumber" : 47,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.err.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.err.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!response.headers().isEmpty()) {\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.err.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.err.println();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 31,
        "startColumnNumber" : 41,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  System.err.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.err.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  System.err.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.err.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1269,
        "startLineNumber" : 30,
        "startColumnNumber" : 75,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    System.err.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.err.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.err.print(content.content().toString(CharsetUtil.UTF_8));\n    System.err.flush();\n    if (content instanceof LastHttpContent) {\n      System.err.println(\"} END OF CONTENT\");\n      ctx.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1355,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    System.err.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.err.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.err.print(content.content().toString(CharsetUtil.UTF_8));\n    System.err.flush();\n    if (content instanceof LastHttpContent) {\n      System.err.println(\"} END OF CONTENT\");\n      ctx.close();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 40,
        "startColumnNumber" : 45,
        "endLineNumber" : 40,
        "endColumnNumber" : 76
      },
      "nodeContext" : "response.headers().getAll(name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.CharSequence"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 41,
      "startColumnNumber" : 56,
      "endLineNumber" : 41,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "\"HEADER: \" + name + \" = \"+ value",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.err.println(\"HEADER: \" + name + \" = \"+ value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 78
      },
      "nodeContext" : "System.err.println(\"HEADER: \" + name + \" = \"+ value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 40,
        "startColumnNumber" : 78,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  System.err.println(\"HEADER: \" + name + \" = \"+ value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 40,
        "startColumnNumber" : 20,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (CharSequence value : response.headers().getAll(name)) {\n  System.err.println(\"HEADER: \" + name + \" = \"+ value);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 39,
        "startColumnNumber" : 68,
        "endLineNumber" : 43,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.err.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CharSequence name : response.headers().names()) {\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.err.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 38,
        "startColumnNumber" : 47,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.err.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.err.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!response.headers().isEmpty()) {\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.err.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.err.println();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 31,
        "startColumnNumber" : 41,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  System.err.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.err.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  System.err.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.err.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1269,
        "startLineNumber" : 30,
        "startColumnNumber" : 75,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    System.err.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.err.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.err.print(content.content().toString(CharsetUtil.UTF_8));\n    System.err.flush();\n    if (content instanceof LastHttpContent) {\n      System.err.println(\"} END OF CONTENT\");\n      ctx.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1355,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    System.err.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.err.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.err.print(content.content().toString(CharsetUtil.UTF_8));\n    System.err.flush();\n    if (content instanceof LastHttpContent) {\n      System.err.println(\"} END OF CONTENT\");\n      ctx.close();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 78
      },
      "nodeContext" : "System.err.println(\"HEADER: \" + name + \" = \"+ value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.CharSequence"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 40,
    "startColumnNumber" : 71,
    "endLineNumber" : 40,
    "endColumnNumber" : 75
  }, {
    "charLength" : 4,
    "startLineNumber" : 41,
    "startColumnNumber" : 56,
    "endLineNumber" : 41,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}