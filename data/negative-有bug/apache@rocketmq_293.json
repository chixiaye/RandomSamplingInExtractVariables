{
  "id" : 293,
  "expression" : "MQClientException.class",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/client/src/test/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MQClientException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 40,
      "startColumnNumber" : 22,
      "endLineNumber" : 40,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 46
      },
      "nodeContext" : "thrown.expect(MQClientException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 47
      },
      "nodeContext" : "thrown.expect(MQClientException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 37,
        "startColumnNumber" : 59,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  thrown.expect(MQClientException.class);\n  thrown.expectMessage(\"consumeThreadMin (10) is larger than consumeThreadMax (9)\");\n  DefaultMQPushConsumer consumer=new DefaultMQPushConsumer(\"test_consumer_group\");\n  consumer.setConsumeThreadMin(10);\n  consumer.setConsumeThreadMax(9);\n  consumer.registerMessageListener(new MessageListenerConcurrently(){\n    public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      System.out.println(\" Receive New Messages: \" + msgs);\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n  DefaultMQPushConsumerImpl defaultMQPushConsumerImpl=new DefaultMQPushConsumerImpl(consumer,null);\n  defaultMQPushConsumerImpl.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void checkConfigTest() throws MQClientException {\n  thrown.expect(MQClientException.class);\n  thrown.expectMessage(\"consumeThreadMin (10) is larger than consumeThreadMax (9)\");\n  DefaultMQPushConsumer consumer=new DefaultMQPushConsumer(\"test_consumer_group\");\n  consumer.setConsumeThreadMin(10);\n  consumer.setConsumeThreadMax(9);\n  consumer.registerMessageListener(new MessageListenerConcurrently(){\n    public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      System.out.println(\" Receive New Messages: \" + msgs);\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n  DefaultMQPushConsumerImpl defaultMQPushConsumerImpl=new DefaultMQPushConsumerImpl(consumer,null);\n  defaultMQPushConsumerImpl.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 47
      },
      "nodeContext" : "thrown.expect(MQClientException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.rocketmq.client.exception.MQClientException>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 40,
    "startColumnNumber" : 22,
    "endLineNumber" : 40,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}