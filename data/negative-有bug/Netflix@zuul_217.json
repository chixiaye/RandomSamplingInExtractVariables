{
  "id" : 217,
  "expression" : "Integer.valueOf(10008)",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/netty/common/proxyprotocol/ElbProxyProtocolChannelHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.valueOf(10008)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 68,
      "startColumnNumber" : 21,
      "endLineNumber" : 68,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(Integer.valueOf(10008),channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_PORT).get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(Integer.valueOf(10008),channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_PORT).get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1462,
        "startLineNumber" : 47,
        "startColumnNumber" : 43,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ElbProxyProtocolChannelHandler handler=new ElbProxyProtocolChannelHandler(true);\n  EmbeddedChannel channel=new EmbeddedChannel();\n  handler.addProxyProtocol(channel.pipeline());\n  ByteBuf buf=Unpooled.wrappedBuffer(\"PROXY TCP4 192.168.0.1 124.123.111.111 10008 443\\r\\n\".getBytes(StandardCharsets.US_ASCII));\n  channel.writeInbound(buf);\n  Object dropped=channel.readInbound();\n  assertNull(dropped);\n  assertNull(channel.pipeline().context(ElbProxyProtocolChannelHandler.NAME));\n  assertEquals(HAProxyProtocolVersion.V1,channel.attr(ElbProxyProtocolChannelHandler.ATTR_HAPROXY_VERSION).get());\n  assertNotNull(channel.attr(ElbProxyProtocolChannelHandler.ATTR_HAPROXY_MESSAGE).get());\n  assertEquals(\"124.123.111.111\",channel.attr(SourceAddressChannelHandler.ATTR_LOCAL_ADDRESS).get());\n  assertEquals(Integer.valueOf(443),channel.attr(SourceAddressChannelHandler.ATTR_LOCAL_PORT).get());\n  assertEquals(\"192.168.0.1\",channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_ADDRESS).get());\n  assertEquals(Integer.valueOf(10008),channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_PORT).get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1511,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void negotiateProxy_ppv1_ipv4(){\n  ElbProxyProtocolChannelHandler handler=new ElbProxyProtocolChannelHandler(true);\n  EmbeddedChannel channel=new EmbeddedChannel();\n  handler.addProxyProtocol(channel.pipeline());\n  ByteBuf buf=Unpooled.wrappedBuffer(\"PROXY TCP4 192.168.0.1 124.123.111.111 10008 443\\r\\n\".getBytes(StandardCharsets.US_ASCII));\n  channel.writeInbound(buf);\n  Object dropped=channel.readInbound();\n  assertNull(dropped);\n  assertNull(channel.pipeline().context(ElbProxyProtocolChannelHandler.NAME));\n  assertEquals(HAProxyProtocolVersion.V1,channel.attr(ElbProxyProtocolChannelHandler.ATTR_HAPROXY_VERSION).get());\n  assertNotNull(channel.attr(ElbProxyProtocolChannelHandler.ATTR_HAPROXY_MESSAGE).get());\n  assertEquals(\"124.123.111.111\",channel.attr(SourceAddressChannelHandler.ATTR_LOCAL_ADDRESS).get());\n  assertEquals(Integer.valueOf(443),channel.attr(SourceAddressChannelHandler.ATTR_LOCAL_PORT).get());\n  assertEquals(\"192.168.0.1\",channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_ADDRESS).get());\n  assertEquals(Integer.valueOf(10008),channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_PORT).get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(Integer.valueOf(10008),channel.attr(SourceAddressChannelHandler.ATTR_SOURCE_PORT).get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 68,
    "startColumnNumber" : 21,
    "endLineNumber" : 68,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}