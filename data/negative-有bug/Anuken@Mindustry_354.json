{
  "id" : 354,
  "expression" : "\"back\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/logic/LogicDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"back\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 30,
      "startColumnNumber" : 60,
      "endLineNumber" : 30,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 67
      },
      "nodeContext" : "buttons.button(\"@back\",Icon.left,this::hide).name(\"back\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "buttons.button(\"@back\",Icon.left,this::hide).name(\"back\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2715,
        "startLineNumber" : 19,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(\"logic\");\n  clearChildren();\n  canvas=new LCanvas();\n  shouldPause=true;\n  addCloseListener();\n  buttons.defaults().size(160f,64f);\n  buttons.button(\"@back\",Icon.left,this::hide).name(\"back\");\n  buttons.button(\"@edit\",Icon.edit,() -> {\n    BaseDialog dialog=new BaseDialog(\"@editor.export\");\n    dialog.cont.pane(p -> {\n      p.margin(10f);\n      p.table(Tex.button,t -> {\n        TextButtonStyle style=Styles.cleart;\n        t.defaults().size(280f,60f).left();\n        t.button(\"@schematic.copy\",Icon.copy,style,() -> {\n          dialog.hide();\n          Core.app.setClipboardText(canvas.save());\n        }\n).marginLeft(12f);\n        t.row();\n        t.button(\"@schematic.copy.import\",Icon.download,style,() -> {\n          dialog.hide();\n          try {\n            canvas.load(Core.app.getClipboardText().replace(\"\\r\\n\",\"\\n\"));\n          }\n catch (          Throwable e) {\n            ui.showException(e);\n          }\n        }\n).marginLeft(12f).disabled(b -> Core.app.getClipboardText() == null);\n      }\n);\n    }\n);\n    dialog.addCloseButton();\n    dialog.show();\n  }\n).name(\"edit\");\n  buttons.button(\"@add\",Icon.add,() -> {\n    BaseDialog dialog=new BaseDialog(\"@add\");\n    dialog.cont.pane(t -> {\n      t.background(Tex.button);\n      int i=0;\n      for (      Prov<LStatement> prov : LogicIO.allStatements) {\n        LStatement example=prov.get();\n        if (example instanceof InvalidStatement || example.hidden())         continue;\n        TextButtonStyle style=new TextButtonStyle(Styles.cleart);\n        style.fontColor=example.color();\n        style.font=Fonts.outline;\n        t.button(example.name(),style,() -> {\n          canvas.add(prov.get());\n          dialog.hide();\n        }\n).size(140f,50f).self(c -> tooltip(c,\"lst.\" + example.name()));\n        if (++i % 2 == 0)         t.row();\n      }\n    }\n);\n    dialog.addCloseButton();\n    dialog.show();\n  }\n).disabled(t -> canvas.statements.getChildren().size >= LExecutor.maxInstructions);\n  add(canvas).grow().name(\"canvas\");\n  row();\n  add(buttons).growX().name(\"canvas\");\n  hidden(() -> consumer.get(canvas.save()));\n  onResize(() -> canvas.rebuild());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 411,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2735,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public LogicDialog(){\n  super(\"logic\");\n  clearChildren();\n  canvas=new LCanvas();\n  shouldPause=true;\n  addCloseListener();\n  buttons.defaults().size(160f,64f);\n  buttons.button(\"@back\",Icon.left,this::hide).name(\"back\");\n  buttons.button(\"@edit\",Icon.edit,() -> {\n    BaseDialog dialog=new BaseDialog(\"@editor.export\");\n    dialog.cont.pane(p -> {\n      p.margin(10f);\n      p.table(Tex.button,t -> {\n        TextButtonStyle style=Styles.cleart;\n        t.defaults().size(280f,60f).left();\n        t.button(\"@schematic.copy\",Icon.copy,style,() -> {\n          dialog.hide();\n          Core.app.setClipboardText(canvas.save());\n        }\n).marginLeft(12f);\n        t.row();\n        t.button(\"@schematic.copy.import\",Icon.download,style,() -> {\n          dialog.hide();\n          try {\n            canvas.load(Core.app.getClipboardText().replace(\"\\r\\n\",\"\\n\"));\n          }\n catch (          Throwable e) {\n            ui.showException(e);\n          }\n        }\n).marginLeft(12f).disabled(b -> Core.app.getClipboardText() == null);\n      }\n);\n    }\n);\n    dialog.addCloseButton();\n    dialog.show();\n  }\n).name(\"edit\");\n  buttons.button(\"@add\",Icon.add,() -> {\n    BaseDialog dialog=new BaseDialog(\"@add\");\n    dialog.cont.pane(t -> {\n      t.background(Tex.button);\n      int i=0;\n      for (      Prov<LStatement> prov : LogicIO.allStatements) {\n        LStatement example=prov.get();\n        if (example instanceof InvalidStatement || example.hidden())         continue;\n        TextButtonStyle style=new TextButtonStyle(Styles.cleart);\n        style.fontColor=example.color();\n        style.font=Fonts.outline;\n        t.button(example.name(),style,() -> {\n          canvas.add(prov.get());\n          dialog.hide();\n        }\n).size(140f,50f).self(c -> tooltip(c,\"lst.\" + example.name()));\n        if (++i % 2 == 0)         t.row();\n      }\n    }\n);\n    dialog.addCloseButton();\n    dialog.show();\n  }\n).disabled(t -> canvas.statements.getChildren().size >= LExecutor.maxInstructions);\n  add(canvas).grow().name(\"canvas\");\n  row();\n  add(buttons).growX().name(\"canvas\");\n  hidden(() -> consumer.get(canvas.save()));\n  onResize(() -> canvas.rebuild());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 414,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "buttons.button(\"@back\",Icon.left,this::hide).name(\"back\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 30,
    "startColumnNumber" : 60,
    "endLineNumber" : 30,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}