{
  "id" : 19,
  "expression" : "oldFormat.sampleMimeType",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegVideoRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oldFormat.sampleMimeType",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 126,
      "startColumnNumber" : 41,
      "endLineNumber" : 126,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 126,
        "startColumnNumber" : 27,
        "endLineNumber" : 126,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 92
      },
      "nodeContext" : "sameMimeType=Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 93
      },
      "nodeContext" : "boolean sameMimeType=Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 125,
        "startColumnNumber" : 62,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean sameMimeType=Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType);\n  return new DecoderReuseEvaluation(decoderName,oldFormat,newFormat,sameMimeType ? REUSE_RESULT_YES_WITHOUT_RECONFIGURATION : REUSE_RESULT_NO,sameMimeType ? 0 : DISCARD_REASON_MIME_TYPE_CHANGED);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected DecoderReuseEvaluation canReuseDecoder(String decoderName,Format oldFormat,Format newFormat){\n  boolean sameMimeType=Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType);\n  return new DecoderReuseEvaluation(decoderName,oldFormat,newFormat,sameMimeType ? REUSE_RESULT_YES_WITHOUT_RECONFIGURATION : REUSE_RESULT_NO,sameMimeType ? 0 : DISCARD_REASON_MIME_TYPE_CHANGED);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 93
      },
      "nodeContext" : "boolean sameMimeType=Util.areEqual(oldFormat.sampleMimeType,newFormat.sampleMimeType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 126,
    "startColumnNumber" : 41,
    "endLineNumber" : 126,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}