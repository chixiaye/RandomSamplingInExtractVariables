{
  "id" : 67,
  "expression" : "i",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/observer/src/test/java/com/iluwatar/observer/generic/GWeatherTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 91,
      "startColumnNumber" : 20,
      "endLineNumber" : 91,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < 20",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i < 20; i++) {\n  weather.timePasses();\n  inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 84,
        "startColumnNumber" : 31,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Race observer=mock(Race.class);\n  final GWeather weather=new GWeather();\n  weather.addObserver(observer);\n  final InOrder inOrder=inOrder(observer);\n  final WeatherType[] weatherTypes=WeatherType.values();\n  for (int i=1; i < 20; i++) {\n    weather.timePasses();\n    inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n  }\n  verifyNoMoreInteractions(observer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if the weather passes in the order of the  {@link WeatherType}s\n */\n@Test public void testTimePasses(){\n  final Race observer=mock(Race.class);\n  final GWeather weather=new GWeather();\n  weather.addObserver(observer);\n  final InOrder inOrder=inOrder(observer);\n  final WeatherType[] weatherTypes=WeatherType.values();\n  for (int i=1; i < 20; i++) {\n    weather.timePasses();\n    inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n  }\n  verifyNoMoreInteractions(observer);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i < 20",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 93,
      "startColumnNumber" : 60,
      "endLineNumber" : 93,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 93,
        "startColumnNumber" : 60,
        "endLineNumber" : 93,
        "endColumnNumber" : 83
      },
      "nodeContext" : "i % weatherTypes.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 93,
        "startColumnNumber" : 47,
        "endLineNumber" : 93,
        "endColumnNumber" : 84
      },
      "nodeContext" : "weatherTypes[i % weatherTypes.length]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 85
      },
      "nodeContext" : "inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 86
      },
      "nodeContext" : "inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 91,
        "startColumnNumber" : 33,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  weather.timePasses();\n  inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i < 20; i++) {\n  weather.timePasses();\n  inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 84,
        "startColumnNumber" : 31,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Race observer=mock(Race.class);\n  final GWeather weather=new GWeather();\n  weather.addObserver(observer);\n  final InOrder inOrder=inOrder(observer);\n  final WeatherType[] weatherTypes=WeatherType.values();\n  for (int i=1; i < 20; i++) {\n    weather.timePasses();\n    inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n  }\n  verifyNoMoreInteractions(observer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if the weather passes in the order of the  {@link WeatherType}s\n */\n@Test public void testTimePasses(){\n  final Race observer=mock(Race.class);\n  final GWeather weather=new GWeather();\n  weather.addObserver(observer);\n  final InOrder inOrder=inOrder(observer);\n  final WeatherType[] weatherTypes=WeatherType.values();\n  for (int i=1; i < 20; i++) {\n    weather.timePasses();\n    inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n  }\n  verifyNoMoreInteractions(observer);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 86
      },
      "nodeContext" : "inOrder.verify(observer).update(weather,weatherTypes[i % weatherTypes.length]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 91,
    "startColumnNumber" : 20,
    "endLineNumber" : 91,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 93,
    "startColumnNumber" : 60,
    "endLineNumber" : 93,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}