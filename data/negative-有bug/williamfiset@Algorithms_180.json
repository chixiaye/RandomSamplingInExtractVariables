{
  "id" : 180,
  "expression" : "BitManipulations.setBit(0,2)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/other/BitManipulationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BitManipulations.setBit(0,2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 13,
      "startColumnNumber" : 15,
      "endLineNumber" : 13,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 13,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(BitManipulations.setBit(0,2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 13,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(BitManipulations.setBit(0,2)).isEqualTo(0b100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 13,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(BitManipulations.setBit(0,2)).isEqualTo(0b100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 10,
        "startColumnNumber" : 27,
        "endLineNumber" : 17,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(BitManipulations.setBit(0,0)).isEqualTo(0b1);\n  assertThat(BitManipulations.setBit(0,1)).isEqualTo(0b10);\n  assertThat(BitManipulations.setBit(0,2)).isEqualTo(0b100);\n  assertThat(BitManipulations.setBit(0,3)).isEqualTo(0b1000);\n  assertThat(BitManipulations.setBit(0,4)).isEqualTo(0b10000);\n  assertThat(BitManipulations.setBit(0,5)).isEqualTo(0b100000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 425,
        "startLineNumber" : 9,
        "startColumnNumber" : 2,
        "endLineNumber" : 17,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSetBit(){\n  assertThat(BitManipulations.setBit(0,0)).isEqualTo(0b1);\n  assertThat(BitManipulations.setBit(0,1)).isEqualTo(0b10);\n  assertThat(BitManipulations.setBit(0,2)).isEqualTo(0b100);\n  assertThat(BitManipulations.setBit(0,3)).isEqualTo(0b1000);\n  assertThat(BitManipulations.setBit(0,4)).isEqualTo(0b10000);\n  assertThat(BitManipulations.setBit(0,5)).isEqualTo(0b100000);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 13,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(BitManipulations.setBit(0,2)).isEqualTo(0b100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 13,
    "startColumnNumber" : 15,
    "endLineNumber" : 13,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}