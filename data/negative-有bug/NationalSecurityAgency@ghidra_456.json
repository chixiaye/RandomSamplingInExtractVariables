{
  "id" : 456,
  "expression" : "node instanceof ClangBreak",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/DecompilerDependent/src/main/java/ghidra/app/extension/datatype/finder/DecompilerDataTypeReferenceFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node instanceof ClangBreak",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 512,
      "startColumnNumber" : 7,
      "endLineNumber" : 512,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 512,
        "startColumnNumber" : 3,
        "endLineNumber" : 521,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (node instanceof ClangBreak) {\n  System.err.print(\"\\n\");\n  int tabs=depth * 4;\n  String asString=StringUtilities.pad(\"\",' ',tabs);\n  System.err.print(asString);\n}\n else {\n  String text=node.toString();\n  System.err.print(\" '\" + text + \"' \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 505,
        "startColumnNumber" : 55,
        "endLineNumber" : 530,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node instanceof ClangTokenGroup) {\n    dumpTokens((ClangTokenGroup)node,depth + 1);\n    return;\n  }\n  if (node instanceof ClangBreak) {\n    System.err.print(\"\\n\");\n    int tabs=depth * 4;\n    String asString=StringUtilities.pad(\"\",' ',tabs);\n    System.err.print(asString);\n  }\n else {\n    String text=node.toString();\n    System.err.print(\" '\" + text + \"' \");\n  }\n  ClangToken token=(ClangToken)node;\n  int n=node.numChildren();\n  for (int i=0; i < n; i++) {\n    ClangNode child=token.Child(i);\n    doDumpTokens(child,depth + 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 505,
        "startColumnNumber" : 2,
        "endLineNumber" : 530,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void doDumpTokens(ClangNode node,int depth){\n  if (node instanceof ClangTokenGroup) {\n    dumpTokens((ClangTokenGroup)node,depth + 1);\n    return;\n  }\n  if (node instanceof ClangBreak) {\n    System.err.print(\"\\n\");\n    int tabs=depth * 4;\n    String asString=StringUtilities.pad(\"\",' ',tabs);\n    System.err.print(asString);\n  }\n else {\n    String text=node.toString();\n    System.err.print(\" '\" + text + \"' \");\n  }\n  ClangToken token=(ClangToken)node;\n  int n=node.numChildren();\n  for (int i=0; i < n; i++) {\n    ClangNode child=token.Child(i);\n    doDumpTokens(child,depth + 1);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 512,
        "startColumnNumber" : 3,
        "endLineNumber" : 521,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (node instanceof ClangBreak) {\n  System.err.print(\"\\n\");\n  int tabs=depth * 4;\n  String asString=StringUtilities.pad(\"\",' ',tabs);\n  System.err.print(asString);\n}\n else {\n  String text=node.toString();\n  System.err.print(\" '\" + text + \"' \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 512,
    "startColumnNumber" : 7,
    "endLineNumber" : 512,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}