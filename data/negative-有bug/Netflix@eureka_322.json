{
  "id" : 322,
  "expression" : "jsonParser",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/test/java/com/netflix/discovery/util/DeserializerStringCacheTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jsonParser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 27,
      "startColumnNumber" : 13,
      "endLineNumber" : 27,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 27,
        "startColumnNumber" : 13,
        "endLineNumber" : 27,
        "endColumnNumber" : 43
      },
      "nodeContext" : "jsonParser.getTextCharacters()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 44
      },
      "nodeContext" : "when(jsonParser.getTextCharacters())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 93
      },
      "nodeContext" : "when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 94
      },
      "nodeContext" : "when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 19,
        "startColumnNumber" : 80,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUppercaseConversionWithLowercasePreset() throws IOException {\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 94
      },
      "nodeContext" : "when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.discovery.util.JsonParser"
  }, {
    "nodeContext" : "jsonParser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 28,
      "startColumnNumber" : 13,
      "endLineNumber" : 28,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 28,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 39
      },
      "nodeContext" : "jsonParser.getTextLength()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 40
      },
      "nodeContext" : "when(jsonParser.getTextLength())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 54
      },
      "nodeContext" : "when(jsonParser.getTextLength()).thenReturn(5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 55
      },
      "nodeContext" : "when(jsonParser.getTextLength()).thenReturn(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 19,
        "startColumnNumber" : 80,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUppercaseConversionWithLowercasePreset() throws IOException {\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 55
      },
      "nodeContext" : "when(jsonParser.getTextLength()).thenReturn(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.discovery.util.JsonParser"
  }, {
    "nodeContext" : "jsonParser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 30,
      "startColumnNumber" : 62,
      "endLineNumber" : 30,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 30,
        "startColumnNumber" : 32,
        "endLineNumber" : 30,
        "endColumnNumber" : 118
      },
      "nodeContext" : "deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 30,
        "startColumnNumber" : 15,
        "endLineNumber" : 30,
        "endColumnNumber" : 118
      },
      "nodeContext" : "upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 119
      },
      "nodeContext" : "String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 19,
        "startColumnNumber" : 80,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUppercaseConversionWithLowercasePreset() throws IOException {\n  DeserializationContext deserializationContext=mock(DeserializationContext.class);\n  DeserializerStringCache deserializerStringCache=DeserializerStringCache.from(deserializationContext);\n  String lowerCaseValue=deserializerStringCache.apply(\"value\",CacheScope.APPLICATION_SCOPE);\n  assertThat(lowerCaseValue,is(\"value\"));\n  JsonParser jsonParser=mock(JsonParser.class);\n  when(jsonParser.getTextCharacters()).thenReturn(new char[]{'v','a','l','u','e'});\n  when(jsonParser.getTextLength()).thenReturn(5);\n  String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n  assertThat(upperCaseValue,is(\"VALUE\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 119
      },
      "nodeContext" : "String upperCaseValue=deserializerStringCache.apply(jsonParser,CacheScope.APPLICATION_SCOPE,() -> \"VALUE\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.discovery.util.JsonParser"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 27,
    "startColumnNumber" : 13,
    "endLineNumber" : 27,
    "endColumnNumber" : 23
  }, {
    "charLength" : 10,
    "startLineNumber" : 28,
    "startColumnNumber" : 13,
    "endLineNumber" : 28,
    "endColumnNumber" : 23
  }, {
    "charLength" : 10,
    "startLineNumber" : 30,
    "startColumnNumber" : 62,
    "endLineNumber" : 30,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}