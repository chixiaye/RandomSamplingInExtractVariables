{
  "id" : 325,
  "expression" : "132",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/network/NetworkReceiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "132",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 68,
      "startColumnNumber" : 21,
      "endLineNumber" : 68,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(132,receive.bytesRead())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(132,receive.bytesRead());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1345,
        "startLineNumber" : 35,
        "startColumnNumber" : 51,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NetworkReceive receive=new NetworkReceive(128,\"0\");\n  assertEquals(0,receive.bytesRead());\n  ScatteringByteChannel channel=Mockito.mock(ScatteringByteChannel.class);\n  ArgumentCaptor<ByteBuffer> bufferCaptor=ArgumentCaptor.forClass(ByteBuffer.class);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().putInt(128);\n    return 4;\n  }\n).thenReturn(0);\n  assertEquals(4,receive.readFrom(channel));\n  assertEquals(4,receive.bytesRead());\n  assertFalse(receive.complete());\n  Mockito.reset(channel);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().put(TestUtils.randomBytes(64));\n    return 64;\n  }\n);\n  assertEquals(64,receive.readFrom(channel));\n  assertEquals(68,receive.bytesRead());\n  assertFalse(receive.complete());\n  Mockito.reset(channel);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().put(TestUtils.randomBytes(64));\n    return 64;\n  }\n);\n  assertEquals(64,receive.readFrom(channel));\n  assertEquals(132,receive.bytesRead());\n  assertTrue(receive.complete());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBytesRead() throws IOException {\n  NetworkReceive receive=new NetworkReceive(128,\"0\");\n  assertEquals(0,receive.bytesRead());\n  ScatteringByteChannel channel=Mockito.mock(ScatteringByteChannel.class);\n  ArgumentCaptor<ByteBuffer> bufferCaptor=ArgumentCaptor.forClass(ByteBuffer.class);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().putInt(128);\n    return 4;\n  }\n).thenReturn(0);\n  assertEquals(4,receive.readFrom(channel));\n  assertEquals(4,receive.bytesRead());\n  assertFalse(receive.complete());\n  Mockito.reset(channel);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().put(TestUtils.randomBytes(64));\n    return 64;\n  }\n);\n  assertEquals(64,receive.readFrom(channel));\n  assertEquals(68,receive.bytesRead());\n  assertFalse(receive.complete());\n  Mockito.reset(channel);\n  Mockito.when(channel.read(bufferCaptor.capture())).thenAnswer(invocation -> {\n    bufferCaptor.getValue().put(TestUtils.randomBytes(64));\n    return 64;\n  }\n);\n  assertEquals(64,receive.readFrom(channel));\n  assertEquals(132,receive.bytesRead());\n  assertTrue(receive.complete());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(132,receive.bytesRead());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 68,
    "startColumnNumber" : 21,
    "endLineNumber" : 68,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}