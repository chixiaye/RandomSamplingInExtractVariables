{
  "id" : 261,
  "expression" : "providerName + ACTIVATION_SPEC_SUFFIX",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "providerName + ACTIVATION_SPEC_SUFFIX",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 83,
      "startColumnNumber" : 26,
      "endLineNumber" : 83,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 83,
        "startColumnNumber" : 10,
        "endLineNumber" : 83,
        "endColumnNumber" : 63
      },
      "nodeContext" : "specClassName=providerName + ACTIVATION_SPEC_SUFFIX",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 79,
        "startColumnNumber" : 58,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_SUFFIX.length());\n  String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default <Provider>ActivationSpec class found: \" + specClassName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (adapterClassName.endsWith(RESOURCE_ADAPTER_SUFFIX)) {\n  String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_SUFFIX.length());\n  String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default <Provider>ActivationSpec class found: \" + specClassName);\n  }\n}\n else if (adapterClassName.endsWith(RESOURCE_ADAPTER_IMPL_SUFFIX)) {\n  String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_IMPL_SUFFIX.length());\n  String specClassName=providerName + ACTIVATION_SPEC_IMPL_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default <Provider>ActivationSpecImpl class found: \" + specClassName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2042,
        "startLineNumber" : 76,
        "startColumnNumber" : 74,
        "endLineNumber" : 126,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String adapterClassName=adapter.getClass().getName();\n  if (adapterClassName.endsWith(RESOURCE_ADAPTER_SUFFIX)) {\n    String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_SUFFIX.length());\n    String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n    try {\n      return adapter.getClass().getClassLoader().loadClass(specClassName);\n    }\n catch (    ClassNotFoundException ex) {\n      logger.debug(\"No default <Provider>ActivationSpec class found: \" + specClassName);\n    }\n  }\n else   if (adapterClassName.endsWith(RESOURCE_ADAPTER_IMPL_SUFFIX)) {\n    String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_IMPL_SUFFIX.length());\n    String specClassName=providerName + ACTIVATION_SPEC_IMPL_SUFFIX;\n    try {\n      return adapter.getClass().getClassLoader().loadClass(specClassName);\n    }\n catch (    ClassNotFoundException ex) {\n      logger.debug(\"No default <Provider>ActivationSpecImpl class found: \" + specClassName);\n    }\n  }\n  String providerPackage=adapterClassName.substring(0,adapterClassName.lastIndexOf('.') + 1);\n  String specClassName=providerPackage + ACTIVATION_SPEC_IMPL_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default ActivationSpecImpl class found in provider package: \" + specClassName);\n  }\n  specClassName=providerPackage + \"inbound.\" + ACTIVATION_SPEC_IMPL_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default ActivationSpecImpl class found in inbound subpackage: \" + specClassName);\n  }\n  throw new IllegalStateException(\"No ActivationSpec class defined - \" + \"specify the 'activationSpecClass' property or override the 'determineActivationSpecClass' method\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 126,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * This implementation guesses the ActivationSpec class name from the provider's class name: e.g. \"ActiveMQResourceAdapter\" -> \"ActiveMQActivationSpec\" in the same package, or a class named \"ActivationSpecImpl\" in the same package as the ResourceAdapter class.\n */\n@Override protected Class<?> determineActivationSpecClass(ResourceAdapter adapter){\n  String adapterClassName=adapter.getClass().getName();\n  if (adapterClassName.endsWith(RESOURCE_ADAPTER_SUFFIX)) {\n    String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_SUFFIX.length());\n    String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n    try {\n      return adapter.getClass().getClassLoader().loadClass(specClassName);\n    }\n catch (    ClassNotFoundException ex) {\n      logger.debug(\"No default <Provider>ActivationSpec class found: \" + specClassName);\n    }\n  }\n else   if (adapterClassName.endsWith(RESOURCE_ADAPTER_IMPL_SUFFIX)) {\n    String providerName=adapterClassName.substring(0,adapterClassName.length() - RESOURCE_ADAPTER_IMPL_SUFFIX.length());\n    String specClassName=providerName + ACTIVATION_SPEC_IMPL_SUFFIX;\n    try {\n      return adapter.getClass().getClassLoader().loadClass(specClassName);\n    }\n catch (    ClassNotFoundException ex) {\n      logger.debug(\"No default <Provider>ActivationSpecImpl class found: \" + specClassName);\n    }\n  }\n  String providerPackage=adapterClassName.substring(0,adapterClassName.lastIndexOf('.') + 1);\n  String specClassName=providerPackage + ACTIVATION_SPEC_IMPL_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default ActivationSpecImpl class found in provider package: \" + specClassName);\n  }\n  specClassName=providerPackage + \"inbound.\" + ACTIVATION_SPEC_IMPL_SUFFIX;\n  try {\n    return adapter.getClass().getClassLoader().loadClass(specClassName);\n  }\n catch (  ClassNotFoundException ex) {\n    logger.debug(\"No default ActivationSpecImpl class found in inbound subpackage: \" + specClassName);\n  }\n  throw new IllegalStateException(\"No ActivationSpec class defined - \" + \"specify the 'activationSpecClass' property or override the 'determineActivationSpecClass' method\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String specClassName=providerName + ACTIVATION_SPEC_SUFFIX;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 83,
    "startColumnNumber" : 26,
    "endLineNumber" : 83,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}