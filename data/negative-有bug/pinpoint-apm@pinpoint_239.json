{
  "id" : 239,
  "expression" : "functions[i]",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thirdparty/google-guava/src/main/java/com/google/common/hash/AbstractCompositeHashFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "functions[i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 52,
      "startColumnNumber" : 19,
      "endLineNumber" : 52,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 43
      },
      "nodeContext" : "functions[i].newHasher()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 43
      },
      "nodeContext" : "hashers[i]=functions[i].newHasher()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "hashers[i]=functions[i].newHasher();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 51,
        "startColumnNumber" : 45,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  hashers[i]=functions[i].newHasher();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < hashers.length; i++) {\n  hashers[i]=functions[i].newHasher();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2608,
        "startLineNumber" : 49,
        "startColumnNumber" : 28,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Hasher[] hashers=new Hasher[functions.length];\n  for (int i=0; i < hashers.length; i++) {\n    hashers[i]=functions[i].newHasher();\n  }\n  return new Hasher(){\n    @Override public Hasher putByte(    byte b){\n      for (      Hasher hasher : hashers) {\n        hasher.putByte(b);\n      }\n      return this;\n    }\n    @Override public Hasher putBytes(    byte[] bytes){\n      for (      Hasher hasher : hashers) {\n        hasher.putBytes(bytes);\n      }\n      return this;\n    }\n    @Override public Hasher putBytes(    byte[] bytes,    int off,    int len){\n      for (      Hasher hasher : hashers) {\n        hasher.putBytes(bytes,off,len);\n      }\n      return this;\n    }\n    @Override public Hasher putShort(    short s){\n      for (      Hasher hasher : hashers) {\n        hasher.putShort(s);\n      }\n      return this;\n    }\n    @Override public Hasher putInt(    int i){\n      for (      Hasher hasher : hashers) {\n        hasher.putInt(i);\n      }\n      return this;\n    }\n    @Override public Hasher putLong(    long l){\n      for (      Hasher hasher : hashers) {\n        hasher.putLong(l);\n      }\n      return this;\n    }\n    @Override public Hasher putFloat(    float f){\n      for (      Hasher hasher : hashers) {\n        hasher.putFloat(f);\n      }\n      return this;\n    }\n    @Override public Hasher putDouble(    double d){\n      for (      Hasher hasher : hashers) {\n        hasher.putDouble(d);\n      }\n      return this;\n    }\n    @Override public Hasher putBoolean(    boolean b){\n      for (      Hasher hasher : hashers) {\n        hasher.putBoolean(b);\n      }\n      return this;\n    }\n    @Override public Hasher putChar(    char c){\n      for (      Hasher hasher : hashers) {\n        hasher.putChar(c);\n      }\n      return this;\n    }\n    @Override public Hasher putUnencodedChars(    CharSequence chars){\n      for (      Hasher hasher : hashers) {\n        hasher.putUnencodedChars(chars);\n      }\n      return this;\n    }\n    @Override public Hasher putString(    CharSequence chars,    Charset charset){\n      for (      Hasher hasher : hashers) {\n        hasher.putString(chars,charset);\n      }\n      return this;\n    }\n    @Override public <T>Hasher putObject(    T instance,    Funnel<? super T> funnel){\n      for (      Hasher hasher : hashers) {\n        hasher.putObject(instance,funnel);\n      }\n      return this;\n    }\n    @Override public HashCode hash(){\n      return makeHash(hashers);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 414,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2646,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Hasher newHasher(){\n  final Hasher[] hashers=new Hasher[functions.length];\n  for (int i=0; i < hashers.length; i++) {\n    hashers[i]=functions[i].newHasher();\n  }\n  return new Hasher(){\n    @Override public Hasher putByte(    byte b){\n      for (      Hasher hasher : hashers) {\n        hasher.putByte(b);\n      }\n      return this;\n    }\n    @Override public Hasher putBytes(    byte[] bytes){\n      for (      Hasher hasher : hashers) {\n        hasher.putBytes(bytes);\n      }\n      return this;\n    }\n    @Override public Hasher putBytes(    byte[] bytes,    int off,    int len){\n      for (      Hasher hasher : hashers) {\n        hasher.putBytes(bytes,off,len);\n      }\n      return this;\n    }\n    @Override public Hasher putShort(    short s){\n      for (      Hasher hasher : hashers) {\n        hasher.putShort(s);\n      }\n      return this;\n    }\n    @Override public Hasher putInt(    int i){\n      for (      Hasher hasher : hashers) {\n        hasher.putInt(i);\n      }\n      return this;\n    }\n    @Override public Hasher putLong(    long l){\n      for (      Hasher hasher : hashers) {\n        hasher.putLong(l);\n      }\n      return this;\n    }\n    @Override public Hasher putFloat(    float f){\n      for (      Hasher hasher : hashers) {\n        hasher.putFloat(f);\n      }\n      return this;\n    }\n    @Override public Hasher putDouble(    double d){\n      for (      Hasher hasher : hashers) {\n        hasher.putDouble(d);\n      }\n      return this;\n    }\n    @Override public Hasher putBoolean(    boolean b){\n      for (      Hasher hasher : hashers) {\n        hasher.putBoolean(b);\n      }\n      return this;\n    }\n    @Override public Hasher putChar(    char c){\n      for (      Hasher hasher : hashers) {\n        hasher.putChar(c);\n      }\n      return this;\n    }\n    @Override public Hasher putUnencodedChars(    CharSequence chars){\n      for (      Hasher hasher : hashers) {\n        hasher.putUnencodedChars(chars);\n      }\n      return this;\n    }\n    @Override public Hasher putString(    CharSequence chars,    Charset charset){\n      for (      Hasher hasher : hashers) {\n        hasher.putString(chars,charset);\n      }\n      return this;\n    }\n    @Override public <T>Hasher putObject(    T instance,    Funnel<? super T> funnel){\n      for (      Hasher hasher : hashers) {\n        hasher.putObject(instance,funnel);\n      }\n      return this;\n    }\n    @Override public HashCode hash(){\n      return makeHash(hashers);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 421,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "hashers[i]=functions[i].newHasher();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.google.common.hash.HashFunction"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 52,
    "startColumnNumber" : 19,
    "endLineNumber" : 52,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}