{
  "id" : 152,
  "expression" : "new Matrix()",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/app/src/main/java/com/blankj/androidutilcode/core/span/SpanActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Matrix()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 186,
      "startColumnNumber" : 17,
      "endLineNumber" : 186,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 29
      },
      "nodeContext" : "matrix=new Matrix()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 30
      },
      "nodeContext" : "matrix=new Matrix();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 179,
        "startColumnNumber" : 32,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mShaderWidth=64 * density * 4;\n  mShader=new LinearGradient(0,0,mShaderWidth,0,getResources().getIntArray(R.array.rainbow),null,Shader.TileMode.REPEAT);\n  matrix=new Matrix();\n  mBlurMaskFilterSpan=new BlurMaskFilterSpan(25);\n  mShadowSpan=new ShadowSpan(8,8,8,Color.WHITE);\n  mForegroundAlphaColorSpan=new ForegroundAlphaColorSpan(Color.TRANSPARENT);\n  mForegroundAlphaColorSpanGroup=new ForegroundAlphaColorSpanGroup(0);\n  mPrinterString=\"打印动画，后面的文字是为了测试打印效果...\";\n  mSpanUtils=new SpanUtils().appendLine(\"彩虹动画\").setFontSize(64,true).setShader(mShader).appendLine(\"模糊动画\").setFontSize(64,true).setSpans(mBlurMaskFilterSpan).appendLine(\"阴影动画\").setFontSize(64,true).setBackgroundColor(Color.BLACK).setSpans(mShadowSpan).appendLine(\"透明动画\").setFontSize(64,true).setSpans(mForegroundAlphaColorSpan);\n  for (int i=0, len=mPrinterString.length(); i < len; ++i) {\n    ForegroundAlphaColorSpan span=new ForegroundAlphaColorSpan(Color.TRANSPARENT);\n    mSpanUtils.append(mPrinterString.substring(i,i + 1)).setSpans(span);\n    mForegroundAlphaColorSpanGroup.addSpan(span);\n  }\n  animSsb=mSpanUtils.create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1408,
        "startLineNumber" : 179,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initAnimSpan(){\n  mShaderWidth=64 * density * 4;\n  mShader=new LinearGradient(0,0,mShaderWidth,0,getResources().getIntArray(R.array.rainbow),null,Shader.TileMode.REPEAT);\n  matrix=new Matrix();\n  mBlurMaskFilterSpan=new BlurMaskFilterSpan(25);\n  mShadowSpan=new ShadowSpan(8,8,8,Color.WHITE);\n  mForegroundAlphaColorSpan=new ForegroundAlphaColorSpan(Color.TRANSPARENT);\n  mForegroundAlphaColorSpanGroup=new ForegroundAlphaColorSpanGroup(0);\n  mPrinterString=\"打印动画，后面的文字是为了测试打印效果...\";\n  mSpanUtils=new SpanUtils().appendLine(\"彩虹动画\").setFontSize(64,true).setShader(mShader).appendLine(\"模糊动画\").setFontSize(64,true).setSpans(mBlurMaskFilterSpan).appendLine(\"阴影动画\").setFontSize(64,true).setBackgroundColor(Color.BLACK).setSpans(mShadowSpan).appendLine(\"透明动画\").setFontSize(64,true).setSpans(mForegroundAlphaColorSpan);\n  for (int i=0, len=mPrinterString.length(); i < len; ++i) {\n    ForegroundAlphaColorSpan span=new ForegroundAlphaColorSpan(Color.TRANSPARENT);\n    mSpanUtils.append(mPrinterString.substring(i,i + 1)).setSpans(span);\n    mForegroundAlphaColorSpanGroup.addSpan(span);\n  }\n  animSsb=mSpanUtils.create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 30
      },
      "nodeContext" : "matrix=new Matrix();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.blankj.androidutilcode.core.span.Matrix"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 186,
    "startColumnNumber" : 17,
    "endLineNumber" : 186,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}