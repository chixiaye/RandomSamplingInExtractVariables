{
  "id" : 444,
  "expression" : "lafClass.getDeclaredField(\"styleFactory\")",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/linux/GTKLookAndFeelFixer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lafClass.getDeclaredField(\"styleFactory\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 91,
      "startColumnNumber" : 20,
      "endLineNumber" : 91,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 61
      },
      "nodeContext" : "field=lafClass.getDeclaredField(\"styleFactory\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Field field=lafClass.getDeclaredField(\"styleFactory\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Field field=lafClass.getDeclaredField(\"styleFactory\");\n  boolean accessible=field.isAccessible();\n  field.setAccessible(true);\n  Object styleFactory=field.get(laf);\n  field.setAccessible(accessible);\n  Object style=getGtkStyle(styleFactory,new JPopupMenu(),\"POPUP_MENU\");\n  fixGtkThickness(style,\"yThickness\");\n  fixGtkThickness(style,\"xThickness\");\n  style=getGtkStyle(styleFactory,new JSeparator(),\"POPUP_MENU_SEPARATOR\");\n  fixGtkThickness(style,\"yThickness\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Field field=lafClass.getDeclaredField(\"styleFactory\");\n  boolean accessible=field.isAccessible();\n  field.setAccessible(true);\n  Object styleFactory=field.get(laf);\n  field.setAccessible(accessible);\n  Object style=getGtkStyle(styleFactory,new JPopupMenu(),\"POPUP_MENU\");\n  fixGtkThickness(style,\"yThickness\");\n  fixGtkThickness(style,\"xThickness\");\n  style=getGtkStyle(styleFactory,new JSeparator(),\"POPUP_MENU_SEPARATOR\");\n  fixGtkThickness(style,\"yThickness\");\n}\n catch (Exception e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 77,
        "startColumnNumber" : 52,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  LookAndFeel laf=UIManager.getLookAndFeel();\n  Class<?> lafClass=laf.getClass();\n  if (!lafClass.getName().equals(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\")) {\n    return;\n  }\n  try {\n    Field field=lafClass.getDeclaredField(\"styleFactory\");\n    boolean accessible=field.isAccessible();\n    field.setAccessible(true);\n    Object styleFactory=field.get(laf);\n    field.setAccessible(accessible);\n    Object style=getGtkStyle(styleFactory,new JPopupMenu(),\"POPUP_MENU\");\n    fixGtkThickness(style,\"yThickness\");\n    fixGtkThickness(style,\"xThickness\");\n    style=getGtkStyle(styleFactory,new JSeparator(),\"POPUP_MENU_SEPARATOR\");\n    fixGtkThickness(style,\"yThickness\");\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1697,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Swing menus are looking pretty bad on Linux when the GTK LaF is used (See bug #6925412). It will most likely never be fixed anytime soon so this method provides a workaround for it. It uses reflection to change the GTK style objects of Swing so popup menu borders have a minimum thickness of 1 and menu separators have a minimum vertical thickness of 1.\n */\npublic static void installGtkPopupBugWorkaround(){\n  LookAndFeel laf=UIManager.getLookAndFeel();\n  Class<?> lafClass=laf.getClass();\n  if (!lafClass.getName().equals(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\")) {\n    return;\n  }\n  try {\n    Field field=lafClass.getDeclaredField(\"styleFactory\");\n    boolean accessible=field.isAccessible();\n    field.setAccessible(true);\n    Object styleFactory=field.get(laf);\n    field.setAccessible(accessible);\n    Object style=getGtkStyle(styleFactory,new JPopupMenu(),\"POPUP_MENU\");\n    fixGtkThickness(style,\"yThickness\");\n    fixGtkThickness(style,\"xThickness\");\n    style=getGtkStyle(styleFactory,new JSeparator(),\"POPUP_MENU_SEPARATOR\");\n    fixGtkThickness(style,\"yThickness\");\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Field field=lafClass.getDeclaredField(\"styleFactory\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.reflect.Field"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 91,
    "startColumnNumber" : 20,
    "endLineNumber" : 91,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}