{
  "id" : 398,
  "expression" : "allowedCommandChangedListener",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/media2/src/androidTest/java/com/google/android/exoplayer2/ext/media2/SessionCallbackBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allowedCommandChangedListener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 203,
      "startColumnNumber" : 64,
      "endLineNumber" : 203,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 203,
        "startColumnNumber" : 10,
        "endLineNumber" : 203,
        "endColumnNumber" : 94
      },
      "nodeContext" : "createConnectedController(session,connectedListener,allowedCommandChangedListener)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 202,
        "startColumnNumber" : 27,
        "endLineNumber" : 203,
        "endColumnNumber" : 94
      },
      "nodeContext" : "controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 202,
        "startColumnNumber" : 11,
        "endLineNumber" : 203,
        "endColumnNumber" : 94
      },
      "nodeContext" : "MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 202,
        "startColumnNumber" : 6,
        "endLineNumber" : 213,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try (MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)){\n  assertPlayerResultSuccess(sessionPlayerConnector.skipToNextPlaylistItem());\n  assertThat(allowedCommandChangedLatch.await(CONTROLLER_COMMAND_WAIT_TIME_MS,MILLISECONDS)).isTrue();\n  assertSessionResultFailure(controller.rewind());\n  assertThat(sessionPlayerConnector.getCurrentPosition()).isEqualTo(0);\n  assertThat(controller.getCurrentPosition()).isEqualTo(0);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2465,
        "startLineNumber" : 166,
        "startColumnNumber" : 27,
        "endLineNumber" : 214,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertPlayerResultSuccess(sessionPlayerConnector.setPlaylist(testPlaylist,null));\n  assertPlayerResultSuccess(sessionPlayerConnector.prepare());\n  OnConnectedListener connectedListener=(controller,allowedCommands) -> {\n    List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n    assertAllowedCommands(allowedCommandCodes,allowedCommands);\n    List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n    assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n  }\n;\n  CountDownLatch allowedCommandChangedLatch=new CountDownLatch(1);\n  OnAllowedCommandsChangedListener allowedCommandChangedListener=(controller,allowedCommands) -> {\n    List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n    assertAllowedCommands(allowedCommandCodes,allowedCommands);\n    List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n    assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n    allowedCommandChangedLatch.countDown();\n  }\n;\n  try (MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)){\n    assertPlayerResultSuccess(sessionPlayerConnector.skipToNextPlaylistItem());\n    assertThat(allowedCommandChangedLatch.await(CONTROLLER_COMMAND_WAIT_TIME_MS,MILLISECONDS)).isTrue();\n    assertSessionResultFailure(controller.rewind());\n    assertThat(sessionPlayerConnector.getCurrentPosition()).isEqualTo(0);\n    assertThat(controller.getCurrentPosition()).isEqualTo(0);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 156,
        "startColumnNumber" : 4,
        "endLineNumber" : 214,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (MediaSession session=createMediaSession(sessionPlayerConnector,new SessionCallbackBuilder(context,sessionPlayerConnector).setRatingCallback((mediaSession,controller,mediaId,rating) -> SessionResult.RESULT_ERROR_BAD_VALUE).setRewindIncrementMs(testRewindIncrementMs).setFastForwardIncrementMs(testFastForwardIncrementMs).setMediaItemProvider(new SessionCallbackBuilder.MediaIdMediaItemProvider()).build())){\n  assertPlayerResultSuccess(sessionPlayerConnector.setPlaylist(testPlaylist,null));\n  assertPlayerResultSuccess(sessionPlayerConnector.prepare());\n  OnConnectedListener connectedListener=(controller,allowedCommands) -> {\n    List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n    assertAllowedCommands(allowedCommandCodes,allowedCommands);\n    List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n    assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n  }\n;\n  CountDownLatch allowedCommandChangedLatch=new CountDownLatch(1);\n  OnAllowedCommandsChangedListener allowedCommandChangedListener=(controller,allowedCommands) -> {\n    List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n    assertAllowedCommands(allowedCommandCodes,allowedCommands);\n    List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n    assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n    allowedCommandChangedLatch.countDown();\n  }\n;\n  try (MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)){\n    assertPlayerResultSuccess(sessionPlayerConnector.skipToNextPlaylistItem());\n    assertThat(allowedCommandChangedLatch.await(CONTROLLER_COMMAND_WAIT_TIME_MS,MILLISECONDS)).isTrue();\n    assertSessionResultFailure(controller.rewind());\n    assertThat(sessionPlayerConnector.getCurrentPosition()).isEqualTo(0);\n    assertThat(controller.getCurrentPosition()).isEqualTo(0);\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 239,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3333,
        "startLineNumber" : 149,
        "startColumnNumber" : 77,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<MediaItem> testPlaylist=new ArrayList<>();\n  testPlaylist.add(TestUtils.createMediaItem(R.raw.video_desks));\n  testPlaylist.add(TestUtils.createMediaItem(R.raw.video_not_seekable));\n  int testRewindIncrementMs=100;\n  int testFastForwardIncrementMs=100;\n  try (MediaSession session=createMediaSession(sessionPlayerConnector,new SessionCallbackBuilder(context,sessionPlayerConnector).setRatingCallback((mediaSession,controller,mediaId,rating) -> SessionResult.RESULT_ERROR_BAD_VALUE).setRewindIncrementMs(testRewindIncrementMs).setFastForwardIncrementMs(testFastForwardIncrementMs).setMediaItemProvider(new SessionCallbackBuilder.MediaIdMediaItemProvider()).build())){\n    assertPlayerResultSuccess(sessionPlayerConnector.setPlaylist(testPlaylist,null));\n    assertPlayerResultSuccess(sessionPlayerConnector.prepare());\n    OnConnectedListener connectedListener=(controller,allowedCommands) -> {\n      List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n      assertAllowedCommands(allowedCommandCodes,allowedCommands);\n      List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n      assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n    }\n;\n    CountDownLatch allowedCommandChangedLatch=new CountDownLatch(1);\n    OnAllowedCommandsChangedListener allowedCommandChangedListener=(controller,allowedCommands) -> {\n      List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n      assertAllowedCommands(allowedCommandCodes,allowedCommands);\n      List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n      assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n      allowedCommandChangedLatch.countDown();\n    }\n;\n    try (MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)){\n      assertPlayerResultSuccess(sessionPlayerConnector.skipToNextPlaylistItem());\n      assertThat(allowedCommandChangedLatch.await(CONTROLLER_COMMAND_WAIT_TIME_MS,MILLISECONDS)).isTrue();\n      assertSessionResultFailure(controller.rewind());\n      assertThat(sessionPlayerConnector.getCurrentPosition()).isEqualTo(0);\n      assertThat(controller.getCurrentPosition()).isEqualTo(0);\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3416,
        "startLineNumber" : 148,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void allowedCommand_whenPlaylistSet_allowsSkipTo() throws Exception {\n  List<MediaItem> testPlaylist=new ArrayList<>();\n  testPlaylist.add(TestUtils.createMediaItem(R.raw.video_desks));\n  testPlaylist.add(TestUtils.createMediaItem(R.raw.video_not_seekable));\n  int testRewindIncrementMs=100;\n  int testFastForwardIncrementMs=100;\n  try (MediaSession session=createMediaSession(sessionPlayerConnector,new SessionCallbackBuilder(context,sessionPlayerConnector).setRatingCallback((mediaSession,controller,mediaId,rating) -> SessionResult.RESULT_ERROR_BAD_VALUE).setRewindIncrementMs(testRewindIncrementMs).setFastForwardIncrementMs(testFastForwardIncrementMs).setMediaItemProvider(new SessionCallbackBuilder.MediaIdMediaItemProvider()).build())){\n    assertPlayerResultSuccess(sessionPlayerConnector.setPlaylist(testPlaylist,null));\n    assertPlayerResultSuccess(sessionPlayerConnector.prepare());\n    OnConnectedListener connectedListener=(controller,allowedCommands) -> {\n      List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n      assertAllowedCommands(allowedCommandCodes,allowedCommands);\n      List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n      assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n    }\n;\n    CountDownLatch allowedCommandChangedLatch=new CountDownLatch(1);\n    OnAllowedCommandsChangedListener allowedCommandChangedListener=(controller,allowedCommands) -> {\n      List<Integer> allowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM);\n      assertAllowedCommands(allowedCommandCodes,allowedCommands);\n      List<Integer> disallowedCommandCodes=Arrays.asList(SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM,SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO,SessionCommand.COMMAND_CODE_SESSION_REWIND,SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD);\n      assertDisallowedCommands(disallowedCommandCodes,allowedCommands);\n      allowedCommandChangedLatch.countDown();\n    }\n;\n    try (MediaController controller=createConnectedController(session,connectedListener,allowedCommandChangedListener)){\n      assertPlayerResultSuccess(sessionPlayerConnector.skipToNextPlaylistItem());\n      assertThat(allowedCommandChangedLatch.await(CONTROLLER_COMMAND_WAIT_TIME_MS,MILLISECONDS)).isTrue();\n      assertSessionResultFailure(controller.rewind());\n      assertThat(sessionPlayerConnector.getCurrentPosition()).isEqualTo(0);\n      assertThat(controller.getCurrentPosition()).isEqualTo(0);\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 294,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 203,
        "startColumnNumber" : 10,
        "endLineNumber" : 203,
        "endColumnNumber" : 94
      },
      "nodeContext" : "createConnectedController(session,connectedListener,allowedCommandChangedListener)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.ext.media2.SessionCallbackBuilderTest.OnAllowedCommandsChangedListener"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 203,
    "startColumnNumber" : 64,
    "endLineNumber" : 203,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}