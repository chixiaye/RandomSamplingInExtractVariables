{
  "id" : 271,
  "expression" : "size",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultisetSetCountTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "size",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 8,
      "endLineNumber" : 74,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertEquals(\"multiset.size() should be the sum of the counts of all entries\",size,getMultiset().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertEquals(\"multiset.size() should be the sum of the counts of all entries\",size,getMultiset().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 60,
        "startColumnNumber" : 52,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  setCountCheckReturnValue(element,count);\n  assertEquals(\"multiset.count() should return the value passed to setCount()\",count,getMultiset().count(element));\n  int size=0;\n  for (  Multiset.Entry<E> entry : getMultiset().entrySet()) {\n    size+=entry.getCount();\n  }\n  assertEquals(\"multiset.size() should be the sum of the counts of all entries\",size,getMultiset().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void assertSetCount(E element,int count){\n  setCountCheckReturnValue(element,count);\n  assertEquals(\"multiset.count() should return the value passed to setCount()\",count,getMultiset().count(element));\n  int size=0;\n  for (  Multiset.Entry<E> entry : getMultiset().entrySet()) {\n    size+=entry.getCount();\n  }\n  assertEquals(\"multiset.size() should be the sum of the counts of all entries\",size,getMultiset().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertEquals(\"multiset.size() should be the sum of the counts of all entries\",size,getMultiset().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 8,
    "endLineNumber" : 74,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ ]
}