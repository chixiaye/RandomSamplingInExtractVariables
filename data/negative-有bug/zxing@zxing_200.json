{
  "id" : 200,
  "expression" : "numAdded",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/oned/OneDimensionalCodeWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numAdded",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 149,
      "startColumnNumber" : 11,
      "endLineNumber" : 149,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return numAdded;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 139,
        "startColumnNumber" : 99,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean color=startColor;\n  int numAdded=0;\n  for (  int len : pattern) {\n    for (int j=0; j < len; j++) {\n      target[pos++]=color;\n    }\n    numAdded+=len;\n    color=!color;\n  }\n  return numAdded;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param target encode black/white pattern into this array\n * @param pos position to start encoding at in {@code target}\n * @param pattern lengths of black/white runs to encode\n * @param startColor starting color - false for white, true for black\n * @return the number of elements added to target.\n */\nprotected static int appendPattern(boolean[] target,int pos,int[] pattern,boolean startColor){\n  boolean color=startColor;\n  int numAdded=0;\n  for (  int len : pattern) {\n    for (int j=0; j < len; j++) {\n      target[pos++]=color;\n    }\n    numAdded+=len;\n    color=!color;\n  }\n  return numAdded;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return numAdded;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 149,
    "startColumnNumber" : 11,
    "endLineNumber" : 149,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}