{
  "id" : 334,
  "expression" : "(BinaryMessage)message",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-websocket/src/main/java/org/springframework/web/socket/handler/AbstractWebSocketHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(BinaryMessage)message",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 46,
      "startColumnNumber" : 32,
      "endLineNumber" : 46,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 46,
        "endColumnNumber" : 56
      },
      "nodeContext" : "handleBinaryMessage(session,(BinaryMessage)message)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 46,
        "endColumnNumber" : 57
      },
      "nodeContext" : "handleBinaryMessage(session,(BinaryMessage)message);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 45,
        "startColumnNumber" : 45,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  handleBinaryMessage(session,(BinaryMessage)message);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 45,
        "startColumnNumber" : 7,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (message instanceof BinaryMessage) {\n  handleBinaryMessage(session,(BinaryMessage)message);\n}\n else if (message instanceof PongMessage) {\n  handlePongMessage(session,(PongMessage)message);\n}\n else {\n  throw new IllegalStateException(\"Unexpected WebSocket message type: \" + message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (message instanceof TextMessage) {\n  handleTextMessage(session,(TextMessage)message);\n}\n else if (message instanceof BinaryMessage) {\n  handleBinaryMessage(session,(BinaryMessage)message);\n}\n else if (message instanceof PongMessage) {\n  handlePongMessage(session,(PongMessage)message);\n}\n else {\n  throw new IllegalStateException(\"Unexpected WebSocket message type: \" + message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 41,
        "startColumnNumber" : 99,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (message instanceof TextMessage) {\n    handleTextMessage(session,(TextMessage)message);\n  }\n else   if (message instanceof BinaryMessage) {\n    handleBinaryMessage(session,(BinaryMessage)message);\n  }\n else   if (message instanceof PongMessage) {\n    handlePongMessage(session,(PongMessage)message);\n  }\n else {\n    throw new IllegalStateException(\"Unexpected WebSocket message type: \" + message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void handleMessage(WebSocketSession session,WebSocketMessage<?> message) throws Exception {\n  if (message instanceof TextMessage) {\n    handleTextMessage(session,(TextMessage)message);\n  }\n else   if (message instanceof BinaryMessage) {\n    handleBinaryMessage(session,(BinaryMessage)message);\n  }\n else   if (message instanceof PongMessage) {\n    handlePongMessage(session,(PongMessage)message);\n  }\n else {\n    throw new IllegalStateException(\"Unexpected WebSocket message type: \" + message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 46,
        "endColumnNumber" : 57
      },
      "nodeContext" : "handleBinaryMessage(session,(BinaryMessage)message);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.springframework.web.socket.BinaryMessage"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 46,
    "startColumnNumber" : 32,
    "endLineNumber" : 46,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}