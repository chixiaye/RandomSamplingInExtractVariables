{
  "id" : 347,
  "expression" : "2",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 243,
      "startColumnNumber" : 46,
      "endLineNumber" : 243,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 243,
        "startColumnNumber" : 26,
        "endLineNumber" : 243,
        "endColumnNumber" : 47
      },
      "nodeContext" : "nameValue.size() == 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 243,
        "startColumnNumber" : 12,
        "endLineNumber" : 243,
        "endColumnNumber" : 91
      },
      "nodeContext" : "checkArgument(nameValue.size() == 2,\"Resource estimate: %s\",resourceEstimate)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 243,
        "startColumnNumber" : 12,
        "endLineNumber" : 243,
        "endColumnNumber" : 92
      },
      "nodeContext" : "checkArgument(nameValue.size() == 2,\"Resource estimate: %s\",resourceEstimate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> nameValue=NAME_VALUE_SPLITTER.splitToList(resourceEstimate);\n  checkArgument(nameValue.size() == 2,\"Resource estimate: %s\",resourceEstimate);\n  this.resource=nameValue.get(0);\n  this.estimate=nameValue.get(1);\n  checkArgument(!resource.isEmpty(),\"Resource name is empty\");\n  checkArgument(!estimate.isEmpty(),\"Resource estimate is empty\");\n  checkArgument(PRINTABLE_ASCII.matchesAllOf(resource),\"Resource contains spaces or is not US_ASCII: %s\",resource);\n  checkArgument(resource.indexOf('=') < 0,\"Resource must not contain '=': %s\",resource);\n  checkArgument(PRINTABLE_ASCII.matchesAllOf(estimate),\"Resource estimate contains spaces or is not US_ASCII: %s\",resource);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 240,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public ClientResourceEstimate(String resourceEstimate){\n  List<String> nameValue=NAME_VALUE_SPLITTER.splitToList(resourceEstimate);\n  checkArgument(nameValue.size() == 2,\"Resource estimate: %s\",resourceEstimate);\n  this.resource=nameValue.get(0);\n  this.estimate=nameValue.get(1);\n  checkArgument(!resource.isEmpty(),\"Resource name is empty\");\n  checkArgument(!estimate.isEmpty(),\"Resource estimate is empty\");\n  checkArgument(PRINTABLE_ASCII.matchesAllOf(resource),\"Resource contains spaces or is not US_ASCII: %s\",resource);\n  checkArgument(resource.indexOf('=') < 0,\"Resource must not contain '=': %s\",resource);\n  checkArgument(PRINTABLE_ASCII.matchesAllOf(estimate),\"Resource estimate contains spaces or is not US_ASCII: %s\",resource);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 243,
        "startColumnNumber" : 12,
        "endLineNumber" : 243,
        "endColumnNumber" : 92
      },
      "nodeContext" : "checkArgument(nameValue.size() == 2,\"Resource estimate: %s\",resourceEstimate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 243,
    "startColumnNumber" : 46,
    "endLineNumber" : 243,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}