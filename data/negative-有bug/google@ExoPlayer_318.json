{
  "id" : 318,
  "expression" : "ffmpegReset(nativeContext,extraData)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ffmpegReset(nativeContext,extraData)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 103,
      "startColumnNumber" : 22,
      "endLineNumber" : 103,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 59
      },
      "nodeContext" : "nativeContext=ffmpegReset(nativeContext,extraData)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 60
      },
      "nodeContext" : "nativeContext=ffmpegReset(nativeContext,extraData);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 102,
        "startColumnNumber" : 15,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nativeContext=ffmpegReset(nativeContext,extraData);\n  if (nativeContext == 0) {\n    return new FfmpegDecoderException(\"Error resetting (see logcat).\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (reset) {\n  nativeContext=ffmpegReset(nativeContext,extraData);\n  if (nativeContext == 0) {\n    return new FfmpegDecoderException(\"Error resetting (see logcat).\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1860,
        "startLineNumber" : 101,
        "startColumnNumber" : 93,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (reset) {\n    nativeContext=ffmpegReset(nativeContext,extraData);\n    if (nativeContext == 0) {\n      return new FfmpegDecoderException(\"Error resetting (see logcat).\");\n    }\n  }\n  ByteBuffer inputData=Util.castNonNull(inputBuffer.data);\n  int inputSize=inputData.limit();\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,outputBufferSize);\n  int result=ffmpegDecode(nativeContext,inputData,inputSize,outputData,outputBufferSize);\n  if (result == AUDIO_DECODER_ERROR_OTHER) {\n    return new FfmpegDecoderException(\"Error decoding (see logcat).\");\n  }\n else   if (result == AUDIO_DECODER_ERROR_INVALID_DATA) {\n    outputBuffer.setFlags(C.BUFFER_FLAG_DECODE_ONLY);\n    return null;\n  }\n else   if (result == 0) {\n    outputBuffer.setFlags(C.BUFFER_FLAG_DECODE_ONLY);\n    return null;\n  }\n  if (!hasOutputFormat) {\n    channelCount=ffmpegGetChannelCount(nativeContext);\n    sampleRate=ffmpegGetSampleRate(nativeContext);\n    if (sampleRate == 0 && \"alac\".equals(codecName)) {\n      Assertions.checkNotNull(extraData);\n      ParsableByteArray parsableExtraData=new ParsableByteArray(extraData);\n      parsableExtraData.setPosition(extraData.length - 4);\n      sampleRate=parsableExtraData.readUnsignedIntToInt();\n    }\n    hasOutputFormat=true;\n  }\n  outputData.position(0);\n  outputData.limit(result);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2018,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable protected FfmpegDecoderException decode(DecoderInputBuffer inputBuffer,SimpleDecoderOutputBuffer outputBuffer,boolean reset){\n  if (reset) {\n    nativeContext=ffmpegReset(nativeContext,extraData);\n    if (nativeContext == 0) {\n      return new FfmpegDecoderException(\"Error resetting (see logcat).\");\n    }\n  }\n  ByteBuffer inputData=Util.castNonNull(inputBuffer.data);\n  int inputSize=inputData.limit();\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,outputBufferSize);\n  int result=ffmpegDecode(nativeContext,inputData,inputSize,outputData,outputBufferSize);\n  if (result == AUDIO_DECODER_ERROR_OTHER) {\n    return new FfmpegDecoderException(\"Error decoding (see logcat).\");\n  }\n else   if (result == AUDIO_DECODER_ERROR_INVALID_DATA) {\n    outputBuffer.setFlags(C.BUFFER_FLAG_DECODE_ONLY);\n    return null;\n  }\n else   if (result == 0) {\n    outputBuffer.setFlags(C.BUFFER_FLAG_DECODE_ONLY);\n    return null;\n  }\n  if (!hasOutputFormat) {\n    channelCount=ffmpegGetChannelCount(nativeContext);\n    sampleRate=ffmpegGetSampleRate(nativeContext);\n    if (sampleRate == 0 && \"alac\".equals(codecName)) {\n      Assertions.checkNotNull(extraData);\n      ParsableByteArray parsableExtraData=new ParsableByteArray(extraData);\n      parsableExtraData.setPosition(extraData.length - 4);\n      sampleRate=parsableExtraData.readUnsignedIntToInt();\n    }\n    hasOutputFormat=true;\n  }\n  outputData.position(0);\n  outputData.limit(result);\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 60
      },
      "nodeContext" : "nativeContext=ffmpegReset(nativeContext,extraData);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 103,
    "startColumnNumber" : 22,
    "endLineNumber" : 103,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}