{
  "id" : 208,
  "expression" : "\"Size must be > 0\"",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/parsetools/impl/RecordParserImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Size must be > 0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 106,
      "startColumnNumber" : 32,
      "endLineNumber" : 106,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Arguments.require(size > 0,\"Size must be > 0\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Arguments.require(size > 0,\"Size must be > 0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 105,
        "startColumnNumber" : 72,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arguments.require(size > 0,\"Size must be > 0\");\n  RecordParserImpl ls=new RecordParserImpl(output);\n  ls.fixedSizeMode(size);\n  return ls;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a new  {@code RecordParser} instance, initially in fixed size mode, and where the record size is specifiedby the  {@code size} parameter.<p> {@code output} Will receive whole records which have been parsed.\n * @param size  the initial record size\n * @param output  handler that will receive the output\n */\npublic static RecordParser newFixed(int size,Handler<Buffer> output){\n  Arguments.require(size > 0,\"Size must be > 0\");\n  RecordParserImpl ls=new RecordParserImpl(output);\n  ls.fixedSizeMode(size);\n  return ls;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Arguments.require(size > 0,\"Size must be > 0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 106,
    "startColumnNumber" : 32,
    "endLineNumber" : 106,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}