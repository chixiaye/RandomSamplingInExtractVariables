{
  "id" : 213,
  "expression" : "Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\"))",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/raft/src/test/java/org/apache/kafka/snapshot/SnapshotsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 63,
      "startLineNumber" : 94,
      "startColumnNumber" : 39,
      "endLineNumber" : 94,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 103
      },
      "nodeContext" : "assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 104
      },
      "nodeContext" : "assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 86,
        "startColumnNumber" : 47,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path root=FileSystems.getDefault().getPath(\"/\");\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.log\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.snapshot\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.index\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"leader-epoch-checkpoint\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"partition.metadata\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvalidSnapshotFilenames(){\n  Path root=FileSystems.getDefault().getPath(\"/\");\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.log\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.snapshot\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.index\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"leader-epoch-checkpoint\")));\n  assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"partition.metadata\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 104
      },
      "nodeContext" : "assertEquals(Optional.empty(),Snapshots.parse(root.resolve(\"00000000000000000000.timeindex\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.util.Optional<org.apache.kafka.snapshot.SnapshotPath>"
  } ],
  "positionList" : [ {
    "charLength" : 63,
    "startLineNumber" : 94,
    "startColumnNumber" : 39,
    "endLineNumber" : 94,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}