{
  "id" : 358,
  "expression" : "2",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/java/util/emitter/core/BaseHttpEmittingConfig.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 71,
      "startColumnNumber" : 21,
      "endLineNumber" : 71,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 22
      },
      "nodeContext" : "queueLimit < 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (queueLimit < 2) {\n  queueLimit=2;\n  batchSize=memoryLimit / queueLimit;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long memoryLimit=maxMemory / 10;\n  long batchSize=5 * 1024 * 1024;\n  long queueLimit=50;\n  if (batchSize * queueLimit > memoryLimit) {\n    queueLimit=memoryLimit / batchSize;\n  }\n  if (queueLimit < 2) {\n    queueLimit=2;\n    batchSize=memoryLimit / queueLimit;\n  }\n  return new Pair<>((int)batchSize,(int)queueLimit);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Pair<Integer,Integer> getDefaultBatchSizeAndLimit(long maxMemory){\n  long memoryLimit=maxMemory / 10;\n  long batchSize=5 * 1024 * 1024;\n  long queueLimit=50;\n  if (batchSize * queueLimit > memoryLimit) {\n    queueLimit=memoryLimit / batchSize;\n  }\n  if (queueLimit < 2) {\n    queueLimit=2;\n    batchSize=memoryLimit / queueLimit;\n  }\n  return new Pair<>((int)batchSize,(int)queueLimit);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 22
      },
      "nodeContext" : "queueLimit < 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 20
      },
      "nodeContext" : "queueLimit=2",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 21
      },
      "nodeContext" : "queueLimit=2;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  queueLimit=2;\n  batchSize=memoryLimit / queueLimit;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (queueLimit < 2) {\n  queueLimit=2;\n  batchSize=memoryLimit / queueLimit;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long memoryLimit=maxMemory / 10;\n  long batchSize=5 * 1024 * 1024;\n  long queueLimit=50;\n  if (batchSize * queueLimit > memoryLimit) {\n    queueLimit=memoryLimit / batchSize;\n  }\n  if (queueLimit < 2) {\n    queueLimit=2;\n    batchSize=memoryLimit / queueLimit;\n  }\n  return new Pair<>((int)batchSize,(int)queueLimit);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Pair<Integer,Integer> getDefaultBatchSizeAndLimit(long maxMemory){\n  long memoryLimit=maxMemory / 10;\n  long batchSize=5 * 1024 * 1024;\n  long queueLimit=50;\n  if (batchSize * queueLimit > memoryLimit) {\n    queueLimit=memoryLimit / batchSize;\n  }\n  if (queueLimit < 2) {\n    queueLimit=2;\n    batchSize=memoryLimit / queueLimit;\n  }\n  return new Pair<>((int)batchSize,(int)queueLimit);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 21
      },
      "nodeContext" : "queueLimit=2;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 71,
    "startColumnNumber" : 21,
    "endLineNumber" : 71,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}