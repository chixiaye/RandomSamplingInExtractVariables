{
  "id" : 108,
  "expression" : "bytes",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/types/parser/SqlTimestampParser.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 37,
      "startColumnNumber" : 44,
      "endLineNumber" : 37,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 37,
        "startColumnNumber" : 27,
        "endLineNumber" : 37,
        "endColumnNumber" : 78
      },
      "nodeContext" : "nextStringEndPos(bytes,startPos,limit,delimiter)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 37,
        "startColumnNumber" : 18,
        "endLineNumber" : 37,
        "endColumnNumber" : 78
      },
      "nodeContext" : "endPos=nextStringEndPos(bytes,startPos,limit,delimiter)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 79
      },
      "nodeContext" : "final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 36,
        "startColumnNumber" : 89,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int parseField(byte[] bytes,int startPos,int limit,byte[] delimiter,Timestamp reusable){\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 79
      },
      "nodeContext" : "final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 43,
      "startColumnNumber" : 43,
      "endLineNumber" : 43,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 43,
        "startColumnNumber" : 43,
        "endLineNumber" : 43,
        "endColumnNumber" : 58
      },
      "nodeContext" : "bytes[startPos]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Character.isWhitespace(bytes[startPos])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 44,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 43,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n  setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 36,
        "startColumnNumber" : 89,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int parseField(byte[] bytes,int startPos,int limit,byte[] delimiter,Timestamp reusable){\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Character.isWhitespace(bytes[startPos])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 44,
      "startColumnNumber" : 50,
      "endLineNumber" : 44,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 44,
        "startColumnNumber" : 50,
        "endLineNumber" : 44,
        "endColumnNumber" : 69
      },
      "nodeContext" : "bytes[(endPos - 1)]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 44,
        "startColumnNumber" : 27,
        "endLineNumber" : 44,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Character.isWhitespace(bytes[(endPos - 1)])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 44,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 43,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n  setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 36,
        "startColumnNumber" : 89,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int parseField(byte[] bytes,int startPos,int limit,byte[] delimiter,Timestamp reusable){\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 44,
        "startColumnNumber" : 27,
        "endLineNumber" : 44,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Character.isWhitespace(bytes[(endPos - 1)])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 27,
      "endLineNumber" : 50,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 36,
        "startColumnNumber" : 89,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int parseField(byte[] bytes,int startPos,int limit,byte[] delimiter,Timestamp reusable){\n  final int endPos=nextStringEndPos(bytes,startPos,limit,delimiter);\n  if (endPos < 0) {\n    return -1;\n  }\n  if (endPos > startPos && (Character.isWhitespace(bytes[startPos]) || Character.isWhitespace(bytes[(endPos - 1)]))) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);\n    return -1;\n  }\n  String str=new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET);\n  try {\n    this.result=Timestamp.valueOf(str);\n    return (endPos == limit) ? limit : endPos + delimiter.length;\n  }\n catch (  IllegalArgumentException e) {\n    setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);\n    return -1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new String(bytes,startPos,endPos - startPos,ConfigConstants.DEFAULT_CHARSET)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 37,
    "startColumnNumber" : 44,
    "endLineNumber" : 37,
    "endColumnNumber" : 49
  }, {
    "charLength" : 5,
    "startLineNumber" : 43,
    "startColumnNumber" : 43,
    "endLineNumber" : 43,
    "endColumnNumber" : 48
  }, {
    "charLength" : 5,
    "startLineNumber" : 44,
    "startColumnNumber" : 50,
    "endLineNumber" : 44,
    "endColumnNumber" : 55
  }, {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 27,
    "endLineNumber" : 50,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}