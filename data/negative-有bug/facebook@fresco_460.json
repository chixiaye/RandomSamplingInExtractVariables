{
  "id" : 460,
  "expression" : "mBitmapMemoryCacheKey2",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/MultiplexProducerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mBitmapMemoryCacheKey2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 140,
      "startColumnNumber" : 20,
      "endLineNumber" : 140,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 43
      },
      "nodeContext" : "when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest2,mCallerContext)).thenReturn(mBitmapMemoryCacheKey2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 44
      },
      "nodeContext" : "when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest2,mCallerContext)).thenReturn(mBitmapMemoryCacheKey2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2970,
        "startLineNumber" : 84,
        "startColumnNumber" : 22,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MockitoAnnotations.initMocks(this);\n  mMultiplexProducer=new BitmapMemoryCacheKeyMultiplexProducer(mCacheKeyFactory,mInputProducer);\n  mImageRequest1=mock(ImageRequest.class);\n  mImageRequest2=mock(ImageRequest.class);\n  mProducerContext1=new SettableProducerContext(mImageRequest1,\"id1\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mProducerContext2=new SettableProducerContext(mImageRequest1,\"id2\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mProducerContext3=new SettableProducerContext(mImageRequest2,\"id3\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mBitmapMemoryCacheKey1=mock(BitmapMemoryCacheKey.class);\n  mBitmapMemoryCacheKey2=mock(BitmapMemoryCacheKey.class);\n  mConsumer1=mock(Consumer.class);\n  mConsumer2=mock(Consumer.class);\n  mConsumer3=mock(Consumer.class);\n  mFinalCloseableImage1=mock(CloseableImage.class);\n  mFinalCloseableImage2=mock(CloseableImage.class);\n  mIntermediateCloseableImage1=mock(CloseableImage.class);\n  mIntermediateCloseableImage2=mock(CloseableImage.class);\n  mFinalImageReference1=CloseableReference.of(mFinalCloseableImage1);\n  mFinalImageReference2=CloseableReference.of(mFinalCloseableImage2);\n  mIntermediateImageReference1=CloseableReference.of(mIntermediateCloseableImage1);\n  mIntermediateImageReference2=CloseableReference.of(mIntermediateCloseableImage2);\n  when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest1,mCallerContext)).thenReturn(mBitmapMemoryCacheKey1);\n  when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest2,mCallerContext)).thenReturn(mBitmapMemoryCacheKey2);\n  doAnswer(new Answer(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      if (mForwardingConsumer1 == null) {\n        mForwardingConsumer1=(Consumer)invocation.getArguments()[0];\n        mMultiplexedContext1=(BaseProducerContext)invocation.getArguments()[1];\n      }\n else {\n        mForwardingConsumer2=(Consumer)invocation.getArguments()[0];\n        mMultiplexedContext2=(BaseProducerContext)invocation.getArguments()[1];\n      }\n      return null;\n    }\n  }\n).when(mInputProducer).produceResults(any(Consumer.class),any(ProducerContext.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3000,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp(){\n  MockitoAnnotations.initMocks(this);\n  mMultiplexProducer=new BitmapMemoryCacheKeyMultiplexProducer(mCacheKeyFactory,mInputProducer);\n  mImageRequest1=mock(ImageRequest.class);\n  mImageRequest2=mock(ImageRequest.class);\n  mProducerContext1=new SettableProducerContext(mImageRequest1,\"id1\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mProducerContext2=new SettableProducerContext(mImageRequest1,\"id2\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mProducerContext3=new SettableProducerContext(mImageRequest2,\"id3\",mProducerListener,mCallerContext,ImageRequest.RequestLevel.FULL_FETCH,false,true,Priority.MEDIUM,mConfig);\n  mBitmapMemoryCacheKey1=mock(BitmapMemoryCacheKey.class);\n  mBitmapMemoryCacheKey2=mock(BitmapMemoryCacheKey.class);\n  mConsumer1=mock(Consumer.class);\n  mConsumer2=mock(Consumer.class);\n  mConsumer3=mock(Consumer.class);\n  mFinalCloseableImage1=mock(CloseableImage.class);\n  mFinalCloseableImage2=mock(CloseableImage.class);\n  mIntermediateCloseableImage1=mock(CloseableImage.class);\n  mIntermediateCloseableImage2=mock(CloseableImage.class);\n  mFinalImageReference1=CloseableReference.of(mFinalCloseableImage1);\n  mFinalImageReference2=CloseableReference.of(mFinalCloseableImage2);\n  mIntermediateImageReference1=CloseableReference.of(mIntermediateCloseableImage1);\n  mIntermediateImageReference2=CloseableReference.of(mIntermediateCloseableImage2);\n  when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest1,mCallerContext)).thenReturn(mBitmapMemoryCacheKey1);\n  when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest2,mCallerContext)).thenReturn(mBitmapMemoryCacheKey2);\n  doAnswer(new Answer(){\n    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {\n      if (mForwardingConsumer1 == null) {\n        mForwardingConsumer1=(Consumer)invocation.getArguments()[0];\n        mMultiplexedContext1=(BaseProducerContext)invocation.getArguments()[1];\n      }\n else {\n        mForwardingConsumer2=(Consumer)invocation.getArguments()[0];\n        mMultiplexedContext2=(BaseProducerContext)invocation.getArguments()[1];\n      }\n      return null;\n    }\n  }\n).when(mInputProducer).produceResults(any(Consumer.class),any(ProducerContext.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 43
      },
      "nodeContext" : "when(mCacheKeyFactory.getBitmapCacheKey(mImageRequest2,mCallerContext)).thenReturn(mBitmapMemoryCacheKey2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.imagepipeline.cache.BitmapMemoryCacheKey"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 140,
    "startColumnNumber" : 20,
    "endLineNumber" : 140,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}