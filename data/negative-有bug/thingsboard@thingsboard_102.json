{
  "id" : 102,
  "expression" : "listListenableFuture",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/action/TbCreateRelationNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "listListenableFuture",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 115,
      "startColumnNumber" : 38,
      "endLineNumber" : 115,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 124,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Futures.transformAsync(listListenableFuture,entityRelations -> {\n  if (!entityRelations.isEmpty()) {\n    List<ListenableFuture<Boolean>> list=new ArrayList<>();\n    for (    EntityRelation relation : entityRelations) {\n      list.add(ctx.getRelationService().deleteRelationAsync(ctx.getTenantId(),relation));\n    }\n    return Futures.transform(Futures.allAsList(list),result -> false,ctx.getDbCallbackExecutor());\n  }\n  return Futures.immediateFuture(false);\n}\n,ctx.getDbCallbackExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 72,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return Futures.transformAsync(listListenableFuture,entityRelations -> {\n  if (!entityRelations.isEmpty()) {\n    List<ListenableFuture<Boolean>> list=new ArrayList<>();\n    for (    EntityRelation relation : entityRelations) {\n      list.add(ctx.getRelationService().deleteRelationAsync(ctx.getTenantId(),relation));\n    }\n    return Futures.transform(Futures.allAsList(list),result -> false,ctx.getDbCallbackExecutor());\n  }\n  return Futures.immediateFuture(false);\n}\n,ctx.getDbCallbackExecutor());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 73,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 114,
        "startColumnNumber" : 137,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Futures.transformAsync(listListenableFuture,entityRelations -> {\n    if (!entityRelations.isEmpty()) {\n      List<ListenableFuture<Boolean>> list=new ArrayList<>();\n      for (      EntityRelation relation : entityRelations) {\n        list.add(ctx.getRelationService().deleteRelationAsync(ctx.getTenantId(),relation));\n      }\n      return Futures.transform(Futures.allAsList(list),result -> false,ctx.getDbCallbackExecutor());\n    }\n    return Futures.immediateFuture(false);\n  }\n,ctx.getDbCallbackExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private ListenableFuture<Boolean> processDeleteRelations(TbContext ctx,ListenableFuture<List<EntityRelation>> listListenableFuture){\n  return Futures.transformAsync(listListenableFuture,entityRelations -> {\n    if (!entityRelations.isEmpty()) {\n      List<ListenableFuture<Boolean>> list=new ArrayList<>();\n      for (      EntityRelation relation : entityRelations) {\n        list.add(ctx.getRelationService().deleteRelationAsync(ctx.getTenantId(),relation));\n      }\n      return Futures.transform(Futures.allAsList(list),result -> false,ctx.getDbCallbackExecutor());\n    }\n    return Futures.immediateFuture(false);\n  }\n,ctx.getDbCallbackExecutor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 124,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Futures.transformAsync(listListenableFuture,entityRelations -> {\n  if (!entityRelations.isEmpty()) {\n    List<ListenableFuture<Boolean>> list=new ArrayList<>();\n    for (    EntityRelation relation : entityRelations) {\n      list.add(ctx.getRelationService().deleteRelationAsync(ctx.getTenantId(),relation));\n    }\n    return Futures.transform(Futures.allAsList(list),result -> false,ctx.getDbCallbackExecutor());\n  }\n  return Futures.immediateFuture(false);\n}\n,ctx.getDbCallbackExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 72,
      "astHeight" : 12
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.rule.engine.action.ListenableFuture<java.util.List<org.thingsboard.server.common.data.relation.EntityRelation>>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 115,
    "startColumnNumber" : 38,
    "endLineNumber" : 115,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}