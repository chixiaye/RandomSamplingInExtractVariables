{
  "id" : 228,
  "expression" : "ctClazz",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-network-auditor-agent/src/main/java/com/netflix/hystrix/contrib/networkauditor/NetworkClassTransform.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ctClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 89,
      "startColumnNumber" : 43,
      "endLineNumber" : 89,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 89,
        "startColumnNumber" : 43,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ctClazz.getConstructors()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 89,
        "startColumnNumber" : 28,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "constructors=ctClazz.getConstructors()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 69
      },
      "nodeContext" : "CtConstructor[] constructors=ctClazz.getConstructors();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CtConstructor[] constructors=ctClazz.getConstructors();\n  for (  CtConstructor constructor : constructors) {\n    try {\n      constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (wrapConstructors) {\n  CtConstructor[] constructors=ctClazz.getConstructors();\n  for (  CtConstructor constructor : constructors) {\n    try {\n      constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 84,
        "startColumnNumber" : 158,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Wrap all signatures of a given method name.\n * @param className\n * @param methodName\n * @throws NotFoundException\n * @throws CannotCompileException\n * @throws IOException\n */\nprivate byte[] wrapClass(String className,boolean wrapConstructors,String... methodNames) throws NotFoundException, IOException, CannotCompileException {\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 69
      },
      "nodeContext" : "CtConstructor[] constructors=ctClazz.getConstructors();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.contrib.networkauditor.CtClass"
  }, {
    "nodeContext" : "ctClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 100,
      "startColumnNumber" : 29,
      "endLineNumber" : 100,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 100,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ctClazz.getDeclaredMethods()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 100,
        "startColumnNumber" : 19,
        "endLineNumber" : 100,
        "endColumnNumber" : 57
      },
      "nodeContext" : "methods=ctClazz.getDeclaredMethods()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 58
      },
      "nodeContext" : "CtMethod[] methods=ctClazz.getDeclaredMethods();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 84,
        "startColumnNumber" : 158,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Wrap all signatures of a given method name.\n * @param className\n * @param methodName\n * @throws NotFoundException\n * @throws CannotCompileException\n * @throws IOException\n */\nprivate byte[] wrapClass(String className,boolean wrapConstructors,String... methodNames) throws NotFoundException, IOException, CannotCompileException {\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 58
      },
      "nodeContext" : "CtMethod[] methods=ctClazz.getDeclaredMethods();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.contrib.networkauditor.CtClass"
  }, {
    "nodeContext" : "ctClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 112,
      "startColumnNumber" : 15,
      "endLineNumber" : 112,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 112,
        "startColumnNumber" : 15,
        "endLineNumber" : 112,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ctClazz.toBytecode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return ctClazz.toBytecode();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 84,
        "startColumnNumber" : 158,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Wrap all signatures of a given method name.\n * @param className\n * @param methodName\n * @throws NotFoundException\n * @throws CannotCompileException\n * @throws IOException\n */\nprivate byte[] wrapClass(String className,boolean wrapConstructors,String... methodNames) throws NotFoundException, IOException, CannotCompileException {\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return ctClazz.toBytecode();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.contrib.networkauditor.CtClass"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 89,
    "startColumnNumber" : 43,
    "endLineNumber" : 89,
    "endColumnNumber" : 50
  }, {
    "charLength" : 7,
    "startLineNumber" : 100,
    "startColumnNumber" : 29,
    "endLineNumber" : 100,
    "endColumnNumber" : 36
  }, {
    "charLength" : 7,
    "startLineNumber" : 112,
    "startColumnNumber" : 15,
    "endLineNumber" : 112,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}