{
  "id" : 335,
  "expression" : "0",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 17,
      "endLineNumber" : 56,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 56,
        "startColumnNumber" : 13,
        "endLineNumber" : 56,
        "endColumnNumber" : 18
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 56,
        "startColumnNumber" : 9,
        "endLineNumber" : 56,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  byte[] pngHeaderWithIhdrChunk=generatePngHeaderWithIhdr(i);\n  runTest(pngHeaderWithIhdrChunk,new ParserTestCase(){\n    @Override public void run(    ImageHeaderParser parser) throws IOException {\n      assertEquals(ImageType.PNG,parser.getType());\n    }\n  }\n);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 55,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < 3; i++) {\n    byte[] pngHeaderWithIhdrChunk=generatePngHeaderWithIhdr(i);\n    runTest(pngHeaderWithIhdrChunk,new ParserTestCase(){\n      @Override public void run(      ImageHeaderParser parser) throws IOException {\n        assertEquals(ImageType.PNG,parser.getType());\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCanParsePngWithoutAlpha() throws IOException {\n  for (int i=0; i < 3; i++) {\n    byte[] pngHeaderWithIhdrChunk=generatePngHeaderWithIhdr(i);\n    runTest(pngHeaderWithIhdrChunk,new ParserTestCase(){\n      @Override public void run(      ImageHeaderParser parser) throws IOException {\n        assertEquals(ImageType.PNG,parser.getType());\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 56,
        "startColumnNumber" : 9,
        "endLineNumber" : 56,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 17,
    "endLineNumber" : 56,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}