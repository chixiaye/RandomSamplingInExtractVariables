{
  "id" : 193,
  "expression" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/math/BigIntegerMathTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 114,
      "startLineNumber" : 681,
      "startColumnNumber" : 4,
      "endLineNumber" : 682,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 683,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 684,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING).roundUnnecessaryShouldThrow()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 685,
        "endColumnNumber" : 15
      },
      "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING).roundUnnecessaryShouldThrow().test()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 685,
        "endColumnNumber" : 16
      },
      "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING).roundUnnecessaryShouldThrow().test();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 679,
        "startColumnNumber" : 44,
        "endLineNumber" : 686,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BigInteger bi=BigInteger.ONE.shiftLeft(2 * Double.MAX_EXPONENT);\n  new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING).roundUnnecessaryShouldThrow().test();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 678,
        "startColumnNumber" : 2,
        "endLineNumber" : 686,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@GwtIncompatible public void testRoundToDouble_wayTooBig(){\n  BigInteger bi=BigInteger.ONE.shiftLeft(2 * Double.MAX_EXPONENT);\n  new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING).roundUnnecessaryShouldThrow().test();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 683,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new RoundToDoubleTester(bi).setExpectation(Double.MAX_VALUE,DOWN,FLOOR,HALF_EVEN,HALF_UP,HALF_DOWN).setExpectation(Double.POSITIVE_INFINITY,UP,CEILING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 14,
    "type" : "com.google.common.math.BigIntegerMathTest.RoundToDoubleTester"
  } ],
  "positionList" : [ {
    "charLength" : 114,
    "startLineNumber" : 681,
    "startColumnNumber" : 4,
    "endLineNumber" : 682,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}