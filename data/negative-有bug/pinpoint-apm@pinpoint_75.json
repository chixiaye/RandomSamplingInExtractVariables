{
  "id" : 75,
  "expression" : "traceId1",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler-test/src/test/java/com/navercorp/pinpoint/test/OrderedSpanRecorderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "traceId1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 112,
      "startColumnNumber" : 58,
      "endLineNumber" : 112,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 112,
        "startColumnNumber" : 37,
        "endLineNumber" : 112,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new DefaultTraceRoot(traceId1,agentId,startTime1,0)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 112,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 91
      },
      "nodeContext" : "traceRoot1=new DefaultTraceRoot(traceId1,agentId,startTime1,0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 92
      },
      "nodeContext" : "final TraceRoot traceRoot1=new DefaultTraceRoot(traceId1,agentId,startTime1,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2429,
        "startLineNumber" : 107,
        "startColumnNumber" : 46,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long startTime1=System.currentTimeMillis();\n  final long spanId=1L;\n  TraceId traceId1=new DefaultTraceId(agentId,startTime1,0,-1L,spanId,(short)0);\n  final TraceRoot traceRoot1=new DefaultTraceRoot(traceId1,agentId,startTime1,0);\n  final long startTime2=startTime1 + 10L;\n  final long spanId2=2L;\n  final TraceId traceId2=new DefaultTraceId(agentId,startTime2,0,-1L,spanId2,(short)0);\n  final TraceRoot traceRoot2=new DefaultTraceRoot(traceId2,agentId,startTime2,0);\n  Span span=createSpan(traceRoot1,startTime1,spanId);\n  SpanEvent event1=createSpanEvent(traceRoot1,0,(short)0);\n  SpanEvent asyncEvent1_1_1=createAsyncSpanEvent(traceRoot1,0,(short)0,1,(short)1);\n  SpanEvent asyncEvent1_1_2=createAsyncSpanEvent(traceRoot1,0,(short)1,1,(short)1);\n  SpanEvent asyncEvent1_2_1=createAsyncSpanEvent(traceRoot1,0,(short)0,1,(short)2);\n  SpanEvent event2=createSpanEvent(traceRoot2,0,(short)1);\n  SpanEvent asyncEvent2_1=createAsyncSpanEvent(traceRoot2,0,(short)0,2,(short)1);\n  SpanEvent asyncEvent2_2=createAsyncSpanEvent(traceRoot2,0,(short)0,2,(short)2);\n  @SuppressWarnings(\"unchecked\") final List<? extends TBase<?,?>> expectedOrder=Arrays.asList(span,event1,event2,asyncEvent1_1_1,asyncEvent1_1_2,asyncEvent1_2_1,asyncEvent2_1,asyncEvent2_2);\n  @SuppressWarnings(\"unchecked\") final List<? extends TBase<?,?>> listToBeHandled=Arrays.asList(span,event1,asyncEvent1_1_1,asyncEvent1_1_2,asyncEvent1_2_1,event2,asyncEvent2_1,asyncEvent2_2);\n  Collections.shuffle(listToBeHandled);\n  for (  TBase<?,?> base : listToBeHandled) {\n    this.recorder.handleSend(base);\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  this.recorder.print(new PrintStream(baos));\n  this.logger.debug(baos.toString());\n  for (  TBase<?,?> expectedBase : expectedOrder) {\n    TBase<?,?> actualBase=this.recorder.pop();\n    assertSame(expectedBase,actualBase);\n  }\n  assertNull(this.recorder.pop());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 343,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultipleAsyncSpanEvents(){\n  final long startTime1=System.currentTimeMillis();\n  final long spanId=1L;\n  TraceId traceId1=new DefaultTraceId(agentId,startTime1,0,-1L,spanId,(short)0);\n  final TraceRoot traceRoot1=new DefaultTraceRoot(traceId1,agentId,startTime1,0);\n  final long startTime2=startTime1 + 10L;\n  final long spanId2=2L;\n  final TraceId traceId2=new DefaultTraceId(agentId,startTime2,0,-1L,spanId2,(short)0);\n  final TraceRoot traceRoot2=new DefaultTraceRoot(traceId2,agentId,startTime2,0);\n  Span span=createSpan(traceRoot1,startTime1,spanId);\n  SpanEvent event1=createSpanEvent(traceRoot1,0,(short)0);\n  SpanEvent asyncEvent1_1_1=createAsyncSpanEvent(traceRoot1,0,(short)0,1,(short)1);\n  SpanEvent asyncEvent1_1_2=createAsyncSpanEvent(traceRoot1,0,(short)1,1,(short)1);\n  SpanEvent asyncEvent1_2_1=createAsyncSpanEvent(traceRoot1,0,(short)0,1,(short)2);\n  SpanEvent event2=createSpanEvent(traceRoot2,0,(short)1);\n  SpanEvent asyncEvent2_1=createAsyncSpanEvent(traceRoot2,0,(short)0,2,(short)1);\n  SpanEvent asyncEvent2_2=createAsyncSpanEvent(traceRoot2,0,(short)0,2,(short)2);\n  @SuppressWarnings(\"unchecked\") final List<? extends TBase<?,?>> expectedOrder=Arrays.asList(span,event1,event2,asyncEvent1_1_1,asyncEvent1_1_2,asyncEvent1_2_1,asyncEvent2_1,asyncEvent2_2);\n  @SuppressWarnings(\"unchecked\") final List<? extends TBase<?,?>> listToBeHandled=Arrays.asList(span,event1,asyncEvent1_1_1,asyncEvent1_1_2,asyncEvent1_2_1,event2,asyncEvent2_1,asyncEvent2_2);\n  Collections.shuffle(listToBeHandled);\n  for (  TBase<?,?> base : listToBeHandled) {\n    this.recorder.handleSend(base);\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  this.recorder.print(new PrintStream(baos));\n  this.logger.debug(baos.toString());\n  for (  TBase<?,?> expectedBase : expectedOrder) {\n    TBase<?,?> actualBase=this.recorder.pop();\n    assertSame(expectedBase,actualBase);\n  }\n  assertNull(this.recorder.pop());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 349,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 92
      },
      "nodeContext" : "final TraceRoot traceRoot1=new DefaultTraceRoot(traceId1,agentId,startTime1,0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.bootstrap.context.TraceId"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 112,
    "startColumnNumber" : 58,
    "endLineNumber" : 112,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}