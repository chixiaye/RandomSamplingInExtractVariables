{
  "id" : 384,
  "expression" : "new IOException(\"the root cause\")",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/RetrieveRegistryCredentialsStepTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IOException(\"the root cause\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 153,
      "startColumnNumber" : 20,
      "endLineNumber" : 153,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Mockito.when(mockNonexistentDockerCredentialHelperException.getCause()).thenReturn(new IOException(\"the root cause\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Mockito.when(mockNonexistentDockerCredentialHelperException.getCause()).thenReturn(new IOException(\"the root cause\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1087,
        "startLineNumber" : 137,
        "startColumnNumber" : 69,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"something.gcr.io\",\"gcr\")).thenReturn(mockDockerCredentialHelper);\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"something.amazonaws.com\",\"ecr-login\")).thenReturn(mockNonexistentDockerCredentialHelper);\n  Assert.assertEquals(mockAuthorization,makeRetrieveRegistryCredentialsStep(\"something.gcr.io\",null,null).call());\n  Mockito.verify(mockBuildLogger).info(\"Using docker-credential-gcr for something.gcr.io\");\n  Mockito.when(mockNonexistentDockerCredentialHelperException.getMessage()).thenReturn(\"warning\");\n  Mockito.when(mockNonexistentDockerCredentialHelperException.getCause()).thenReturn(new IOException(\"the root cause\"));\n  Assert.assertNull(makeRetrieveRegistryCredentialsStep(\"something.amazonaws.com\",null,null).call());\n  Mockito.verify(mockBuildLogger).warn(\"warning\");\n  Mockito.verify(mockBuildLogger).info(\"  Caused by: the root cause\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1216,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCall_inferCommonCredentialHelpers() throws IOException, NonexistentDockerCredentialHelperException {\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"something.gcr.io\",\"gcr\")).thenReturn(mockDockerCredentialHelper);\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"something.amazonaws.com\",\"ecr-login\")).thenReturn(mockNonexistentDockerCredentialHelper);\n  Assert.assertEquals(mockAuthorization,makeRetrieveRegistryCredentialsStep(\"something.gcr.io\",null,null).call());\n  Mockito.verify(mockBuildLogger).info(\"Using docker-credential-gcr for something.gcr.io\");\n  Mockito.when(mockNonexistentDockerCredentialHelperException.getMessage()).thenReturn(\"warning\");\n  Mockito.when(mockNonexistentDockerCredentialHelperException.getCause()).thenReturn(new IOException(\"the root cause\"));\n  Assert.assertNull(makeRetrieveRegistryCredentialsStep(\"something.amazonaws.com\",null,null).call());\n  Mockito.verify(mockBuildLogger).warn(\"warning\");\n  Mockito.verify(mockBuildLogger).info(\"  Caused by: the root cause\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Mockito.when(mockNonexistentDockerCredentialHelperException.getCause()).thenReturn(new IOException(\"the root cause\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 153,
    "startColumnNumber" : 20,
    "endLineNumber" : 153,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}