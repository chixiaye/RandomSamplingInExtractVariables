{
  "id" : 374,
  "expression" : "false",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/mapper/AutoSqlInjector.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 135,
      "startColumnNumber" : 37,
      "endLineNumber" : 135,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this.injectDeleteByIdSql(false,mapperClass,modelClass,table)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 133,
        "startColumnNumber" : 60,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n else {\n  logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 129,
        "startColumnNumber" : 130,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 注入SQL </p>\n * @param builderAssistant\n * @param mapperClass\n * @param modelClass\n * @param table\n */\nprotected void injectSql(MapperBuilderAssistant builderAssistant,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 139,
      "startColumnNumber" : 37,
      "endLineNumber" : 139,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this.injectUpdateByIdSql(false,mapperClass,modelClass,table)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 133,
        "startColumnNumber" : 60,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n else {\n  logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 129,
        "startColumnNumber" : 130,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 注入SQL </p>\n * @param builderAssistant\n * @param mapperClass\n * @param modelClass\n * @param table\n */\nprotected void injectSql(MapperBuilderAssistant builderAssistant,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 141,
      "startColumnNumber" : 37,
      "endLineNumber" : 141,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this.injectSelectByIdSql(false,mapperClass,modelClass,table)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 133,
        "startColumnNumber" : 60,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n  this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n  this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n  this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n  this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n}\n else {\n  logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 129,
        "startColumnNumber" : 130,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 注入SQL </p>\n * @param builderAssistant\n * @param mapperClass\n * @param modelClass\n * @param table\n */\nprotected void injectSql(MapperBuilderAssistant builderAssistant,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 153,
      "startColumnNumber" : 32,
      "endLineNumber" : 153,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 70
      },
      "nodeContext" : "this.injectInsertOneSql(false,mapperClass,modelClass,table)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 71
      },
      "nodeContext" : "this.injectInsertOneSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 129,
        "startColumnNumber" : 130,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 注入SQL </p>\n * @param builderAssistant\n * @param mapperClass\n * @param modelClass\n * @param table\n */\nprotected void injectSql(MapperBuilderAssistant builderAssistant,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    this.injectDeleteByIdSql(false,mapperClass,modelClass,table);\n    this.injectDeleteByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(true,mapperClass,modelClass,table);\n    this.injectUpdateByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(false,mapperClass,modelClass,table);\n    this.injectSelectByIdSql(true,mapperClass,modelClass,table);\n  }\n else {\n    logger.warn(String.format(\"%s ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.\",modelClass.toString()));\n  }\n  this.injectInsertOneSql(true,mapperClass,modelClass,table);\n  this.injectInsertOneSql(false,mapperClass,modelClass,table);\n  this.injectDeleteSql(mapperClass,modelClass,table);\n  this.injectDeleteByMapSql(mapperClass,table);\n  this.injectUpdateSql(mapperClass,modelClass,table);\n  this.injectSelectByMapSql(mapperClass,modelClass,table);\n  this.injectSelectOneSql(mapperClass,modelClass,table);\n  this.injectSelectCountSql(mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_LIST,mapperClass,modelClass,table);\n  this.injectSelectListSql(SqlMethod.SELECT_PAGE,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS,mapperClass,modelClass,table);\n  this.injectSelectMapsSql(SqlMethod.SELECT_MAPS_PAGE,mapperClass,modelClass,table);\n  this.injectSelectObjsSql(SqlMethod.SELECT_OBJS,mapperClass,modelClass,table);\n  this.inject(configuration,builderAssistant,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 71
      },
      "nodeContext" : "this.injectInsertOneSql(false,mapperClass,modelClass,table);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 135,
    "startColumnNumber" : 37,
    "endLineNumber" : 135,
    "endColumnNumber" : 42
  }, {
    "charLength" : 5,
    "startLineNumber" : 139,
    "startColumnNumber" : 37,
    "endLineNumber" : 139,
    "endColumnNumber" : 42
  }, {
    "charLength" : 5,
    "startLineNumber" : 141,
    "startColumnNumber" : 37,
    "endLineNumber" : 141,
    "endColumnNumber" : 42
  }, {
    "charLength" : 5,
    "startLineNumber" : 153,
    "startColumnNumber" : 32,
    "endLineNumber" : 153,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}