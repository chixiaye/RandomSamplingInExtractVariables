{
  "id" : 24,
  "expression" : "\"localhost\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/WebSocketHttpServletRequestWrapperTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"localhost\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 77,
      "startColumnNumber" : 68,
      "endLineNumber" : 77,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"localhost\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"localhost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 67,
        "startColumnNumber" : 51,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  WebSocketProxyConfiguration config=PulsarConfigurationLoader.create(this.getClass().getClassLoader().getResource(\"websocket.conf\").getFile(),WebSocketProxyConfiguration.class);\n  String publicKeyPath=this.getClass().getClassLoader().getResource(\"my-public.key\").getFile();\n  config.getProperties().setProperty(\"tokenPublicKey\",publicKeyPath);\n  WebSocketService service=new WebSocketService(config);\n  service.start();\n  UpgradeHttpServletRequest httpServletRequest=Mockito.mock(UpgradeHttpServletRequest.class);\n  Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"localhost\");\n  Mockito.when(httpServletRequest.getRemotePort()).thenReturn(8080);\n  Mockito.when(httpServletRequest.getParameter(WebSocketHttpServletRequestWrapper.TOKEN)).thenReturn(TOKEN);\n  WebSocketHttpServletRequestWrapper webSocketHttpServletRequestWrapper=new WebSocketHttpServletRequestWrapper(httpServletRequest);\n  Assert.assertEquals(service.getAuthenticationService().authenticateHttpRequest(webSocketHttpServletRequestWrapper),\"test-user\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mockRequestTest() throws Exception {\n  WebSocketProxyConfiguration config=PulsarConfigurationLoader.create(this.getClass().getClassLoader().getResource(\"websocket.conf\").getFile(),WebSocketProxyConfiguration.class);\n  String publicKeyPath=this.getClass().getClassLoader().getResource(\"my-public.key\").getFile();\n  config.getProperties().setProperty(\"tokenPublicKey\",publicKeyPath);\n  WebSocketService service=new WebSocketService(config);\n  service.start();\n  UpgradeHttpServletRequest httpServletRequest=Mockito.mock(UpgradeHttpServletRequest.class);\n  Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"localhost\");\n  Mockito.when(httpServletRequest.getRemotePort()).thenReturn(8080);\n  Mockito.when(httpServletRequest.getParameter(WebSocketHttpServletRequestWrapper.TOKEN)).thenReturn(TOKEN);\n  WebSocketHttpServletRequestWrapper webSocketHttpServletRequestWrapper=new WebSocketHttpServletRequestWrapper(httpServletRequest);\n  Assert.assertEquals(service.getAuthenticationService().authenticateHttpRequest(webSocketHttpServletRequestWrapper),\"test-user\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"localhost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 77,
    "startColumnNumber" : 68,
    "endLineNumber" : 77,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}