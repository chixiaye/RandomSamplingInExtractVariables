{
  "id" : 434,
  "expression" : "EmptyRequestBody.getInstance()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/rest/handler/AbstractHandlerITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "EmptyRequestBody.getInstance()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 110,
      "startColumnNumber" : 28,
      "endLineNumber" : 110,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 110,
        "endColumnNumber" : 59
      },
      "nodeContext" : "restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 104,
        "startColumnNumber" : 49,
        "endLineNumber" : 110,
        "endColumnNumber" : 59
      },
      "nodeContext" : "response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 60
      },
      "nodeContext" : "CompletableFuture<EmptyResponseBody> response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 103,
        "startColumnNumber" : 79,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CompletableFuture<EmptyResponseBody> response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance());\n  try {\n    response.get();\n    fail(\"An ExecutionException was expected here being caused by the OutOfMemoryError.\");\n  }\n catch (  ExecutionException e) {\n    assertThat(e.getMessage(),StringContains.containsString(\"Metaspace. The metaspace out-of-memory error has occurred. \"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (final TestRestServerEndpoint server=TestRestServerEndpoint.builder(REST_BASE_CONFIG).withHandler(messageHeaders,testRestHandler).buildAndStart();final RestClient restClient=createRestClient(server.getServerAddress().getPort())){\n  CompletableFuture<EmptyResponseBody> response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance());\n  try {\n    response.get();\n    fail(\"An ExecutionException was expected here being caused by the OutOfMemoryError.\");\n  }\n catch (  ExecutionException e) {\n    assertThat(e.getMessage(),StringContains.containsString(\"Metaspace. The metaspace out-of-memory error has occurred. \"));\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2026,
        "startLineNumber" : 82,
        "startColumnNumber" : 65,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final TestMessageHeaders<EmptyRequestBody,EmptyResponseBody,EmptyMessageParameters> messageHeaders=TestMessageHeaders.emptyBuilder().setTargetRestEndpointURL(\"/test-handler\").build();\n  final TestRestHandler<RestfulGateway,EmptyRequestBody,EmptyResponseBody,EmptyMessageParameters> testRestHandler=new TestRestHandler<>(mockGatewayRetriever,messageHeaders,FutureUtils.completedExceptionally(new OutOfMemoryError(\"Metaspace\")));\n  try (final TestRestServerEndpoint server=TestRestServerEndpoint.builder(REST_BASE_CONFIG).withHandler(messageHeaders,testRestHandler).buildAndStart();final RestClient restClient=createRestClient(server.getServerAddress().getPort())){\n    CompletableFuture<EmptyResponseBody> response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance());\n    try {\n      response.get();\n      fail(\"An ExecutionException was expected here being caused by the OutOfMemoryError.\");\n    }\n catch (    ExecutionException e) {\n      assertThat(e.getMessage(),StringContains.containsString(\"Metaspace. The metaspace out-of-memory error has occurred. \"));\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOOMErrorMessageEnrichment() throws Exception {\n  final TestMessageHeaders<EmptyRequestBody,EmptyResponseBody,EmptyMessageParameters> messageHeaders=TestMessageHeaders.emptyBuilder().setTargetRestEndpointURL(\"/test-handler\").build();\n  final TestRestHandler<RestfulGateway,EmptyRequestBody,EmptyResponseBody,EmptyMessageParameters> testRestHandler=new TestRestHandler<>(mockGatewayRetriever,messageHeaders,FutureUtils.completedExceptionally(new OutOfMemoryError(\"Metaspace\")));\n  try (final TestRestServerEndpoint server=TestRestServerEndpoint.builder(REST_BASE_CONFIG).withHandler(messageHeaders,testRestHandler).buildAndStart();final RestClient restClient=createRestClient(server.getServerAddress().getPort())){\n    CompletableFuture<EmptyResponseBody> response=restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance());\n    try {\n      response.get();\n      fail(\"An ExecutionException was expected here being caused by the OutOfMemoryError.\");\n    }\n catch (    ExecutionException e) {\n      assertThat(e.getMessage(),StringContains.containsString(\"Metaspace. The metaspace out-of-memory error has occurred. \"));\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 110,
        "endColumnNumber" : 59
      },
      "nodeContext" : "restClient.sendRequest(server.getServerAddress().getHostName(),server.getServerAddress().getPort(),messageHeaders,EmptyMessageParameters.getInstance(),EmptyRequestBody.getInstance())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.flink.runtime.rest.messages.EmptyRequestBody"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 110,
    "startColumnNumber" : 28,
    "endLineNumber" : 110,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}