{
  "id" : 155,
  "expression" : "0",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/upstream/crypto/AesFlushingCipher.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 85,
      "endLineNumber" : 55,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 55,
        "startColumnNumber" : 39,
        "endLineNumber" : 55,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 55,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0])",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 71
      },
      "nodeContext" : "cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 72
      },
      "nodeContext" : "cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n catch (NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 45,
        "startColumnNumber" : 80,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AesFlushingCipher(int mode,byte[] secretKey,long nonce,long offset){\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 55,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0])",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 26,
      "endLineNumber" : 57,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 27
      },
      "nodeContext" : "startPadding != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (startPadding != 0) {\n  updateInPlace(new byte[startPadding],0,startPadding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n catch (NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 45,
        "startColumnNumber" : 80,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AesFlushingCipher(int mode,byte[] secretKey,long nonce,long offset){\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 27
      },
      "nodeContext" : "startPadding != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 46,
      "endLineNumber" : 58,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 62
      },
      "nodeContext" : "updateInPlace(new byte[startPadding],0,startPadding)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 63
      },
      "nodeContext" : "updateInPlace(new byte[startPadding],0,startPadding);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 57,
        "startColumnNumber" : 29,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  updateInPlace(new byte[startPadding],0,startPadding);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (startPadding != 0) {\n  updateInPlace(new byte[startPadding],0,startPadding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n catch (NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 45,
        "startColumnNumber" : 80,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AesFlushingCipher(int mode,byte[] secretKey,long nonce,long offset){\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 63
      },
      "nodeContext" : "updateInPlace(new byte[startPadding],0,startPadding);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 85,
    "endLineNumber" : 55,
    "endColumnNumber" : 86
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 26,
    "endLineNumber" : 57,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 46,
    "endLineNumber" : 58,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}