{
  "id" : 280,
  "expression" : "onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\")",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 115,
      "startLineNumber" : 32,
      "startColumnNumber" : 24,
      "endLineNumber" : 33,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assertions.assertThat(t).has(onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assertions.assertThat(t).has(onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConfigurationAccess.getConfig().overrideCleansStackTrace(false);\n  Throwable t=new TraceBuilder().classes(\"org.test.MockitoSampleTest\",\"org.mockito.Mockito\").toThrowable();\n  filter.filter(t);\n  Assertions.assertThat(t).has(onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldNotFilterWhenConfigurationSaysNo(){\n  ConfigurationAccess.getConfig().overrideCleansStackTrace(false);\n  Throwable t=new TraceBuilder().classes(\"org.test.MockitoSampleTest\",\"org.mockito.Mockito\").toThrowable();\n  filter.filter(t);\n  Assertions.assertThat(t).has(onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assertions.assertThat(t).has(onlyThoseClassesInStackTrace(\"org.mockito.Mockito\",\"org.test.MockitoSampleTest\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "org.mockitoutil.Condition<java.lang.Throwable>"
  } ],
  "positionList" : [ {
    "charLength" : 115,
    "startLineNumber" : 32,
    "startColumnNumber" : 24,
    "endLineNumber" : 33,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}