{
  "id" : 443,
  "expression" : "abs(l2.a)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/Line.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "abs(l2.a)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 95,
      "startColumnNumber" : 15,
      "endLineNumber" : 95,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 95,
        "endColumnNumber" : 30
      },
      "nodeContext" : "abs(l2.a) < EPS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 95,
        "startColumnNumber" : 11,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (abs(l2.a) < EPS) {\n  y=l2.c / l2.b;\n  x=(l1.c - l1.b * y) / l1.a;\n}\n else {\n  x=(l1.c - l2.c) / (l1.a - l2.a);\n  y=(l1.c - l1.a * x) / l1.b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 92,
        "startColumnNumber" : 11,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (abs(l1.a) < EPS) {\n  y=l1.c / l1.b;\n  x=(l2.c - l2.b * y) / l2.a;\n}\n else if (abs(l2.a) < EPS) {\n  y=l2.c / l2.b;\n  x=(l1.c - l1.b * y) / l1.a;\n}\n else {\n  x=(l1.c - l2.c) / (l1.a - l2.a);\n  y=(l1.c - l1.a * x) / l1.b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 89,
        "startColumnNumber" : 11,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (abs(l2.b) < EPS) {\n  x=l2.c / l2.a;\n  y=(l1.c - l1.a * x) / l1.b;\n}\n else if (abs(l1.a) < EPS) {\n  y=l1.c / l1.b;\n  x=(l2.c - l2.b * y) / l2.a;\n}\n else if (abs(l2.a) < EPS) {\n  y=l2.c / l2.b;\n  x=(l1.c - l1.b * y) / l1.a;\n}\n else {\n  x=(l1.c - l2.c) / (l1.a - l2.a);\n  y=(l1.c - l1.a * x) / l1.b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (abs(l1.b) < EPS) {\n  x=l1.c / l1.a;\n  y=(l2.c - l2.a * x) / l2.b;\n}\n else if (abs(l2.b) < EPS) {\n  x=l2.c / l2.a;\n  y=(l1.c - l1.a * x) / l1.b;\n}\n else if (abs(l1.a) < EPS) {\n  y=l1.c / l1.b;\n  x=(l2.c - l2.b * y) / l2.a;\n}\n else if (abs(l2.a) < EPS) {\n  y=l2.c / l2.b;\n  x=(l1.c - l1.b * y) / l1.a;\n}\n else {\n  x=(l1.c - l2.c) / (l1.a - l2.a);\n  y=(l1.c - l1.a * x) / l1.b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 77,
        "startColumnNumber" : 55,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  l1.normalise();\n  l2.normalise();\n  if (abs(l1.a - l2.a) < EPS && abs(l1.b - l2.b) < EPS)   return null;\n  double x=Double.NaN, y=Double.NaN;\n  if (abs(l1.b) < EPS) {\n    x=l1.c / l1.a;\n    y=(l2.c - l2.a * x) / l2.b;\n  }\n else   if (abs(l2.b) < EPS) {\n    x=l2.c / l2.a;\n    y=(l1.c - l1.a * x) / l1.b;\n  }\n else   if (abs(l1.a) < EPS) {\n    y=l1.c / l1.b;\n    x=(l2.c - l2.b * y) / l2.a;\n  }\n else   if (abs(l2.a) < EPS) {\n    y=l2.c / l2.b;\n    x=(l1.c - l1.b * y) / l1.a;\n  }\n else {\n    x=(l1.c - l2.c) / (l1.a - l2.a);\n    y=(l1.c - l1.a * x) / l1.b;\n  }\n  return new Point2D.Double(x,y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Point2D intersection(Line l1,Line l2){\n  l1.normalise();\n  l2.normalise();\n  if (abs(l1.a - l2.a) < EPS && abs(l1.b - l2.b) < EPS)   return null;\n  double x=Double.NaN, y=Double.NaN;\n  if (abs(l1.b) < EPS) {\n    x=l1.c / l1.a;\n    y=(l2.c - l2.a * x) / l2.b;\n  }\n else   if (abs(l2.b) < EPS) {\n    x=l2.c / l2.a;\n    y=(l1.c - l1.a * x) / l1.b;\n  }\n else   if (abs(l1.a) < EPS) {\n    y=l1.c / l1.b;\n    x=(l2.c - l2.b * y) / l2.a;\n  }\n else   if (abs(l2.a) < EPS) {\n    y=l2.c / l2.b;\n    x=(l1.c - l1.b * y) / l1.a;\n  }\n else {\n    x=(l1.c - l2.c) / (l1.a - l2.a);\n    y=(l1.c - l1.a * x) / l1.b;\n  }\n  return new Point2D.Double(x,y);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 251,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 95,
        "endColumnNumber" : 30
      },
      "nodeContext" : "abs(l2.a) < EPS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 95,
    "startColumnNumber" : 15,
    "endLineNumber" : 95,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}