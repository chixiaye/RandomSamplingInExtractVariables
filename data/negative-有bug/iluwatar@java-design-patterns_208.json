{
  "id" : 208,
  "expression" : "expectedSize",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/subclass-sandbox/src/test/java/com/iluwatar/subclasssandbox/GroundDiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 82,
      "startColumnNumber" : 37,
      "endLineNumber" : 82,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertEquals(logs.length,expectedSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Assert.assertEquals(logs.length,expectedSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 70,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.clearLog();\n  var groundDive=new GroundDive();\n  groundDive.activate();\n  var logs=log.getLog().split(\"\\n\");\n  final var expectedSize=3;\n  final var log1=logs[0].split(\"-\")[1].trim() + \" -\" + logs[0].split(\"-\")[2].trim();\n  final var expectedLog1=\"Move to ( 0.0, 0.0, -20.0 )\";\n  final var log2=getLogContent(logs[1]);\n  final var expectedLog2=\"Play GROUNDDIVE_SOUND with volumn 5\";\n  final var log3=getLogContent(logs[2]);\n  final var expectedLog3=\"Spawn 20 particle with type GROUNDDIVE_PARTICLE\";\n  Assert.assertEquals(logs.length,expectedSize);\n  Assert.assertEquals(log1,expectedLog1);\n  Assert.assertEquals(log2,expectedLog2);\n  Assert.assertEquals(log3,expectedLog3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testActivate(){\n  log.clearLog();\n  var groundDive=new GroundDive();\n  groundDive.activate();\n  var logs=log.getLog().split(\"\\n\");\n  final var expectedSize=3;\n  final var log1=logs[0].split(\"-\")[1].trim() + \" -\" + logs[0].split(\"-\")[2].trim();\n  final var expectedLog1=\"Move to ( 0.0, 0.0, -20.0 )\";\n  final var log2=getLogContent(logs[1]);\n  final var expectedLog2=\"Play GROUNDDIVE_SOUND with volumn 5\";\n  final var log3=getLogContent(logs[2]);\n  final var expectedLog3=\"Spawn 20 particle with type GROUNDDIVE_PARTICLE\";\n  Assert.assertEquals(logs.length,expectedSize);\n  Assert.assertEquals(log1,expectedLog1);\n  Assert.assertEquals(log2,expectedLog2);\n  Assert.assertEquals(log3,expectedLog3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Assert.assertEquals(logs.length,expectedSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 82,
    "startColumnNumber" : 37,
    "endLineNumber" : 82,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}