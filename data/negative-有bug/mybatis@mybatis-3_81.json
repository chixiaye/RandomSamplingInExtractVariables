{
  "id" : 81,
  "expression" : "(Object[])array",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/executor/ResultExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Object[])array",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 54,
      "startColumnNumber" : 29,
      "endLineNumber" : 54,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 45
      },
      "nodeContext" : "list.toArray((Object[])array)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 45
      },
      "nodeContext" : "value=list.toArray((Object[])array)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "value=list.toArray((Object[])array);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 53,
        "startColumnNumber" : 13,
        "endLineNumber" : 55,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  value=list.toArray((Object[])array);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 55,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (arrayComponentType.isPrimitive()) {\n  for (int i=0; i < list.size(); i++) {\n    Array.set(array,i,list.get(i));\n  }\n  value=array;\n}\n else {\n  value=list.toArray((Object[])array);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 45,
        "startColumnNumber" : 59,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> arrayComponentType=targetType.getComponentType();\n  Object array=Array.newInstance(arrayComponentType,list.size());\n  if (arrayComponentType.isPrimitive()) {\n    for (int i=0; i < list.size(); i++) {\n      Array.set(array,i,list.get(i));\n    }\n    value=array;\n  }\n else {\n    value=list.toArray((Object[])array);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 45,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (targetType != null && targetType.isArray()) {\n  Class<?> arrayComponentType=targetType.getComponentType();\n  Object array=Array.newInstance(arrayComponentType,list.size());\n  if (arrayComponentType.isPrimitive()) {\n    for (int i=0; i < list.size(); i++) {\n      Array.set(array,i,list.get(i));\n    }\n    value=array;\n  }\n else {\n    value=list.toArray((Object[])array);\n  }\n}\n else {\n  if (list != null && list.size() > 1) {\n    throw new ExecutorException(\"Statement returned more than one row, where no more than one was expected.\");\n  }\n else   if (list != null && list.size() == 1) {\n    value=list.get(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 41,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (targetType != null && objectFactory.isCollection(targetType)) {\n  value=objectFactory.create(targetType);\n  MetaObject metaObject=configuration.newMetaObject(value);\n  metaObject.addAll(list);\n}\n else if (targetType != null && targetType.isArray()) {\n  Class<?> arrayComponentType=targetType.getComponentType();\n  Object array=Array.newInstance(arrayComponentType,list.size());\n  if (arrayComponentType.isPrimitive()) {\n    for (int i=0; i < list.size(); i++) {\n      Array.set(array,i,list.get(i));\n    }\n    value=array;\n  }\n else {\n    value=list.toArray((Object[])array);\n  }\n}\n else {\n  if (list != null && list.size() > 1) {\n    throw new ExecutorException(\"Statement returned more than one row, where no more than one was expected.\");\n  }\n else   if (list != null && list.size() == 1) {\n    value=list.get(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (targetType != null && targetType.isAssignableFrom(list.getClass())) {\n  value=list;\n}\n else if (targetType != null && objectFactory.isCollection(targetType)) {\n  value=objectFactory.create(targetType);\n  MetaObject metaObject=configuration.newMetaObject(value);\n  metaObject.addAll(list);\n}\n else if (targetType != null && targetType.isArray()) {\n  Class<?> arrayComponentType=targetType.getComponentType();\n  Object array=Array.newInstance(arrayComponentType,list.size());\n  if (arrayComponentType.isPrimitive()) {\n    for (int i=0; i < list.size(); i++) {\n      Array.set(array,i,list.get(i));\n    }\n    value=array;\n  }\n else {\n    value=list.toArray((Object[])array);\n  }\n}\n else {\n  if (list != null && list.size() > 1) {\n    throw new ExecutorException(\"Statement returned more than one row, where no more than one was expected.\");\n  }\n else   if (list != null && list.size() == 1) {\n    value=list.get(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 37,
        "startColumnNumber" : 78,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Object value=null;\n  if (targetType != null && targetType.isAssignableFrom(list.getClass())) {\n    value=list;\n  }\n else   if (targetType != null && objectFactory.isCollection(targetType)) {\n    value=objectFactory.create(targetType);\n    MetaObject metaObject=configuration.newMetaObject(value);\n    metaObject.addAll(list);\n  }\n else   if (targetType != null && targetType.isArray()) {\n    Class<?> arrayComponentType=targetType.getComponentType();\n    Object array=Array.newInstance(arrayComponentType,list.size());\n    if (arrayComponentType.isPrimitive()) {\n      for (int i=0; i < list.size(); i++) {\n        Array.set(array,i,list.get(i));\n      }\n      value=array;\n    }\n else {\n      value=list.toArray((Object[])array);\n    }\n  }\n else {\n    if (list != null && list.size() > 1) {\n      throw new ExecutorException(\"Statement returned more than one row, where no more than one was expected.\");\n    }\n else     if (list != null && list.size() == 1) {\n      value=list.get(0);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Object extractObjectFromList(List<Object> list,Class<?> targetType){\n  Object value=null;\n  if (targetType != null && targetType.isAssignableFrom(list.getClass())) {\n    value=list;\n  }\n else   if (targetType != null && objectFactory.isCollection(targetType)) {\n    value=objectFactory.create(targetType);\n    MetaObject metaObject=configuration.newMetaObject(value);\n    metaObject.addAll(list);\n  }\n else   if (targetType != null && targetType.isArray()) {\n    Class<?> arrayComponentType=targetType.getComponentType();\n    Object array=Array.newInstance(arrayComponentType,list.size());\n    if (arrayComponentType.isPrimitive()) {\n      for (int i=0; i < list.size(); i++) {\n        Array.set(array,i,list.get(i));\n      }\n      value=array;\n    }\n else {\n      value=list.toArray((Object[])array);\n    }\n  }\n else {\n    if (list != null && list.size() > 1) {\n      throw new ExecutorException(\"Statement returned more than one row, where no more than one was expected.\");\n    }\n else     if (list != null && list.size() == 1) {\n      value=list.get(0);\n    }\n  }\n  return value;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "value=list.toArray((Object[])array);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 54,
    "startColumnNumber" : 29,
    "endLineNumber" : 54,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}