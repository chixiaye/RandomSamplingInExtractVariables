{
  "id" : 458,
  "expression" : "\"Bill\"",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/cli/impl/CLIConfiguratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Bill\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 331,
      "startColumnNumber" : 56,
      "endLineNumber" : 331,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 331,
        "startColumnNumber" : 4,
        "endLineNumber" : 331,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(command.reference.get().first).isEqualTo(\"Bill\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 331,
        "startColumnNumber" : 4,
        "endLineNumber" : 331,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(command.reference.get().first).isEqualTo(\"Bill\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 320,
        "startColumnNumber" : 88,
        "endLineNumber" : 333,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CommandForConvertedValueTest command=new CommandForConvertedValueTest();\n  CLI cli=CLIConfigurator.define(command.getClass()).setName(\"test\");\n  CommandLine evaluatedCLI=parse(cli,\"Bob,Morane\");\n  CLIConfigurator.inject(evaluatedCLI,command);\n  assertThat(command.reference.get().first).isEqualTo(\"Bob\");\n  assertThat(command.reference.get().last).isEqualTo(\"Morane\");\n  evaluatedCLI=parse(cli);\n  CLIConfigurator.inject(evaluatedCLI,command);\n  assertThat(command.reference.get().first).isEqualTo(\"Bill\");\n  assertThat(command.reference.get().last).isEqualTo(\"Balantine\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 319,
        "startColumnNumber" : 2,
        "endLineNumber" : 333,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testArgumentInjectionWithConvertedByAndDefaultValue() throws CLIException {\n  CommandForConvertedValueTest command=new CommandForConvertedValueTest();\n  CLI cli=CLIConfigurator.define(command.getClass()).setName(\"test\");\n  CommandLine evaluatedCLI=parse(cli,\"Bob,Morane\");\n  CLIConfigurator.inject(evaluatedCLI,command);\n  assertThat(command.reference.get().first).isEqualTo(\"Bob\");\n  assertThat(command.reference.get().last).isEqualTo(\"Morane\");\n  evaluatedCLI=parse(cli);\n  CLIConfigurator.inject(evaluatedCLI,command);\n  assertThat(command.reference.get().first).isEqualTo(\"Bill\");\n  assertThat(command.reference.get().last).isEqualTo(\"Balantine\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 331,
        "startColumnNumber" : 4,
        "endLineNumber" : 331,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(command.reference.get().first).isEqualTo(\"Bill\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 331,
    "startColumnNumber" : 56,
    "endLineNumber" : 331,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}