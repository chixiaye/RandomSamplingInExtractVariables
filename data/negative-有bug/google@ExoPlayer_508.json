{
  "id" : 508,
  "expression" : "(nextByte & 0x0E)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/audio/Ac3Util.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(nextByte & 0x0E)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 183,
      "startColumnNumber" : 46,
      "endLineNumber" : 183,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 183,
        "startColumnNumber" : 46,
        "endLineNumber" : 183,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(nextByte & 0x0E) >> 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 183,
        "startColumnNumber" : 23,
        "endLineNumber" : 183,
        "endColumnNumber" : 69
      },
      "nodeContext" : "CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 69
      },
      "nodeContext" : "channelCount=CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int channelCount=CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 176,
        "startColumnNumber" : 98,
        "endLineNumber" : 214,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  data.skipBytes(2);\n  int fscod=(data.readUnsignedByte() & 0xC0) >> 6;\n  int sampleRate=SAMPLE_RATE_BY_FSCOD[fscod];\n  int nextByte=data.readUnsignedByte();\n  int channelCount=CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1];\n  if ((nextByte & 0x01) != 0) {\n    channelCount++;\n  }\n  nextByte=data.readUnsignedByte();\n  int numDepSub=((nextByte & 0x1E) >> 1);\n  if (numDepSub > 0) {\n    int lowByteChanLoc=data.readUnsignedByte();\n    if ((lowByteChanLoc & 0x02) != 0) {\n      channelCount+=2;\n    }\n  }\n  String mimeType=MimeTypes.AUDIO_E_AC3;\n  if (data.bytesLeft() > 0) {\n    nextByte=data.readUnsignedByte();\n    if ((nextByte & 0x01) != 0) {\n      mimeType=MimeTypes.AUDIO_E_AC3_JOC;\n    }\n  }\n  return new Format.Builder().setId(trackId).setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(sampleRate).setDrmInitData(drmInitData).setLanguage(language).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1876,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 214,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the E-AC-3 format given  {@code data} containing the EC3SpecificBox according to AnnexF. The reading position of  {@code data} will be modified.\n * @param data The EC3SpecificBox to parse.\n * @param trackId The track identifier to set on the format.\n * @param language The language to set on the format.\n * @param drmInitData {@link DrmInitData} to be included in the format.\n * @return The E-AC-3 format parsed from data in the header.\n */\npublic static Format parseEAc3AnnexFFormat(ParsableByteArray data,String trackId,String language,@Nullable DrmInitData drmInitData){\n  data.skipBytes(2);\n  int fscod=(data.readUnsignedByte() & 0xC0) >> 6;\n  int sampleRate=SAMPLE_RATE_BY_FSCOD[fscod];\n  int nextByte=data.readUnsignedByte();\n  int channelCount=CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1];\n  if ((nextByte & 0x01) != 0) {\n    channelCount++;\n  }\n  nextByte=data.readUnsignedByte();\n  int numDepSub=((nextByte & 0x1E) >> 1);\n  if (numDepSub > 0) {\n    int lowByteChanLoc=data.readUnsignedByte();\n    if ((lowByteChanLoc & 0x02) != 0) {\n      channelCount+=2;\n    }\n  }\n  String mimeType=MimeTypes.AUDIO_E_AC3;\n  if (data.bytesLeft() > 0) {\n    nextByte=data.readUnsignedByte();\n    if ((nextByte & 0x01) != 0) {\n      mimeType=MimeTypes.AUDIO_E_AC3_JOC;\n    }\n  }\n  return new Format.Builder().setId(trackId).setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(sampleRate).setDrmInitData(drmInitData).setLanguage(language).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int channelCount=CHANNEL_COUNT_BY_ACMOD[(nextByte & 0x0E) >> 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 183,
    "startColumnNumber" : 46,
    "endLineNumber" : 183,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}