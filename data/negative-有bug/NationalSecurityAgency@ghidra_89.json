{
  "id" : 89,
  "expression" : "\"01002d18\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/FunctionGraph/src/test/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices1Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"01002d18\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 928,
      "startColumnNumber" : 37,
      "endLineNumber" : 928,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 928,
        "startColumnNumber" : 25,
        "endLineNumber" : 928,
        "endColumnNumber" : 48
      },
      "nodeContext" : "createLabel(\"01002d18\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 928,
        "startColumnNumber" : 10,
        "endLineNumber" : 928,
        "endColumnNumber" : 48
      },
      "nodeContext" : "labelAddress=createLabel(\"01002d18\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 928,
        "startColumnNumber" : 2,
        "endLineNumber" : 928,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Address labelAddress=createLabel(\"01002d18\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3624,
        "startLineNumber" : 879,
        "startColumnNumber" : 71,
        "endLineNumber" : 958,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FGData graphData=graphFunction(\"01002cf5\");\n  FunctionGraph functionGraph=graphData.getFunctionGraph();\n  Set<FGVertex> ungroupedVertices=selectVertices(functionGraph,\"01002d11\",\"01002cf5\",\"01002d1f\");\n  group(ungroupedVertices);\n  int expectedGroupedEdgeCount=6;\n  GroupedFunctionGraphVertex groupedVertex=validateNewGroupedVertexFromVertices(functionGraph,ungroupedVertices,expectedGroupedEdgeCount);\n  AddressSetView addresses=groupedVertex.getAddresses();\n  Address minAddress=addresses.getMinAddress();\n  Address maxAddress=addresses.getMaxAddress();\n  graphFunction(\"0100415a\");\n  clearCache();\n  Address labelAddress=createLabel(\"01002d18\");\n  graphData=graphFunction(\"01002cf5\");\n  waitForAnimation();\n  functionGraph=graphData.getFunctionGraph();\n  FGVertex expectedGroupVertex=functionGraph.getVertexForAddress(minAddress);\n  assertTrue(expectedGroupVertex instanceof GroupedFunctionGraphVertex);\n  assertEquals(maxAddress,expectedGroupVertex.getAddresses().getMaxAddress());\n  FGVertex splitVertex=functionGraph.getVertexForAddress(getAddress(\"01002d11\"));\n  assertTrue(\"The split vertex should not have been regrouped\",!(splitVertex instanceof GroupedFunctionGraphVertex));\n  FGVertex unchangedVertex=functionGraph.getVertexForAddress(getAddress(\"01002cf5\"));\n  assertTrue(\"An unchanged vertex should have been regrouped: \" + unchangedVertex,(unchangedVertex instanceof GroupedFunctionGraphVertex));\n  unchangedVertex=functionGraph.getVertexForAddress(getAddress(\"01002d1f\"));\n  assertTrue(\"An unchanged vertex should have been regrouped: \" + unchangedVertex,(unchangedVertex instanceof GroupedFunctionGraphVertex));\n  FGVertex newlyCreatedVertex=functionGraph.getVertexForAddress(labelAddress);\n  assertNotNull(newlyCreatedVertex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3706,
        "startLineNumber" : 878,
        "startColumnNumber" : 1,
        "endLineNumber" : 958,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void doTestRestoringWhenCodeBlocksHaveChanged_WillRegroup(){\n  FGData graphData=graphFunction(\"01002cf5\");\n  FunctionGraph functionGraph=graphData.getFunctionGraph();\n  Set<FGVertex> ungroupedVertices=selectVertices(functionGraph,\"01002d11\",\"01002cf5\",\"01002d1f\");\n  group(ungroupedVertices);\n  int expectedGroupedEdgeCount=6;\n  GroupedFunctionGraphVertex groupedVertex=validateNewGroupedVertexFromVertices(functionGraph,ungroupedVertices,expectedGroupedEdgeCount);\n  AddressSetView addresses=groupedVertex.getAddresses();\n  Address minAddress=addresses.getMinAddress();\n  Address maxAddress=addresses.getMaxAddress();\n  graphFunction(\"0100415a\");\n  clearCache();\n  Address labelAddress=createLabel(\"01002d18\");\n  graphData=graphFunction(\"01002cf5\");\n  waitForAnimation();\n  functionGraph=graphData.getFunctionGraph();\n  FGVertex expectedGroupVertex=functionGraph.getVertexForAddress(minAddress);\n  assertTrue(expectedGroupVertex instanceof GroupedFunctionGraphVertex);\n  assertEquals(maxAddress,expectedGroupVertex.getAddresses().getMaxAddress());\n  FGVertex splitVertex=functionGraph.getVertexForAddress(getAddress(\"01002d11\"));\n  assertTrue(\"The split vertex should not have been regrouped\",!(splitVertex instanceof GroupedFunctionGraphVertex));\n  FGVertex unchangedVertex=functionGraph.getVertexForAddress(getAddress(\"01002cf5\"));\n  assertTrue(\"An unchanged vertex should have been regrouped: \" + unchangedVertex,(unchangedVertex instanceof GroupedFunctionGraphVertex));\n  unchangedVertex=functionGraph.getVertexForAddress(getAddress(\"01002d1f\"));\n  assertTrue(\"An unchanged vertex should have been regrouped: \" + unchangedVertex,(unchangedVertex instanceof GroupedFunctionGraphVertex));\n  FGVertex newlyCreatedVertex=functionGraph.getVertexForAddress(labelAddress);\n  assertNotNull(newlyCreatedVertex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 928,
        "startColumnNumber" : 2,
        "endLineNumber" : 928,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Address labelAddress=createLabel(\"01002d18\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 928,
    "startColumnNumber" : 37,
    "endLineNumber" : 928,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}