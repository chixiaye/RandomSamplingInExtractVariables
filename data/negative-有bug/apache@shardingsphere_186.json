{
  "id" : 186,
  "expression" : "expected",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/yaml/engine/representer/ShardingSphereYamlRepresenterTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 51,
      "startColumnNumber" : 19,
      "endLineNumber" : 51,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 41,
        "startColumnNumber" : 46,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertToYamlWithAllContents(){\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 52,
      "startColumnNumber" : 19,
      "endLineNumber" : 52,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 41,
        "startColumnNumber" : 46,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertToYamlWithAllContents(){\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 53,
      "startColumnNumber" : 19,
      "endLineNumber" : 53,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(expected,containsString(\"value: value\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(expected,containsString(\"value: value\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 41,
        "startColumnNumber" : 46,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertToYamlWithAllContents(){\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(expected,containsString(\"value: value\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 54,
      "startColumnNumber" : 19,
      "endLineNumber" : 54,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 41,
        "startColumnNumber" : 46,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertToYamlWithAllContents(){\n  ShardingSphereYamlObjectFixture actual=new ShardingSphereYamlObjectFixture();\n  actual.setValue(\"value\");\n  actual.setCollection(Arrays.asList(\"value1\",\"value2\"));\n  Map<String,String> map=new LinkedHashMap<>(2,1);\n  map.put(\"key1\",\"value1\");\n  map.put(\"key2\",\"value2\");\n  actual.setMap(map);\n  actual.setCustomizedTag(\"customized_tag\");\n  String expected=new Yaml(new ShardingSphereYamlRepresenter()).dumpAsMap(actual);\n  assertThat(expected,containsString(\"collection:\\n- value1\\n- value2\\n\"));\n  assertThat(expected,containsString(\"map:\\n  key1: value1\\n  key2: value2\\n\"));\n  assertThat(expected,containsString(\"value: value\\n\"));\n  assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(expected,containsString(\"customizedTag: converted_customized_tag\\n\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 51,
    "startColumnNumber" : 19,
    "endLineNumber" : 51,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 52,
    "startColumnNumber" : 19,
    "endLineNumber" : 52,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 53,
    "startColumnNumber" : 19,
    "endLineNumber" : 53,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 54,
    "startColumnNumber" : 19,
    "endLineNumber" : 54,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}