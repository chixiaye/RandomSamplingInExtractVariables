{
  "id" : 102,
  "expression" : "loggingDir + \"/inner.log\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/logging/src/test/java/org/apache/rocketmq/logging/inner/LoggerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "loggingDir + \"/inner.log\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 82,
      "startColumnNumber" : 22,
      "endLineNumber" : 82,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 82,
        "startColumnNumber" : 15,
        "endLineNumber" : 82,
        "endColumnNumber" : 47
      },
      "nodeContext" : "file=loggingDir + \"/inner.log\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String file=loggingDir + \"/inner.log\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 81,
        "startColumnNumber" : 57,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String file=loggingDir + \"/inner.log\";\n  Logger fileLogger=Logger.getLogger(\"innerLogger\");\n  Appender myappender=LoggingBuilder.newAppenderBuilder().withDailyFileRollingAppender(file,\"'.'yyyy-MM-dd\").withName(\"innerAppender\").withLayout(LoggingBuilder.newLayoutBuilder().withDefaultLayout().build()).build();\n  fileLogger.addAppender(myappender);\n  fileLogger.setLevel(Level.INFO);\n  InternalLogger innerLogger=InternalLoggerFactory.getLogger(\"innerLogger\");\n  innerLogger.info(\"fileLogger info Message\");\n  innerLogger.error(\"fileLogger error Message\",new RuntimeException());\n  innerLogger.debug(\"fileLogger debug message\");\n  myappender.close();\n  String content=readFile(file);\n  System.out.println(content);\n  Assert.assertTrue(content.contains(\"info\"));\n  Assert.assertTrue(content.contains(\"RuntimeException\"));\n  Assert.assertTrue(!content.contains(\"debug\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInnerFileLogger() throws IOException {\n  String file=loggingDir + \"/inner.log\";\n  Logger fileLogger=Logger.getLogger(\"innerLogger\");\n  Appender myappender=LoggingBuilder.newAppenderBuilder().withDailyFileRollingAppender(file,\"'.'yyyy-MM-dd\").withName(\"innerAppender\").withLayout(LoggingBuilder.newLayoutBuilder().withDefaultLayout().build()).build();\n  fileLogger.addAppender(myappender);\n  fileLogger.setLevel(Level.INFO);\n  InternalLogger innerLogger=InternalLoggerFactory.getLogger(\"innerLogger\");\n  innerLogger.info(\"fileLogger info Message\");\n  innerLogger.error(\"fileLogger error Message\",new RuntimeException());\n  innerLogger.debug(\"fileLogger debug message\");\n  myappender.close();\n  String content=readFile(file);\n  System.out.println(content);\n  Assert.assertTrue(content.contains(\"info\"));\n  Assert.assertTrue(content.contains(\"RuntimeException\"));\n  Assert.assertTrue(!content.contains(\"debug\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String file=loggingDir + \"/inner.log\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 82,
    "startColumnNumber" : 22,
    "endLineNumber" : 82,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}