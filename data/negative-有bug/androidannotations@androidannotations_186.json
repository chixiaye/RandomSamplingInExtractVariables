{
  "id" : 186,
  "expression" : "element",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 47,
      "startColumnNumber" : 64,
      "endLineNumber" : 47,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 47,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 72
      },
      "nodeContext" : "activitiesHolder.getEnclosingEBeanHolder(element)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 47,
        "startColumnNumber" : 14,
        "endLineNumber" : 47,
        "endColumnNumber" : 72
      },
      "nodeContext" : "holder=activitiesHolder.getEnclosingEBeanHolder(element)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1892,
        "startLineNumber" : 46,
        "startColumnNumber" : 91,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 338,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 22,
      "endLineNumber" : 49,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 49,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 45
      },
      "nodeContext" : "element.getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 49,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 56
      },
      "nodeContext" : "element.getSimpleName().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 56
      },
      "nodeContext" : "methodName=element.getSimpleName().toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String methodName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1892,
        "startLineNumber" : 46,
        "startColumnNumber" : 91,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 338,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String methodName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 50,
      "startColumnNumber" : 60,
      "endLineNumber" : 50,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 50,
        "startColumnNumber" : 40,
        "endLineNumber" : 50,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(ExecutableElement)element",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 50,
        "startColumnNumber" : 20,
        "endLineNumber" : 50,
        "endColumnNumber" : 67
      },
      "nodeContext" : "executableElement=(ExecutableElement)element",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ExecutableElement executableElement=(ExecutableElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1892,
        "startLineNumber" : 46,
        "startColumnNumber" : 91,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String returnTypeName=executableElement.getReturnType().toString();\n  JClass returnType=holder.refClass(returnTypeName);\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> params=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    String parameterType=parameter.asType().toString();\n    JVar param=method.param(holder.refClass(parameterType),parameterName);\n    params.add(param);\n  }\n  JVar db=params.get(0);\n  JBlock body=method.body();\n  body.invoke(db,\"beginTransaction\");\n  JTryBlock tryBlock=body._try();\n  JInvocation superCall=JExpr.invoke(JExpr._super(),method);\n  for (  JVar param : params) {\n    superCall.arg(param);\n  }\n  JBlock tryBody=tryBlock.body();\n  if (returnTypeName.equals(\"void\")) {\n    tryBody.add(superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return();\n  }\n else {\n    JVar result=tryBody.decl(returnType,\"result_\",superCall);\n    tryBody.invoke(db,\"setTransactionSuccessful\");\n    tryBody._return(result);\n  }\n  JCatchBlock catchBlock=tryBlock._catch(codeModel.ref(RuntimeException.class));\n  JVar exceptionParam=catchBlock.param(\"e\");\n  JBlock catchBody=catchBlock.body();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JInvocation errorInvoke=catchBody.staticInvoke(logClass,\"e\");\n  errorInvoke.arg(holder.eBean.name());\n  errorInvoke.arg(\"Error in transaction\");\n  errorInvoke.arg(exceptionParam);\n  catchBody._throw(exceptionParam);\n  tryBlock._finally().invoke(db,\"endTransaction\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 338,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ExecutableElement executableElement=(ExecutableElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 47,
    "startColumnNumber" : 64,
    "endLineNumber" : 47,
    "endColumnNumber" : 71
  }, {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 22,
    "endLineNumber" : 49,
    "endColumnNumber" : 29
  }, {
    "charLength" : 7,
    "startLineNumber" : 50,
    "startColumnNumber" : 60,
    "endLineNumber" : 50,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}