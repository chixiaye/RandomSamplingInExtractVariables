{
  "id" : 119,
  "expression" : "buildAliasMap(envelope.content(),cnameCache(),parent.executor())",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/main/java/io/netty/resolver/dns/DnsResolveContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buildAliasMap(envelope.content(),cnameCache(),parent.executor())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 564,
      "startColumnNumber" : 46,
      "endLineNumber" : 564,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 10,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 564,
        "startColumnNumber" : 20,
        "endLineNumber" : 565,
        "endColumnNumber" : 68
      },
      "nodeContext" : "onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 564,
        "startColumnNumber" : 20,
        "endLineNumber" : 565,
        "endColumnNumber" : 69
      },
      "nodeContext" : "onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 563,
        "startColumnNumber" : 49,
        "endLineNumber" : 567,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 563,
        "startColumnNumber" : 16,
        "endLineNumber" : 567,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type == DnsRecordType.CNAME) {\n  onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 556,
        "startColumnNumber" : 49,
        "endLineNumber" : 578,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n    return;\n  }\n  final DnsRecordType type=question.type();\n  if (type == DnsRecordType.CNAME) {\n    onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n    return;\n  }\n  for (  DnsRecordType expectedType : expectedTypes) {\n    if (type == expectedType) {\n      onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n      return;\n    }\n  }\n  queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 556,
        "startColumnNumber" : 12,
        "endLineNumber" : 578,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (code == DnsResponseCode.NOERROR) {\n  if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n    return;\n  }\n  final DnsRecordType type=question.type();\n  if (type == DnsRecordType.CNAME) {\n    onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n    return;\n  }\n  for (  DnsRecordType expectedType : expectedTypes) {\n    if (type == expectedType) {\n      onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n      return;\n    }\n  }\n  queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2929,
        "startLineNumber" : 553,
        "startColumnNumber" : 12,
        "endLineNumber" : 610,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final DnsResponse res=envelope.content();\n  final DnsResponseCode code=res.code();\n  if (code == DnsResponseCode.NOERROR) {\n    if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n      return;\n    }\n    final DnsRecordType type=question.type();\n    if (type == DnsRecordType.CNAME) {\n      onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n      return;\n    }\n    for (    DnsRecordType expectedType : expectedTypes) {\n      if (type == expectedType) {\n        onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n        return;\n      }\n    }\n    queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n    return;\n  }\n  if (code != DnsResponseCode.NXDOMAIN) {\n    query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,queryLifecycleObserver.queryNoAnswer(code),true,promise,null);\n  }\n else {\n    queryLifecycleObserver.queryFailed(NXDOMAIN_QUERY_FAILED_EXCEPTION);\n    if (!res.isAuthoritativeAnswer()) {\n      query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,newDnsQueryLifecycleObserver(question),true,promise,null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3009,
        "startLineNumber" : 553,
        "startColumnNumber" : 8,
        "endLineNumber" : 612,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final DnsResponse res=envelope.content();\n  final DnsResponseCode code=res.code();\n  if (code == DnsResponseCode.NOERROR) {\n    if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n      return;\n    }\n    final DnsRecordType type=question.type();\n    if (type == DnsRecordType.CNAME) {\n      onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n      return;\n    }\n    for (    DnsRecordType expectedType : expectedTypes) {\n      if (type == expectedType) {\n        onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n        return;\n      }\n    }\n    queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n    return;\n  }\n  if (code != DnsResponseCode.NXDOMAIN) {\n    query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,queryLifecycleObserver.queryNoAnswer(code),true,promise,null);\n  }\n else {\n    queryLifecycleObserver.queryFailed(NXDOMAIN_QUERY_FAILED_EXCEPTION);\n    if (!res.isAuthoritativeAnswer()) {\n      query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,newDnsQueryLifecycleObserver(question),true,promise,null);\n    }\n  }\n}\n  finally {\n  ReferenceCountUtil.safeRelease(envelope);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3027,
        "startLineNumber" : 552,
        "startColumnNumber" : 54,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    final DnsResponse res=envelope.content();\n    final DnsResponseCode code=res.code();\n    if (code == DnsResponseCode.NOERROR) {\n      if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n        return;\n      }\n      final DnsRecordType type=question.type();\n      if (type == DnsRecordType.CNAME) {\n        onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n        return;\n      }\n      for (      DnsRecordType expectedType : expectedTypes) {\n        if (type == expectedType) {\n          onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n          return;\n        }\n      }\n      queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n      return;\n    }\n    if (code != DnsResponseCode.NXDOMAIN) {\n      query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,queryLifecycleObserver.queryNoAnswer(code),true,promise,null);\n    }\n else {\n      queryLifecycleObserver.queryFailed(NXDOMAIN_QUERY_FAILED_EXCEPTION);\n      if (!res.isAuthoritativeAnswer()) {\n        query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,newDnsQueryLifecycleObserver(question),true,promise,null);\n      }\n    }\n  }\n  finally {\n    ReferenceCountUtil.safeRelease(envelope);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3396,
        "startLineNumber" : 549,
        "startColumnNumber" : 4,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void onResponse(final DnsServerAddressStream nameServerAddrStream,final int nameServerAddrStreamIndex,final DnsQuestion question,AddressedEnvelope<DnsResponse,InetSocketAddress> envelope,final DnsQueryLifecycleObserver queryLifecycleObserver,Promise<List<T>> promise){\n  try {\n    final DnsResponse res=envelope.content();\n    final DnsResponseCode code=res.code();\n    if (code == DnsResponseCode.NOERROR) {\n      if (handleRedirect(question,envelope,queryLifecycleObserver,promise)) {\n        return;\n      }\n      final DnsRecordType type=question.type();\n      if (type == DnsRecordType.CNAME) {\n        onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise);\n        return;\n      }\n      for (      DnsRecordType expectedType : expectedTypes) {\n        if (type == expectedType) {\n          onExpectedResponse(question,envelope,queryLifecycleObserver,promise);\n          return;\n        }\n      }\n      queryLifecycleObserver.queryFailed(UNRECOGNIZED_TYPE_QUERY_FAILED_EXCEPTION);\n      return;\n    }\n    if (code != DnsResponseCode.NXDOMAIN) {\n      query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,queryLifecycleObserver.queryNoAnswer(code),true,promise,null);\n    }\n else {\n      queryLifecycleObserver.queryFailed(NXDOMAIN_QUERY_FAILED_EXCEPTION);\n      if (!res.isAuthoritativeAnswer()) {\n        query(nameServerAddrStream,nameServerAddrStreamIndex + 1,question,newDnsQueryLifecycleObserver(question),true,promise,null);\n      }\n    }\n  }\n  finally {\n    ReferenceCountUtil.safeRelease(envelope);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 564,
        "startColumnNumber" : 20,
        "endLineNumber" : 565,
        "endColumnNumber" : 68
      },
      "nodeContext" : "onResponseCNAME(question,buildAliasMap(envelope.content(),cnameCache(),parent.executor()),queryLifecycleObserver,promise)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 564,
    "startColumnNumber" : 46,
    "endLineNumber" : 564,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}