{
  "id" : 512,
  "expression" : "\"Could not read image: \" + testImage",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/test/java/com/google/zxing/common/AbstractNegativeBlackBoxTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Could not read image: \" + testImage",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 89,
      "startColumnNumber" : 30,
      "endLineNumber" : 89,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 89,
        "startColumnNumber" : 14,
        "endLineNumber" : 89,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new IOException(\"Could not read image: \" + testImage)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "throw new IOException(\"Could not read image: \" + testImage);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 88,
        "startColumnNumber" : 25,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new IOException(\"Could not read image: \" + testImage);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (image == null) {\n  throw new IOException(\"Could not read image: \" + testImage);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 85,
        "startColumnNumber" : 38,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.info(String.format(\"Starting %s\",testImage));\n  BufferedImage image=ImageIO.read(testImage.toFile());\n  if (image == null) {\n    throw new IOException(\"Could not read image: \" + testImage);\n  }\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    if (!checkForFalsePositives(image,testResult.getRotation())) {\n      falsePositives[x]++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Path testImage : imageFiles) {\n  log.info(String.format(\"Starting %s\",testImage));\n  BufferedImage image=ImageIO.read(testImage.toFile());\n  if (image == null) {\n    throw new IOException(\"Could not read image: \" + testImage);\n  }\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    if (!checkForFalsePositives(image,testResult.getRotation())) {\n      falsePositives[x]++;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1832,
        "startLineNumber" : 80,
        "startColumnNumber" : 48,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertFalse(testResults.isEmpty());\n  List<Path> imageFiles=getImageFiles();\n  int[] falsePositives=new int[testResults.size()];\n  for (  Path testImage : imageFiles) {\n    log.info(String.format(\"Starting %s\",testImage));\n    BufferedImage image=ImageIO.read(testImage.toFile());\n    if (image == null) {\n      throw new IOException(\"Could not read image: \" + testImage);\n    }\n    for (int x=0; x < testResults.size(); x++) {\n      TestResult testResult=testResults.get(x);\n      if (!checkForFalsePositives(image,testResult.getRotation())) {\n        falsePositives[x]++;\n      }\n    }\n  }\n  int totalFalsePositives=0;\n  int totalAllowed=0;\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    totalFalsePositives+=falsePositives[x];\n    totalAllowed+=testResult.getFalsePositivesAllowed();\n  }\n  if (totalFalsePositives < totalAllowed) {\n    log.warning(String.format(\"+++ Test too lax by %d images\",totalAllowed - totalFalsePositives));\n  }\n else   if (totalFalsePositives > totalAllowed) {\n    log.warning(String.format(\"--- Test failed by %d images\",totalFalsePositives - totalAllowed));\n  }\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    log.info(String.format(\"Rotation %d degrees: %d of %d images were false positives (%d allowed)\",(int)testResult.getRotation(),falsePositives[x],imageFiles.size(),testResult.getFalsePositivesAllowed()));\n    assertTrue(\"Rotation \" + testResult.getRotation() + \" degrees: Too many false positives found\",falsePositives[x] <= testResult.getFalsePositivesAllowed());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 244,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Test public void testBlackBox() throws IOException {\n  assertFalse(testResults.isEmpty());\n  List<Path> imageFiles=getImageFiles();\n  int[] falsePositives=new int[testResults.size()];\n  for (  Path testImage : imageFiles) {\n    log.info(String.format(\"Starting %s\",testImage));\n    BufferedImage image=ImageIO.read(testImage.toFile());\n    if (image == null) {\n      throw new IOException(\"Could not read image: \" + testImage);\n    }\n    for (int x=0; x < testResults.size(); x++) {\n      TestResult testResult=testResults.get(x);\n      if (!checkForFalsePositives(image,testResult.getRotation())) {\n        falsePositives[x]++;\n      }\n    }\n  }\n  int totalFalsePositives=0;\n  int totalAllowed=0;\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    totalFalsePositives+=falsePositives[x];\n    totalAllowed+=testResult.getFalsePositivesAllowed();\n  }\n  if (totalFalsePositives < totalAllowed) {\n    log.warning(String.format(\"+++ Test too lax by %d images\",totalAllowed - totalFalsePositives));\n  }\n else   if (totalFalsePositives > totalAllowed) {\n    log.warning(String.format(\"--- Test failed by %d images\",totalFalsePositives - totalAllowed));\n  }\n  for (int x=0; x < testResults.size(); x++) {\n    TestResult testResult=testResults.get(x);\n    log.info(String.format(\"Rotation %d degrees: %d of %d images were false positives (%d allowed)\",(int)testResult.getRotation(),falsePositives[x],imageFiles.size(),testResult.getFalsePositivesAllowed()));\n    assertTrue(\"Rotation \" + testResult.getRotation() + \" degrees: Too many false positives found\",falsePositives[x] <= testResult.getFalsePositivesAllowed());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "throw new IOException(\"Could not read image: \" + testImage);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 89,
    "startColumnNumber" : 30,
    "endLineNumber" : 89,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}