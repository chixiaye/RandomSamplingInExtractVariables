{
  "id" : 66,
  "expression" : "prog.getFilename()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/net/starlark/java/eval/Examples.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "prog.getFilename()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 105,
      "startColumnNumber" : 43,
      "endLineNumber" : 105,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 105,
        "startColumnNumber" : 25,
        "endLineNumber" : 105,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Mutability.create(prog.getFilename())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 62
      },
      "nodeContext" : "mu=Mutability.create(prog.getFilename())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 105,
        "startColumnNumber" : 9,
        "endLineNumber" : 105,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Mutability mu=Mutability.create(prog.getFilename())",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Mutability mu=Mutability.create(prog.getFilename())){\n  StarlarkThread thread=new StarlarkThread(mu,StarlarkSemantics.DEFAULT);\n  Starlark.execFileProgram(prog,module,thread);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 86,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ParserInput input=ParserInput.readFile(\"my/file.star\");\n  StarlarkFile file=StarlarkFile.parse(input);\n  Program prog=Program.compileFile(file,Resolver.moduleWithPredeclared(\"zero\",\"square\"));\n  Module module=Module.withPredeclared(StarlarkSemantics.DEFAULT,makeEnvironment());\n  try (Mutability mu=Mutability.create(prog.getFilename())){\n    StarlarkThread thread=new StarlarkThread(mu,StarlarkSemantics.DEFAULT);\n    Starlark.execFileProgram(prog,module,thread);\n  }\n   return module;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This advanced example reads, parses, and compiles a Starlark file to a Program, then later executes it.\n */\nModule compileThenExecute() throws IOException, SyntaxError.Exception, EvalException, InterruptedException {\n  ParserInput input=ParserInput.readFile(\"my/file.star\");\n  StarlarkFile file=StarlarkFile.parse(input);\n  Program prog=Program.compileFile(file,Resolver.moduleWithPredeclared(\"zero\",\"square\"));\n  Module module=Module.withPredeclared(StarlarkSemantics.DEFAULT,makeEnvironment());\n  try (Mutability mu=Mutability.create(prog.getFilename())){\n    StarlarkThread thread=new StarlarkThread(mu,StarlarkSemantics.DEFAULT);\n    Starlark.execFileProgram(prog,module,thread);\n  }\n   return module;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 105,
        "startColumnNumber" : 9,
        "endLineNumber" : 105,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Mutability mu=Mutability.create(prog.getFilename())",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 105,
    "startColumnNumber" : 43,
    "endLineNumber" : 105,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}