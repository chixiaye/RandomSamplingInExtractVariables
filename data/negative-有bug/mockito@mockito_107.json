{
  "id" : 107,
  "expression" : "args",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/jls/JLS_15_12_2_5Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "args",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 134,
      "startColumnNumber" : 36,
      "endLineNumber" : 134,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 134,
        "startColumnNumber" : 23,
        "endLineNumber" : 134,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mock.varargs(args)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(mock.varargs(args))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertThat(mock.varargs(args)).describedAs(\"isNull matcher generic upper bound is Object\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(mock.varargs(args)).describedAs(\"isNull matcher generic upper bound is Object\").isEqualTo(\"ok\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertThat(mock.varargs(args)).describedAs(\"isNull matcher generic upper bound is Object\").isEqualTo(\"ok\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 128,
        "startColumnNumber" : 79,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SingleOverload mock=mock(SingleOverload.class);\n  when(mock.varargs(isNull())).thenReturn(\"ok\");\n  Object[] args=null;\n  assertThat(mock.varargs(args)).describedAs(\"isNull matcher generic upper bound is Object\").isEqualTo(\"ok\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 425,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Test public void with_variable_arg_and_null_Object_array() throws Exception {\n  SingleOverload mock=mock(SingleOverload.class);\n  when(mock.varargs(isNull())).thenReturn(\"ok\");\n  Object[] args=null;\n  assertThat(mock.varargs(args)).describedAs(\"isNull matcher generic upper bound is Object\").isEqualTo(\"ok\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(mock.varargs(args))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 134,
    "startColumnNumber" : 36,
    "endLineNumber" : 134,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}