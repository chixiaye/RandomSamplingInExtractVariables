{
  "id" : 279,
  "expression" : "0",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/javac/handlers/HandleSneakyThrows.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 62,
      "startColumnNumber" : 69,
      "endLineNumber" : 62,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 62,
        "startColumnNumber" : 49,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "exception.substring(0,exception.length() - 6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 62,
        "startColumnNumber" : 37,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "exception=exception.substring(0,exception.length() - 6)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 62,
        "startColumnNumber" : 37,
        "endLineNumber" : 62,
        "endColumnNumber" : 96
      },
      "nodeContext" : "exception=exception.substring(0,exception.length() - 6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (exception.endsWith(\".class\")) exception=exception.substring(0,exception.length() - 6);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 61,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (exception.endsWith(\".class\"))   exception=exception.substring(0,exception.length() - 6);\n  exceptions.add(exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (String exception : exceptionNames) {\n  if (exception.endsWith(\".class\"))   exception=exception.substring(0,exception.length() - 6);\n  exceptions.add(exception);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 53,
        "startColumnNumber" : 117,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  deleteAnnotationIfNeccessary(annotationNode,SneakyThrows.class);\n  Collection<String> exceptionNames=annotation.getRawExpressions(\"value\");\n  if (exceptionNames.isEmpty()) {\n    exceptionNames=Collections.singleton(\"java.lang.Throwable\");\n  }\n  java.util.List<String> exceptions=new ArrayList<String>();\n  for (  String exception : exceptionNames) {\n    if (exception.endsWith(\".class\"))     exception=exception.substring(0,exception.length() - 6);\n    exceptions.add(exception);\n  }\n  JavacNode owner=annotationNode.up();\nswitch (owner.getKind()) {\ncase METHOD:    handleMethod(annotationNode,(JCMethodDecl)owner.get(),exceptions);\n  break;\ndefault:annotationNode.addError(\"@SneakyThrows is legal only on methods and constructors.\");\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 893,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void handle(AnnotationValues<SneakyThrows> annotation,JCAnnotation ast,JavacNode annotationNode){\n  deleteAnnotationIfNeccessary(annotationNode,SneakyThrows.class);\n  Collection<String> exceptionNames=annotation.getRawExpressions(\"value\");\n  if (exceptionNames.isEmpty()) {\n    exceptionNames=Collections.singleton(\"java.lang.Throwable\");\n  }\n  java.util.List<String> exceptions=new ArrayList<String>();\n  for (  String exception : exceptionNames) {\n    if (exception.endsWith(\".class\"))     exception=exception.substring(0,exception.length() - 6);\n    exceptions.add(exception);\n  }\n  JavacNode owner=annotationNode.up();\nswitch (owner.getKind()) {\ncase METHOD:    handleMethod(annotationNode,(JCMethodDecl)owner.get(),exceptions);\n  break;\ndefault:annotationNode.addError(\"@SneakyThrows is legal only on methods and constructors.\");\nbreak;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (exception.endsWith(\".class\")) exception=exception.substring(0,exception.length() - 6);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 62,
    "startColumnNumber" : 69,
    "endLineNumber" : 62,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}