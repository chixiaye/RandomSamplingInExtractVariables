{
  "id" : 348,
  "expression" : "new CountDownLatch(2)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableGroupByTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CountDownLatch(2)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 596,
      "startColumnNumber" : 37,
      "endLineNumber" : 596,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 596,
        "startColumnNumber" : 29,
        "endLineNumber" : 596,
        "endColumnNumber" : 58
      },
      "nodeContext" : "first=new CountDownLatch(2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 596,
        "startColumnNumber" : 8,
        "endLineNumber" : 596,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch first=new CountDownLatch(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2574,
        "startLineNumber" : 595,
        "startColumnNumber" : 119,
        "endLineNumber" : 670,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CountDownLatch first=new CountDownLatch(2);\n  final ArrayList<String> results=new ArrayList<String>();\n  Observable.create(new ObservableConsumable<Integer>(){\n    @Override public void subscribe(    Observer<? super Integer> sub){\n      sub.onSubscribe(EmptyDisposable.INSTANCE);\n      sub.onNext(1);\n      sub.onNext(2);\n      sub.onNext(1);\n      sub.onNext(2);\n      try {\n        first.await();\n      }\n catch (      InterruptedException e) {\n        sub.onError(e);\n        return;\n      }\n      sub.onNext(3);\n      sub.onNext(3);\n      sub.onComplete();\n    }\n  }\n).groupBy(new Function<Integer,Integer>(){\n    @Override public Integer apply(    Integer t){\n      return t;\n    }\n  }\n).flatMap(new Function<GroupedObservable<Integer,Integer>,Observable<String>>(){\n    @Override public Observable<String> apply(    final GroupedObservable<Integer,Integer> group){\n      if (group.getKey() < 3) {\n        return group.map(new Function<Integer,String>(){\n          @Override public String apply(          Integer t1){\n            return \"first groups: \" + t1;\n          }\n        }\n).take(2).doOnComplete(new Runnable(){\n          @Override public void run(){\n            first.countDown();\n          }\n        }\n);\n      }\n else {\n        return group.map(new Function<Integer,String>(){\n          @Override public String apply(          Integer t1){\n            return \"last group: \" + t1;\n          }\n        }\n);\n      }\n    }\n  }\n).toBlocking().forEach(new Consumer<String>(){\n    @Override public void accept(    String s){\n      results.add(s);\n    }\n  }\n);\n  System.out.println(\"Results: \" + results);\n  assertEquals(6,results.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2700,
        "startLineNumber" : 594,
        "startColumnNumber" : 4,
        "endLineNumber" : 670,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete() throws InterruptedException {\n  final CountDownLatch first=new CountDownLatch(2);\n  final ArrayList<String> results=new ArrayList<String>();\n  Observable.create(new ObservableConsumable<Integer>(){\n    @Override public void subscribe(    Observer<? super Integer> sub){\n      sub.onSubscribe(EmptyDisposable.INSTANCE);\n      sub.onNext(1);\n      sub.onNext(2);\n      sub.onNext(1);\n      sub.onNext(2);\n      try {\n        first.await();\n      }\n catch (      InterruptedException e) {\n        sub.onError(e);\n        return;\n      }\n      sub.onNext(3);\n      sub.onNext(3);\n      sub.onComplete();\n    }\n  }\n).groupBy(new Function<Integer,Integer>(){\n    @Override public Integer apply(    Integer t){\n      return t;\n    }\n  }\n).flatMap(new Function<GroupedObservable<Integer,Integer>,Observable<String>>(){\n    @Override public Observable<String> apply(    final GroupedObservable<Integer,Integer> group){\n      if (group.getKey() < 3) {\n        return group.map(new Function<Integer,String>(){\n          @Override public String apply(          Integer t1){\n            return \"first groups: \" + t1;\n          }\n        }\n).take(2).doOnComplete(new Runnable(){\n          @Override public void run(){\n            first.countDown();\n          }\n        }\n);\n      }\n else {\n        return group.map(new Function<Integer,String>(){\n          @Override public String apply(          Integer t1){\n            return \"last group: \" + t1;\n          }\n        }\n);\n      }\n    }\n  }\n).toBlocking().forEach(new Consumer<String>(){\n    @Override public void accept(    String s){\n      results.add(s);\n    }\n  }\n);\n  System.out.println(\"Results: \" + results);\n  assertEquals(6,results.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 313,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 596,
        "startColumnNumber" : 8,
        "endLineNumber" : 596,
        "endColumnNumber" : 59
      },
      "nodeContext" : "final CountDownLatch first=new CountDownLatch(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.CountDownLatch"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 596,
    "startColumnNumber" : 37,
    "endLineNumber" : 596,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}