{
  "id" : 305,
  "expression" : "0",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/BaseJavaToolTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 21,
      "endLineNumber" : 21,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 21,
        "startColumnNumber" : 17,
        "endLineNumber" : 21,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < pairs.length; i+=2) {\n  String grammarStr=pairs[i];\n  String expect=pairs[i + 1];\n  String[] lines=grammarStr.split(\"\\n\");\n  String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n  ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n  String actual=equeue.toString(true);\n  actual=actual.replace(getTempDirPath() + File.separator,\"\");\n  String msg=grammarStr;\n  msg=msg.replace(\"\\n\",\"\\\\n\");\n  msg=msg.replace(\"\\r\",\"\\\\r\");\n  msg=msg.replace(\"\\t\",\"\\\\t\");\n  assertEquals(\"error in: \" + msg,expect,actual);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 20,
        "startColumnNumber" : 59,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < pairs.length; i+=2) {\n    String grammarStr=pairs[i];\n    String expect=pairs[i + 1];\n    String[] lines=grammarStr.split(\"\\n\");\n    String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n    ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n    String actual=equeue.toString(true);\n    actual=actual.replace(getTempDirPath() + File.separator,\"\");\n    String msg=grammarStr;\n    msg=msg.replace(\"\\n\",\"\\\\n\");\n    msg=msg.replace(\"\\r\",\"\\\\r\");\n    msg=msg.replace(\"\\t\",\"\\\\t\");\n    assertEquals(\"error in: \" + msg,expect,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testErrors(String[] pairs,boolean printTree){\n  for (int i=0; i < pairs.length; i+=2) {\n    String grammarStr=pairs[i];\n    String expect=pairs[i + 1];\n    String[] lines=grammarStr.split(\"\\n\");\n    String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n    ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n    String actual=equeue.toString(true);\n    actual=actual.replace(getTempDirPath() + File.separator,\"\");\n    String msg=grammarStr;\n    msg=msg.replace(\"\\n\",\"\\\\n\");\n    msg=msg.replace(\"\\r\",\"\\\\r\");\n    msg=msg.replace(\"\\t\",\"\\\\t\");\n    assertEquals(\"error in: \" + msg,expect,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 26,
      "startColumnNumber" : 61,
      "endLineNumber" : 26,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 26,
        "startColumnNumber" : 55,
        "endLineNumber" : 26,
        "endColumnNumber" : 63
      },
      "nodeContext" : "lines[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 26,
        "startColumnNumber" : 21,
        "endLineNumber" : 26,
        "endColumnNumber" : 64
      },
      "nodeContext" : "getFilenameFromFirstLineOfGrammar(lines[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 26,
        "startColumnNumber" : 10,
        "endLineNumber" : 26,
        "endColumnNumber" : 64
      },
      "nodeContext" : "fileName=getFilenameFromFirstLineOfGrammar(lines[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 26,
        "startColumnNumber" : 3,
        "endLineNumber" : 26,
        "endColumnNumber" : 65
      },
      "nodeContext" : "String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 21,
        "startColumnNumber" : 48,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String grammarStr=pairs[i];\n  String expect=pairs[i + 1];\n  String[] lines=grammarStr.split(\"\\n\");\n  String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n  ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n  String actual=equeue.toString(true);\n  actual=actual.replace(getTempDirPath() + File.separator,\"\");\n  String msg=grammarStr;\n  msg=msg.replace(\"\\n\",\"\\\\n\");\n  msg=msg.replace(\"\\r\",\"\\\\r\");\n  msg=msg.replace(\"\\t\",\"\\\\t\");\n  assertEquals(\"error in: \" + msg,expect,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < pairs.length; i+=2) {\n  String grammarStr=pairs[i];\n  String expect=pairs[i + 1];\n  String[] lines=grammarStr.split(\"\\n\");\n  String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n  ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n  String actual=equeue.toString(true);\n  actual=actual.replace(getTempDirPath() + File.separator,\"\");\n  String msg=grammarStr;\n  msg=msg.replace(\"\\n\",\"\\\\n\");\n  msg=msg.replace(\"\\r\",\"\\\\r\");\n  msg=msg.replace(\"\\t\",\"\\\\t\");\n  assertEquals(\"error in: \" + msg,expect,actual);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 20,
        "startColumnNumber" : 59,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < pairs.length; i+=2) {\n    String grammarStr=pairs[i];\n    String expect=pairs[i + 1];\n    String[] lines=grammarStr.split(\"\\n\");\n    String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n    ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n    String actual=equeue.toString(true);\n    actual=actual.replace(getTempDirPath() + File.separator,\"\");\n    String msg=grammarStr;\n    msg=msg.replace(\"\\n\",\"\\\\n\");\n    msg=msg.replace(\"\\r\",\"\\\\r\");\n    msg=msg.replace(\"\\t\",\"\\\\t\");\n    assertEquals(\"error in: \" + msg,expect,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testErrors(String[] pairs,boolean printTree){\n  for (int i=0; i < pairs.length; i+=2) {\n    String grammarStr=pairs[i];\n    String expect=pairs[i + 1];\n    String[] lines=grammarStr.split(\"\\n\");\n    String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n    ErrorQueue equeue=BaseRuntimeTest.antlrOnString(getTempDirPath(),null,fileName,grammarStr,false);\n    String actual=equeue.toString(true);\n    actual=actual.replace(getTempDirPath() + File.separator,\"\");\n    String msg=grammarStr;\n    msg=msg.replace(\"\\n\",\"\\\\n\");\n    msg=msg.replace(\"\\r\",\"\\\\r\");\n    msg=msg.replace(\"\\t\",\"\\\\t\");\n    assertEquals(\"error in: \" + msg,expect,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 26,
        "startColumnNumber" : 3,
        "endLineNumber" : 26,
        "endColumnNumber" : 65
      },
      "nodeContext" : "String fileName=getFilenameFromFirstLineOfGrammar(lines[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 21,
    "endLineNumber" : 21,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 26,
    "startColumnNumber" : 61,
    "endLineNumber" : 26,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}