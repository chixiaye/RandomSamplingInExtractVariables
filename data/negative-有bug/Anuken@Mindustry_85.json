{
  "id" : 85,
  "expression" : "block.asFloor().itemDrop",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/BaseRegistry.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "block.asFloor().itemDrop",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 42,
      "startColumnNumber" : 44,
      "endLineNumber" : 42,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 42,
        "startColumnNumber" : 44,
        "endLineNumber" : 42,
        "endColumnNumber" : 76
      },
      "nodeContext" : "block.asFloor().itemDrop != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 42,
        "endColumnNumber" : 76
      },
      "nodeContext" : "block instanceof OreBlock && block.asFloor().itemDrop != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n else if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 477,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 481,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 42,
        "endColumnNumber" : 76
      },
      "nodeContext" : "block instanceof OreBlock && block.asFloor().itemDrop != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "mindustry.type.Item"
  }, {
    "nodeContext" : "block.asFloor().itemDrop",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 43,
      "startColumnNumber" : 25,
      "endLineNumber" : 43,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ores.put(block.asFloor().itemDrop,(OreBlock)block)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ores.put(block.asFloor().itemDrop,(OreBlock)block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n else if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 477,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 481,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ores.put(block.asFloor().itemDrop,(OreBlock)block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "mindustry.type.Item"
  }, {
    "nodeContext" : "block.asFloor().itemDrop",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 44,
      "startColumnNumber" : 40,
      "endLineNumber" : 44,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 44,
        "startColumnNumber" : 40,
        "endLineNumber" : 44,
        "endColumnNumber" : 72
      },
      "nodeContext" : "block.asFloor().itemDrop != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 72
      },
      "nodeContext" : "block.isFloor() && block.asFloor().itemDrop != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n else if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 477,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 481,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "mindustry.type.Item"
  }, {
    "nodeContext" : "block.asFloor().itemDrop",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 44,
      "startColumnNumber" : 99,
      "endLineNumber" : 44,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 44,
        "startColumnNumber" : 77,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 44,
        "startColumnNumber" : 76,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "!oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n else if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 477,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 481,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 124
      },
      "nodeContext" : "block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "mindustry.type.Item"
  }, {
    "nodeContext" : "block.asFloor().itemDrop",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 45,
      "startColumnNumber" : 30,
      "endLineNumber" : 45,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 72
      },
      "nodeContext" : "oreFloors.put(block.asFloor().itemDrop,block.asFloor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 73
      },
      "nodeContext" : "oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 44,
        "startColumnNumber" : 125,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n  ores.put(block.asFloor().itemDrop,(OreBlock)block);\n}\n else if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n  oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n    ores.put(block.asFloor().itemDrop,(OreBlock)block);\n  }\n else   if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n    oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 477,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  cores.clear();\n  parts.clear();\n  reqParts.clear();\n  for (  Block block : content.blocks()) {\n    if (block instanceof OreBlock && block.asFloor().itemDrop != null) {\n      ores.put(block.asFloor().itemDrop,(OreBlock)block);\n    }\n else     if (block.isFloor() && block.asFloor().itemDrop != null && !oreFloors.containsKey(block.asFloor().itemDrop)) {\n      oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n    }\n  }\n  String[] names=Core.files.internal(\"basepartnames\").readString().split(\"\\n\");\n  for (  String name : names) {\n    try {\n      Schematic schem=Schematics.read(Core.files.internal(\"baseparts/\" + name));\n      BasePart part=new BasePart(schem);\n      Tmp.v1.setZero();\n      int drills=0;\n      for (      Stile tile : schem.tiles) {\n        if (tile.block instanceof CoreBlock) {\n          part.core=tile.block;\n        }\n        if (tile.block instanceof ItemSource) {\n          Item config=(Item)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof LiquidSource) {\n          Liquid config=(Liquid)tile.config;\n          if (config != null)           part.required=config;\n        }\n        if (tile.block instanceof Drill || tile.block instanceof Pump) {\n          Tmp.v1.add(tile.x * tilesize + tile.block.offset,tile.y * tilesize + tile.block.offset);\n          drills++;\n        }\n      }\n      schem.tiles.removeAll(s -> s.block.buildVisibility == BuildVisibility.sandboxOnly);\n      part.tier=schem.tiles.sumf(s -> Mathf.pow(s.block.buildCost / s.block.buildCostMultiplier,1.4f));\n      if (part.core != null) {\n        cores.add(part);\n      }\n else       if (part.required == null) {\n        parts.add(part);\n      }\n      if (drills > 0) {\n        Tmp.v1.scl(1f / drills).scl(1f / tilesize);\n        part.centerX=(int)Tmp.v1.x;\n        part.centerY=(int)Tmp.v1.y;\n      }\n else {\n        part.centerX=part.schematic.width / 2;\n        part.centerY=part.schematic.height / 2;\n      }\n      if (part.required != null && part.core == null) {\n        reqParts.get(part.required,Seq::new).add(part);\n      }\n    }\n catch (    IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  cores.sort(b -> b.tier);\n  parts.sort();\n  reqParts.each((key,arr) -> arr.sort());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 481,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 73
      },
      "nodeContext" : "oreFloors.put(block.asFloor().itemDrop,block.asFloor());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "mindustry.type.Item"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 42,
    "startColumnNumber" : 44,
    "endLineNumber" : 42,
    "endColumnNumber" : 68
  }, {
    "charLength" : 24,
    "startLineNumber" : 43,
    "startColumnNumber" : 25,
    "endLineNumber" : 43,
    "endColumnNumber" : 49
  }, {
    "charLength" : 24,
    "startLineNumber" : 44,
    "startColumnNumber" : 40,
    "endLineNumber" : 44,
    "endColumnNumber" : 64
  }, {
    "charLength" : 24,
    "startLineNumber" : 44,
    "startColumnNumber" : 99,
    "endLineNumber" : 44,
    "endColumnNumber" : 123
  }, {
    "charLength" : 24,
    "startLineNumber" : 45,
    "startColumnNumber" : 30,
    "endLineNumber" : 45,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}