{
  "id" : 490,
  "expression" : "0",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/util/TestFailures.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 41,
      "startColumnNumber" : 49,
      "endLineNumber" : 41,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 41,
        "startColumnNumber" : 21,
        "endLineNumber" : 41,
        "endColumnNumber" : 51
      },
      "nodeContext" : "failure.getSuppressed().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 41,
        "startColumnNumber" : 21,
        "endLineNumber" : 41,
        "endColumnNumber" : 64
      },
      "nodeContext" : "failure.getSuppressed().get(0).getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2554,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToFailureLoop(){\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 53,
      "endLineNumber" : 49,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2554,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToFailureLoop(){\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 49,
      "endLineNumber" : 61,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 61,
        "startColumnNumber" : 21,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "failure.getSuppressed().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 21,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "failure.getSuppressed().get(0).getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2554,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToFailureLoop(){\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 72,
      "startColumnNumber" : 53,
      "endLineNumber" : 72,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2554,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToFailureLoop(){\n  Throwable exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  Throwable exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.addSuppressed(exception2);\n  ExecutionFailureInfo failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new PrestoException(TOO_MANY_REQUESTS_FAILED,\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\");\n  exception1.addSuppressed(exception2);\n  exception2.addSuppressed(exception1);\n  failure=toFailure(exception1);\n  assertEquals(failure.getMessage(),\"fake exception 1\");\n  assertNull(failure.getCause());\n  assertEquals(failure.getSuppressed().size(),1);\n  assertEquals(failure.getSuppressed().get(0).getMessage(),\"fake exception 2\");\n  assertEquals(failure.getErrorCode(),TOO_MANY_REQUESTS_FAILED.toErrorCode());\n  exception1=new RuntimeException(\"fake exception 1\");\n  exception2=new RuntimeException(\"fake exception 2\",exception1);\n  exception1.initCause(exception2);\n  failure=toFailure(exception2);\n  assertEquals(failure.getMessage(),\"fake exception 2\");\n  assertNotNull(failure.getCause());\n  assertEquals(failure.getCause().getMessage(),\"fake exception 1\");\n  assertEquals(failure.getSuppressed().size(),0);\n  assertEquals(failure.getErrorCode(),GENERIC_INTERNAL_ERROR.toErrorCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(failure.getSuppressed().size(),0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 41,
    "startColumnNumber" : 49,
    "endLineNumber" : 41,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 53,
    "endLineNumber" : 49,
    "endColumnNumber" : 54
  }, {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 49,
    "endLineNumber" : 61,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 72,
    "startColumnNumber" : 53,
    "endLineNumber" : 72,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}