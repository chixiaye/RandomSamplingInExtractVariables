{
  "id" : 254,
  "expression" : "new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/requests/DeleteTopicsRequestTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 318,
      "startLineNumber" : 92,
      "startColumnNumber" : 49,
      "endLineNumber" : 95,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 32,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 92,
        "startColumnNumber" : 32,
        "endLineNumber" : 95,
        "endColumnNumber" : 113
      },
      "nodeContext" : "requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 114
      },
      "nodeContext" : "DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 87,
        "startColumnNumber" : 58,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Uuid topicId1=Uuid.randomUuid();\n  Uuid topicId2=Uuid.randomUuid();\n  List<Uuid> topicIds=Arrays.asList(topicId1,topicId2);\n  DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n  if (version >= 6) {\n    DeleteTopicsRequest requestWithIdsSerialized=DeleteTopicsRequest.parse(requestWithIds.serialize(),version);\n    assertEquals(topicIds,requestWithIds.topicIds());\n    assertEquals(topicIds,requestWithIdsSerialized.topicIds());\n    requestWithIds.data().topics().forEach(topic -> assertNull(topic.name()));\n    requestWithIdsSerialized.data().topics().forEach(topic -> assertNull(topic.name()));\n  }\n else {\n    assertThrows(UnsupportedVersionException.class,() -> requestWithIds.serialize());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (short version : DELETE_TOPICS.allVersions()) {\n  Uuid topicId1=Uuid.randomUuid();\n  Uuid topicId2=Uuid.randomUuid();\n  List<Uuid> topicIds=Arrays.asList(topicId1,topicId2);\n  DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n  if (version >= 6) {\n    DeleteTopicsRequest requestWithIdsSerialized=DeleteTopicsRequest.parse(requestWithIds.serialize(),version);\n    assertEquals(topicIds,requestWithIds.topicIds());\n    assertEquals(topicIds,requestWithIdsSerialized.topicIds());\n    requestWithIds.data().topics().forEach(topic -> assertNull(topic.name()));\n    requestWithIdsSerialized.data().topics().forEach(topic -> assertNull(topic.name()));\n  }\n else {\n    assertThrows(UnsupportedVersionException.class,() -> requestWithIds.serialize());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 86,
        "startColumnNumber" : 36,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  short version : DELETE_TOPICS.allVersions()) {\n    Uuid topicId1=Uuid.randomUuid();\n    Uuid topicId2=Uuid.randomUuid();\n    List<Uuid> topicIds=Arrays.asList(topicId1,topicId2);\n    DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n    if (version >= 6) {\n      DeleteTopicsRequest requestWithIdsSerialized=DeleteTopicsRequest.parse(requestWithIds.serialize(),version);\n      assertEquals(topicIds,requestWithIds.topicIds());\n      assertEquals(topicIds,requestWithIdsSerialized.topicIds());\n      requestWithIds.data().topics().forEach(topic -> assertNull(topic.name()));\n      requestWithIdsSerialized.data().topics().forEach(topic -> assertNull(topic.name()));\n    }\n else {\n      assertThrows(UnsupportedVersionException.class,() -> requestWithIds.serialize());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1508,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTopicIdsField(){\n  for (  short version : DELETE_TOPICS.allVersions()) {\n    Uuid topicId1=Uuid.randomUuid();\n    Uuid topicId2=Uuid.randomUuid();\n    List<Uuid> topicIds=Arrays.asList(topicId1,topicId2);\n    DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n    if (version >= 6) {\n      DeleteTopicsRequest requestWithIdsSerialized=DeleteTopicsRequest.parse(requestWithIds.serialize(),version);\n      assertEquals(topicIds,requestWithIds.topicIds());\n      assertEquals(topicIds,requestWithIdsSerialized.topicIds());\n      requestWithIds.data().topics().forEach(topic -> assertNull(topic.name()));\n      requestWithIdsSerialized.data().topics().forEach(topic -> assertNull(topic.name()));\n    }\n else {\n      assertThrows(UnsupportedVersionException.class,() -> requestWithIds.serialize());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 114
      },
      "nodeContext" : "DeleteTopicsRequest requestWithIds=new DeleteTopicsRequest.Builder(new DeleteTopicsRequestData().setTopics(Arrays.asList(new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId1),new DeleteTopicsRequestData.DeleteTopicState().setTopicId(topicId2)))).build(version);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    },
    "tokenLength" : 16,
    "type" : "org.apache.kafka.common.requests.DeleteTopicsRequest"
  } ],
  "positionList" : [ {
    "charLength" : 318,
    "startLineNumber" : 92,
    "startColumnNumber" : 49,
    "endLineNumber" : 95,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}