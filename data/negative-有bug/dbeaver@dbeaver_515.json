{
  "id" : 515,
  "expression" : "commentToken",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.sql/src/org/jkiss/dbeaver/ui/editors/sql/syntax/SQLPartitionScanner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "commentToken",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 159,
      "startColumnNumber" : 59,
      "endLineNumber" : 159,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 159,
        "startColumnNumber" : 22,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new EndOfLineRule(singleLineComment,commentToken)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "rules.add(new EndOfLineRule(singleLineComment,commentToken))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 74
      },
      "nodeContext" : "rules.add(new EndOfLineRule(singleLineComment,commentToken));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 157,
        "startColumnNumber" : 60,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  rules.add(new EndOfLineRule(singleLineComment,commentToken));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 157,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String singleLineComment : singleLineComments) {\n  rules.add(new EndOfLineRule(singleLineComment,commentToken));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 109,
        "startColumnNumber" : 75,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TPRuleProvider ruleProvider=GeneralUtils.adapt(dialect,TPRuleProvider.class);\n  if (ruleProvider != null) {\n    List<TPRule> partRules=new ArrayList<>();\n    ruleProvider.extendRules(dataSource == null ? null : dataSource.getContainer(),partRules,TPRuleProvider.RulePosition.PARTITION);\n    for (    TPRule pr : partRules) {\n      if (pr instanceof TPPredicateRule) {\n        rules.add(new PredicateRuleAdapter((TPPredicateRule)pr));\n      }\n    }\n  }\n  boolean hasDoubleQuoteRule=false;\n  String[][] identifierQuoteStrings=dialect.getIdentifierQuoteStrings();\n  String[][] stringQuoteStrings=dialect.getStringQuoteStrings();\n  char stringEscapeCharacter=dialect.getStringEscapeCharacter();\n  if (identifierQuoteStrings != null) {\n    for (    String[] quoteString : identifierQuoteStrings) {\n      rules.add(new MultiLineRule(quoteString[0],quoteString[1],sqlQuotedToken,stringEscapeCharacter));\n      if (quoteString[1].equals(SQLConstants.STR_QUOTE_DOUBLE) && quoteString[0].equals(quoteString[1])) {\n        hasDoubleQuoteRule=true;\n      }\n    }\n  }\n  if (!hasDoubleQuoteRule) {\n    rules.add(new MultiLineRule(SQLConstants.STR_QUOTE_DOUBLE,SQLConstants.STR_QUOTE_DOUBLE,sqlQuotedToken,stringEscapeCharacter));\n  }\n  if (!ArrayUtils.isEmpty(stringQuoteStrings)) {\n    for (    String[] quotes : stringQuoteStrings) {\n      rules.add(new MultiLineRule(quotes[0],quotes[1],sqlStringToken,stringEscapeCharacter));\n    }\n  }\n  EmptyCommentRule wordRule=new EmptyCommentRule(multilineCommentToken);\n  rules.add(wordRule);\n  TPRule multiLineCommentRule=ruleManager.getMultiLineCommentRule();\n  if (multiLineCommentRule instanceof TPPredicateRule) {\n    rules.add(new PredicateRuleAdapter((TPPredicateRule)multiLineCommentRule));\n  }\n  String[] singleLineComments=dialect.getSingleLineComments();\n  for (  String singleLineComment : singleLineComments) {\n    rules.add(new EndOfLineRule(singleLineComment,commentToken));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initRules(SQLDialect dialect,SQLRuleManager ruleManager){\n  TPRuleProvider ruleProvider=GeneralUtils.adapt(dialect,TPRuleProvider.class);\n  if (ruleProvider != null) {\n    List<TPRule> partRules=new ArrayList<>();\n    ruleProvider.extendRules(dataSource == null ? null : dataSource.getContainer(),partRules,TPRuleProvider.RulePosition.PARTITION);\n    for (    TPRule pr : partRules) {\n      if (pr instanceof TPPredicateRule) {\n        rules.add(new PredicateRuleAdapter((TPPredicateRule)pr));\n      }\n    }\n  }\n  boolean hasDoubleQuoteRule=false;\n  String[][] identifierQuoteStrings=dialect.getIdentifierQuoteStrings();\n  String[][] stringQuoteStrings=dialect.getStringQuoteStrings();\n  char stringEscapeCharacter=dialect.getStringEscapeCharacter();\n  if (identifierQuoteStrings != null) {\n    for (    String[] quoteString : identifierQuoteStrings) {\n      rules.add(new MultiLineRule(quoteString[0],quoteString[1],sqlQuotedToken,stringEscapeCharacter));\n      if (quoteString[1].equals(SQLConstants.STR_QUOTE_DOUBLE) && quoteString[0].equals(quoteString[1])) {\n        hasDoubleQuoteRule=true;\n      }\n    }\n  }\n  if (!hasDoubleQuoteRule) {\n    rules.add(new MultiLineRule(SQLConstants.STR_QUOTE_DOUBLE,SQLConstants.STR_QUOTE_DOUBLE,sqlQuotedToken,stringEscapeCharacter));\n  }\n  if (!ArrayUtils.isEmpty(stringQuoteStrings)) {\n    for (    String[] quotes : stringQuoteStrings) {\n      rules.add(new MultiLineRule(quotes[0],quotes[1],sqlStringToken,stringEscapeCharacter));\n    }\n  }\n  EmptyCommentRule wordRule=new EmptyCommentRule(multilineCommentToken);\n  rules.add(wordRule);\n  TPRule multiLineCommentRule=ruleManager.getMultiLineCommentRule();\n  if (multiLineCommentRule instanceof TPPredicateRule) {\n    rules.add(new PredicateRuleAdapter((TPPredicateRule)multiLineCommentRule));\n  }\n  String[] singleLineComments=dialect.getSingleLineComments();\n  for (  String singleLineComment : singleLineComments) {\n    rules.add(new EndOfLineRule(singleLineComment,commentToken));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 285,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 74
      },
      "nodeContext" : "rules.add(new EndOfLineRule(singleLineComment,commentToken));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.editors.sql.syntax.IToken"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 159,
    "startColumnNumber" : 59,
    "endLineNumber" : 159,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}