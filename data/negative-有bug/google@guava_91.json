{
  "id" : 91,
  "expression" : "i",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/cache/CacheRefreshTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 42,
      "startColumnNumber" : 20,
      "endLineNumber" : 42,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 42,
        "startColumnNumber" : 20,
        "endLineNumber" : 42,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n  expectedLoads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2975,
        "startLineNumber" : 30,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 437,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3005,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testAutoRefresh(){\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 441,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 42,
        "startColumnNumber" : 20,
        "endLineNumber" : 42,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 43,
      "startColumnNumber" : 35,
      "endLineNumber" : 43,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 19,
        "endLineNumber" : 43,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Integer.valueOf(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 42,
        "startColumnNumber" : 32,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n  expectedLoads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n  expectedLoads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2975,
        "startLineNumber" : 30,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 437,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3005,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testAutoRefresh(){\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 441,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 43,
      "startColumnNumber" : 58,
      "endLineNumber" : 43,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 43,
        "startColumnNumber" : 39,
        "endLineNumber" : 43,
        "endColumnNumber" : 60
      },
      "nodeContext" : "cache.getUnchecked(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 42,
        "startColumnNumber" : 32,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n  expectedLoads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n  expectedLoads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2975,
        "startLineNumber" : 30,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 437,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3005,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testAutoRefresh(){\n  FakeTicker ticker=new FakeTicker();\n  IncrementingLoader loader=incrementingLoader();\n  LoadingCache<Integer,Integer> cache=CacheBuilder.newBuilder().refreshAfterWrite(3,MILLISECONDS).expireAfterWrite(6,MILLISECONDS).lenientParsing().ticker(ticker).build(loader);\n  int expectedLoads=0;\n  int expectedReloads=0;\n  for (int i=0; i < 3; i++) {\n    assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n    expectedLoads++;\n    assertEquals(expectedLoads,loader.getLoadCount());\n    assertEquals(expectedReloads,loader.getReloadCount());\n    ticker.advance(1,MILLISECONDS);\n  }\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  cache.asMap().put(1,-1);\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  expectedReloads++;\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(1),cache.getUnchecked(0));\n  assertEquals(Integer.valueOf(-1),cache.getUnchecked(1));\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n  ticker.advance(1,MILLISECONDS);\n  assertEquals(Integer.valueOf(2),cache.getUnchecked(0));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(0),cache.getUnchecked(1));\n  expectedReloads++;\n  assertEquals(Integer.valueOf(3),cache.getUnchecked(2));\n  assertEquals(expectedLoads,loader.getLoadCount());\n  assertEquals(expectedReloads,loader.getReloadCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 441,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Integer.valueOf(i),cache.getUnchecked(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 42,
    "startColumnNumber" : 20,
    "endLineNumber" : 42,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 43,
    "startColumnNumber" : 35,
    "endLineNumber" : 43,
    "endColumnNumber" : 36
  }, {
    "charLength" : 1,
    "startLineNumber" : 43,
    "startColumnNumber" : 58,
    "endLineNumber" : 43,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}