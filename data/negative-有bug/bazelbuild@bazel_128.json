{
  "id" : 128,
  "expression" : "\"\\t== \"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/classfile/util/InstructionSequenceMatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\t== \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 749,
      "startColumnNumber" : 179,
      "endLineNumber" : 749,
      "endColumnNumber" : 186
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 749,
        "startColumnNumber" : 169,
        "endLineNumber" : 749,
        "endColumnNumber" : 194
      },
      "nodeContext" : "condition ? \"\\t== \" : \"\\t   \"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 749,
        "startColumnNumber" : 168,
        "endLineNumber" : 749,
        "endColumnNumber" : 195
      },
      "nodeContext" : "(condition ? \"\\t== \" : \"\\t   \")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 749,
        "startColumnNumber" : 31,
        "endLineNumber" : 749,
        "endColumnNumber" : 274
      },
      "nodeContext" : "\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 749,
        "startColumnNumber" : 12,
        "endLineNumber" : 749,
        "endColumnNumber" : 275
      },
      "nodeContext" : "System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 749,
        "startColumnNumber" : 12,
        "endLineNumber" : 749,
        "endColumnNumber" : 276
      },
      "nodeContext" : "System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 748,
        "startColumnNumber" : 8,
        "endLineNumber" : 750,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 747,
        "startColumnNumber" : 8,
        "endLineNumber" : 750,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (DEBUG_MORE) {\n  System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2855,
        "startLineNumber" : 746,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (DEBUG_MORE) {\n    System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n  }\n  if (condition) {\n    matchedInstructionOffsets[patternInstructionIndex]=offset;\n    patternInstructionIndex++;\n    matching=patternInstructionIndex == patternInstructions.length;\n    if (matching) {\n      matching&=finalMatch(clazz,method,codeAttribute,offset,instruction);\n      if (DEBUG) {\n        System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]\");\n        for (int index=0; index < patternInstructionIndex; index++) {\n          System.out.println(\"    \" + InstructionFactory.create(codeAttribute.code,matchedInstructionOffsets[index]).toString(matchedInstructionOffsets[index]));\n        }\n        for (int index=0; index < matchedArguments.length; index++) {\n          if ((matchedArgumentFlags & (1 << index)) != 0) {\n            System.out.println(\"      Arg #\" + index + \": \"+ matchedArguments[index]);\n          }\n        }\n        for (int index=0; index < matchedConstantIndices.length; index++) {\n          if (isMatchingConstantIndex(index)) {\n            System.out.println(\"      Constant #\" + index + \": \"+ matchedConstantIndices[index]);\n          }\n        }\n      }\n      reset();\n    }\n  }\n else {\n    matching=false;\n    boolean retry=patternInstructionIndex == 1;\n    reset();\n    if (retry) {\n      instruction.accept(clazz,method,codeAttribute,offset,this);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3169,
        "startLineNumber" : 740,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkMatch(boolean condition,Clazz clazz,Method method,CodeAttribute codeAttribute,int offset,Instruction instruction){\n  if (DEBUG_MORE) {\n    System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n  }\n  if (condition) {\n    matchedInstructionOffsets[patternInstructionIndex]=offset;\n    patternInstructionIndex++;\n    matching=patternInstructionIndex == patternInstructions.length;\n    if (matching) {\n      matching&=finalMatch(clazz,method,codeAttribute,offset,instruction);\n      if (DEBUG) {\n        System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]\");\n        for (int index=0; index < patternInstructionIndex; index++) {\n          System.out.println(\"    \" + InstructionFactory.create(codeAttribute.code,matchedInstructionOffsets[index]).toString(matchedInstructionOffsets[index]));\n        }\n        for (int index=0; index < matchedArguments.length; index++) {\n          if ((matchedArgumentFlags & (1 << index)) != 0) {\n            System.out.println(\"      Arg #\" + index + \": \"+ matchedArguments[index]);\n          }\n        }\n        for (int index=0; index < matchedConstantIndices.length; index++) {\n          if (isMatchingConstantIndex(index)) {\n            System.out.println(\"      Constant #\" + index + \": \"+ matchedConstantIndices[index]);\n          }\n        }\n      }\n      reset();\n    }\n  }\n else {\n    matching=false;\n    boolean retry=patternInstructionIndex == 1;\n    reset();\n    if (retry) {\n      instruction.accept(clazz,method,codeAttribute,offset,this);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 749,
        "startColumnNumber" : 12,
        "endLineNumber" : 749,
        "endColumnNumber" : 276
      },
      "nodeContext" : "System.out.println(\"InstructionSequenceMatcher: [\" + clazz.getName() + \".\"+ method.getName(clazz)+ method.getDescriptor(clazz)+ \"]: \"+ instruction.toString(offset)+ (condition ? \"\\t== \" : \"\\t   \")+ patternInstructions[patternInstructionIndex].toString(patternInstructionIndex));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 36,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 749,
    "startColumnNumber" : 179,
    "endLineNumber" : 749,
    "endColumnNumber" : 186
  } ],
  "layoutRelationDataList" : [ ]
}