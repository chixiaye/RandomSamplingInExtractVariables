{
  "id" : 420,
  "expression" : "count.get()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "count.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 101,
      "startColumnNumber" : 31,
      "endLineNumber" : 101,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.assertEquals(2,count.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(2,count.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1555,
        "startLineNumber" : 54,
        "startColumnNumber" : 61,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NotifyCenter.registerToSharePublisher(TestSlowEvent.class);\n  NotifyCenter.registerToPublisher(TestEvent.class,8);\n  final CountDownLatch latch=new CountDownLatch(2);\n  final AtomicInteger count=new AtomicInteger(0);\n  NotifyCenter.registerSubscriber(new Subscriber<TestSlowEvent>(){\n    @Override public void onEvent(    TestSlowEvent event){\n      try {\n        count.incrementAndGet();\n      }\n  finally {\n        latch.countDown();\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return TestSlowEvent.class;\n    }\n  }\n);\n  NotifyCenter.registerSubscriber(new Subscriber<TestEvent>(){\n    @Override public void onEvent(    TestEvent event){\n      try {\n        count.incrementAndGet();\n      }\n  finally {\n        latch.countDown();\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return TestEvent.class;\n    }\n  }\n);\n  Assert.assertTrue(NotifyCenter.publishEvent(new TestEvent()));\n  Assert.assertTrue(NotifyCenter.publishEvent(new TestSlowEvent()));\n  ThreadUtils.sleep(5000L);\n  latch.await(5000L,TimeUnit.MILLISECONDS);\n  Assert.assertEquals(2,count.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1622,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testEventsCanBeSubscribed() throws Exception {\n  NotifyCenter.registerToSharePublisher(TestSlowEvent.class);\n  NotifyCenter.registerToPublisher(TestEvent.class,8);\n  final CountDownLatch latch=new CountDownLatch(2);\n  final AtomicInteger count=new AtomicInteger(0);\n  NotifyCenter.registerSubscriber(new Subscriber<TestSlowEvent>(){\n    @Override public void onEvent(    TestSlowEvent event){\n      try {\n        count.incrementAndGet();\n      }\n  finally {\n        latch.countDown();\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return TestSlowEvent.class;\n    }\n  }\n);\n  NotifyCenter.registerSubscriber(new Subscriber<TestEvent>(){\n    @Override public void onEvent(    TestEvent event){\n      try {\n        count.incrementAndGet();\n      }\n  finally {\n        latch.countDown();\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return TestEvent.class;\n    }\n  }\n);\n  Assert.assertTrue(NotifyCenter.publishEvent(new TestEvent()));\n  Assert.assertTrue(NotifyCenter.publishEvent(new TestSlowEvent()));\n  ThreadUtils.sleep(5000L);\n  latch.await(5000L,TimeUnit.MILLISECONDS);\n  Assert.assertEquals(2,count.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(2,count.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 101,
    "startColumnNumber" : 31,
    "endLineNumber" : 101,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}