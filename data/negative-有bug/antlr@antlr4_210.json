{
  "id" : 210,
  "expression" : "Map.Entry",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/codegen/model/ListenerFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Map.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 53,
      "startColumnNumber" : 9,
      "endLineNumber" : 53,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 53,
        "startColumnNumber" : 9,
        "endLineNumber" : 53,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 53,
        "startColumnNumber" : 9,
        "endLineNumber" : 53,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Map.Entry<String,List<Pair<Integer,AltAST>>>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 53,
        "startColumnNumber" : 9,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry<String,List<Pair<Integer,AltAST>>> pair",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n  listenerNames.add(pair.getKey());\n  listenerLabelRuleNames.put(pair.getKey(),r.name);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 52,
        "startColumnNumber" : 23,
        "endLineNumber" : 57,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  for (  Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n    listenerNames.add(pair.getKey());\n    listenerLabelRuleNames.put(pair.getKey(),r.name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 52,
        "startColumnNumber" : 3,
        "endLineNumber" : 61,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (labels != null) {\n  for (  Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n    listenerNames.add(pair.getKey());\n    listenerLabelRuleNames.put(pair.getKey(),r.name);\n  }\n}\n else {\n  listenerNames.add(r.name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 50,
        "startColumnNumber" : 34,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,List<Pair<Integer,AltAST>>> labels=r.getAltLabels();\n  if (labels != null) {\n    for (    Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n      listenerNames.add(pair.getKey());\n      listenerLabelRuleNames.put(pair.getKey(),r.name);\n    }\n  }\n else {\n    listenerNames.add(r.name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Rule r : g.rules.values()) {\n  Map<String,List<Pair<Integer,AltAST>>> labels=r.getAltLabels();\n  if (labels != null) {\n    for (    Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n      listenerNames.add(pair.getKey());\n      listenerLabelRuleNames.put(pair.getKey(),r.name);\n    }\n  }\n else {\n    listenerNames.add(r.name);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 44,
        "startColumnNumber" : 66,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory,fileName);\n  Grammar g=factory.getGrammar();\n  parserName=g.getRecognizerName();\n  grammarName=g.name;\n  namedActions=buildNamedActions(factory.getGrammar());\n  for (  Rule r : g.rules.values()) {\n    Map<String,List<Pair<Integer,AltAST>>> labels=r.getAltLabels();\n    if (labels != null) {\n      for (      Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n        listenerNames.add(pair.getKey());\n        listenerLabelRuleNames.put(pair.getKey(),r.name);\n      }\n    }\n else {\n      listenerNames.add(r.name);\n    }\n  }\n  ActionAST ast=g.namedActions.get(\"header\");\n  if (ast != null)   header=new Action(factory,ast);\n  genPackage=g.tool.genPackage;\n  accessLevel=g.getOptionString(\"accessLevel\");\n  exportMacro=g.getOptionString(\"exportMacro\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 44,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public ListenerFile(OutputModelFactory factory,String fileName){\n  super(factory,fileName);\n  Grammar g=factory.getGrammar();\n  parserName=g.getRecognizerName();\n  grammarName=g.name;\n  namedActions=buildNamedActions(factory.getGrammar());\n  for (  Rule r : g.rules.values()) {\n    Map<String,List<Pair<Integer,AltAST>>> labels=r.getAltLabels();\n    if (labels != null) {\n      for (      Map.Entry<String,List<Pair<Integer,AltAST>>> pair : labels.entrySet()) {\n        listenerNames.add(pair.getKey());\n        listenerLabelRuleNames.put(pair.getKey(),r.name);\n      }\n    }\n else {\n      listenerNames.add(r.name);\n    }\n  }\n  ActionAST ast=g.namedActions.get(\"header\");\n  if (ast != null)   header=new Action(factory,ast);\n  genPackage=g.tool.genPackage;\n  accessLevel=g.getOptionString(\"accessLevel\");\n  exportMacro=g.getOptionString(\"exportMacro\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 53,
        "startColumnNumber" : 9,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry<String,List<Pair<Integer,AltAST>>> pair",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.Map.Entry<java.lang.String,java.util.List<org.antlr.v4.runtime.misc.Pair<java.lang.Integer,org.antlr.v4.tool.ast.AltAST>>>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 53,
    "startColumnNumber" : 9,
    "endLineNumber" : 53,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}