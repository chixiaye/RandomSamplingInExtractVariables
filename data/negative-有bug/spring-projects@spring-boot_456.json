{
  "id" : 456,
  "expression" : "this.messageConverter",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.messageConverter",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 75,
      "startColumnNumber" : 6,
      "endLineNumber" : 75,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.messageConverter != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.messageConverter != null) {\n  kafkaTemplate.setMessageConverter(this.messageConverter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 72,
        "startColumnNumber" : 59,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  KafkaTemplate<Object,Object> kafkaTemplate=new KafkaTemplate<>(kafkaProducerFactory);\n  if (this.messageConverter != null) {\n    kafkaTemplate.setMessageConverter(this.messageConverter);\n  }\n  kafkaTemplate.setProducerListener(kafkaProducerListener);\n  kafkaTemplate.setDefaultTopic(this.properties.getTemplate().getDefaultTopic());\n  return kafkaTemplate;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 68,
        "startColumnNumber" : 1,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Bean @ConditionalOnMissingBean(KafkaTemplate.class) public KafkaTemplate<?,?> kafkaTemplate(ProducerFactory<Object,Object> kafkaProducerFactory,ProducerListener<Object,Object> kafkaProducerListener){\n  KafkaTemplate<Object,Object> kafkaTemplate=new KafkaTemplate<>(kafkaProducerFactory);\n  if (this.messageConverter != null) {\n    kafkaTemplate.setMessageConverter(this.messageConverter);\n  }\n  kafkaTemplate.setProducerListener(kafkaProducerListener);\n  kafkaTemplate.setDefaultTopic(this.properties.getTemplate().getDefaultTopic());\n  return kafkaTemplate;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.messageConverter != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.autoconfigure.kafka.RecordMessageConverter"
  }, {
    "nodeContext" : "this.messageConverter",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 76,
      "startColumnNumber" : 37,
      "endLineNumber" : 76,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 59
      },
      "nodeContext" : "kafkaTemplate.setMessageConverter(this.messageConverter)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "kafkaTemplate.setMessageConverter(this.messageConverter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 75,
        "startColumnNumber" : 37,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  kafkaTemplate.setMessageConverter(this.messageConverter);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.messageConverter != null) {\n  kafkaTemplate.setMessageConverter(this.messageConverter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 72,
        "startColumnNumber" : 59,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  KafkaTemplate<Object,Object> kafkaTemplate=new KafkaTemplate<>(kafkaProducerFactory);\n  if (this.messageConverter != null) {\n    kafkaTemplate.setMessageConverter(this.messageConverter);\n  }\n  kafkaTemplate.setProducerListener(kafkaProducerListener);\n  kafkaTemplate.setDefaultTopic(this.properties.getTemplate().getDefaultTopic());\n  return kafkaTemplate;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 68,
        "startColumnNumber" : 1,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Bean @ConditionalOnMissingBean(KafkaTemplate.class) public KafkaTemplate<?,?> kafkaTemplate(ProducerFactory<Object,Object> kafkaProducerFactory,ProducerListener<Object,Object> kafkaProducerListener){\n  KafkaTemplate<Object,Object> kafkaTemplate=new KafkaTemplate<>(kafkaProducerFactory);\n  if (this.messageConverter != null) {\n    kafkaTemplate.setMessageConverter(this.messageConverter);\n  }\n  kafkaTemplate.setProducerListener(kafkaProducerListener);\n  kafkaTemplate.setDefaultTopic(this.properties.getTemplate().getDefaultTopic());\n  return kafkaTemplate;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "kafkaTemplate.setMessageConverter(this.messageConverter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.autoconfigure.kafka.RecordMessageConverter"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 75,
    "startColumnNumber" : 6,
    "endLineNumber" : 75,
    "endColumnNumber" : 27
  }, {
    "charLength" : 21,
    "startLineNumber" : 76,
    "startColumnNumber" : 37,
    "endLineNumber" : 76,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}