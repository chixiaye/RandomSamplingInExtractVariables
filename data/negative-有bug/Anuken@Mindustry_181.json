{
  "id" : 181,
  "expression" : "type == group.type",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/game/SpawnGroup.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "type == group.type",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 152,
      "startColumnNumber" : 12,
      "endLineNumber" : 152,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 149,
        "startColumnNumber" : 15,
        "endLineNumber" : 152,
        "endColumnNumber" : 30
      },
      "nodeContext" : "end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 149,
        "startColumnNumber" : 15,
        "endLineNumber" : 152,
        "endColumnNumber" : 56
      },
      "nodeContext" : "end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type && effect == group.effect",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 71,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 149,
        "startColumnNumber" : 15,
        "endLineNumber" : 152,
        "endColumnNumber" : 90
      },
      "nodeContext" : "end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type && effect == group.effect && Structs.eq(items,group.items)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 91
      },
      "nodeContext" : "return end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type && effect == group.effect && Structs.eq(items,group.items);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 80,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 145,
        "startColumnNumber" : 35,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this == o)   return true;\n  if (o == null || getClass() != o.getClass())   return false;\n  SpawnGroup group=(SpawnGroup)o;\n  return end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type && effect == group.effect && Structs.eq(items,group.items);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean equals(Object o){\n  if (this == o)   return true;\n  if (o == null || getClass() != o.getClass())   return false;\n  SpawnGroup group=(SpawnGroup)o;\n  return end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type && effect == group.effect && Structs.eq(items,group.items);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 149,
        "startColumnNumber" : 15,
        "endLineNumber" : 152,
        "endColumnNumber" : 30
      },
      "nodeContext" : "end == group.end && begin == group.begin && spacing == group.spacing && max == group.max && Float.compare(group.unitScaling,unitScaling) == 0 && Float.compare(group.shields,shields) == 0 && Float.compare(group.shieldScaling,shieldScaling) == 0 && unitAmount == group.unitAmount && type == group.type",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 65,
      "astHeight" : 11
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 152,
    "startColumnNumber" : 12,
    "endLineNumber" : 152,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}