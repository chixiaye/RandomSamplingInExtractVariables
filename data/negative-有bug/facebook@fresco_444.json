{
  "id" : 444,
  "expression" : "Preconditions",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/native-filters/src/main/java/com/facebook/imagepipeline/nativecode/NativeBlurFilter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Preconditions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 43,
      "startColumnNumber" : 4,
      "endLineNumber" : 43,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Preconditions.checkNotNull(bitmap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Preconditions.checkNotNull(bitmap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 42,
        "startColumnNumber" : 85,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This is a fast, native implementation of an iterative box blur. The algorithm runs in-place on the provided bitmap and therefore has a very small memory footprint. <p>The iterative box blur has the nice property that it approximates the Gaussian blur very quickly. Usually iterations=3 is sufficient such that the casual observer cannot tell the difference. <p>The edge pixels are repeated such that the bitmap still has a well-defined border. <p>Asymptotic runtime: O(width * height * iterations) <p>Asymptotic memory: O(radius + max(width, height))\n * @param bitmap The targeted bitmap that will be blurred in-place. Each dimension must not begreater than 65536.\n * @param iterations The number of iterations to run. Must be greater than 0 and not greater than65536.\n * @param blurRadius The given blur radius. Must be greater than 0 and not greater than 65536.\n */\npublic static void iterativeBoxBlur(Bitmap bitmap,int iterations,int blurRadius){\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Preconditions.checkNotNull(bitmap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.common.internal.Preconditions"
  }, {
    "nodeContext" : "Preconditions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 44,
      "startColumnNumber" : 4,
      "endLineNumber" : 44,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Preconditions.checkArgument(iterations > 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkArgument(iterations > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 42,
        "startColumnNumber" : 85,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This is a fast, native implementation of an iterative box blur. The algorithm runs in-place on the provided bitmap and therefore has a very small memory footprint. <p>The iterative box blur has the nice property that it approximates the Gaussian blur very quickly. Usually iterations=3 is sufficient such that the casual observer cannot tell the difference. <p>The edge pixels are repeated such that the bitmap still has a well-defined border. <p>Asymptotic runtime: O(width * height * iterations) <p>Asymptotic memory: O(radius + max(width, height))\n * @param bitmap The targeted bitmap that will be blurred in-place. Each dimension must not begreater than 65536.\n * @param iterations The number of iterations to run. Must be greater than 0 and not greater than65536.\n * @param blurRadius The given blur radius. Must be greater than 0 and not greater than 65536.\n */\npublic static void iterativeBoxBlur(Bitmap bitmap,int iterations,int blurRadius){\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkArgument(iterations > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.common.internal.Preconditions"
  }, {
    "nodeContext" : "Preconditions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 45,
      "startColumnNumber" : 4,
      "endLineNumber" : 45,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Preconditions.checkArgument(blurRadius > 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkArgument(blurRadius > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 42,
        "startColumnNumber" : 85,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This is a fast, native implementation of an iterative box blur. The algorithm runs in-place on the provided bitmap and therefore has a very small memory footprint. <p>The iterative box blur has the nice property that it approximates the Gaussian blur very quickly. Usually iterations=3 is sufficient such that the casual observer cannot tell the difference. <p>The edge pixels are repeated such that the bitmap still has a well-defined border. <p>Asymptotic runtime: O(width * height * iterations) <p>Asymptotic memory: O(radius + max(width, height))\n * @param bitmap The targeted bitmap that will be blurred in-place. Each dimension must not begreater than 65536.\n * @param iterations The number of iterations to run. Must be greater than 0 and not greater than65536.\n * @param blurRadius The given blur radius. Must be greater than 0 and not greater than 65536.\n */\npublic static void iterativeBoxBlur(Bitmap bitmap,int iterations,int blurRadius){\n  Preconditions.checkNotNull(bitmap);\n  Preconditions.checkArgument(iterations > 0);\n  Preconditions.checkArgument(blurRadius > 0);\n  nativeIterativeBoxBlur(bitmap,iterations,blurRadius);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkArgument(blurRadius > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.common.internal.Preconditions"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 43,
    "startColumnNumber" : 4,
    "endLineNumber" : 43,
    "endColumnNumber" : 17
  }, {
    "charLength" : 13,
    "startLineNumber" : 44,
    "startColumnNumber" : 4,
    "endLineNumber" : 44,
    "endColumnNumber" : 17
  }, {
    "charLength" : 13,
    "startLineNumber" : 45,
    "startColumnNumber" : 4,
    "endLineNumber" : 45,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}