{
  "id" : 508,
  "expression" : "restoreCallback instanceof RecordBatchingStateRestoreCallback",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/processor/internals/StateRestoreCallbackAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "restoreCallback instanceof RecordBatchingStateRestoreCallback",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 34,
      "startColumnNumber" : 12,
      "endLineNumber" : 34,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (restoreCallback instanceof RecordBatchingStateRestoreCallback) {\n  return (RecordBatchingStateRestoreCallback)restoreCallback;\n}\n else if (restoreCallback instanceof BatchingStateRestoreCallback) {\n  return records -> {\n    final List<KeyValue<byte[],byte[]>> keyValues=new ArrayList<>();\n    for (    final ConsumerRecord<byte[],byte[]> record : records) {\n      keyValues.add(new KeyValue<>(record.key(),record.value()));\n    }\n    ((BatchingStateRestoreCallback)restoreCallback).restoreAll(keyValues);\n  }\n;\n}\n else {\n  return records -> {\n    for (    final ConsumerRecord<byte[],byte[]> record : records) {\n      restoreCallback.restore(record.key(),record.value());\n    }\n  }\n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 32,
        "startColumnNumber" : 103,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Objects.requireNonNull(restoreCallback,\"stateRestoreCallback must not be null\");\n  if (restoreCallback instanceof RecordBatchingStateRestoreCallback) {\n    return (RecordBatchingStateRestoreCallback)restoreCallback;\n  }\n else   if (restoreCallback instanceof BatchingStateRestoreCallback) {\n    return records -> {\n      final List<KeyValue<byte[],byte[]>> keyValues=new ArrayList<>();\n      for (      final ConsumerRecord<byte[],byte[]> record : records) {\n        keyValues.add(new KeyValue<>(record.key(),record.value()));\n      }\n      ((BatchingStateRestoreCallback)restoreCallback).restoreAll(keyValues);\n    }\n;\n  }\n else {\n    return records -> {\n      for (      final ConsumerRecord<byte[],byte[]> record : records) {\n        restoreCallback.restore(record.key(),record.value());\n      }\n    }\n;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1065,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static RecordBatchingStateRestoreCallback adapt(final StateRestoreCallback restoreCallback){\n  Objects.requireNonNull(restoreCallback,\"stateRestoreCallback must not be null\");\n  if (restoreCallback instanceof RecordBatchingStateRestoreCallback) {\n    return (RecordBatchingStateRestoreCallback)restoreCallback;\n  }\n else   if (restoreCallback instanceof BatchingStateRestoreCallback) {\n    return records -> {\n      final List<KeyValue<byte[],byte[]>> keyValues=new ArrayList<>();\n      for (      final ConsumerRecord<byte[],byte[]> record : records) {\n        keyValues.add(new KeyValue<>(record.key(),record.value()));\n      }\n      ((BatchingStateRestoreCallback)restoreCallback).restoreAll(keyValues);\n    }\n;\n  }\n else {\n    return records -> {\n      for (      final ConsumerRecord<byte[],byte[]> record : records) {\n        restoreCallback.restore(record.key(),record.value());\n      }\n    }\n;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (restoreCallback instanceof RecordBatchingStateRestoreCallback) {\n  return (RecordBatchingStateRestoreCallback)restoreCallback;\n}\n else if (restoreCallback instanceof BatchingStateRestoreCallback) {\n  return records -> {\n    final List<KeyValue<byte[],byte[]>> keyValues=new ArrayList<>();\n    for (    final ConsumerRecord<byte[],byte[]> record : records) {\n      keyValues.add(new KeyValue<>(record.key(),record.value()));\n    }\n    ((BatchingStateRestoreCallback)restoreCallback).restoreAll(keyValues);\n  }\n;\n}\n else {\n  return records -> {\n    for (    final ConsumerRecord<byte[],byte[]> record : records) {\n      restoreCallback.restore(record.key(),record.value());\n    }\n  }\n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 14
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 34,
    "startColumnNumber" : 12,
    "endLineNumber" : 34,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}