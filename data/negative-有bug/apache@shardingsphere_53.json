{
  "id" : 53,
  "expression" : "sqlCaseMap",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/jaxb/distsql/loader/DistSQLCasesLoader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sqlCaseMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 48,
      "startColumnNumber" : 38,
      "endLineNumber" : 48,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 48,
        "startColumnNumber" : 38,
        "endLineNumber" : 48,
        "endColumnNumber" : 74
      },
      "nodeContext" : "sqlCaseMap.containsKey(each.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 48,
        "startColumnNumber" : 37,
        "endLineNumber" : 48,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!sqlCaseMap.containsKey(each.getId())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 121
      },
      "nodeContext" : "Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 47,
        "startColumnNumber" : 60,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n  sqlCaseMap.put(each.getId(),each);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DistSQLCase each : sqlCases.getDistSQLCases()) {\n  Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n  sqlCaseMap.put(each.getId(),each);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 45,
        "startColumnNumber" : 117,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DistSQLCases sqlCases=(DistSQLCases)JAXBContext.newInstance(DistSQLCases.class).createUnmarshaller().unmarshal(inputStream);\n  for (  DistSQLCase each : sqlCases.getDistSQLCases()) {\n    Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n    sqlCaseMap.put(each.getId(),each);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void buildCaseMap(final Map<String,Case> sqlCaseMap,final InputStream inputStream) throws JAXBException {\n  DistSQLCases sqlCases=(DistSQLCases)JAXBContext.newInstance(DistSQLCases.class).createUnmarshaller().unmarshal(inputStream);\n  for (  DistSQLCase each : sqlCases.getDistSQLCases()) {\n    Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n    sqlCaseMap.put(each.getId(),each);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 121
      },
      "nodeContext" : "Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.Case>"
  }, {
    "nodeContext" : "sqlCaseMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 49,
      "startColumnNumber" : 12,
      "endLineNumber" : 49,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "sqlCaseMap.put(each.getId(),each)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sqlCaseMap.put(each.getId(),each);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 47,
        "startColumnNumber" : 60,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n  sqlCaseMap.put(each.getId(),each);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DistSQLCase each : sqlCases.getDistSQLCases()) {\n  Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n  sqlCaseMap.put(each.getId(),each);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 45,
        "startColumnNumber" : 117,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DistSQLCases sqlCases=(DistSQLCases)JAXBContext.newInstance(DistSQLCases.class).createUnmarshaller().unmarshal(inputStream);\n  for (  DistSQLCase each : sqlCases.getDistSQLCases()) {\n    Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n    sqlCaseMap.put(each.getId(),each);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void buildCaseMap(final Map<String,Case> sqlCaseMap,final InputStream inputStream) throws JAXBException {\n  DistSQLCases sqlCases=(DistSQLCases)JAXBContext.newInstance(DistSQLCases.class).createUnmarshaller().unmarshal(inputStream);\n  for (  DistSQLCase each : sqlCases.getDistSQLCases()) {\n    Preconditions.checkState(!sqlCaseMap.containsKey(each.getId()),\"Find duplicated Case ID: %s\",each.getId());\n    sqlCaseMap.put(each.getId(),each);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sqlCaseMap.put(each.getId(),each);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.Case>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 48,
    "startColumnNumber" : 38,
    "endLineNumber" : 48,
    "endColumnNumber" : 48
  }, {
    "charLength" : 10,
    "startLineNumber" : 49,
    "startColumnNumber" : 12,
    "endLineNumber" : 49,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}