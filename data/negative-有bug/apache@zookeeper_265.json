{
  "id" : 265,
  "expression" : "this",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/zookeeper-server/src/main/java/org/apache/zookeeper/compat/ProtocolManager.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 12,
      "endLineNumber" : 55,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 36
      },
      "nodeContext" : "this.isReadonlyAvailable",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 43
      },
      "nodeContext" : "this.isReadonlyAvailable=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.isReadonlyAvailable=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n catch (Exception e) {\n  request.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 43,
        "startColumnNumber" : 98,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectRequestWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectRequestWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectRequest request=deserializeConnectRequestWithoutReadonly(inputArchive);\n  try {\n    request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    request.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Deserializing  {@link ConnectRequest} should be specially handled for request from clientversion before and including ZooKeeper 3.3 which doesn't understand readOnly field.\n */\npublic ConnectRequest deserializeConnectRequest(InputArchive inputArchive) throws IOException {\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectRequestWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectRequestWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectRequest request=deserializeConnectRequestWithoutReadonly(inputArchive);\n  try {\n    request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    request.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.isReadonlyAvailable=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.compat.ProtocolManager"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 58,
      "startColumnNumber" : 12,
      "endLineNumber" : 58,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "this.isReadonlyAvailable",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.isReadonlyAvailable=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.isReadonlyAvailable=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 56,
        "startColumnNumber" : 30,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  request.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  request.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n catch (Exception e) {\n  request.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 43,
        "startColumnNumber" : 98,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectRequestWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectRequestWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectRequest request=deserializeConnectRequestWithoutReadonly(inputArchive);\n  try {\n    request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    request.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Deserializing  {@link ConnectRequest} should be specially handled for request from clientversion before and including ZooKeeper 3.3 which doesn't understand readOnly field.\n */\npublic ConnectRequest deserializeConnectRequest(InputArchive inputArchive) throws IOException {\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectRequestWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectRequestWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectRequest request=deserializeConnectRequestWithoutReadonly(inputArchive);\n  try {\n    request.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    request.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.isReadonlyAvailable=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.compat.ProtocolManager"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 12,
    "endLineNumber" : 55,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 58,
    "startColumnNumber" : 12,
    "endLineNumber" : 58,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}