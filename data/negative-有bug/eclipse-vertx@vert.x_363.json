{
  "id" : 363,
  "expression" : "new AtomicInteger(workers.size())",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/net/impl/VertxEventLoopGroup.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicInteger(workers.size())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 116,
      "startColumnNumber" : 36,
      "endLineNumber" : 116,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 116,
        "startColumnNumber" : 26,
        "endLineNumber" : 116,
        "endColumnNumber" : 69
      },
      "nodeContext" : "counter=new AtomicInteger(workers.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final AtomicInteger counter=new AtomicInteger(workers.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 115,
        "startColumnNumber" : 53,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger counter=new AtomicInteger(workers.size());\n  for (  EventLoopHolder holder : workers) {\n    holder.worker.shutdownGracefully().addListener(new GenericFutureListener(){\n      @Override public void operationComplete(      Future future) throws Exception {\n        if (counter.decrementAndGet() == 0) {\n          terminationFuture.setSuccess(null);\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (gracefulShutdown.compareAndSet(false,true)) {\n  final AtomicInteger counter=new AtomicInteger(workers.size());\n  for (  EventLoopHolder holder : workers) {\n    holder.worker.shutdownGracefully().addListener(new GenericFutureListener(){\n      @Override public void operationComplete(      Future future) throws Exception {\n        if (counter.decrementAndGet() == 0) {\n          terminationFuture.setSuccess(null);\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 114,
        "startColumnNumber" : 85,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (gracefulShutdown.compareAndSet(false,true)) {\n    final AtomicInteger counter=new AtomicInteger(workers.size());\n    for (    EventLoopHolder holder : workers) {\n      holder.worker.shutdownGracefully().addListener(new GenericFutureListener(){\n        @Override public void operationComplete(        Future future) throws Exception {\n          if (counter.decrementAndGet() == 0) {\n            terminationFuture.setSuccess(null);\n          }\n        }\n      }\n);\n    }\n  }\n  return terminationFuture;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Future<?> shutdownGracefully(long quietPeriod,long timeout,TimeUnit unit){\n  if (gracefulShutdown.compareAndSet(false,true)) {\n    final AtomicInteger counter=new AtomicInteger(workers.size());\n    for (    EventLoopHolder holder : workers) {\n      holder.worker.shutdownGracefully().addListener(new GenericFutureListener(){\n        @Override public void operationComplete(        Future future) throws Exception {\n          if (counter.decrementAndGet() == 0) {\n            terminationFuture.setSuccess(null);\n          }\n        }\n      }\n);\n    }\n  }\n  return terminationFuture;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final AtomicInteger counter=new AtomicInteger(workers.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 116,
    "startColumnNumber" : 36,
    "endLineNumber" : 116,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}