{
  "id" : 517,
  "expression" : "((ByteBuffer)buffer)",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((ByteBuffer)buffer)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 805,
      "startColumnNumber" : 69,
      "endLineNumber" : 805,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 805,
        "startColumnNumber" : 69,
        "endLineNumber" : 805,
        "endColumnNumber" : 105
      },
      "nodeContext" : "((ByteBuffer)buffer).asShortBuffer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 805,
        "startColumnNumber" : 4,
        "endLineNumber" : 805,
        "endColumnNumber" : 106
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 805,
        "startColumnNumber" : 4,
        "endLineNumber" : 805,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 804,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 802,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 800,
        "startColumnNumber" : 3,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 799,
        "startColumnNumber" : 36,
        "endLineNumber" : 817,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 799,
        "startColumnNumber" : 2,
        "endLineNumber" : 825,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (buffer instanceof ByteBuffer) {\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n else if (buffer instanceof FloatBuffer) {\n  if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n}\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 798,
        "startColumnNumber" : 113,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 798,
        "startColumnNumber" : 1,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void glVertexAttribPointer(int indx,int size,int type,boolean normalized,int stride,Buffer buffer){\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 805,
        "startColumnNumber" : 4,
        "endLineNumber" : 805,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "com.badlogic.gdx.backends.lwjgl3.ByteBuffer"
  }, {
    "nodeContext" : "((ByteBuffer)buffer)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 807,
      "startColumnNumber" : 69,
      "endLineNumber" : 807,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 807,
        "startColumnNumber" : 69,
        "endLineNumber" : 807,
        "endColumnNumber" : 105
      },
      "nodeContext" : "((ByteBuffer)buffer).asShortBuffer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 807,
        "startColumnNumber" : 4,
        "endLineNumber" : 807,
        "endColumnNumber" : 106
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 807,
        "startColumnNumber" : 4,
        "endLineNumber" : 807,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 806,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 804,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 802,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 800,
        "startColumnNumber" : 3,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 799,
        "startColumnNumber" : 36,
        "endLineNumber" : 817,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 799,
        "startColumnNumber" : 2,
        "endLineNumber" : 825,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (buffer instanceof ByteBuffer) {\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n else if (buffer instanceof FloatBuffer) {\n  if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n}\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 798,
        "startColumnNumber" : 113,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 798,
        "startColumnNumber" : 1,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void glVertexAttribPointer(int indx,int size,int type,boolean normalized,int stride,Buffer buffer){\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 807,
        "startColumnNumber" : 4,
        "endLineNumber" : 807,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "com.badlogic.gdx.backends.lwjgl3.ByteBuffer"
  }, {
    "nodeContext" : "((ByteBuffer)buffer)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 809,
      "startColumnNumber" : 69,
      "endLineNumber" : 809,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 809,
        "startColumnNumber" : 69,
        "endLineNumber" : 809,
        "endColumnNumber" : 105
      },
      "nodeContext" : "((ByteBuffer)buffer).asFloatBuffer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 809,
        "startColumnNumber" : 4,
        "endLineNumber" : 809,
        "endColumnNumber" : 106
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 809,
        "startColumnNumber" : 4,
        "endLineNumber" : 809,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 808,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 806,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 804,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 802,
        "startColumnNumber" : 8,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 800,
        "startColumnNumber" : 3,
        "endLineNumber" : 816,
        "endColumnNumber" : 145
      },
      "nodeContext" : "if (type == GL_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_UNSIGNED_BYTE) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else if (type == GL_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_UNSIGNED_SHORT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else if (type == GL_FLOAT) GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 799,
        "startColumnNumber" : 36,
        "endLineNumber" : 817,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 799,
        "startColumnNumber" : 2,
        "endLineNumber" : 825,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (buffer instanceof ByteBuffer) {\n  if (type == GL_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_UNSIGNED_BYTE)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else   if (type == GL_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_UNSIGNED_SHORT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else   if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n}\n else if (buffer instanceof FloatBuffer) {\n  if (type == GL_FLOAT)   GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n}\n else throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 798,
        "startColumnNumber" : 113,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 798,
        "startColumnNumber" : 1,
        "endLineNumber" : 826,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void glVertexAttribPointer(int indx,int size,int type,boolean normalized,int stride,Buffer buffer){\n  if (buffer instanceof ByteBuffer) {\n    if (type == GL_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_UNSIGNED_BYTE)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(ByteBuffer)buffer);\n else     if (type == GL_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_UNSIGNED_SHORT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asShortBuffer());\n else     if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\n  }\n else   if (buffer instanceof FloatBuffer) {\n    if (type == GL_FLOAT)     GL20.glVertexAttribPointer(indx,size,type,normalized,stride,(FloatBuffer)buffer);\n else     throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \"+ type+ \" with this method.\");\n  }\n else   throw new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with this method. Use ByteBuffer instead. Blame LWJGL\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 809,
        "startColumnNumber" : 4,
        "endLineNumber" : 809,
        "endColumnNumber" : 107
      },
      "nodeContext" : "GL20.glVertexAttribPointer(indx,size,type,normalized,stride,((ByteBuffer)buffer).asFloatBuffer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "com.badlogic.gdx.backends.lwjgl3.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 805,
    "startColumnNumber" : 69,
    "endLineNumber" : 805,
    "endColumnNumber" : 89
  }, {
    "charLength" : 20,
    "startLineNumber" : 807,
    "startColumnNumber" : 69,
    "endLineNumber" : 807,
    "endColumnNumber" : 89
  }, {
    "charLength" : 20,
    "startLineNumber" : 809,
    "startColumnNumber" : 69,
    "endLineNumber" : 809,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}