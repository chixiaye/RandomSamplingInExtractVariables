{
  "id" : 46,
  "expression" : "SWITCH",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SWITCH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 127,
      "startColumnNumber" : 9,
      "endLineNumber" : 127,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 16
      },
      "nodeContext" : "case SWITCH:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 121,
        "startColumnNumber" : 3,
        "endLineNumber" : 139,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (insn.getType()) {\ncase IF:  next=processIf(r,block,(IfNode)insn,stack);\nprocessed=true;\nbreak;\ncase SWITCH:next=processSwitch(r,block,(SwitchNode)insn,stack);\nprocessed=true;\nbreak;\ncase MONITOR_ENTER:next=processMonitorEnter(r,block,insn,stack);\nprocessed=true;\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 119,
        "startColumnNumber" : 57,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InsnNode insn=block.getInstructions().get(0);\nswitch (insn.getType()) {\ncase IF:    next=processIf(r,block,(IfNode)insn,stack);\n  processed=true;\nbreak;\ncase SWITCH:next=processSwitch(r,block,(SwitchNode)insn,stack);\nprocessed=true;\nbreak;\ncase MONITOR_ENTER:next=processMonitorEnter(r,block,insn,stack);\nprocessed=true;\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!processed && block.getInstructions().size() == 1) {\n  InsnNode insn=block.getInstructions().get(0);\nswitch (insn.getType()) {\ncase IF:    next=processIf(r,block,(IfNode)insn,stack);\n  processed=true;\nbreak;\ncase SWITCH:next=processSwitch(r,block,(SwitchNode)insn,stack);\nprocessed=true;\nbreak;\ncase MONITOR_ENTER:next=processMonitorEnter(r,block,insn,stack);\nprocessed=true;\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 98,
        "startColumnNumber" : 75,
        "endLineNumber" : 149,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BlockNode next=null;\n  boolean processed=false;\n  List<LoopInfo> loops=block.getAll(AType.LOOP);\n  int loopCount=loops.size();\n  if (loopCount != 0 && block.contains(AFlag.LOOP_START)) {\n    if (loopCount == 1) {\n      next=processLoop(r,loops.get(0),stack);\n      processed=true;\n    }\n else {\n      for (      LoopInfo loop : loops) {\n        if (loop.getStart() == block) {\n          next=processLoop(r,loop,stack);\n          processed=true;\n          break;\n        }\n      }\n    }\n  }\n  if (!processed && block.getInstructions().size() == 1) {\n    InsnNode insn=block.getInstructions().get(0);\nswitch (insn.getType()) {\ncase IF:      next=processIf(r,block,(IfNode)insn,stack);\n    processed=true;\n  break;\ncase SWITCH:next=processSwitch(r,block,(SwitchNode)insn,stack);\nprocessed=true;\nbreak;\ncase MONITOR_ENTER:next=processMonitorEnter(r,block,insn,stack);\nprocessed=true;\nbreak;\ndefault:break;\n}\n}\nif (!processed) {\nr.getSubBlocks().add(block);\nnext=getNextBlock(block);\n}\nif (next != null && !stack.containsExit(block) && !stack.containsExit(next)) {\nreturn next;\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1352,
        "startLineNumber" : 95,
        "startColumnNumber" : 1,
        "endLineNumber" : 149,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Recursively traverse all blocks from 'block' until block from 'exits'\n */\nprivate BlockNode traverse(IRegion r,BlockNode block,RegionStack stack){\n  BlockNode next=null;\n  boolean processed=false;\n  List<LoopInfo> loops=block.getAll(AType.LOOP);\n  int loopCount=loops.size();\n  if (loopCount != 0 && block.contains(AFlag.LOOP_START)) {\n    if (loopCount == 1) {\n      next=processLoop(r,loops.get(0),stack);\n      processed=true;\n    }\n else {\n      for (      LoopInfo loop : loops) {\n        if (loop.getStart() == block) {\n          next=processLoop(r,loop,stack);\n          processed=true;\n          break;\n        }\n      }\n    }\n  }\n  if (!processed && block.getInstructions().size() == 1) {\n    InsnNode insn=block.getInstructions().get(0);\nswitch (insn.getType()) {\ncase IF:      next=processIf(r,block,(IfNode)insn,stack);\n    processed=true;\n  break;\ncase SWITCH:next=processSwitch(r,block,(SwitchNode)insn,stack);\nprocessed=true;\nbreak;\ncase MONITOR_ENTER:next=processMonitorEnter(r,block,insn,stack);\nprocessed=true;\nbreak;\ndefault:break;\n}\n}\nif (!processed) {\nr.getSubBlocks().add(block);\nnext=getNextBlock(block);\n}\nif (next != null && !stack.containsExit(block) && !stack.containsExit(next)) {\nreturn next;\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 16
      },
      "nodeContext" : "case SWITCH:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.InsnType"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 127,
    "startColumnNumber" : 9,
    "endLineNumber" : 127,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}