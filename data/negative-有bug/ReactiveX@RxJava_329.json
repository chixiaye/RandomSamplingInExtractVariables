{
  "id" : 329,
  "expression" : "t.getName()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/schedulers/SchedulerLifecycleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 36,
      "startColumnNumber" : 16,
      "endLineNumber" : 36,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 44
      },
      "nodeContext" : "t.getName().startsWith(\"Rx\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (t.getName().startsWith(\"Rx\")) {\n  rxThreads.add(t);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 35,
        "startColumnNumber" : 61,
        "endLineNumber" : 39,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (t.getName().startsWith(\"Rx\")) {\n    rxThreads.add(t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Thread t : Thread.getAllStackTraces().keySet()) {\n  if (t.getName().startsWith(\"Rx\")) {\n    rxThreads.add(t);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 28,
        "startColumnNumber" : 59,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tryOutSchedulers();\n  System.out.println(\"testShutdown >> Giving time threads to spin-up\");\n  Thread.sleep(500);\n  Set<Thread> rxThreads=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreads.add(t);\n    }\n  }\n  Schedulers.shutdown();\n  System.out.println(\"testShutdown >> Giving time to threads to stop\");\n  Thread.sleep(500);\n  StringBuilder b=new StringBuilder();\n  for (  Thread t : rxThreads) {\n    if (t.isAlive()) {\n      b.append(\"Thread \" + t + \" failed to shutdown\\r\\n\");\n      for (      StackTraceElement ste : t.getStackTrace()) {\n        b.append(\"  \").append(ste).append(\"\\r\\n\");\n      }\n    }\n  }\n  if (b.length() > 0) {\n    System.out.print(b);\n    System.out.println(\"testShutdown >> Restarting schedulers...\");\n    Schedulers.start();\n    fail(\"Rx Threads were still alive:\\r\\n\" + b);\n  }\n  System.out.println(\"testShutdown >> Restarting schedulers...\");\n  Schedulers.start();\n  tryOutSchedulers();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1393,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testShutdown() throws InterruptedException {\n  tryOutSchedulers();\n  System.out.println(\"testShutdown >> Giving time threads to spin-up\");\n  Thread.sleep(500);\n  Set<Thread> rxThreads=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreads.add(t);\n    }\n  }\n  Schedulers.shutdown();\n  System.out.println(\"testShutdown >> Giving time to threads to stop\");\n  Thread.sleep(500);\n  StringBuilder b=new StringBuilder();\n  for (  Thread t : rxThreads) {\n    if (t.isAlive()) {\n      b.append(\"Thread \" + t + \" failed to shutdown\\r\\n\");\n      for (      StackTraceElement ste : t.getStackTrace()) {\n        b.append(\"  \").append(ste).append(\"\\r\\n\");\n      }\n    }\n  }\n  if (b.length() > 0) {\n    System.out.print(b);\n    System.out.println(\"testShutdown >> Restarting schedulers...\");\n    Schedulers.start();\n    fail(\"Rx Threads were still alive:\\r\\n\" + b);\n  }\n  System.out.println(\"testShutdown >> Restarting schedulers...\");\n  Schedulers.start();\n  tryOutSchedulers();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 44
      },
      "nodeContext" : "t.getName().startsWith(\"Rx\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 36,
    "startColumnNumber" : 16,
    "endLineNumber" : 36,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}