{
  "id" : 422,
  "expression" : "SqlTypeName",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/main/java/org/apache/druid/sql/calcite/planner/SqlParameterizerShuttle.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SqlTypeName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 57,
      "startColumnNumber" : 31,
      "endLineNumber" : 57,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 57,
        "startColumnNumber" : 31,
        "endLineNumber" : 57,
        "endColumnNumber" : 87
      },
      "nodeContext" : "SqlTypeName.getNameForJdbcType(paramBinding.type.typeId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 57,
        "endColumnNumber" : 87
      },
      "nodeContext" : "typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 88
      },
      "nodeContext" : "SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 52,
        "startColumnNumber" : 68,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (plannerContext.getParameters().size() > param.getIndex()) {\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n catch (ClassCastException ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SqlNode visit(SqlDynamicParam param){\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 88
      },
      "nodeContext" : "SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "SqlTypeName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 58,
      "startColumnNumber" : 12,
      "endLineNumber" : 58,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "SqlTypeName.APPROX_TYPES",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SqlTypeName.APPROX_TYPES.contains(typeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n  return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 52,
        "startColumnNumber" : 68,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (plannerContext.getParameters().size() > param.getIndex()) {\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n catch (ClassCastException ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SqlNode visit(SqlDynamicParam param){\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "SqlTypeName.APPROX_TYPES.contains(typeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "SqlTypeName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 12,
      "endLineNumber" : 61,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 33
      },
      "nodeContext" : "SqlTypeName.TIMESTAMP",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "SqlTypeName.TIMESTAMP.equals(typeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 88
      },
      "nodeContext" : "SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n  return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 52,
        "startColumnNumber" : 68,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (plannerContext.getParameters().size() > param.getIndex()) {\n  TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n  if (paramBinding.value == null) {\n    return SqlLiteral.createNull(param.getParserPosition());\n  }\n  SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n  if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n    return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n  }\n  if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n    return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n  }\n  return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (plannerContext.getParameters().size() > param.getIndex()) {\n    TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n    if (paramBinding.value == null) {\n      return SqlLiteral.createNull(param.getParserPosition());\n    }\n    SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n    if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n      return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n    }\n    if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n      return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n    }\n    return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n  }\n}\n catch (ClassCastException ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SqlNode visit(SqlDynamicParam param){\n  try {\n    if (plannerContext.getParameters().size() > param.getIndex()) {\n      TypedValue paramBinding=plannerContext.getParameters().get(param.getIndex());\n      if (paramBinding.value == null) {\n        return SqlLiteral.createNull(param.getParserPosition());\n      }\n      SqlTypeName typeName=SqlTypeName.getNameForJdbcType(paramBinding.type.typeId);\n      if (SqlTypeName.APPROX_TYPES.contains(typeName)) {\n        return SqlLiteral.createApproxNumeric(paramBinding.value.toString(),param.getParserPosition());\n      }\n      if (SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long) {\n        return SqlLiteral.createTimestamp(TimestampString.fromMillisSinceEpoch((Long)paramBinding.value),0,param.getParserPosition());\n      }\n      return typeName.createLiteral(paramBinding.value,param.getParserPosition());\n    }\n  }\n catch (  ClassCastException ignored) {\n  }\n  return param;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 88
      },
      "nodeContext" : "SqlTypeName.TIMESTAMP.equals(typeName) && paramBinding.value instanceof Long",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 57,
    "startColumnNumber" : 31,
    "endLineNumber" : 57,
    "endColumnNumber" : 42
  }, {
    "charLength" : 11,
    "startLineNumber" : 58,
    "startColumnNumber" : 12,
    "endLineNumber" : 58,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 12,
    "endLineNumber" : 61,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}