{
  "id" : 150,
  "expression" : "flowTimer",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/modules/ItemModule.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "flowTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 45,
      "startColumnNumber" : 15,
      "endLineNumber" : 45,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 45,
        "startColumnNumber" : 15,
        "endLineNumber" : 45,
        "endColumnNumber" : 40
      },
      "nodeContext" : "flowTimer.get(1,pollScl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (flowTimer.get(1,pollScl)) {\n  if (flow == null) {\n    if (cacheFlow == null || cacheFlow.length != items.length) {\n      cacheFlow=new WindowedMean[items.length];\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i]=new WindowedMean(windowSize);\n      }\n      cacheSums=new float[items.length];\n      displayFlow=new float[items.length];\n    }\n else {\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i].reset();\n      }\n      Arrays.fill(cacheSums,0);\n      cacheBits.clear();\n    }\n    Arrays.fill(displayFlow,-1);\n    flow=cacheFlow;\n  }\n  boolean updateFlow=flowTimer.get(30);\n  for (int i=0; i < items.length; i++) {\n    flow[i].add(cacheSums[i]);\n    if (cacheSums[i] > 0) {\n      cacheBits.set(i);\n    }\n    cacheSums[i]=0;\n    if (updateFlow) {\n      displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (flowTimer.get(1,pollScl)) {\n    if (flow == null) {\n      if (cacheFlow == null || cacheFlow.length != items.length) {\n        cacheFlow=new WindowedMean[items.length];\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i]=new WindowedMean(windowSize);\n        }\n        cacheSums=new float[items.length];\n        displayFlow=new float[items.length];\n      }\n else {\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i].reset();\n        }\n        Arrays.fill(cacheSums,0);\n        cacheBits.clear();\n      }\n      Arrays.fill(displayFlow,-1);\n      flow=cacheFlow;\n    }\n    boolean updateFlow=flowTimer.get(30);\n    for (int i=0; i < items.length; i++) {\n      flow[i].add(cacheSums[i]);\n      if (cacheSums[i] > 0) {\n        cacheBits.set(i);\n      }\n      cacheSums[i]=0;\n      if (updateFlow) {\n        displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1504,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (showFlow) {\n  if (flowTimer.get(1,pollScl)) {\n    if (flow == null) {\n      if (cacheFlow == null || cacheFlow.length != items.length) {\n        cacheFlow=new WindowedMean[items.length];\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i]=new WindowedMean(windowSize);\n        }\n        cacheSums=new float[items.length];\n        displayFlow=new float[items.length];\n      }\n else {\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i].reset();\n        }\n        Arrays.fill(cacheSums,0);\n        cacheBits.clear();\n      }\n      Arrays.fill(displayFlow,-1);\n      flow=cacheFlow;\n    }\n    boolean updateFlow=flowTimer.get(30);\n    for (int i=0; i < items.length; i++) {\n      flow[i].add(cacheSums[i]);\n      if (cacheSums[i] > 0) {\n        cacheBits.set(i);\n      }\n      cacheSums[i]=0;\n      if (updateFlow) {\n        displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n      }\n    }\n  }\n}\n else {\n  flow=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 201,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (showFlow) {\n    if (flowTimer.get(1,pollScl)) {\n      if (flow == null) {\n        if (cacheFlow == null || cacheFlow.length != items.length) {\n          cacheFlow=new WindowedMean[items.length];\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i]=new WindowedMean(windowSize);\n          }\n          cacheSums=new float[items.length];\n          displayFlow=new float[items.length];\n        }\n else {\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i].reset();\n          }\n          Arrays.fill(cacheSums,0);\n          cacheBits.clear();\n        }\n        Arrays.fill(displayFlow,-1);\n        flow=cacheFlow;\n      }\n      boolean updateFlow=flowTimer.get(30);\n      for (int i=0; i < items.length; i++) {\n        flow[i].add(cacheSums[i]);\n        if (cacheSums[i] > 0) {\n          cacheBits.set(i);\n        }\n        cacheSums[i]=0;\n        if (updateFlow) {\n          displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n        }\n      }\n    }\n  }\n else {\n    flow=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void update(boolean showFlow){\n  if (showFlow) {\n    if (flowTimer.get(1,pollScl)) {\n      if (flow == null) {\n        if (cacheFlow == null || cacheFlow.length != items.length) {\n          cacheFlow=new WindowedMean[items.length];\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i]=new WindowedMean(windowSize);\n          }\n          cacheSums=new float[items.length];\n          displayFlow=new float[items.length];\n        }\n else {\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i].reset();\n          }\n          Arrays.fill(cacheSums,0);\n          cacheBits.clear();\n        }\n        Arrays.fill(displayFlow,-1);\n        flow=cacheFlow;\n      }\n      boolean updateFlow=flowTimer.get(30);\n      for (int i=0; i < items.length; i++) {\n        flow[i].add(cacheSums[i]);\n        if (cacheSums[i] > 0) {\n          cacheBits.set(i);\n        }\n        cacheSums[i]=0;\n        if (updateFlow) {\n          displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n        }\n      }\n    }\n  }\n else {\n    flow=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 45,
        "startColumnNumber" : 15,
        "endLineNumber" : 45,
        "endColumnNumber" : 40
      },
      "nodeContext" : "flowTimer.get(1,pollScl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.modules.Interval"
  }, {
    "nodeContext" : "flowTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 68,
      "startColumnNumber" : 37,
      "endLineNumber" : 68,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "flowTimer.get(30)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 68,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "updateFlow=flowTimer.get(30)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 55
      },
      "nodeContext" : "boolean updateFlow=flowTimer.get(30);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1352,
        "startLineNumber" : 45,
        "startColumnNumber" : 41,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (flow == null) {\n    if (cacheFlow == null || cacheFlow.length != items.length) {\n      cacheFlow=new WindowedMean[items.length];\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i]=new WindowedMean(windowSize);\n      }\n      cacheSums=new float[items.length];\n      displayFlow=new float[items.length];\n    }\n else {\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i].reset();\n      }\n      Arrays.fill(cacheSums,0);\n      cacheBits.clear();\n    }\n    Arrays.fill(displayFlow,-1);\n    flow=cacheFlow;\n  }\n  boolean updateFlow=flowTimer.get(30);\n  for (int i=0; i < items.length; i++) {\n    flow[i].add(cacheSums[i]);\n    if (cacheSums[i] > 0) {\n      cacheBits.set(i);\n    }\n    cacheSums[i]=0;\n    if (updateFlow) {\n      displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (flowTimer.get(1,pollScl)) {\n  if (flow == null) {\n    if (cacheFlow == null || cacheFlow.length != items.length) {\n      cacheFlow=new WindowedMean[items.length];\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i]=new WindowedMean(windowSize);\n      }\n      cacheSums=new float[items.length];\n      displayFlow=new float[items.length];\n    }\n else {\n      for (int i=0; i < items.length; i++) {\n        cacheFlow[i].reset();\n      }\n      Arrays.fill(cacheSums,0);\n      cacheBits.clear();\n    }\n    Arrays.fill(displayFlow,-1);\n    flow=cacheFlow;\n  }\n  boolean updateFlow=flowTimer.get(30);\n  for (int i=0; i < items.length; i++) {\n    flow[i].add(cacheSums[i]);\n    if (cacheSums[i] > 0) {\n      cacheBits.set(i);\n    }\n    cacheSums[i]=0;\n    if (updateFlow) {\n      displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (flowTimer.get(1,pollScl)) {\n    if (flow == null) {\n      if (cacheFlow == null || cacheFlow.length != items.length) {\n        cacheFlow=new WindowedMean[items.length];\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i]=new WindowedMean(windowSize);\n        }\n        cacheSums=new float[items.length];\n        displayFlow=new float[items.length];\n      }\n else {\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i].reset();\n        }\n        Arrays.fill(cacheSums,0);\n        cacheBits.clear();\n      }\n      Arrays.fill(displayFlow,-1);\n      flow=cacheFlow;\n    }\n    boolean updateFlow=flowTimer.get(30);\n    for (int i=0; i < items.length; i++) {\n      flow[i].add(cacheSums[i]);\n      if (cacheSums[i] > 0) {\n        cacheBits.set(i);\n      }\n      cacheSums[i]=0;\n      if (updateFlow) {\n        displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1504,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (showFlow) {\n  if (flowTimer.get(1,pollScl)) {\n    if (flow == null) {\n      if (cacheFlow == null || cacheFlow.length != items.length) {\n        cacheFlow=new WindowedMean[items.length];\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i]=new WindowedMean(windowSize);\n        }\n        cacheSums=new float[items.length];\n        displayFlow=new float[items.length];\n      }\n else {\n        for (int i=0; i < items.length; i++) {\n          cacheFlow[i].reset();\n        }\n        Arrays.fill(cacheSums,0);\n        cacheBits.clear();\n      }\n      Arrays.fill(displayFlow,-1);\n      flow=cacheFlow;\n    }\n    boolean updateFlow=flowTimer.get(30);\n    for (int i=0; i < items.length; i++) {\n      flow[i].add(cacheSums[i]);\n      if (cacheSums[i] > 0) {\n        cacheBits.set(i);\n      }\n      cacheSums[i]=0;\n      if (updateFlow) {\n        displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n      }\n    }\n  }\n}\n else {\n  flow=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 201,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (showFlow) {\n    if (flowTimer.get(1,pollScl)) {\n      if (flow == null) {\n        if (cacheFlow == null || cacheFlow.length != items.length) {\n          cacheFlow=new WindowedMean[items.length];\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i]=new WindowedMean(windowSize);\n          }\n          cacheSums=new float[items.length];\n          displayFlow=new float[items.length];\n        }\n else {\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i].reset();\n          }\n          Arrays.fill(cacheSums,0);\n          cacheBits.clear();\n        }\n        Arrays.fill(displayFlow,-1);\n        flow=cacheFlow;\n      }\n      boolean updateFlow=flowTimer.get(30);\n      for (int i=0; i < items.length; i++) {\n        flow[i].add(cacheSums[i]);\n        if (cacheSums[i] > 0) {\n          cacheBits.set(i);\n        }\n        cacheSums[i]=0;\n        if (updateFlow) {\n          displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n        }\n      }\n    }\n  }\n else {\n    flow=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void update(boolean showFlow){\n  if (showFlow) {\n    if (flowTimer.get(1,pollScl)) {\n      if (flow == null) {\n        if (cacheFlow == null || cacheFlow.length != items.length) {\n          cacheFlow=new WindowedMean[items.length];\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i]=new WindowedMean(windowSize);\n          }\n          cacheSums=new float[items.length];\n          displayFlow=new float[items.length];\n        }\n else {\n          for (int i=0; i < items.length; i++) {\n            cacheFlow[i].reset();\n          }\n          Arrays.fill(cacheSums,0);\n          cacheBits.clear();\n        }\n        Arrays.fill(displayFlow,-1);\n        flow=cacheFlow;\n      }\n      boolean updateFlow=flowTimer.get(30);\n      for (int i=0; i < items.length; i++) {\n        flow[i].add(cacheSums[i]);\n        if (cacheSums[i] > 0) {\n          cacheBits.set(i);\n        }\n        cacheSums[i]=0;\n        if (updateFlow) {\n          displayFlow[i]=flow[i].hasEnoughData() ? flow[i].mean() / pollScl : -1;\n        }\n      }\n    }\n  }\n else {\n    flow=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 55
      },
      "nodeContext" : "boolean updateFlow=flowTimer.get(30);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.modules.Interval"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 45,
    "startColumnNumber" : 15,
    "endLineNumber" : 45,
    "endColumnNumber" : 24
  }, {
    "charLength" : 9,
    "startLineNumber" : 68,
    "startColumnNumber" : 37,
    "endLineNumber" : 68,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}