{
  "id" : 245,
  "expression" : "blkAST",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/codegen/model/LL1OptionalBlockSingleAlt.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "blkAST",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 25,
      "startColumnNumber" : 17,
      "endLineNumber" : 25,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 31
      },
      "nodeContext" : "super(factory,blkAST,alts);\n",
      "nodeType" : "SuperConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 24,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LL1OptionalBlockSingleAlt(OutputModelFactory factory,GrammarAST blkAST,List<CodeBlockForAlt> alts){\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 31
      },
      "nodeContext" : "super(factory,blkAST,alts);\n",
      "nodeType" : "SuperConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.tool.ast.GrammarAST"
  }, {
    "nodeContext" : "blkAST",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 26,
      "startColumnNumber" : 34,
      "endLineNumber" : 26,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 26,
        "startColumnNumber" : 34,
        "endLineNumber" : 26,
        "endColumnNumber" : 49
      },
      "nodeContext" : "blkAST.atnState",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 26,
        "startColumnNumber" : 19,
        "endLineNumber" : 26,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(DecisionState)blkAST.atnState",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 26,
        "startColumnNumber" : 18,
        "endLineNumber" : 26,
        "endColumnNumber" : 50
      },
      "nodeContext" : "((DecisionState)blkAST.atnState)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 26,
        "startColumnNumber" : 18,
        "endLineNumber" : 26,
        "endColumnNumber" : 59
      },
      "nodeContext" : "((DecisionState)blkAST.atnState).decision",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.decision=((DecisionState)blkAST.atnState).decision",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.decision=((DecisionState)blkAST.atnState).decision;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 24,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LL1OptionalBlockSingleAlt(OutputModelFactory factory,GrammarAST blkAST,List<CodeBlockForAlt> alts){\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.decision=((DecisionState)blkAST.atnState).decision;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.tool.ast.GrammarAST"
  }, {
    "nodeContext" : "blkAST",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 36,
      "startColumnNumber" : 44,
      "endLineNumber" : 36,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 62
      },
      "nodeContext" : "getThrowNoViableAlt(factory,blkAST,expecting)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.error=getThrowNoViableAlt(factory,blkAST,expecting)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 24,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LL1OptionalBlockSingleAlt(OutputModelFactory factory,GrammarAST blkAST,List<CodeBlockForAlt> alts){\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.tool.ast.GrammarAST"
  }, {
    "nodeContext" : "blkAST",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 39,
      "startColumnNumber" : 46,
      "endLineNumber" : 39,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 53
      },
      "nodeContext" : "factory.getLL1Test(followLook,blkAST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 53
      },
      "nodeContext" : "followExpr=factory.getLL1Test(followLook,blkAST)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 54
      },
      "nodeContext" : "followExpr=factory.getLL1Test(followLook,blkAST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 24,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LL1OptionalBlockSingleAlt(OutputModelFactory factory,GrammarAST blkAST,List<CodeBlockForAlt> alts){\n  super(factory,blkAST,alts);\n  this.decision=((DecisionState)blkAST.atnState).decision;\n  IntervalSet[] altLookSets=factory.getGrammar().decisionLOOK.get(decision);\n  altLook=getAltLookaheadAsStringLists(altLookSets);\n  IntervalSet look=altLookSets[0];\n  IntervalSet followLook=altLookSets[1];\n  IntervalSet expecting=look.or(followLook);\n  this.error=getThrowNoViableAlt(factory,blkAST,expecting);\n  expr=addCodeForLookaheadTempVar(look);\n  followExpr=factory.getLL1Test(followLook,blkAST);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 54
      },
      "nodeContext" : "followExpr=factory.getLL1Test(followLook,blkAST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.tool.ast.GrammarAST"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 25,
    "startColumnNumber" : 17,
    "endLineNumber" : 25,
    "endColumnNumber" : 23
  }, {
    "charLength" : 6,
    "startLineNumber" : 26,
    "startColumnNumber" : 34,
    "endLineNumber" : 26,
    "endColumnNumber" : 40
  }, {
    "charLength" : 6,
    "startLineNumber" : 36,
    "startColumnNumber" : 44,
    "endLineNumber" : 36,
    "endColumnNumber" : 50
  }, {
    "charLength" : 6,
    "startLineNumber" : 39,
    "startColumnNumber" : 46,
    "endLineNumber" : 39,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}