{
  "id" : 456,
  "expression" : "unused",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unused",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 93,
      "startColumnNumber" : 35,
      "endLineNumber" : 93,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 18,
        "endLineNumber" : 93,
        "endColumnNumber" : 45
      },
      "nodeContext" : "at.compareAndSet(unused,x)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertFalse(at.compareAndSet(unused,x))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertFalse(at.compareAndSet(unused,x));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 91,
        "startColumnNumber" : 28,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertBitEquals(prev,at.get());\n  assertFalse(at.compareAndSet(unused,x));\n  assertBitEquals(prev,at.get());\n  assertTrue(at.compareAndSet(prev,x));\n  assertBitEquals(x,at.get());\n  prev=x;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (double x : VALUES) {\n  assertBitEquals(prev,at.get());\n  assertFalse(at.compareAndSet(unused,x));\n  assertBitEquals(prev,at.get());\n  assertTrue(at.compareAndSet(prev,x));\n  assertBitEquals(x,at.get());\n  prev=x;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double prev=Math.E;\n  double unused=Math.E + Math.PI;\n  AtomicDouble at=new AtomicDouble(prev);\n  for (  double x : VALUES) {\n    assertBitEquals(prev,at.get());\n    assertFalse(at.compareAndSet(unused,x));\n    assertBitEquals(prev,at.get());\n    assertTrue(at.compareAndSet(prev,x));\n    assertBitEquals(x,at.get());\n    prev=x;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * compareAndSet succeeds in changing value if equal to expected else fails \n */\npublic void testCompareAndSet(){\n  double prev=Math.E;\n  double unused=Math.E + Math.PI;\n  AtomicDouble at=new AtomicDouble(prev);\n  for (  double x : VALUES) {\n    assertBitEquals(prev,at.get());\n    assertFalse(at.compareAndSet(unused,x));\n    assertBitEquals(prev,at.get());\n    assertTrue(at.compareAndSet(prev,x));\n    assertBitEquals(x,at.get());\n    prev=x;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertFalse(at.compareAndSet(unused,x));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 93,
    "startColumnNumber" : 35,
    "endLineNumber" : 93,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}