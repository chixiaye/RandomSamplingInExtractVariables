{
  "id" : 148,
  "expression" : "builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate()))",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/protocol/saml/installation/KeycloakSamlSubsystemCliInstallation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate()))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 600,
      "startLineNumber" : 55,
      "startColumnNumber" : 12,
      "endLineNumber" : 60,
      "endColumnNumber" : 184
    },
    "astNodeNumber" : 43,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 37
      },
      "nodeContext" : "builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 54,
        "startColumnNumber" : 50,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (samlClient.requiresClientSignature()) {\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 39,
        "startColumnNumber" : 117,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SamlClient samlClient=new SamlClient(client);\n  StringBuilder builder=new StringBuilder();\n  String entityId=client.getBaseUrl() == null ? \"SPECIFY YOUR entityID!\" : client.getBaseUrl();\n  String bindingUrl=RealmsResource.protocolUrl(UriBuilder.fromUri(baseUri)).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL).toString();\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/:add\\n\\n\").append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/:add(sslPolicy=\").append(realm.getSslRequired().name()).append(\",logoutPage=\").append(quote(\"SPECIFY YOUR LOGOUT PAGE!\")).append(\"\\n\\n\");\n  if (samlClient.requiresClientSignature()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\");\n  }\n  if (samlClient.requiresEncryption()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY2:add(encryption=true,PrivateKeyPem=\").append(quote(samlClient.getClientEncryptingPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientEncryptingPrivateKey())).append(\")\\n\\n\");\n  }\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:add( \\\\\\n    SingleSignOnService={ \\\\\\n        signRequest=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        validateResponseSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        validateAssertionSignature=\").append(Boolean.toString(samlClient.requiresAssertionSignature())).append(\", \\\\\\n        requestBinding=POST, \\\\\\n        bindingUrl=\").append(bindingUrl).append(\"}, \\\\\\n    SingleLogoutService={ \\\\\\n        signRequest=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        signResponse=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        validateRequestSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        validateResponseSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        requestBinding=POST, \\\\\\n        responseBinding=POST, \\\\\\n        postBindingUrl=\").append(bindingUrl).append(\", \\\\\\n        redirectBindingUrl=\").append(bindingUrl).append(\"} \\\\\\n)\\n\\n\");\n  if (samlClient.requiresClientSignature()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:write-attribute(name=signatureAlgorithm,value=\").append(samlClient.getSignatureAlgorithm()).append(\")\\n\\n\");\n    if (samlClient.getCanonicalizationMethod() != null) {\n      builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:write-attribute(name=signatureCanonicalizationMethod,value=\").append(samlClient.getCanonicalizationMethod()).append(\")\\n\");\n    }\n  }\n  return Response.ok(builder.toString(),MediaType.TEXT_PLAIN_TYPE).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4703,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response generateInstallation(KeycloakSession session,RealmModel realm,ClientModel client,URI baseUri){\n  SamlClient samlClient=new SamlClient(client);\n  StringBuilder builder=new StringBuilder();\n  String entityId=client.getBaseUrl() == null ? \"SPECIFY YOUR entityID!\" : client.getBaseUrl();\n  String bindingUrl=RealmsResource.protocolUrl(UriBuilder.fromUri(baseUri)).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL).toString();\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/:add\\n\\n\").append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/:add(sslPolicy=\").append(realm.getSslRequired().name()).append(\",logoutPage=\").append(quote(\"SPECIFY YOUR LOGOUT PAGE!\")).append(\"\\n\\n\");\n  if (samlClient.requiresClientSignature()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\");\n  }\n  if (samlClient.requiresEncryption()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY2:add(encryption=true,PrivateKeyPem=\").append(quote(samlClient.getClientEncryptingPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientEncryptingPrivateKey())).append(\")\\n\\n\");\n  }\n  builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:add( \\\\\\n    SingleSignOnService={ \\\\\\n        signRequest=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        validateResponseSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        validateAssertionSignature=\").append(Boolean.toString(samlClient.requiresAssertionSignature())).append(\", \\\\\\n        requestBinding=POST, \\\\\\n        bindingUrl=\").append(bindingUrl).append(\"}, \\\\\\n    SingleLogoutService={ \\\\\\n        signRequest=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        signResponse=\").append(Boolean.toString(samlClient.requiresClientSignature())).append(\", \\\\\\n        validateRequestSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        validateResponseSignature=\").append(Boolean.toString(samlClient.requiresRealmSignature())).append(\", \\\\\\n        requestBinding=POST, \\\\\\n        responseBinding=POST, \\\\\\n        postBindingUrl=\").append(bindingUrl).append(\", \\\\\\n        redirectBindingUrl=\").append(bindingUrl).append(\"} \\\\\\n)\\n\\n\");\n  if (samlClient.requiresClientSignature()) {\n    builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:write-attribute(name=signatureAlgorithm,value=\").append(samlClient.getSignatureAlgorithm()).append(\")\\n\\n\");\n    if (samlClient.getCanonicalizationMethod() != null) {\n      builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/IDP=idp/:write-attribute(name=signatureCanonicalizationMethod,value=\").append(samlClient.getCanonicalizationMethod()).append(\")\\n\");\n    }\n  }\n  return Response.ok(builder.toString(),MediaType.TEXT_PLAIN_TYPE).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 373,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "builder.append(\"/subsystem=keycloak-saml/secure-deployment=YOUR-WAR.war/SP=\").append(quote(entityId)).append(\"/Key=KEY1:add(signing=true, \\\\\\nPrivateKeyPem=\").append(quote(samlClient.getClientSigningPrivateKey() == null ? \"PRIVATE KEY NOT SET UP OR KNOWN\" : samlClient.getClientSigningPrivateKey())).append(\", \\\\\\nCertificatePem=\").append(quote(samlClient.getClientSigningCertificate() == null ? \"YOU MUST CONFIGURE YOUR_CLIENT's SIGNING CERTIFICATE\" : samlClient.getClientSigningCertificate())).append(\")\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 9
    },
    "tokenLength" : 45,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 600,
    "startLineNumber" : 55,
    "startColumnNumber" : 12,
    "endLineNumber" : 60,
    "endColumnNumber" : 184
  } ],
  "layoutRelationDataList" : [ ]
}