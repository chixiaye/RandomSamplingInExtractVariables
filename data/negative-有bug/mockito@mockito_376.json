{
  "id" : 376,
  "expression" : "ARRAY_LENGTH",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/inline/src/test/java/org/mockitoinline/bugs/CyclicMockMethodArgumentMemoryLeakTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ARRAY_LENGTH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 19,
      "startColumnNumber" : 35,
      "endLineNumber" : 19,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 19,
        "startColumnNumber" : 27,
        "endLineNumber" : 19,
        "endColumnNumber" : 48
      },
      "nodeContext" : "new int[ARRAY_LENGTH]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 48
      },
      "nodeContext" : "a.largeArray=new int[ARRAY_LENGTH]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 49
      },
      "nodeContext" : "a.largeArray=new int[ARRAY_LENGTH];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 17,
        "startColumnNumber" : 38,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final A a=mock(A.class);\n  a.largeArray=new int[ARRAY_LENGTH];\n  final B b=mock(B.class);\n  a.accept(b);\n  b.accept(a);\n  framework().clearInlineMocks();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; ++i) {\n  final A a=mock(A.class);\n  a.largeArray=new int[ARRAY_LENGTH];\n  final B b=mock(B.class);\n  a.accept(b);\n  b.accept(a);\n  framework().clearInlineMocks();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 16,
        "startColumnNumber" : 75,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < 100; ++i) {\n    final A a=mock(A.class);\n    a.largeArray=new int[ARRAY_LENGTH];\n    final B b=mock(B.class);\n    a.accept(b);\n    b.accept(a);\n    framework().clearInlineMocks();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void no_memory_leak_when_cyclically_calling_method_with_mocks(){\n  for (int i=0; i < 100; ++i) {\n    final A a=mock(A.class);\n    a.largeArray=new int[ARRAY_LENGTH];\n    final B b=mock(B.class);\n    a.accept(b);\n    b.accept(a);\n    framework().clearInlineMocks();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 49
      },
      "nodeContext" : "a.largeArray=new int[ARRAY_LENGTH];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 19,
    "startColumnNumber" : 35,
    "endLineNumber" : 19,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}