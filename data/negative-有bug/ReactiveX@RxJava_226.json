{
  "id" : 226,
  "expression" : "o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/processors/AsyncProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 76,
      "startLineNumber" : 154,
      "startColumnNumber" : 12,
      "endLineNumber" : 154,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 15,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)) {\n  int n=array.length;\n  if (n == 0) {\n    array=Arrays.copyOf(array,1);\n  }\n  array[0]=(T)o;\n  if (array.length > 1) {\n    array[1]=null;\n  }\n}\n else {\n  if (array.length != 0) {\n    array[0]=null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 152,
        "startColumnNumber" : 36,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object o=state.get();\n  if (o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)) {\n    int n=array.length;\n    if (n == 0) {\n      array=Arrays.copyOf(array,1);\n    }\n    array[0]=(T)o;\n    if (array.length > 1) {\n      array[1]=null;\n    }\n  }\n else {\n    if (array.length != 0) {\n      array[0]=null;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 150,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public T[] getValues(T[] array){\n  Object o=state.get();\n  if (o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)) {\n    int n=array.length;\n    if (n == 0) {\n      array=Arrays.copyOf(array,1);\n    }\n    array[0]=(T)o;\n    if (array.length > 1) {\n      array[1]=null;\n    }\n  }\n else {\n    if (array.length != 0) {\n      array[0]=null;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (o != null && !NotificationLite.isError(o) && !NotificationLite.isComplete(o)) {\n  int n=array.length;\n  if (n == 0) {\n    array=Arrays.copyOf(array,1);\n  }\n  array[0]=(T)o;\n  if (array.length > 1) {\n    array[1]=null;\n  }\n}\n else {\n  if (array.length != 0) {\n    array[0]=null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    },
    "tokenLength" : 11,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 76,
    "startLineNumber" : 154,
    "startColumnNumber" : 12,
    "endLineNumber" : 154,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}