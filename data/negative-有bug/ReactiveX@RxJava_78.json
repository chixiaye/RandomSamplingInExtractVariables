{
  "id" : 78,
  "expression" : "1000",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableRangeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 28,
      "endLineNumber" : 50,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Observable.range(1,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    count.incrementAndGet();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 16
      },
      "nodeContext" : "Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    count.incrementAndGet();\n  }\n}\n).take(3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    count.incrementAndGet();\n  }\n}\n).take(3).subscribe(NbpObserver)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t1){\n    count.incrementAndGet();\n  }\n}\n).take(3).subscribe(NbpObserver);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 36,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observer<Integer> NbpObserver=TestHelper.mockObserver();\n  final AtomicInteger count=new AtomicInteger();\n  Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer t1){\n      count.incrementAndGet();\n    }\n  }\n).take(3).subscribe(NbpObserver);\n  verify(NbpObserver,times(1)).onNext(1);\n  verify(NbpObserver,times(1)).onNext(2);\n  verify(NbpObserver,times(1)).onNext(3);\n  verify(NbpObserver,never()).onNext(4);\n  verify(NbpObserver,never()).onError(org.mockito.Matchers.any(Throwable.class));\n  verify(NbpObserver,times(1)).onComplete();\n  assertEquals(3,count.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRangeUnsubscribe(){\n  Observer<Integer> NbpObserver=TestHelper.mockObserver();\n  final AtomicInteger count=new AtomicInteger();\n  Observable.range(1,1000).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer t1){\n      count.incrementAndGet();\n    }\n  }\n).take(3).subscribe(NbpObserver);\n  verify(NbpObserver,times(1)).onNext(1);\n  verify(NbpObserver,times(1)).onNext(2);\n  verify(NbpObserver,times(1)).onNext(3);\n  verify(NbpObserver,never()).onNext(4);\n  verify(NbpObserver,never()).onError(org.mockito.Matchers.any(Throwable.class));\n  verify(NbpObserver,times(1)).onComplete();\n  assertEquals(3,count.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Observable.range(1,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 28,
    "endLineNumber" : 50,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}