{
  "id" : 214,
  "expression" : "factoryBean.getSecretKey()",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-sentinel-datasource/src/test/java/com/alibaba/cloud/sentinel/datasource/NacosDataSourceFactoryBeanTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "factoryBean.getSecretKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 111,
      "startColumnNumber" : 4,
      "endLineNumber" : 111,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(\"NacosDataSourceFactoryBean sk was wrong\",secretKey,factoryBean.getSecretKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertEquals(\"NacosDataSourceFactoryBean sk was wrong\",secretKey,factoryBean.getSecretKey());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1530,
        "startLineNumber" : 76,
        "startColumnNumber" : 63,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  NacosDataSourceFactoryBean factoryBean=spy(new NacosDataSourceFactoryBean());\n  Converter converter=mock(SentinelConverter.class);\n  factoryBean.setDataId(dataId);\n  factoryBean.setGroupId(groupId);\n  factoryBean.setAccessKey(accessKey);\n  factoryBean.setSecretKey(secretKey);\n  factoryBean.setEndpoint(endpoint);\n  factoryBean.setNamespace(namespace);\n  factoryBean.setConverter(converter);\n  NacosDataSource nacosDataSource=mock(NacosDataSource.class);\n  doReturn(nacosDataSource).when(factoryBean).getObject();\n  when(nacosDataSource.readSource()).thenReturn(\"{}\");\n  assertEquals(\"NacosDataSourceFactoryBean getObject was wrong\",nacosDataSource,factoryBean.getObject());\n  assertEquals(\"NacosDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"NacosDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"NacosDataSourceFactoryBean dataId was wrong\",dataId,factoryBean.getDataId());\n  assertEquals(\"NacosDataSourceFactoryBean groupId was wrong\",groupId,factoryBean.getGroupId());\n  assertEquals(\"NacosDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespace());\n  assertEquals(\"NacosDataSourceFactoryBean endpoint was wrong\",endpoint,factoryBean.getEndpoint());\n  assertEquals(\"NacosDataSourceFactoryBean ak was wrong\",accessKey,factoryBean.getAccessKey());\n  assertEquals(\"NacosDataSourceFactoryBean sk was wrong\",secretKey,factoryBean.getSecretKey());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testNacosFactoryBeanProperties() throws Exception {\n  NacosDataSourceFactoryBean factoryBean=spy(new NacosDataSourceFactoryBean());\n  Converter converter=mock(SentinelConverter.class);\n  factoryBean.setDataId(dataId);\n  factoryBean.setGroupId(groupId);\n  factoryBean.setAccessKey(accessKey);\n  factoryBean.setSecretKey(secretKey);\n  factoryBean.setEndpoint(endpoint);\n  factoryBean.setNamespace(namespace);\n  factoryBean.setConverter(converter);\n  NacosDataSource nacosDataSource=mock(NacosDataSource.class);\n  doReturn(nacosDataSource).when(factoryBean).getObject();\n  when(nacosDataSource.readSource()).thenReturn(\"{}\");\n  assertEquals(\"NacosDataSourceFactoryBean getObject was wrong\",nacosDataSource,factoryBean.getObject());\n  assertEquals(\"NacosDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"NacosDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"NacosDataSourceFactoryBean dataId was wrong\",dataId,factoryBean.getDataId());\n  assertEquals(\"NacosDataSourceFactoryBean groupId was wrong\",groupId,factoryBean.getGroupId());\n  assertEquals(\"NacosDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespace());\n  assertEquals(\"NacosDataSourceFactoryBean endpoint was wrong\",endpoint,factoryBean.getEndpoint());\n  assertEquals(\"NacosDataSourceFactoryBean ak was wrong\",accessKey,factoryBean.getAccessKey());\n  assertEquals(\"NacosDataSourceFactoryBean sk was wrong\",secretKey,factoryBean.getSecretKey());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(\"NacosDataSourceFactoryBean sk was wrong\",secretKey,factoryBean.getSecretKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 111,
    "startColumnNumber" : 4,
    "endLineNumber" : 111,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}