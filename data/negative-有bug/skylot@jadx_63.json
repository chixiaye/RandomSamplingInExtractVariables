{
  "id" : 63,
  "expression" : "CHAR",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/info/ConstStorage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CHAR",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 177,
      "startColumnNumber" : 8,
      "endLineNumber" : 177,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "case CHAR:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 174,
        "startColumnNumber" : 2,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (type) {\ncase BOOLEAN:  return getConstField(cls,literal == 1,false);\ncase CHAR:return getConstField(cls,(char)literal,Math.abs(literal) > 10);\ncase BYTE:return getConstField(cls,(byte)literal,Math.abs(literal) > 10);\ncase SHORT:return getConstField(cls,(short)literal,Math.abs(literal) > 100);\ncase INT:return getConstField(cls,(int)literal,Math.abs(literal) > 100);\ncase LONG:return getConstField(cls,literal,Math.abs(literal) > 1000);\ncase FLOAT:float f=Float.intBitsToFloat((int)literal);\nreturn getConstField(cls,f,Float.compare(f,0) == 0);\ncase DOUBLE:double d=Double.longBitsToDouble(literal);\nreturn getConstField(cls,d,Double.compare(d,0) == 0);\ndefault:return null;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 134,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  PrimitiveType type=arg.getType().getPrimitiveType();\n  if (type == null) {\n    return null;\n  }\n  long literal=arg.getLiteral();\nswitch (type) {\ncase BOOLEAN:    return getConstField(cls,literal == 1,false);\ncase CHAR:  return getConstField(cls,(char)literal,Math.abs(literal) > 10);\ncase BYTE:return getConstField(cls,(byte)literal,Math.abs(literal) > 10);\ncase SHORT:return getConstField(cls,(short)literal,Math.abs(literal) > 100);\ncase INT:return getConstField(cls,(int)literal,Math.abs(literal) > 100);\ncase LONG:return getConstField(cls,literal,Math.abs(literal) > 1000);\ncase FLOAT:float f=Float.intBitsToFloat((int)literal);\nreturn getConstField(cls,f,Float.compare(f,0) == 0);\ncase DOUBLE:double d=Double.longBitsToDouble(literal);\nreturn getConstField(cls,d,Double.compare(d,0) == 0);\ndefault:return null;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 167,
        "startColumnNumber" : 1,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Nullable public FieldNode getConstFieldByLiteralArg(ClassNode cls,LiteralArg arg){\n  PrimitiveType type=arg.getType().getPrimitiveType();\n  if (type == null) {\n    return null;\n  }\n  long literal=arg.getLiteral();\nswitch (type) {\ncase BOOLEAN:    return getConstField(cls,literal == 1,false);\ncase CHAR:  return getConstField(cls,(char)literal,Math.abs(literal) > 10);\ncase BYTE:return getConstField(cls,(byte)literal,Math.abs(literal) > 10);\ncase SHORT:return getConstField(cls,(short)literal,Math.abs(literal) > 100);\ncase INT:return getConstField(cls,(int)literal,Math.abs(literal) > 100);\ncase LONG:return getConstField(cls,literal,Math.abs(literal) > 1000);\ncase FLOAT:float f=Float.intBitsToFloat((int)literal);\nreturn getConstField(cls,f,Float.compare(f,0) == 0);\ncase DOUBLE:double d=Double.longBitsToDouble(literal);\nreturn getConstField(cls,d,Double.compare(d,0) == 0);\ndefault:return null;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "case CHAR:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.PrimitiveType"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 177,
    "startColumnNumber" : 8,
    "endLineNumber" : 177,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ ]
}