{
  "id" : 243,
  "expression" : "CLASSPATH_PREFIX",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CLASSPATH_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 46,
      "startColumnNumber" : 32,
      "endLineNumber" : 46,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 49
      },
      "nodeContext" : "resource.startsWith(CLASSPATH_PREFIX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resource.startsWith(CLASSPATH_PREFIX)) {\n  String path=resource.substring(CLASSPATH_PREFIX.length());\n  ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n  URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n  if (url == null) {\n    throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n  }\n  return url;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 45,
        "startColumnNumber" : 73,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resource.startsWith(CLASSPATH_PREFIX)) {\n    String path=resource.substring(CLASSPATH_PREFIX.length());\n    ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n    URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resource);\n  }\n catch (  MalformedURLException ex) {\n    return new File(resource).toURI().toURL();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the URL of the resource on the classpath.\n * @param resource The resource to find\n * @return The resource\n * @throws IOException If the resource cannot be found or read\n */\npublic static URL getResourceUrl(String resource) throws IOException {\n  if (resource.startsWith(CLASSPATH_PREFIX)) {\n    String path=resource.substring(CLASSPATH_PREFIX.length());\n    ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n    URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resource);\n  }\n catch (  MalformedURLException ex) {\n    return new File(resource).toURI().toURL();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 49
      },
      "nodeContext" : "resource.startsWith(CLASSPATH_PREFIX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "CLASSPATH_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 47,
      "startColumnNumber" : 45,
      "endLineNumber" : 47,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 47,
        "startColumnNumber" : 45,
        "endLineNumber" : 47,
        "endColumnNumber" : 70
      },
      "nodeContext" : "CLASSPATH_PREFIX.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 47,
        "startColumnNumber" : 26,
        "endLineNumber" : 47,
        "endColumnNumber" : 71
      },
      "nodeContext" : "resource.substring(CLASSPATH_PREFIX.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 47,
        "startColumnNumber" : 19,
        "endLineNumber" : 47,
        "endColumnNumber" : 71
      },
      "nodeContext" : "path=resource.substring(CLASSPATH_PREFIX.length())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 72
      },
      "nodeContext" : "String path=resource.substring(CLASSPATH_PREFIX.length());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String path=resource.substring(CLASSPATH_PREFIX.length());\n  ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n  URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n  if (url == null) {\n    throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n  }\n  return url;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resource.startsWith(CLASSPATH_PREFIX)) {\n  String path=resource.substring(CLASSPATH_PREFIX.length());\n  ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n  URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n  if (url == null) {\n    throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n  }\n  return url;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 45,
        "startColumnNumber" : 73,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resource.startsWith(CLASSPATH_PREFIX)) {\n    String path=resource.substring(CLASSPATH_PREFIX.length());\n    ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n    URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resource);\n  }\n catch (  MalformedURLException ex) {\n    return new File(resource).toURI().toURL();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the URL of the resource on the classpath.\n * @param resource The resource to find\n * @return The resource\n * @throws IOException If the resource cannot be found or read\n */\npublic static URL getResourceUrl(String resource) throws IOException {\n  if (resource.startsWith(CLASSPATH_PREFIX)) {\n    String path=resource.substring(CLASSPATH_PREFIX.length());\n    ClassLoader classLoader=ResourceUtils.class.getClassLoader();\n    URL url=(classLoader != null ? classLoader.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      throw new FileNotFoundException(\"Resource [\" + resource + \"] does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resource);\n  }\n catch (  MalformedURLException ex) {\n    return new File(resource).toURI().toURL();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 72
      },
      "nodeContext" : "String path=resource.substring(CLASSPATH_PREFIX.length());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 46,
    "startColumnNumber" : 32,
    "endLineNumber" : 46,
    "endColumnNumber" : 48
  }, {
    "charLength" : 16,
    "startLineNumber" : 47,
    "startColumnNumber" : 45,
    "endLineNumber" : 47,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}