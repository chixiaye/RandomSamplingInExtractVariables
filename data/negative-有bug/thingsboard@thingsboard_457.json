{
  "id" : 457,
  "expression" : "42",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/test/java/org/thingsboard/server/transport/mqtt/telemetry/attributes/AbstractMqttAttributesIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "42",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 189,
      "startColumnNumber" : 33,
      "endLineNumber" : 189,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertEquals(42,((LinkedHashMap)value).get(\"someNumber\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"key1\":  assertEquals(\"value1\",value);\nbreak;\ncase \"key2\":assertEquals(true,value);\nbreak;\ncase \"key3\":assertEquals(3.0,value);\nbreak;\ncase \"key4\":assertEquals(4,value);\nbreak;\ncase \"key5\":assertNotNull(value);\nassertEquals(3,((LinkedHashMap)value).size());\nassertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\nassertEquals(Arrays.asList(1,2,3),((LinkedHashMap)value).get(\"someArray\"));\nLinkedHashMap<String,String> someNestedObject=(LinkedHashMap)((LinkedHashMap)value).get(\"someNestedObject\");\nassertEquals(\"value\",someNestedObject.get(\"key\"));\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 169,
        "startColumnNumber" : 53,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String key=(String)map.get(\"key\");\n  Object value=map.get(\"value\");\n  assertTrue(keySet.contains(key));\nswitch (key) {\ncase \"key1\":    assertEquals(\"value1\",value);\n  break;\ncase \"key2\":assertEquals(true,value);\nbreak;\ncase \"key3\":assertEquals(3.0,value);\nbreak;\ncase \"key4\":assertEquals(4,value);\nbreak;\ncase \"key5\":assertNotNull(value);\nassertEquals(3,((LinkedHashMap)value).size());\nassertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\nassertEquals(Arrays.asList(1,2,3),((LinkedHashMap)value).get(\"someArray\"));\nLinkedHashMap<String,String> someNestedObject=(LinkedHashMap)((LinkedHashMap)value).get(\"someNestedObject\");\nassertEquals(\"value\",someNestedObject.get(\"key\"));\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map<String,Object> map : deviceValues) {\n  String key=(String)map.get(\"key\");\n  Object value=map.get(\"value\");\n  assertTrue(keySet.contains(key));\nswitch (key) {\ncase \"key1\":    assertEquals(\"value1\",value);\n  break;\ncase \"key2\":assertEquals(true,value);\nbreak;\ncase \"key3\":assertEquals(3.0,value);\nbreak;\ncase \"key4\":assertEquals(4,value);\nbreak;\ncase \"key5\":assertNotNull(value);\nassertEquals(3,((LinkedHashMap)value).size());\nassertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\nassertEquals(Arrays.asList(1,2,3),((LinkedHashMap)value).get(\"someArray\"));\nLinkedHashMap<String,String> someNestedObject=(LinkedHashMap)((LinkedHashMap)value).get(\"someNestedObject\");\nassertEquals(\"value\",someNestedObject.get(\"key\"));\nbreak;\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 168,
        "startColumnNumber" : 133,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Map<String,Object> map : deviceValues) {\n    String key=(String)map.get(\"key\");\n    Object value=map.get(\"value\");\n    assertTrue(keySet.contains(key));\nswitch (key) {\ncase \"key1\":      assertEquals(\"value1\",value);\n    break;\ncase \"key2\":  assertEquals(true,value);\nbreak;\ncase \"key3\":assertEquals(3.0,value);\nbreak;\ncase \"key4\":assertEquals(4,value);\nbreak;\ncase \"key5\":assertNotNull(value);\nassertEquals(3,((LinkedHashMap)value).size());\nassertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\nassertEquals(Arrays.asList(1,2,3),((LinkedHashMap)value).get(\"someArray\"));\nLinkedHashMap<String,String> someNestedObject=(LinkedHashMap)((LinkedHashMap)value).get(\"someNestedObject\");\nassertEquals(\"value\",someNestedObject.get(\"key\"));\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") protected void assertAttributesValues(List<Map<String,Object>> deviceValues,Set<String> keySet) throws JsonProcessingException {\n  for (  Map<String,Object> map : deviceValues) {\n    String key=(String)map.get(\"key\");\n    Object value=map.get(\"value\");\n    assertTrue(keySet.contains(key));\nswitch (key) {\ncase \"key1\":      assertEquals(\"value1\",value);\n    break;\ncase \"key2\":  assertEquals(true,value);\nbreak;\ncase \"key3\":assertEquals(3.0,value);\nbreak;\ncase \"key4\":assertEquals(4,value);\nbreak;\ncase \"key5\":assertNotNull(value);\nassertEquals(3,((LinkedHashMap)value).size());\nassertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\nassertEquals(Arrays.asList(1,2,3),((LinkedHashMap)value).get(\"someArray\"));\nLinkedHashMap<String,String> someNestedObject=(LinkedHashMap)((LinkedHashMap)value).get(\"someNestedObject\");\nassertEquals(\"value\",someNestedObject.get(\"key\"));\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 189,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(42,((LinkedHashMap)value).get(\"someNumber\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 189,
    "startColumnNumber" : 33,
    "endLineNumber" : 189,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}