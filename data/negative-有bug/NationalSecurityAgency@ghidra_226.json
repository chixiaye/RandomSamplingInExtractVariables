{
  "id" : 226,
  "expression" : "programManager == null",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/workflow/MapModulesDebuggerBot.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "programManager == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 171,
      "startColumnNumber" : 8,
      "endLineNumber" : 171,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (programManager == null) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 164,
        "startColumnNumber" : 59,
        "endLineNumber" : 180,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n  if (traceManager == null) {\n    continue;\n  }\n  ProgramManager programManager=tool.getService(ProgramManager.class);\n  if (programManager == null) {\n    continue;\n  }\n  if (!traceManager.getOpenTraces().contains(trace)) {\n    continue;\n  }\n  Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n  programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 164,
        "startColumnNumber" : 3,
        "endLineNumber" : 180,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (PluginTool tool : plugin.getProxyingPluginTools()) {\n  DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n  if (traceManager == null) {\n    continue;\n  }\n  ProgramManager programManager=tool.getService(ProgramManager.class);\n  if (programManager == null) {\n    continue;\n  }\n  if (!traceManager.getOpenTraces().contains(trace)) {\n    continue;\n  }\n  Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n  programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 163,
        "startColumnNumber" : 29,
        "endLineNumber" : 181,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  PluginTool tool : plugin.getProxyingPluginTools()) {\n    DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n    if (traceManager == null) {\n      continue;\n    }\n    ProgramManager programManager=tool.getService(ProgramManager.class);\n    if (programManager == null) {\n      continue;\n    }\n    if (!traceManager.getOpenTraces().contains(trace)) {\n      continue;\n    }\n    Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n    programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 163,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Trace trace : traces) {\n  for (  PluginTool tool : plugin.getProxyingPluginTools()) {\n    DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n    if (traceManager == null) {\n      continue;\n    }\n    ProgramManager programManager=tool.getService(ProgramManager.class);\n    if (programManager == null) {\n      continue;\n    }\n    if (!traceManager.getOpenTraces().contains(trace)) {\n      continue;\n    }\n    Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n    programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 100,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1156,
        "startLineNumber" : 155,
        "startColumnNumber" : 36,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Set<Trace> traces;\nsynchronized (traceQueue) {\n    traces=Set.copyOf(traceQueue);\n    traceQueue.clear();\n  }\n  Map<Trace,Pair<PluginTool,Set<Program>>> toAnalyze=new HashMap<>();\n  for (  Trace trace : traces) {\n    for (    PluginTool tool : plugin.getProxyingPluginTools()) {\n      DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n      if (traceManager == null) {\n        continue;\n      }\n      ProgramManager programManager=tool.getService(ProgramManager.class);\n      if (programManager == null) {\n        continue;\n      }\n      if (!traceManager.getOpenTraces().contains(trace)) {\n        continue;\n      }\n      Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n      programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n    }\n  }\n  for (  Map.Entry<Trace,Pair<PluginTool,Set<Program>>> ent : toAnalyze.entrySet()) {\n    PluginTool tool=ent.getValue().getLeft();\n    Trace trace=ent.getKey();\n    Set<Program> programs=ent.getValue().getRight();\n    analyzeTrace(tool,trace,programs);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 155,
        "startColumnNumber" : 1,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void queueSettled(Void __){\n  Set<Trace> traces;\nsynchronized (traceQueue) {\n    traces=Set.copyOf(traceQueue);\n    traceQueue.clear();\n  }\n  Map<Trace,Pair<PluginTool,Set<Program>>> toAnalyze=new HashMap<>();\n  for (  Trace trace : traces) {\n    for (    PluginTool tool : plugin.getProxyingPluginTools()) {\n      DebuggerTraceManagerService traceManager=tool.getService(DebuggerTraceManagerService.class);\n      if (traceManager == null) {\n        continue;\n      }\n      ProgramManager programManager=tool.getService(ProgramManager.class);\n      if (programManager == null) {\n        continue;\n      }\n      if (!traceManager.getOpenTraces().contains(trace)) {\n        continue;\n      }\n      Pair<PluginTool,Set<Program>> programs=toAnalyze.computeIfAbsent(trace,t -> Pair.of(tool,new HashSet<>()));\n      programs.getRight().addAll(List.of(programManager.getAllOpenPrograms()));\n    }\n  }\n  for (  Map.Entry<Trace,Pair<PluginTool,Set<Program>>> ent : toAnalyze.entrySet()) {\n    PluginTool tool=ent.getValue().getLeft();\n    Trace trace=ent.getKey();\n    Set<Program> programs=ent.getValue().getRight();\n    analyzeTrace(tool,trace,programs);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (programManager == null) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 171,
    "startColumnNumber" : 8,
    "endLineNumber" : 171,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}