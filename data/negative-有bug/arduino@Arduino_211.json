{
  "id" : 211,
  "expression" : "0",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/test/processing/app/tools/ZipDeflaterTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 32,
      "endLineNumber" : 61,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 61,
        "startColumnNumber" : 26,
        "endLineNumber" : 61,
        "endColumnNumber" : 34
      },
      "nodeContext" : "files[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(\"Test2\",files[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertEquals(\"Test2\",files[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 55,
        "startColumnNumber" : 50,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldDeflateZip() throws Exception {\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertEquals(\"Test2\",files[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 34,
      "endLineNumber" : 63,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 36
      },
      "nodeContext" : "destFolder.listFiles()[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 36
      },
      "nodeContext" : "file=destFolder.listFiles()[0]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 37
      },
      "nodeContext" : "file=destFolder.listFiles()[0];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 55,
        "startColumnNumber" : 50,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldDeflateZip() throws Exception {\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 37
      },
      "nodeContext" : "file=destFolder.listFiles()[0];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 67,
      "startColumnNumber" : 35,
      "endLineNumber" : 67,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 67,
        "startColumnNumber" : 29,
        "endLineNumber" : 67,
        "endColumnNumber" : 37
      },
      "nodeContext" : "files[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(\"Test.cpp\",files[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(\"Test.cpp\",files[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 55,
        "startColumnNumber" : 50,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldDeflateZip() throws Exception {\n  File file=new File(ZipDeflater.class.getResource(\"/Test2.zip\").getFile());\n  new ZipDeflater(file,destFolder).deflate();\n  String[] files=destFolder.list();\n  assertEquals(1,files.length);\n  assertEquals(\"Test2\",files[0]);\n  file=destFolder.listFiles()[0];\n  files=file.list();\n  assertEquals(5,files.length);\n  Arrays.sort(files);\n  assertEquals(\"Test.cpp\",files[0]);\n  assertEquals(\"Test.h\",files[1]);\n  assertEquals(\"examples\",files[2]);\n  assertEquals(\"keywords.txt\",files[3]);\n  assertEquals(\"readme.txt\",files[4]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(\"Test.cpp\",files[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 32,
    "endLineNumber" : 61,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 34,
    "endLineNumber" : 63,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 67,
    "startColumnNumber" : 35,
    "endLineNumber" : 67,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}