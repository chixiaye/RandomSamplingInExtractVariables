{
  "id" : 50,
  "expression" : "server",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/jcache/src/test/java/com/github/benmanes/caffeine/jcache/management/JmxRegistrationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "server",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 47,
      "startColumnNumber" : 9,
      "endLineNumber" : 47,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 47,
        "startColumnNumber" : 9,
        "endLineNumber" : 47,
        "endColumnNumber" : 41
      },
      "nodeContext" : "server.registerMBean(bean,name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 42
      },
      "nodeContext" : "when(server.registerMBean(bean,name))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 67
      },
      "nodeContext" : "when(server.registerMBean(bean,name)).thenThrow(throwableType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(server.registerMBean(bean,name)).thenThrow(throwableType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 43,
        "startColumnNumber" : 90,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var name=new ObjectName(\"\");\n  var bean=new JCacheStatisticsMXBean();\n  var server=Mockito.mock(MBeanServer.class);\n  when(server.registerMBean(bean,name)).thenThrow(throwableType);\n  JmxRegistration.register(server,name,bean);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(dataProvider=\"registerExceptions\",expectedExceptions=CacheException.class) public void register_error(Class<? extends Throwable> throwableType) throws JMException {\n  var name=new ObjectName(\"\");\n  var bean=new JCacheStatisticsMXBean();\n  var server=Mockito.mock(MBeanServer.class);\n  when(server.registerMBean(bean,name)).thenThrow(throwableType);\n  JmxRegistration.register(server,name,bean);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(server.registerMBean(bean,name)).thenThrow(throwableType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "server",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 48,
      "startColumnNumber" : 29,
      "endLineNumber" : 48,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 48
      },
      "nodeContext" : "JmxRegistration.register(server,name,bean)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 49
      },
      "nodeContext" : "JmxRegistration.register(server,name,bean);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 43,
        "startColumnNumber" : 90,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var name=new ObjectName(\"\");\n  var bean=new JCacheStatisticsMXBean();\n  var server=Mockito.mock(MBeanServer.class);\n  when(server.registerMBean(bean,name)).thenThrow(throwableType);\n  JmxRegistration.register(server,name,bean);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(dataProvider=\"registerExceptions\",expectedExceptions=CacheException.class) public void register_error(Class<? extends Throwable> throwableType) throws JMException {\n  var name=new ObjectName(\"\");\n  var bean=new JCacheStatisticsMXBean();\n  var server=Mockito.mock(MBeanServer.class);\n  when(server.registerMBean(bean,name)).thenThrow(throwableType);\n  JmxRegistration.register(server,name,bean);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 49
      },
      "nodeContext" : "JmxRegistration.register(server,name,bean);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 47,
    "startColumnNumber" : 9,
    "endLineNumber" : 47,
    "endColumnNumber" : 15
  }, {
    "charLength" : 6,
    "startLineNumber" : 48,
    "startColumnNumber" : 29,
    "endLineNumber" : 48,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}