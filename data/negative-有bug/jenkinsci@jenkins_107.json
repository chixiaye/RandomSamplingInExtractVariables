{
  "id" : 107,
  "expression" : "certificate",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/slaves/JnlpSlaveAgentProtocol4.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "certificate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 184,
      "startColumnNumber" : 16,
      "endLineNumber" : 184,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 35
      },
      "nodeContext" : "certificate == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 115
      },
      "nodeContext" : "certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 191,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n  LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n  X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n  RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n  char[] password=constructPassword();\n  keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n  if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n    LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n    X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n    RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n    char[] password=constructPassword();\n    keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n  if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n    LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n    X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n    RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n    char[] password=constructPassword();\n    keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n  }\n}\n catch (KeyStoreException e) {\n  LOGGER.log(Level.FINEST,\"Ignored\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 181,
        "startColumnNumber" : 79,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n    if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n      LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n      X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n      RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n      char[] password=constructPassword();\n      keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n    }\n  }\n catch (  KeyStoreException e) {\n    LOGGER.log(Level.FINEST,\"Ignored\",e);\n  }\n  handler.handle(socket,Collections.singletonMap(JnlpConnectionState.COOKIE_KEY,JnlpAgentReceiver.generateCookie()),ExtensionList.lookup(JnlpAgentReceiver.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(Socket socket) throws IOException, InterruptedException {\n  try {\n    X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n    if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n      LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n      X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n      RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n      char[] password=constructPassword();\n      keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n    }\n  }\n catch (  KeyStoreException e) {\n    LOGGER.log(Level.FINEST,\"Ignored\",e);\n  }\n  handler.handle(socket,Collections.singletonMap(JnlpConnectionState.COOKIE_KEY,JnlpAgentReceiver.generateCookie()),ExtensionList.lookup(JnlpAgentReceiver.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 35
      },
      "nodeContext" : "certificate == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.security.cert.X509Certificate"
  }, {
    "nodeContext" : "certificate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 185,
      "startColumnNumber" : 23,
      "endLineNumber" : 185,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 185,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 48
      },
      "nodeContext" : "certificate.getNotAfter()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 185,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 58
      },
      "nodeContext" : "certificate.getNotAfter().getTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 185,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 115
      },
      "nodeContext" : "certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 115
      },
      "nodeContext" : "certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 191,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n  LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n  X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n  RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n  char[] password=constructPassword();\n  keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n  if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n    LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n    X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n    RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n    char[] password=constructPassword();\n    keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n  if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n    LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n    X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n    RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n    char[] password=constructPassword();\n    keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n  }\n}\n catch (KeyStoreException e) {\n  LOGGER.log(Level.FINEST,\"Ignored\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 181,
        "startColumnNumber" : 79,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n    if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n      LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n      X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n      RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n      char[] password=constructPassword();\n      keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n    }\n  }\n catch (  KeyStoreException e) {\n    LOGGER.log(Level.FINEST,\"Ignored\",e);\n  }\n  handler.handle(socket,Collections.singletonMap(JnlpConnectionState.COOKIE_KEY,JnlpAgentReceiver.generateCookie()),ExtensionList.lookup(JnlpAgentReceiver.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(Socket socket) throws IOException, InterruptedException {\n  try {\n    X509Certificate certificate=(X509Certificate)keyStore.getCertificate(\"jenkins\");\n    if (certificate == null || certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)) {\n      LOGGER.log(Level.INFO,\"Updating {0} TLS certificate to retain validity\",getName());\n      X509Certificate identityCertificate=InstanceIdentityProvider.RSA.getCertificate();\n      RSAPrivateKey privateKey=InstanceIdentityProvider.RSA.getPrivateKey();\n      char[] password=constructPassword();\n      keyStore.setKeyEntry(\"jenkins\",privateKey,password,new X509Certificate[]{identityCertificate});\n    }\n  }\n catch (  KeyStoreException e) {\n    LOGGER.log(Level.FINEST,\"Ignored\",e);\n  }\n  handler.handle(socket,Collections.singletonMap(JnlpConnectionState.COOKIE_KEY,JnlpAgentReceiver.generateCookie()),ExtensionList.lookup(JnlpAgentReceiver.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 185,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 115
      },
      "nodeContext" : "certificate.getNotAfter().getTime() < System.currentTimeMillis() + TimeUnit.DAYS.toMillis(1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.security.cert.X509Certificate"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 184,
    "startColumnNumber" : 16,
    "endLineNumber" : 184,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 185,
    "startColumnNumber" : 23,
    "endLineNumber" : 185,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}