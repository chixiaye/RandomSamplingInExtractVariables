{
  "id" : 371,
  "expression" : "newFile.getName()",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/UniqueDexDiffDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newFile.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 41,
      "startColumnNumber" : 26,
      "endLineNumber" : 41,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 43
      },
      "nodeContext" : "name=newFile.getName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "String name=newFile.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=newFile.getName();\n  if (addedDexFiles.contains(name)) {\n    throw new TinkerPatchException(\"illegal dex name, dex name should be unique, dex:\" + name);\n  }\n else {\n    addedDexFiles.add(name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (added) {\n  String name=newFile.getName();\n  if (addedDexFiles.contains(name)) {\n    throw new TinkerPatchException(\"illegal dex name, dex name should be unique, dex:\" + name);\n  }\n else {\n    addedDexFiles.add(name);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 38,
        "startColumnNumber" : 94,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean added=super.patch(oldFile,newFile);\n  if (added) {\n    String name=newFile.getName();\n    if (addedDexFiles.contains(name)) {\n      throw new TinkerPatchException(\"illegal dex name, dex name should be unique, dex:\" + name);\n    }\n else {\n      addedDexFiles.add(name);\n    }\n  }\n  return added;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean patch(File oldFile,File newFile) throws IOException, TinkerPatchException {\n  boolean added=super.patch(oldFile,newFile);\n  if (added) {\n    String name=newFile.getName();\n    if (addedDexFiles.contains(name)) {\n      throw new TinkerPatchException(\"illegal dex name, dex name should be unique, dex:\" + name);\n    }\n else {\n      addedDexFiles.add(name);\n    }\n  }\n  return added;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "String name=newFile.getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 41,
    "startColumnNumber" : 26,
    "endLineNumber" : 41,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}