{
  "id" : 499,
  "expression" : "value < 0xA0",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value < 0xA0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 128,
      "startColumnNumber" : 28,
      "endLineNumber" : 128,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 40
      },
      "nodeContext" : "value > 0x7F && value < 0xA0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value > 0x7F && value < 0xA0) {\n  canBeISO88591=false;\n}\n else if (value > 0x9F) {\n  if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n    isoHighOther++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 127,
        "startColumnNumber" : 25,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (value > 0x7F && value < 0xA0) {\n    canBeISO88591=false;\n  }\n else   if (value > 0x9F) {\n    if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n      isoHighOther++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 127,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (canBeISO88591) {\n  if (value > 0x7F && value < 0xA0) {\n    canBeISO88591=false;\n  }\n else   if (value > 0x9F) {\n    if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n      isoHighOther++;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2554,
        "startLineNumber" : 88,
        "startColumnNumber" : 14,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int value=bytes[i] & 0xFF;\n  if (canBeUTF8) {\n    if (utf8BytesLeft > 0) {\n      if ((value & 0x80) == 0) {\n        canBeUTF8=false;\n      }\n else {\n        utf8BytesLeft--;\n      }\n    }\n else     if ((value & 0x80) != 0) {\n      if ((value & 0x40) == 0) {\n        canBeUTF8=false;\n      }\n else {\n        utf8BytesLeft++;\n        if ((value & 0x20) == 0) {\n          utf2BytesChars++;\n        }\n else {\n          utf8BytesLeft++;\n          if ((value & 0x10) == 0) {\n            utf3BytesChars++;\n          }\n else {\n            utf8BytesLeft++;\n            if ((value & 0x08) == 0) {\n              utf4BytesChars++;\n            }\n else {\n              canBeUTF8=false;\n            }\n          }\n        }\n      }\n    }\n  }\n  if (canBeISO88591) {\n    if (value > 0x7F && value < 0xA0) {\n      canBeISO88591=false;\n    }\n else     if (value > 0x9F) {\n      if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n        isoHighOther++;\n      }\n    }\n  }\n  if (canBeShiftJIS) {\n    if (sjisBytesLeft > 0) {\n      if (value < 0x40 || value == 0x7F || value > 0xFC) {\n        canBeShiftJIS=false;\n      }\n else {\n        sjisBytesLeft--;\n      }\n    }\n else     if (value == 0x80 || value == 0xA0 || value > 0xEF) {\n      canBeShiftJIS=false;\n    }\n else     if (value > 0xA0 && value < 0xE0) {\n      sjisKatakanaChars++;\n      sjisCurDoubleBytesWordLength=0;\n      sjisCurKatakanaWordLength++;\n      if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n        sjisMaxKatakanaWordLength=sjisCurKatakanaWordLength;\n      }\n    }\n else     if (value > 0x7F) {\n      sjisBytesLeft++;\n      sjisCurKatakanaWordLength=0;\n      sjisCurDoubleBytesWordLength++;\n      if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n        sjisMaxDoubleBytesWordLength=sjisCurDoubleBytesWordLength;\n      }\n    }\n else {\n      sjisCurKatakanaWordLength=0;\n      sjisCurDoubleBytesWordLength=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2656,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n  int value=bytes[i] & 0xFF;\n  if (canBeUTF8) {\n    if (utf8BytesLeft > 0) {\n      if ((value & 0x80) == 0) {\n        canBeUTF8=false;\n      }\n else {\n        utf8BytesLeft--;\n      }\n    }\n else     if ((value & 0x80) != 0) {\n      if ((value & 0x40) == 0) {\n        canBeUTF8=false;\n      }\n else {\n        utf8BytesLeft++;\n        if ((value & 0x20) == 0) {\n          utf2BytesChars++;\n        }\n else {\n          utf8BytesLeft++;\n          if ((value & 0x10) == 0) {\n            utf3BytesChars++;\n          }\n else {\n            utf8BytesLeft++;\n            if ((value & 0x08) == 0) {\n              utf4BytesChars++;\n            }\n else {\n              canBeUTF8=false;\n            }\n          }\n        }\n      }\n    }\n  }\n  if (canBeISO88591) {\n    if (value > 0x7F && value < 0xA0) {\n      canBeISO88591=false;\n    }\n else     if (value > 0x9F) {\n      if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n        isoHighOther++;\n      }\n    }\n  }\n  if (canBeShiftJIS) {\n    if (sjisBytesLeft > 0) {\n      if (value < 0x40 || value == 0x7F || value > 0xFC) {\n        canBeShiftJIS=false;\n      }\n else {\n        sjisBytesLeft--;\n      }\n    }\n else     if (value == 0x80 || value == 0xA0 || value > 0xEF) {\n      canBeShiftJIS=false;\n    }\n else     if (value > 0xA0 && value < 0xE0) {\n      sjisKatakanaChars++;\n      sjisCurDoubleBytesWordLength=0;\n      sjisCurKatakanaWordLength++;\n      if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n        sjisMaxKatakanaWordLength=sjisCurKatakanaWordLength;\n      }\n    }\n else     if (value > 0x7F) {\n      sjisBytesLeft++;\n      sjisCurKatakanaWordLength=0;\n      sjisCurDoubleBytesWordLength++;\n      if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n        sjisMaxDoubleBytesWordLength=sjisCurDoubleBytesWordLength;\n      }\n    }\n else {\n      sjisCurKatakanaWordLength=0;\n      sjisCurDoubleBytesWordLength=0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 265,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5373,
        "startLineNumber" : 51,
        "startColumnNumber" : 80,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (hints != null) {\n    String characterSet=(String)hints.get(DecodeHintType.CHARACTER_SET);\n    if (characterSet != null) {\n      return characterSet;\n    }\n  }\n  int length=bytes.length;\n  boolean canBeISO88591=true;\n  boolean canBeShiftJIS=true;\n  boolean canBeUTF8=true;\n  int utf8BytesLeft=0;\n  int utf2BytesChars=0;\n  int utf3BytesChars=0;\n  int utf4BytesChars=0;\n  int sjisBytesLeft=0;\n  int sjisKatakanaChars=0;\n  int sjisCurKatakanaWordLength=0;\n  int sjisCurDoubleBytesWordLength=0;\n  int sjisMaxKatakanaWordLength=0;\n  int sjisMaxDoubleBytesWordLength=0;\n  int isoHighOther=0;\n  boolean utf8bom=bytes.length > 3 && bytes[0] == (byte)0xEF && bytes[1] == (byte)0xBB && bytes[2] == (byte)0xBF;\n  for (int i=0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n    int value=bytes[i] & 0xFF;\n    if (canBeUTF8) {\n      if (utf8BytesLeft > 0) {\n        if ((value & 0x80) == 0) {\n          canBeUTF8=false;\n        }\n else {\n          utf8BytesLeft--;\n        }\n      }\n else       if ((value & 0x80) != 0) {\n        if ((value & 0x40) == 0) {\n          canBeUTF8=false;\n        }\n else {\n          utf8BytesLeft++;\n          if ((value & 0x20) == 0) {\n            utf2BytesChars++;\n          }\n else {\n            utf8BytesLeft++;\n            if ((value & 0x10) == 0) {\n              utf3BytesChars++;\n            }\n else {\n              utf8BytesLeft++;\n              if ((value & 0x08) == 0) {\n                utf4BytesChars++;\n              }\n else {\n                canBeUTF8=false;\n              }\n            }\n          }\n        }\n      }\n    }\n    if (canBeISO88591) {\n      if (value > 0x7F && value < 0xA0) {\n        canBeISO88591=false;\n      }\n else       if (value > 0x9F) {\n        if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n          isoHighOther++;\n        }\n      }\n    }\n    if (canBeShiftJIS) {\n      if (sjisBytesLeft > 0) {\n        if (value < 0x40 || value == 0x7F || value > 0xFC) {\n          canBeShiftJIS=false;\n        }\n else {\n          sjisBytesLeft--;\n        }\n      }\n else       if (value == 0x80 || value == 0xA0 || value > 0xEF) {\n        canBeShiftJIS=false;\n      }\n else       if (value > 0xA0 && value < 0xE0) {\n        sjisKatakanaChars++;\n        sjisCurDoubleBytesWordLength=0;\n        sjisCurKatakanaWordLength++;\n        if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n          sjisMaxKatakanaWordLength=sjisCurKatakanaWordLength;\n        }\n      }\n else       if (value > 0x7F) {\n        sjisBytesLeft++;\n        sjisCurKatakanaWordLength=0;\n        sjisCurDoubleBytesWordLength++;\n        if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n          sjisMaxDoubleBytesWordLength=sjisCurDoubleBytesWordLength;\n        }\n      }\n else {\n        sjisCurKatakanaWordLength=0;\n        sjisCurDoubleBytesWordLength=0;\n      }\n    }\n  }\n  if (canBeUTF8 && utf8BytesLeft > 0) {\n    canBeUTF8=false;\n  }\n  if (canBeShiftJIS && sjisBytesLeft > 0) {\n    canBeShiftJIS=false;\n  }\n  if (canBeUTF8 && (utf8bom || utf2BytesChars + utf3BytesChars + utf4BytesChars > 0)) {\n    return UTF8;\n  }\n  if (canBeShiftJIS && (ASSUME_SHIFT_JIS || sjisMaxKatakanaWordLength >= 3 || sjisMaxDoubleBytesWordLength >= 3)) {\n    return SHIFT_JIS;\n  }\n  if (canBeISO88591 && canBeShiftJIS) {\n    return (sjisMaxKatakanaWordLength == 2 && sjisKatakanaChars == 2) || isoHighOther * 10 >= length ? SHIFT_JIS : ISO88591;\n  }\n  if (canBeISO88591) {\n    return ISO88591;\n  }\n  if (canBeShiftJIS) {\n    return SHIFT_JIS;\n  }\n  if (canBeUTF8) {\n    return UTF8;\n  }\n  return PLATFORM_DEFAULT_ENCODING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 495,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5808,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param bytes bytes encoding a string, whose encoding should be guessed\n * @param hints decode hints if applicable\n * @return name of guessed encoding; at the moment will only guess one of:{@link #SHIFT_JIS},  {@link #UTF8},  {@link #ISO88591}, or the platform default encoding if none of these can possibly be correct\n */\npublic static String guessEncoding(byte[] bytes,Map<DecodeHintType,?> hints){\n  if (hints != null) {\n    String characterSet=(String)hints.get(DecodeHintType.CHARACTER_SET);\n    if (characterSet != null) {\n      return characterSet;\n    }\n  }\n  int length=bytes.length;\n  boolean canBeISO88591=true;\n  boolean canBeShiftJIS=true;\n  boolean canBeUTF8=true;\n  int utf8BytesLeft=0;\n  int utf2BytesChars=0;\n  int utf3BytesChars=0;\n  int utf4BytesChars=0;\n  int sjisBytesLeft=0;\n  int sjisKatakanaChars=0;\n  int sjisCurKatakanaWordLength=0;\n  int sjisCurDoubleBytesWordLength=0;\n  int sjisMaxKatakanaWordLength=0;\n  int sjisMaxDoubleBytesWordLength=0;\n  int isoHighOther=0;\n  boolean utf8bom=bytes.length > 3 && bytes[0] == (byte)0xEF && bytes[1] == (byte)0xBB && bytes[2] == (byte)0xBF;\n  for (int i=0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n    int value=bytes[i] & 0xFF;\n    if (canBeUTF8) {\n      if (utf8BytesLeft > 0) {\n        if ((value & 0x80) == 0) {\n          canBeUTF8=false;\n        }\n else {\n          utf8BytesLeft--;\n        }\n      }\n else       if ((value & 0x80) != 0) {\n        if ((value & 0x40) == 0) {\n          canBeUTF8=false;\n        }\n else {\n          utf8BytesLeft++;\n          if ((value & 0x20) == 0) {\n            utf2BytesChars++;\n          }\n else {\n            utf8BytesLeft++;\n            if ((value & 0x10) == 0) {\n              utf3BytesChars++;\n            }\n else {\n              utf8BytesLeft++;\n              if ((value & 0x08) == 0) {\n                utf4BytesChars++;\n              }\n else {\n                canBeUTF8=false;\n              }\n            }\n          }\n        }\n      }\n    }\n    if (canBeISO88591) {\n      if (value > 0x7F && value < 0xA0) {\n        canBeISO88591=false;\n      }\n else       if (value > 0x9F) {\n        if (value < 0xC0 || value == 0xD7 || value == 0xF7) {\n          isoHighOther++;\n        }\n      }\n    }\n    if (canBeShiftJIS) {\n      if (sjisBytesLeft > 0) {\n        if (value < 0x40 || value == 0x7F || value > 0xFC) {\n          canBeShiftJIS=false;\n        }\n else {\n          sjisBytesLeft--;\n        }\n      }\n else       if (value == 0x80 || value == 0xA0 || value > 0xEF) {\n        canBeShiftJIS=false;\n      }\n else       if (value > 0xA0 && value < 0xE0) {\n        sjisKatakanaChars++;\n        sjisCurDoubleBytesWordLength=0;\n        sjisCurKatakanaWordLength++;\n        if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n          sjisMaxKatakanaWordLength=sjisCurKatakanaWordLength;\n        }\n      }\n else       if (value > 0x7F) {\n        sjisBytesLeft++;\n        sjisCurKatakanaWordLength=0;\n        sjisCurDoubleBytesWordLength++;\n        if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n          sjisMaxDoubleBytesWordLength=sjisCurDoubleBytesWordLength;\n        }\n      }\n else {\n        sjisCurKatakanaWordLength=0;\n        sjisCurDoubleBytesWordLength=0;\n      }\n    }\n  }\n  if (canBeUTF8 && utf8BytesLeft > 0) {\n    canBeUTF8=false;\n  }\n  if (canBeShiftJIS && sjisBytesLeft > 0) {\n    canBeShiftJIS=false;\n  }\n  if (canBeUTF8 && (utf8bom || utf2BytesChars + utf3BytesChars + utf4BytesChars > 0)) {\n    return UTF8;\n  }\n  if (canBeShiftJIS && (ASSUME_SHIFT_JIS || sjisMaxKatakanaWordLength >= 3 || sjisMaxDoubleBytesWordLength >= 3)) {\n    return SHIFT_JIS;\n  }\n  if (canBeISO88591 && canBeShiftJIS) {\n    return (sjisMaxKatakanaWordLength == 2 && sjisKatakanaChars == 2) || isoHighOther * 10 >= length ? SHIFT_JIS : ISO88591;\n  }\n  if (canBeISO88591) {\n    return ISO88591;\n  }\n  if (canBeShiftJIS) {\n    return SHIFT_JIS;\n  }\n  if (canBeUTF8) {\n    return UTF8;\n  }\n  return PLATFORM_DEFAULT_ENCODING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 515,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 40
      },
      "nodeContext" : "value > 0x7F && value < 0xA0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 128,
    "startColumnNumber" : 28,
    "endLineNumber" : 128,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}