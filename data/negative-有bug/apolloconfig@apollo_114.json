{
  "id" : 114,
  "expression" : "services",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/api/RetryableRestTemplate.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "services",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 78,
      "startColumnNumber" : 32,
      "endLineNumber" : 78,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 41
      },
      "nodeContext" : "CollectionUtils.isEmpty(services)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (CollectionUtils.isEmpty(services)) {\n  ServiceException e=new ServiceException(\"No available admin service\");\n  ct.setStatus(e);\n  ct.complete();\n  throw e;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 67,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (path.startsWith(\"/\")) {\n    path=path.substring(1,path.length());\n  }\n  String uri=uriTemplateHandler.expand(path,uriVariables).getPath();\n  Transaction ct=Cat.newTransaction(\"AdminAPI\",uri);\n  List<ServiceDTO> services=adminServiceAddressLocator.getServiceList(env);\n  if (CollectionUtils.isEmpty(services)) {\n    ServiceException e=new ServiceException(\"No available admin service\");\n    ct.setStatus(e);\n    ct.complete();\n    throw e;\n  }\n  for (  ServiceDTO serviceDTO : services) {\n    try {\n      T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n      ct.setStatus(Message.SUCCESS);\n      ct.complete();\n      return result;\n    }\n catch (    Throwable t) {\n      Cat.logError(t);\n      if (canRetry(t,method)) {\n        Cat.logEvent(CatEventType.API_RETRY,uri);\n        continue;\n      }\n else {\n        ct.setStatus(t);\n        ct.complete();\n        throw t;\n      }\n    }\n  }\n  ServiceException e=new ServiceException(\"No available admin service\");\n  ct.setStatus(e);\n  ct.complete();\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1339,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private <T>T execute(HttpMethod method,Env env,String path,Object request,Class<T> responseType,Object... uriVariables){\n  if (path.startsWith(\"/\")) {\n    path=path.substring(1,path.length());\n  }\n  String uri=uriTemplateHandler.expand(path,uriVariables).getPath();\n  Transaction ct=Cat.newTransaction(\"AdminAPI\",uri);\n  List<ServiceDTO> services=adminServiceAddressLocator.getServiceList(env);\n  if (CollectionUtils.isEmpty(services)) {\n    ServiceException e=new ServiceException(\"No available admin service\");\n    ct.setStatus(e);\n    ct.complete();\n    throw e;\n  }\n  for (  ServiceDTO serviceDTO : services) {\n    try {\n      T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n      ct.setStatus(Message.SUCCESS);\n      ct.complete();\n      return result;\n    }\n catch (    Throwable t) {\n      Cat.logError(t);\n      if (canRetry(t,method)) {\n        Cat.logEvent(CatEventType.API_RETRY,uri);\n        continue;\n      }\n else {\n        ct.setStatus(t);\n        ct.complete();\n        throw t;\n      }\n    }\n  }\n  ServiceException e=new ServiceException(\"No available admin service\");\n  ct.setStatus(e);\n  ct.complete();\n  throw e;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 41
      },
      "nodeContext" : "CollectionUtils.isEmpty(services)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.ctrip.framework.apollo.core.dto.ServiceDTO>"
  }, {
    "nodeContext" : "services",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 85,
      "startColumnNumber" : 33,
      "endLineNumber" : 85,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ServiceDTO serviceDTO : services) {\n  try {\n    T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n    ct.setStatus(Message.SUCCESS);\n    ct.complete();\n    return result;\n  }\n catch (  Throwable t) {\n    Cat.logError(t);\n    if (canRetry(t,method)) {\n      Cat.logEvent(CatEventType.API_RETRY,uri);\n      continue;\n    }\n else {\n      ct.setStatus(t);\n      ct.complete();\n      throw t;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 67,
        "startColumnNumber" : 48,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (path.startsWith(\"/\")) {\n    path=path.substring(1,path.length());\n  }\n  String uri=uriTemplateHandler.expand(path,uriVariables).getPath();\n  Transaction ct=Cat.newTransaction(\"AdminAPI\",uri);\n  List<ServiceDTO> services=adminServiceAddressLocator.getServiceList(env);\n  if (CollectionUtils.isEmpty(services)) {\n    ServiceException e=new ServiceException(\"No available admin service\");\n    ct.setStatus(e);\n    ct.complete();\n    throw e;\n  }\n  for (  ServiceDTO serviceDTO : services) {\n    try {\n      T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n      ct.setStatus(Message.SUCCESS);\n      ct.complete();\n      return result;\n    }\n catch (    Throwable t) {\n      Cat.logError(t);\n      if (canRetry(t,method)) {\n        Cat.logEvent(CatEventType.API_RETRY,uri);\n        continue;\n      }\n else {\n        ct.setStatus(t);\n        ct.complete();\n        throw t;\n      }\n    }\n  }\n  ServiceException e=new ServiceException(\"No available admin service\");\n  ct.setStatus(e);\n  ct.complete();\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1339,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private <T>T execute(HttpMethod method,Env env,String path,Object request,Class<T> responseType,Object... uriVariables){\n  if (path.startsWith(\"/\")) {\n    path=path.substring(1,path.length());\n  }\n  String uri=uriTemplateHandler.expand(path,uriVariables).getPath();\n  Transaction ct=Cat.newTransaction(\"AdminAPI\",uri);\n  List<ServiceDTO> services=adminServiceAddressLocator.getServiceList(env);\n  if (CollectionUtils.isEmpty(services)) {\n    ServiceException e=new ServiceException(\"No available admin service\");\n    ct.setStatus(e);\n    ct.complete();\n    throw e;\n  }\n  for (  ServiceDTO serviceDTO : services) {\n    try {\n      T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n      ct.setStatus(Message.SUCCESS);\n      ct.complete();\n      return result;\n    }\n catch (    Throwable t) {\n      Cat.logError(t);\n      if (canRetry(t,method)) {\n        Cat.logEvent(CatEventType.API_RETRY,uri);\n        continue;\n      }\n else {\n        ct.setStatus(t);\n        ct.complete();\n        throw t;\n      }\n    }\n  }\n  ServiceException e=new ServiceException(\"No available admin service\");\n  ct.setStatus(e);\n  ct.complete();\n  throw e;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ServiceDTO serviceDTO : services) {\n  try {\n    T result=doExecute(method,serviceDTO,path,request,responseType,uriVariables);\n    ct.setStatus(Message.SUCCESS);\n    ct.complete();\n    return result;\n  }\n catch (  Throwable t) {\n    Cat.logError(t);\n    if (canRetry(t,method)) {\n      Cat.logEvent(CatEventType.API_RETRY,uri);\n      continue;\n    }\n else {\n      ct.setStatus(t);\n      ct.complete();\n      throw t;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 73,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.ctrip.framework.apollo.core.dto.ServiceDTO>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 78,
    "startColumnNumber" : 32,
    "endLineNumber" : 78,
    "endColumnNumber" : 40
  }, {
    "charLength" : 8,
    "startLineNumber" : 85,
    "startColumnNumber" : 33,
    "endLineNumber" : 85,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}