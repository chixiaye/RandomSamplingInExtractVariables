{
  "id" : 27,
  "expression" : "\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\"",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/distsql/rql/DataSourceQueryResultSetTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 97,
      "startLineNumber" : 106,
      "startColumnNumber" : 38,
      "endLineNumber" : 106,
      "endColumnNumber" : 135
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 106,
        "startColumnNumber" : 38,
        "endLineNumber" : 107,
        "endColumnNumber" : 131
      },
      "nodeContext" : "\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 106,
        "startColumnNumber" : 35,
        "endLineNumber" : 107,
        "endColumnNumber" : 132
      },
      "nodeContext" : "is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 133
      },
      "nodeContext" : "assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 134
      },
      "nodeContext" : "assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 77,
        "startColumnNumber" : 35,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ContextManager manager=mock(ContextManager.class);\n  when(manager.getMetaDataContexts()).thenReturn(mock(MetaDataContexts.class));\n  when(manager.getMetaDataContexts().getMetaDataPersistService()).thenReturn(Optional.empty());\n  ProxyContext.getInstance().init(manager);\n  DistSQLResultSet resultSet=new DataSourceQueryResultSet();\n  resultSet.init(shardingSphereMetaData,mock(ShowResourcesStatement.class));\n  Collection<Object> actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  Iterator<Object> rowData=actual.iterator();\n  assertThat(rowData.next(),is(\"ds_0\"));\n  assertThat(rowData.next(),is(\"MySQL\"));\n  assertThat(rowData.next(),is(\"localhost\"));\n  assertThat(rowData.next(),is(3306));\n  assertThat(rowData.next(),is(\"demo_ds\"));\n  assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":false,\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"));\n  MetaDataPersistService persistService=mock(MetaDataPersistService.class,RETURNS_DEEP_STUBS);\n  when(persistService.getDataSourceService().load(any())).thenReturn(mockDataSourceConfigurationMap());\n  when(manager.getMetaDataContexts().getMetaDataPersistService()).thenReturn(Optional.ofNullable(persistService));\n  resultSet.init(shardingSphereMetaData,mock(ShowResourcesStatement.class));\n  actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  rowData=actual.iterator();\n  assertThat(rowData.next(),is(\"ds_0\"));\n  assertThat(rowData.next(),is(\"MySQL\"));\n  assertThat(rowData.next(),is(\"localhost\"));\n  assertThat(rowData.next(),is(3306));\n  assertThat(rowData.next(),is(\"demo_ds\"));\n  assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 275,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertGetRowData(){\n  ContextManager manager=mock(ContextManager.class);\n  when(manager.getMetaDataContexts()).thenReturn(mock(MetaDataContexts.class));\n  when(manager.getMetaDataContexts().getMetaDataPersistService()).thenReturn(Optional.empty());\n  ProxyContext.getInstance().init(manager);\n  DistSQLResultSet resultSet=new DataSourceQueryResultSet();\n  resultSet.init(shardingSphereMetaData,mock(ShowResourcesStatement.class));\n  Collection<Object> actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  Iterator<Object> rowData=actual.iterator();\n  assertThat(rowData.next(),is(\"ds_0\"));\n  assertThat(rowData.next(),is(\"MySQL\"));\n  assertThat(rowData.next(),is(\"localhost\"));\n  assertThat(rowData.next(),is(3306));\n  assertThat(rowData.next(),is(\"demo_ds\"));\n  assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":false,\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"));\n  MetaDataPersistService persistService=mock(MetaDataPersistService.class,RETURNS_DEEP_STUBS);\n  when(persistService.getDataSourceService().load(any())).thenReturn(mockDataSourceConfigurationMap());\n  when(manager.getMetaDataContexts().getMetaDataPersistService()).thenReturn(Optional.ofNullable(persistService));\n  resultSet.init(shardingSphereMetaData,mock(ShowResourcesStatement.class));\n  actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  rowData=actual.iterator();\n  assertThat(rowData.next(),is(\"ds_0\"));\n  assertThat(rowData.next(),is(\"MySQL\"));\n  assertThat(rowData.next(),is(\"localhost\"));\n  assertThat(rowData.next(),is(3306));\n  assertThat(rowData.next(),is(\"demo_ds\"));\n  assertThat(rowData.next(),is(\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 106,
        "startColumnNumber" : 38,
        "endLineNumber" : 107,
        "endColumnNumber" : 131
      },
      "nodeContext" : "\"{\\\"maxLifetimeMilliseconds\\\":1800000,\\\"readOnly\\\":true,\\\"customPoolProps\\\":{\\\"test\\\":\\\"test\\\"},\" + \"\\\"minPoolSize\\\":1,\\\"idleTimeoutMilliseconds\\\":60000,\\\"maxPoolSize\\\":50,\\\"connectionTimeoutMilliseconds\\\":30000}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 97,
    "startLineNumber" : 106,
    "startColumnNumber" : 38,
    "endLineNumber" : 106,
    "endColumnNumber" : 135
  } ],
  "layoutRelationDataList" : [ ]
}