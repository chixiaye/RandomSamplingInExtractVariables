{
  "id" : 102,
  "expression" : "sqrt",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/maths/FibonacciNumber.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sqrt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 25,
      "startColumnNumber" : 15,
      "endLineNumber" : 25,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sqrt * sqrt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 36
      },
      "nodeContext" : "sqrt * sqrt == number",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return sqrt * sqrt == number;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 23,
        "startColumnNumber" : 54,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int sqrt=(int)Math.sqrt(number);\n  return sqrt * sqrt == number;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check if a number is perfect square number\n * @param number the number to be checked\n * @return <tt>true</tt> if {@code number} is perfect square, otherwise<tt>false</tt>\n */\npublic static boolean isPerfectSquare(int number){\n  int sqrt=(int)Math.sqrt(number);\n  return sqrt * sqrt == number;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return sqrt * sqrt == number;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "sqrt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 25,
      "startColumnNumber" : 22,
      "endLineNumber" : 25,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sqrt * sqrt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 36
      },
      "nodeContext" : "sqrt * sqrt == number",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return sqrt * sqrt == number;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 23,
        "startColumnNumber" : 54,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int sqrt=(int)Math.sqrt(number);\n  return sqrt * sqrt == number;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check if a number is perfect square number\n * @param number the number to be checked\n * @return <tt>true</tt> if {@code number} is perfect square, otherwise<tt>false</tt>\n */\npublic static boolean isPerfectSquare(int number){\n  int sqrt=(int)Math.sqrt(number);\n  return sqrt * sqrt == number;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return sqrt * sqrt == number;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 25,
    "startColumnNumber" : 15,
    "endLineNumber" : 25,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 25,
    "startColumnNumber" : 22,
    "endLineNumber" : 25,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}