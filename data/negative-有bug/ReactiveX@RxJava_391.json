{
  "id" : 391,
  "expression" : "\"hello\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableMergeDelayErrorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"hello\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 240,
      "startColumnNumber" : 48,
      "endLineNumber" : 240,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 240,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 56
      },
      "nodeContext" : "verify(stringObserver,times(2)).onNext(\"hello\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 240,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(stringObserver,times(2)).onNext(\"hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 991,
        "startLineNumber" : 219,
        "startColumnNumber" : 51,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Flowable<String> o1=Flowable.create(new TestSynchronousObservable());\n  final Flowable<String> o2=Flowable.create(new TestSynchronousObservable());\n  Flowable<Flowable<String>> observableOfObservables=Flowable.create(new Publisher<Flowable<String>>(){\n    @Override public void subscribe(    Subscriber<? super Flowable<String>> observer){\n      observer.onSubscribe(new BooleanSubscription());\n      observer.onNext(o1);\n      observer.onNext(o2);\n      observer.onComplete();\n    }\n  }\n);\n  Flowable<String> m=Flowable.mergeDelayError(observableOfObservables);\n  m.subscribe(stringObserver);\n  verify(stringObserver,never()).onError(any(Throwable.class));\n  verify(stringObserver,times(1)).onComplete();\n  verify(stringObserver,times(2)).onNext(\"hello\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The unit tests below are from OperationMerge and should ensure the normal merge functionality is correct.\n */\n@Test public void testMergeObservableOfObservables(){\n  final Flowable<String> o1=Flowable.create(new TestSynchronousObservable());\n  final Flowable<String> o2=Flowable.create(new TestSynchronousObservable());\n  Flowable<Flowable<String>> observableOfObservables=Flowable.create(new Publisher<Flowable<String>>(){\n    @Override public void subscribe(    Subscriber<? super Flowable<String>> observer){\n      observer.onSubscribe(new BooleanSubscription());\n      observer.onNext(o1);\n      observer.onNext(o2);\n      observer.onComplete();\n    }\n  }\n);\n  Flowable<String> m=Flowable.mergeDelayError(observableOfObservables);\n  m.subscribe(stringObserver);\n  verify(stringObserver,never()).onError(any(Throwable.class));\n  verify(stringObserver,times(1)).onComplete();\n  verify(stringObserver,times(2)).onNext(\"hello\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 240,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(stringObserver,times(2)).onNext(\"hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 240,
    "startColumnNumber" : 48,
    "endLineNumber" : 240,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}