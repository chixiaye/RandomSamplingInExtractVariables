{
  "id" : 422,
  "expression" : "info.getCover()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/messenger/audioinfo/mp3/MP3Info.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "info.getCover()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 47,
      "startColumnNumber" : 11,
      "endLineNumber" : 47,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 47,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 26
      },
      "nodeContext" : "cover=info.getCover()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 47,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 27
      },
      "nodeContext" : "cover=info.getCover();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 41,
        "startColumnNumber" : 44,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ID3v2Info info=new ID3v2Info(data,debugLevel);\n  album=info.getAlbum();\n  albumArtist=info.getAlbumArtist();\n  artist=info.getArtist();\n  comment=info.getComment();\n  cover=info.getCover();\n  smallCover=info.getSmallCover();\n  compilation=info.isCompilation();\n  composer=info.getComposer();\n  copyright=info.getCopyright();\n  disc=info.getDisc();\n  discs=info.getDiscs();\n  duration=info.getDuration();\n  genre=info.getGenre();\n  grouping=info.getGrouping();\n  lyrics=info.getLyrics();\n  title=info.getTitle();\n  track=info.getTrack();\n  tracks=info.getTracks();\n  year=info.getYear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ID3v2Info.isID3v2StartPosition(data)) {\n  ID3v2Info info=new ID3v2Info(data,debugLevel);\n  album=info.getAlbum();\n  albumArtist=info.getAlbumArtist();\n  artist=info.getArtist();\n  comment=info.getComment();\n  cover=info.getCover();\n  smallCover=info.getSmallCover();\n  compilation=info.isCompilation();\n  composer=info.getComposer();\n  copyright=info.getCopyright();\n  disc=info.getDisc();\n  discs=info.getDiscs();\n  duration=info.getDuration();\n  genre=info.getGenre();\n  grouping=info.getGrouping();\n  lyrics=info.getLyrics();\n  title=info.getTitle();\n  track=info.getTrack();\n  tracks=info.getTracks();\n  year=info.getYear();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2137,
        "startLineNumber" : 37,
        "startColumnNumber" : 125,
        "endLineNumber" : 108,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  brand=\"MP3\";\n  version=\"0\";\n  MP3Input data=new MP3Input(input);\n  if (ID3v2Info.isID3v2StartPosition(data)) {\n    ID3v2Info info=new ID3v2Info(data,debugLevel);\n    album=info.getAlbum();\n    albumArtist=info.getAlbumArtist();\n    artist=info.getArtist();\n    comment=info.getComment();\n    cover=info.getCover();\n    smallCover=info.getSmallCover();\n    compilation=info.isCompilation();\n    composer=info.getComposer();\n    copyright=info.getCopyright();\n    disc=info.getDisc();\n    discs=info.getDiscs();\n    duration=info.getDuration();\n    genre=info.getGenre();\n    grouping=info.getGrouping();\n    lyrics=info.getLyrics();\n    title=info.getTitle();\n    track=info.getTrack();\n    tracks=info.getTracks();\n    year=info.getYear();\n  }\n  if (duration <= 0 || duration >= 3600000L) {\n    try {\n      duration=calculateDuration(data,fileLength,new StopReadCondition(){\n        final long stopPosition=fileLength - 128;\n        @Override public boolean stopRead(        MP3Input data) throws IOException {\n          return (data.getPosition() == stopPosition) && ID3v1Info.isID3v1StartPosition(data);\n        }\n      }\n);\n    }\n catch (    MP3Exception e) {\n      if (LOGGER.isLoggable(debugLevel)) {\n        LOGGER.log(debugLevel,\"Could not determine MP3 duration\",e);\n      }\n    }\n  }\n  if (title == null || album == null || artist == null) {\n    if (data.getPosition() <= fileLength - 128) {\n      data.skipFully(fileLength - 128 - data.getPosition());\n      if (ID3v1Info.isID3v1StartPosition(input)) {\n        ID3v1Info info=new ID3v1Info(input);\n        if (album == null) {\n          album=info.getAlbum();\n        }\n        if (artist == null) {\n          artist=info.getArtist();\n        }\n        if (comment == null) {\n          comment=info.getComment();\n        }\n        if (genre == null) {\n          genre=info.getGenre();\n        }\n        if (title == null) {\n          title=info.getTitle();\n        }\n        if (track == 0) {\n          track=info.getTrack();\n        }\n        if (year == 0) {\n          year=info.getYear();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2261,
        "startLineNumber" : 37,
        "startColumnNumber" : 1,
        "endLineNumber" : 108,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public MP3Info(InputStream input,final long fileLength,Level debugLevel) throws IOException, ID3v2Exception, MP3Exception {\n  brand=\"MP3\";\n  version=\"0\";\n  MP3Input data=new MP3Input(input);\n  if (ID3v2Info.isID3v2StartPosition(data)) {\n    ID3v2Info info=new ID3v2Info(data,debugLevel);\n    album=info.getAlbum();\n    albumArtist=info.getAlbumArtist();\n    artist=info.getArtist();\n    comment=info.getComment();\n    cover=info.getCover();\n    smallCover=info.getSmallCover();\n    compilation=info.isCompilation();\n    composer=info.getComposer();\n    copyright=info.getCopyright();\n    disc=info.getDisc();\n    discs=info.getDiscs();\n    duration=info.getDuration();\n    genre=info.getGenre();\n    grouping=info.getGrouping();\n    lyrics=info.getLyrics();\n    title=info.getTitle();\n    track=info.getTrack();\n    tracks=info.getTracks();\n    year=info.getYear();\n  }\n  if (duration <= 0 || duration >= 3600000L) {\n    try {\n      duration=calculateDuration(data,fileLength,new StopReadCondition(){\n        final long stopPosition=fileLength - 128;\n        @Override public boolean stopRead(        MP3Input data) throws IOException {\n          return (data.getPosition() == stopPosition) && ID3v1Info.isID3v1StartPosition(data);\n        }\n      }\n);\n    }\n catch (    MP3Exception e) {\n      if (LOGGER.isLoggable(debugLevel)) {\n        LOGGER.log(debugLevel,\"Could not determine MP3 duration\",e);\n      }\n    }\n  }\n  if (title == null || album == null || artist == null) {\n    if (data.getPosition() <= fileLength - 128) {\n      data.skipFully(fileLength - 128 - data.getPosition());\n      if (ID3v1Info.isID3v1StartPosition(input)) {\n        ID3v1Info info=new ID3v1Info(input);\n        if (album == null) {\n          album=info.getAlbum();\n        }\n        if (artist == null) {\n          artist=info.getArtist();\n        }\n        if (comment == null) {\n          comment=info.getComment();\n        }\n        if (genre == null) {\n          genre=info.getGenre();\n        }\n        if (title == null) {\n          title=info.getTitle();\n        }\n        if (track == 0) {\n          track=info.getTrack();\n        }\n        if (year == 0) {\n          year=info.getYear();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 47,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 27
      },
      "nodeContext" : "cover=info.getCover();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.telegram.messenger.audioinfo.Bitmap"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 47,
    "startColumnNumber" : 11,
    "endLineNumber" : 47,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}