{
  "id" : 440,
  "expression" : "ImmutableMap",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/sessionqueue/AddBackToSessionQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ImmutableMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 59,
      "startColumnNumber" : 27,
      "endLineNumber" : 59,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 59,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 58
      },
      "nodeContext" : "ImmutableMap.of(\"value\",value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 59
      },
      "nodeContext" : "asJson(ImmutableMap.of(\"value\",value))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 58,
        "startColumnNumber" : 30,
        "endLineNumber" : 59,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 60
      },
      "nodeContext" : "response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 61
      },
      "nodeContext" : "HttpResponse response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 50,
        "startColumnNumber" : 75,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HTTP_REQUEST.accept(span,req);\n  span.setAttribute(AttributeKey.REQUEST_ID.getKey(),id.toString());\n  boolean value=newSessionQueuer.retryAddToQueue(req,id);\n  span.setAttribute(\"request.retry\",value);\n  HttpResponse response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)));\n  HTTP_RESPONSE.accept(span,response);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Span span=newSpanAsChildOf(tracer,req,\"sessionqueuer.retry\")){\n  HTTP_REQUEST.accept(span,req);\n  span.setAttribute(AttributeKey.REQUEST_ID.getKey(),id.toString());\n  boolean value=newSessionQueuer.retryAddToQueue(req,id);\n  span.setAttribute(\"request.retry\",value);\n  HttpResponse response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)));\n  HTTP_RESPONSE.accept(span,response);\n  return response;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 49,
        "startColumnNumber" : 47,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (Span span=newSpanAsChildOf(tracer,req,\"sessionqueuer.retry\")){\n    HTTP_REQUEST.accept(span,req);\n    span.setAttribute(AttributeKey.REQUEST_ID.getKey(),id.toString());\n    boolean value=newSessionQueuer.retryAddToQueue(req,id);\n    span.setAttribute(\"request.retry\",value);\n    HttpResponse response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)));\n    HTTP_RESPONSE.accept(span,response);\n    return response;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public HttpResponse execute(HttpRequest req){\n  try (Span span=newSpanAsChildOf(tracer,req,\"sessionqueuer.retry\")){\n    HTTP_REQUEST.accept(span,req);\n    span.setAttribute(AttributeKey.REQUEST_ID.getKey(),id.toString());\n    boolean value=newSessionQueuer.retryAddToQueue(req,id);\n    span.setAttribute(\"request.retry\",value);\n    HttpResponse response=new HttpResponse().setContent(asJson(ImmutableMap.of(\"value\",value)));\n    HTTP_RESPONSE.accept(span,response);\n    return response;\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 59
      },
      "nodeContext" : "asJson(ImmutableMap.of(\"value\",value))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 59,
    "startColumnNumber" : 27,
    "endLineNumber" : 59,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}