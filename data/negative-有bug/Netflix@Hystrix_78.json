{
  "id" : 78,
  "expression" : "userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \")",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/fallback/BasicCommandFallbackTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 117,
      "startColumnNumber" : 26,
      "endLineNumber" : 117,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 117,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 85
      },
      "nodeContext" : "f1=userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Future<User> f1=userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1569,
        "startLineNumber" : 116,
        "startColumnNumber" : 103,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Future<User> f1=userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \");\n  assertEquals(\"def\",f1.get().getName());\n  assertEquals(4,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  HystrixInvokableInfo<?> getUserAsyncFallbackAsyncCommand=getHystrixCommandByKey(\"getUserAsyncFallbackAsyncCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo firstAsyncFallbackCommand=getHystrixCommandByKey(\"firstAsyncFallbackCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo secondAsyncFallbackCommand=getHystrixCommandByKey(\"secondAsyncFallbackCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo thirdAsyncFallbackCommand=getHystrixCommandByKey(\"thirdAsyncFallbackCommand\");\n  assertEquals(\"getUserAsyncFallbackAsyncCommand\",getUserAsyncFallbackAsyncCommand.getCommandKey().name());\n  assertTrue(getUserAsyncFallbackAsyncCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(firstAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(secondAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_SUCCESS));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetUserAsyncFallbackAsyncCommand() throws ExecutionException, InterruptedException {\n  Future<User> f1=userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \");\n  assertEquals(\"def\",f1.get().getName());\n  assertEquals(4,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  HystrixInvokableInfo<?> getUserAsyncFallbackAsyncCommand=getHystrixCommandByKey(\"getUserAsyncFallbackAsyncCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo firstAsyncFallbackCommand=getHystrixCommandByKey(\"firstAsyncFallbackCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo secondAsyncFallbackCommand=getHystrixCommandByKey(\"secondAsyncFallbackCommand\");\n  com.netflix.hystrix.HystrixInvokableInfo thirdAsyncFallbackCommand=getHystrixCommandByKey(\"thirdAsyncFallbackCommand\");\n  assertEquals(\"getUserAsyncFallbackAsyncCommand\",getUserAsyncFallbackAsyncCommand.getCommandKey().name());\n  assertTrue(getUserAsyncFallbackAsyncCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(firstAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(secondAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(thirdAsyncFallbackCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_SUCCESS));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Future<User> f1=userService.getUserAsyncFallbackAsyncCommand(\" \",\"name: \");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.concurrent.Future<com.netflix.hystrix.contrib.javanica.test.common.domain.User>"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 117,
    "startColumnNumber" : 26,
    "endLineNumber" : 117,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}