{
  "id" : 486,
  "expression" : "Stream.of(name)",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-route/src/test/java/org/apache/shardingsphere/infra/route/engine/AllSQLRouteExecutorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Stream.of(name)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 46,
      "startColumnNumber" : 74,
      "endLineNumber" : 46,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 46,
        "startColumnNumber" : 74,
        "endLineNumber" : 46,
        "endColumnNumber" : 117
      },
      "nodeContext" : "Stream.of(name).collect(Collectors.toSet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 118
      },
      "nodeContext" : "when(metaData.getResource().getDataSources().keySet()).thenReturn(Stream.of(name).collect(Collectors.toSet()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 119
      },
      "nodeContext" : "when(metaData.getResource().getDataSources().keySet()).thenReturn(Stream.of(name).collect(Collectors.toSet()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 43,
        "startColumnNumber" : 37,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String name=\"test\";\n  ShardingSphereMetaData metaData=mock(ShardingSphereMetaData.class,RETURNS_DEEP_STUBS);\n  when(metaData.getResource().getDataSources().keySet()).thenReturn(Stream.of(name).collect(Collectors.toSet()));\n  AllSQLRouteExecutor allSQLRouteExecutor=new AllSQLRouteExecutor();\n  RouteContext actual=allSQLRouteExecutor.route(mock(LogicSQL.class),metaData);\n  assertThat(actual.getRouteUnits().size(),is(1));\n  RouteUnit routeUnit=actual.getRouteUnits().iterator().next();\n  assertThat(routeUnit.getDataSourceMapper().getLogicName(),is(name));\n  assertThat(routeUnit.getDataSourceMapper().getActualName(),is(name));\n  assertTrue(routeUnit.getTableMappers().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertRouteSuccess(){\n  String name=\"test\";\n  ShardingSphereMetaData metaData=mock(ShardingSphereMetaData.class,RETURNS_DEEP_STUBS);\n  when(metaData.getResource().getDataSources().keySet()).thenReturn(Stream.of(name).collect(Collectors.toSet()));\n  AllSQLRouteExecutor allSQLRouteExecutor=new AllSQLRouteExecutor();\n  RouteContext actual=allSQLRouteExecutor.route(mock(LogicSQL.class),metaData);\n  assertThat(actual.getRouteUnits().size(),is(1));\n  RouteUnit routeUnit=actual.getRouteUnits().iterator().next();\n  assertThat(routeUnit.getDataSourceMapper().getLogicName(),is(name));\n  assertThat(routeUnit.getDataSourceMapper().getActualName(),is(name));\n  assertTrue(routeUnit.getTableMappers().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 119
      },
      "nodeContext" : "when(metaData.getResource().getDataSources().keySet()).thenReturn(Stream.of(name).collect(Collectors.toSet()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.util.stream.Stream<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 46,
    "startColumnNumber" : 74,
    "endLineNumber" : 46,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}