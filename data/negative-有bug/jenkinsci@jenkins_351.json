{
  "id" : 351,
  "expression" : "\" is missing the Overall/Administer permission\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/security/StackTraceSuppressionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" is missing the Overall/Administer permission\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 77,
      "startColumnNumber" : 59,
      "endLineNumber" : 77,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 77,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 106
      },
      "nodeContext" : "alice.getId() + \" is missing the Overall/Administer permission\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 77,
        "startColumnNumber" : 28,
        "endLineNumber" : 77,
        "endColumnNumber" : 107
      },
      "nodeContext" : "containsString(alice.getId() + \" is missing the Overall/Administer permission\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertThat(content,containsString(alice.getId() + \" is missing the Overall/Administer permission\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertThat(content,containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 66,
        "startColumnNumber" : 65,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\"));\n  User alice=User.getById(\"alice\",true);\n  JenkinsRule.WebClient wc=j.createWebClient();\n  wc.login(alice.getId());\n  wc.setThrowExceptionOnFailingStatusCode(false);\n  HtmlPage page=wc.goTo(\"manage\");\n  String content=page.getWebResponse().getContentAsString();\n  assertThat(content,containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n  assertThat(content,not(containsString(\"Caused by\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void authenticationManageException() throws Exception {\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\"));\n  User alice=User.getById(\"alice\",true);\n  JenkinsRule.WebClient wc=j.createWebClient();\n  wc.login(alice.getId());\n  wc.setThrowExceptionOnFailingStatusCode(false);\n  HtmlPage page=wc.goTo(\"manage\");\n  String content=page.getWebResponse().getContentAsString();\n  assertThat(content,containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n  assertThat(content,not(containsString(\"Caused by\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertThat(content,containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 77,
    "startColumnNumber" : 59,
    "endLineNumber" : 77,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}