{
  "id" : 64,
  "expression" : "22",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableWindowWithSizeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "22",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 289,
      "startColumnNumber" : 28,
      "endLineNumber" : 289,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 31
      },
      "nodeContext" : "ts.assertValueCount(22)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ts.assertValueCount(22);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 272,
        "startColumnNumber" : 43,
        "endLineNumber" : 290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  final int indicator=999999999;\n  hotStream().window(10).take(2).flatMap(new Function<Flowable<Integer>,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Flowable<Integer> w){\n      return w.startWith(indicator);\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts.assertComplete();\n  ts.assertValueCount(22);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 271,
        "startColumnNumber" : 4,
        "endLineNumber" : 290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTakeFlatMapCompletes(){\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  final int indicator=999999999;\n  hotStream().window(10).take(2).flatMap(new Function<Flowable<Integer>,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Flowable<Integer> w){\n      return w.startWith(indicator);\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts.assertComplete();\n  ts.assertValueCount(22);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ts.assertValueCount(22);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 289,
    "startColumnNumber" : 28,
    "endLineNumber" : 289,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}