{
  "id" : 333,
  "expression" : "doAnswer(call1)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/StubbingWithCustomAnswerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "doAnswer(call1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 86,
      "startColumnNumber" : 8,
      "endLineNumber" : 86,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 61
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 32
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 27
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2).when(mock)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 29
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2).when(mock).voidMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 30
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2).when(mock).voidMethod();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 82,
        "startColumnNumber" : 71,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RecordCall call1=new RecordCall();\n  RecordCall call2=new RecordCall();\n  doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2).when(mock).voidMethod();\n  mock.voidMethod();\n  assertTrue(call1.isCalled());\n  assertFalse(call2.isCalled());\n  try {\n    mock.voidMethod();\n    fail();\n  }\n catch (  UnsupportedOperationException e) {\n  }\n  mock.voidMethod();\n  assertTrue(call2.isCalled());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAnswerVoidMethodConsecutively() throws Exception {\n  RecordCall call1=new RecordCall();\n  RecordCall call2=new RecordCall();\n  doAnswer(call1).doThrow(new UnsupportedOperationException()).doAnswer(call2).when(mock).voidMethod();\n  mock.voidMethod();\n  assertTrue(call1.isCalled());\n  assertFalse(call2.isCalled());\n  try {\n    mock.voidMethod();\n    fail();\n  }\n catch (  UnsupportedOperationException e) {\n  }\n  mock.voidMethod();\n  assertTrue(call2.isCalled());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 61
      },
      "nodeContext" : "doAnswer(call1).doThrow(new UnsupportedOperationException())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.mockito.stubbing.Stubber"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 86,
    "startColumnNumber" : 8,
    "endLineNumber" : 86,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}