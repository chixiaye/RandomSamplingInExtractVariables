{
  "id" : 215,
  "expression" : "exception.exceptionName",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/HandleSneakyThrows.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exception.exceptionName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 177,
      "startColumnNumber" : 6,
      "endLineNumber" : 177,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 42
      },
      "nodeContext" : "exception.exceptionName.indexOf('.')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 48
      },
      "nodeContext" : "exception.exceptionName.indexOf('.') == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (exception.exceptionName.indexOf('.') == -1) {\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n else {\n  String[] x=exception.exceptionName.split(\"\\\\.\");\n  char[][] elems=new char[x.length][];\n  long[] poss=new long[x.length];\n  Arrays.fill(poss,methodPosEnd);\n  for (int i=0; i < x.length; i++) {\n    elems[i]=x[i].trim().toCharArray();\n  }\n  typeReference=new QualifiedTypeReference(elems,poss);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 48
      },
      "nodeContext" : "exception.exceptionName.indexOf('.') == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "exception.exceptionName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 178,
      "startColumnNumber" : 43,
      "endLineNumber" : 178,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 178,
        "startColumnNumber" : 43,
        "endLineNumber" : 178,
        "endColumnNumber" : 80
      },
      "nodeContext" : "exception.exceptionName.toCharArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 178,
        "startColumnNumber" : 19,
        "endLineNumber" : 178,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 178,
        "startColumnNumber" : 3,
        "endLineNumber" : 178,
        "endColumnNumber" : 95
      },
      "nodeContext" : "typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 178,
        "startColumnNumber" : 3,
        "endLineNumber" : 178,
        "endColumnNumber" : 96
      },
      "nodeContext" : "typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 177,
        "startColumnNumber" : 50,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (exception.exceptionName.indexOf('.') == -1) {\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n else {\n  String[] x=exception.exceptionName.split(\"\\\\.\");\n  char[][] elems=new char[x.length][];\n  long[] poss=new long[x.length];\n  Arrays.fill(poss,methodPosEnd);\n  for (int i=0; i < x.length; i++) {\n    elems[i]=x[i].trim().toCharArray();\n  }\n  typeReference=new QualifiedTypeReference(elems,poss);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 178,
        "startColumnNumber" : 3,
        "endLineNumber" : 178,
        "endColumnNumber" : 96
      },
      "nodeContext" : "typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "exception.exceptionName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 181,
      "startColumnNumber" : 16,
      "endLineNumber" : 181,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 181,
        "startColumnNumber" : 16,
        "endLineNumber" : 181,
        "endColumnNumber" : 52
      },
      "nodeContext" : "exception.exceptionName.split(\"\\\\.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 52
      },
      "nodeContext" : "x=exception.exceptionName.split(\"\\\\.\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 181,
        "startColumnNumber" : 3,
        "endLineNumber" : 181,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String[] x=exception.exceptionName.split(\"\\\\.\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 180,
        "startColumnNumber" : 9,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String[] x=exception.exceptionName.split(\"\\\\.\");\n  char[][] elems=new char[x.length][];\n  long[] poss=new long[x.length];\n  Arrays.fill(poss,methodPosEnd);\n  for (int i=0; i < x.length; i++) {\n    elems[i]=x[i].trim().toCharArray();\n  }\n  typeReference=new QualifiedTypeReference(elems,poss);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (exception.exceptionName.indexOf('.') == -1) {\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n else {\n  String[] x=exception.exceptionName.split(\"\\\\.\");\n  char[][] elems=new char[x.length][];\n  long[] poss=new long[x.length];\n  Arrays.fill(poss,methodPosEnd);\n  for (int i=0; i < x.length; i++) {\n    elems[i]=x[i].trim().toCharArray();\n  }\n  typeReference=new QualifiedTypeReference(elems,poss);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 181,
        "startColumnNumber" : 3,
        "endLineNumber" : 181,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String[] x=exception.exceptionName.split(\"\\\\.\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 177,
    "startColumnNumber" : 6,
    "endLineNumber" : 177,
    "endColumnNumber" : 29
  }, {
    "charLength" : 23,
    "startLineNumber" : 178,
    "startColumnNumber" : 43,
    "endLineNumber" : 178,
    "endColumnNumber" : 66
  }, {
    "charLength" : 23,
    "startLineNumber" : 181,
    "startColumnNumber" : 16,
    "endLineNumber" : 181,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}