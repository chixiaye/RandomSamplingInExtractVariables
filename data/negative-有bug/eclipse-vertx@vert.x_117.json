{
  "id" : 117,
  "expression" : "rs",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/PumpTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 39,
      "startColumnNumber" : 23,
      "endLineNumber" : 39,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 39,
        "startColumnNumber" : 13,
        "endLineNumber" : 39,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Pump.pump(rs,ws,1001)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 36
      },
      "nodeContext" : "p=Pump.pump(rs,ws,1001)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Pump p=Pump.pump(rs,ws,1001);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Pump p=Pump.pump(rs,ws,1001);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  }, {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 27
      },
      "nodeContext" : "rs.addData(myClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 28
      },
      "nodeContext" : "rs.addData(myClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 45,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  MyClass myClass=new MyClass();\n  inp.add(myClass);\n  rs.addData(myClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=0; j < 10; j++) {\n  MyClass myClass=new MyClass();\n  inp.add(myClass);\n  rs.addData(myClass);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 28
      },
      "nodeContext" : "rs.addData(myClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  }, {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 51,
      "startColumnNumber" : 18,
      "endLineNumber" : 51,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 51,
        "startColumnNumber" : 18,
        "endLineNumber" : 51,
        "endColumnNumber" : 27
      },
      "nodeContext" : "rs.paused",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertFalse(rs.paused)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(rs.paused);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(rs.paused);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  }, {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 52,
      "startColumnNumber" : 22,
      "endLineNumber" : 52,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 52,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rs.pauseCount",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertEquals(0,rs.pauseCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertEquals(0,rs.pauseCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertEquals(0,rs.pauseCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  }, {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 53,
      "startColumnNumber" : 22,
      "endLineNumber" : 53,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 53,
        "startColumnNumber" : 22,
        "endLineNumber" : 53,
        "endColumnNumber" : 36
      },
      "nodeContext" : "rs.resumeCount",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertEquals(0,rs.resumeCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(0,rs.resumeCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(0,rs.resumeCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  }, {
    "nodeContext" : "rs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 58,
      "startColumnNumber" : 6,
      "endLineNumber" : 58,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 25
      },
      "nodeContext" : "rs.addData(myClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 26
      },
      "nodeContext" : "rs.addData(myClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  p.start();\n  List<MyClass> inp=new ArrayList<>();\n  for (int j=0; j < 10; j++) {\n    MyClass myClass=new MyClass();\n    inp.add(myClass);\n    rs.addData(myClass);\n  }\n  assertEquals(inp,ws.received);\n  assertFalse(rs.paused);\n  assertEquals(0,rs.pauseCount);\n  assertEquals(0,rs.resumeCount);\n  p.stop();\n  ws.clearReceived();\n  MyClass myClass=new MyClass();\n  rs.addData(myClass);\n  assertEquals(0,ws.received.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 36,
        "startColumnNumber" : 47,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPumpBasic() throws Exception {\n  FakeReadStream<MyClass> rs=new FakeReadStream<>();\n  FakeWriteStream<MyClass> ws=new FakeWriteStream<>();\n  Pump p=Pump.pump(rs,ws,1001);\n  for (int i=0; i < 10; i++) {\n    p.start();\n    List<MyClass> inp=new ArrayList<>();\n    for (int j=0; j < 10; j++) {\n      MyClass myClass=new MyClass();\n      inp.add(myClass);\n      rs.addData(myClass);\n    }\n    assertEquals(inp,ws.received);\n    assertFalse(rs.paused);\n    assertEquals(0,rs.pauseCount);\n    assertEquals(0,rs.resumeCount);\n    p.stop();\n    ws.clearReceived();\n    MyClass myClass=new MyClass();\n    rs.addData(myClass);\n    assertEquals(0,ws.received.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 26
      },
      "nodeContext" : "rs.addData(myClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.vertx.test.core.PumpTest.FakeReadStream<io.vertx.test.core.PumpTest.MyClass>"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 39,
    "startColumnNumber" : 23,
    "endLineNumber" : 39,
    "endColumnNumber" : 25
  }, {
    "charLength" : 2,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 51,
    "startColumnNumber" : 18,
    "endLineNumber" : 51,
    "endColumnNumber" : 20
  }, {
    "charLength" : 2,
    "startLineNumber" : 52,
    "startColumnNumber" : 22,
    "endLineNumber" : 52,
    "endColumnNumber" : 24
  }, {
    "charLength" : 2,
    "startLineNumber" : 53,
    "startColumnNumber" : 22,
    "endLineNumber" : 53,
    "endColumnNumber" : 24
  }, {
    "charLength" : 2,
    "startLineNumber" : 58,
    "startColumnNumber" : 6,
    "endLineNumber" : 58,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}