{
  "id" : 244,
  "expression" : "LeadingMarginSpan",
  "projectName" : "CymChad@BaseRecyclerViewAdapterHelper",
  "commitID" : "3e6a326eeeafd8b7658dc5fcdb1e660fabb82357",
  "filePath" : "/app/src/main/java/com/chad/baserecyclerviewadapterhelper/utils/SpannableStringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LeadingMarginSpan",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 457,
      "startColumnNumber" : 37,
      "endLineNumber" : 457,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 457,
        "startColumnNumber" : 37,
        "endLineNumber" : 457,
        "endColumnNumber" : 63
      },
      "nodeContext" : "LeadingMarginSpan.Standard",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 457,
        "startColumnNumber" : 37,
        "endLineNumber" : 457,
        "endColumnNumber" : 63
      },
      "nodeContext" : "LeadingMarginSpan.Standard",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 457,
        "startColumnNumber" : 33,
        "endLineNumber" : 457,
        "endColumnNumber" : 76
      },
      "nodeContext" : "new LeadingMarginSpan.Standard(first,rest)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 457,
        "startColumnNumber" : 16,
        "endLineNumber" : 457,
        "endColumnNumber" : 95
      },
      "nodeContext" : "mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 457,
        "startColumnNumber" : 16,
        "endLineNumber" : 457,
        "endColumnNumber" : 96
      },
      "nodeContext" : "mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 456,
        "startColumnNumber" : 33,
        "endLineNumber" : 459,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  isLeadingMargin=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 456,
        "startColumnNumber" : 12,
        "endLineNumber" : 459,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isLeadingMargin) {\n  mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  isLeadingMargin=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4457,
        "startLineNumber" : 444,
        "startColumnNumber" : 31,
        "endLineNumber" : 544,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int start=mBuilder.length();\n  mBuilder.append(this.text);\n  int end=mBuilder.length();\n  if (foregroundColor != defaultValue) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n    foregroundColor=defaultValue;\n  }\n  if (backgroundColor != defaultValue) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n    backgroundColor=defaultValue;\n  }\n  if (isLeadingMargin) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n    isLeadingMargin=false;\n  }\n  if (quoteColor != defaultValue) {\n    mBuilder.setSpan(new QuoteSpan(quoteColor),start,end,0);\n    quoteColor=defaultValue;\n  }\n  if (isBullet) {\n    mBuilder.setSpan(new BulletSpan(gapWidth,bulletColor),start,end,0);\n    isBullet=false;\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n    proportion=-1;\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n    xProportion=-1;\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n    isStrikethrough=false;\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n    isUnderline=false;\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n    isSuperscript=false;\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n    isSubscript=false;\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n    isBold=false;\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n    isItalic=false;\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n    isBoldItalic=false;\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n    fontFamily=null;\n  }\n  if (align != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(align),start,end,flag);\n    align=null;\n  }\n  if (imageIsBitmap || imageIsDrawable || imageIsUri|| imageIsResourceId) {\n    if (imageIsBitmap) {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),bitmap),start,end,flag);\n      bitmap=null;\n      imageIsBitmap=false;\n    }\n else     if (imageIsDrawable) {\n      mBuilder.setSpan(new ImageSpan(drawable),start,end,flag);\n      drawable=null;\n      imageIsDrawable=false;\n    }\n else     if (imageIsUri) {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),uri),start,end,flag);\n      uri=null;\n      imageIsUri=false;\n    }\n else {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),resourceId),start,end,flag);\n      resourceId=0;\n      imageIsResourceId=false;\n    }\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n    clickSpan=null;\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n    url=null;\n  }\n  if (isBlur) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(radius,style)),start,end,flag);\n    isBlur=false;\n  }\n  flag=Spanned.SPAN_EXCLUSIVE_EXCLUSIVE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 503,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4523,
        "startLineNumber" : 441,
        "startColumnNumber" : 8,
        "endLineNumber" : 544,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 设置样式\n */\nprivate void setSpan(){\n  int start=mBuilder.length();\n  mBuilder.append(this.text);\n  int end=mBuilder.length();\n  if (foregroundColor != defaultValue) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n    foregroundColor=defaultValue;\n  }\n  if (backgroundColor != defaultValue) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n    backgroundColor=defaultValue;\n  }\n  if (isLeadingMargin) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n    isLeadingMargin=false;\n  }\n  if (quoteColor != defaultValue) {\n    mBuilder.setSpan(new QuoteSpan(quoteColor),start,end,0);\n    quoteColor=defaultValue;\n  }\n  if (isBullet) {\n    mBuilder.setSpan(new BulletSpan(gapWidth,bulletColor),start,end,0);\n    isBullet=false;\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n    proportion=-1;\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n    xProportion=-1;\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n    isStrikethrough=false;\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n    isUnderline=false;\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n    isSuperscript=false;\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n    isSubscript=false;\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n    isBold=false;\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n    isItalic=false;\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n    isBoldItalic=false;\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n    fontFamily=null;\n  }\n  if (align != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(align),start,end,flag);\n    align=null;\n  }\n  if (imageIsBitmap || imageIsDrawable || imageIsUri|| imageIsResourceId) {\n    if (imageIsBitmap) {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),bitmap),start,end,flag);\n      bitmap=null;\n      imageIsBitmap=false;\n    }\n else     if (imageIsDrawable) {\n      mBuilder.setSpan(new ImageSpan(drawable),start,end,flag);\n      drawable=null;\n      imageIsDrawable=false;\n    }\n else     if (imageIsUri) {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),uri),start,end,flag);\n      uri=null;\n      imageIsUri=false;\n    }\n else {\n      mBuilder.setSpan(new ImageSpan(Utils.getContext(),resourceId),start,end,flag);\n      resourceId=0;\n      imageIsResourceId=false;\n    }\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n    clickSpan=null;\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n    url=null;\n  }\n  if (isBlur) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(radius,style)),start,end,flag);\n    isBlur=false;\n  }\n  flag=Spanned.SPAN_EXCLUSIVE_EXCLUSIVE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 457,
        "startColumnNumber" : 16,
        "endLineNumber" : 457,
        "endColumnNumber" : 96
      },
      "nodeContext" : "mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "LeadingMarginSpan"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 457,
    "startColumnNumber" : 37,
    "endLineNumber" : 457,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}