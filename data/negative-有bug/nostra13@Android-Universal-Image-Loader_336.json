{
  "id" : 336,
  "expression" : "files",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/main/java/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "files",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 433,
      "startColumnNumber" : 4,
      "endLineNumber" : 433,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 433,
        "endColumnNumber" : 12
      },
      "nodeContext" : "files[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 433,
        "endColumnNumber" : 19
      },
      "nodeContext" : "files[i]=file",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 433,
        "endColumnNumber" : 20
      },
      "nodeContext" : "files[i]=file;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 431,
        "startColumnNumber" : 40,
        "endLineNumber" : 435,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  file=entry.getCleanFile(i);\n  files[i]=file;\n  ins[i]=new FileInputStream(file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 431,
        "startColumnNumber" : 3,
        "endLineNumber" : 435,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < valueCount; i++) {\n  file=entry.getCleanFile(i);\n  files[i]=file;\n  ins[i]=new FileInputStream(file);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 429,
        "startColumnNumber" : 6,
        "endLineNumber" : 436,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File file;\n  for (int i=0; i < valueCount; i++) {\n    file=entry.getCleanFile(i);\n    files[i]=file;\n    ins[i]=new FileInputStream(file);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 429,
        "startColumnNumber" : 2,
        "endLineNumber" : 446,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  File file;\n  for (int i=0; i < valueCount; i++) {\n    file=entry.getCleanFile(i);\n    files[i]=file;\n    ins[i]=new FileInputStream(file);\n  }\n}\n catch (FileNotFoundException e) {\n  for (int i=0; i < valueCount; i++) {\n    if (ins[i] != null) {\n      Util.closeQuietly(ins[i]);\n    }\n else {\n      break;\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 412,
        "startColumnNumber" : 65,
        "endLineNumber" : 455,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  checkNotClosed();\n  validateKey(key);\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    return null;\n  }\n  if (!entry.readable) {\n    return null;\n  }\n  File[] files=new File[valueCount];\n  InputStream[] ins=new InputStream[valueCount];\n  try {\n    File file;\n    for (int i=0; i < valueCount; i++) {\n      file=entry.getCleanFile(i);\n      files[i]=file;\n      ins[i]=new FileInputStream(file);\n    }\n  }\n catch (  FileNotFoundException e) {\n    for (int i=0; i < valueCount; i++) {\n      if (ins[i] != null) {\n        Util.closeQuietly(ins[i]);\n      }\n else {\n        break;\n      }\n    }\n    return null;\n  }\n  redundantOpCount++;\n  journalWriter.append(READ + ' ' + key+ '\\n');\n  if (journalRebuildRequired()) {\n    executorService.submit(cleanupCallable);\n  }\n  return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 407,
        "startColumnNumber" : 1,
        "endLineNumber" : 455,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Returns a snapshot of the entry named  {@code key}, or null if it doesn't exist is not currently readable. If a value is returned, it is moved to the head of the LRU queue.\n */\npublic synchronized Snapshot get(String key) throws IOException {\n  checkNotClosed();\n  validateKey(key);\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    return null;\n  }\n  if (!entry.readable) {\n    return null;\n  }\n  File[] files=new File[valueCount];\n  InputStream[] ins=new InputStream[valueCount];\n  try {\n    File file;\n    for (int i=0; i < valueCount; i++) {\n      file=entry.getCleanFile(i);\n      files[i]=file;\n      ins[i]=new FileInputStream(file);\n    }\n  }\n catch (  FileNotFoundException e) {\n    for (int i=0; i < valueCount; i++) {\n      if (ins[i] != null) {\n        Util.closeQuietly(ins[i]);\n      }\n else {\n        break;\n      }\n    }\n    return null;\n  }\n  redundantOpCount++;\n  journalWriter.append(READ + ' ' + key+ '\\n');\n  if (journalRebuildRequired()) {\n    executorService.submit(cleanupCallable);\n  }\n  return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 433,
        "endColumnNumber" : 20
      },
      "nodeContext" : "files[i]=file;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File[]"
  }, {
    "nodeContext" : "files",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 454,
      "startColumnNumber" : 49,
      "endLineNumber" : 454,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 454,
        "startColumnNumber" : 9,
        "endLineNumber" : 454,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 454,
        "startColumnNumber" : 2,
        "endLineNumber" : 454,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 412,
        "startColumnNumber" : 65,
        "endLineNumber" : 455,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  checkNotClosed();\n  validateKey(key);\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    return null;\n  }\n  if (!entry.readable) {\n    return null;\n  }\n  File[] files=new File[valueCount];\n  InputStream[] ins=new InputStream[valueCount];\n  try {\n    File file;\n    for (int i=0; i < valueCount; i++) {\n      file=entry.getCleanFile(i);\n      files[i]=file;\n      ins[i]=new FileInputStream(file);\n    }\n  }\n catch (  FileNotFoundException e) {\n    for (int i=0; i < valueCount; i++) {\n      if (ins[i] != null) {\n        Util.closeQuietly(ins[i]);\n      }\n else {\n        break;\n      }\n    }\n    return null;\n  }\n  redundantOpCount++;\n  journalWriter.append(READ + ' ' + key+ '\\n');\n  if (journalRebuildRequired()) {\n    executorService.submit(cleanupCallable);\n  }\n  return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 407,
        "startColumnNumber" : 1,
        "endLineNumber" : 455,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Returns a snapshot of the entry named  {@code key}, or null if it doesn't exist is not currently readable. If a value is returned, it is moved to the head of the LRU queue.\n */\npublic synchronized Snapshot get(String key) throws IOException {\n  checkNotClosed();\n  validateKey(key);\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    return null;\n  }\n  if (!entry.readable) {\n    return null;\n  }\n  File[] files=new File[valueCount];\n  InputStream[] ins=new InputStream[valueCount];\n  try {\n    File file;\n    for (int i=0; i < valueCount; i++) {\n      file=entry.getCleanFile(i);\n      files[i]=file;\n      ins[i]=new FileInputStream(file);\n    }\n  }\n catch (  FileNotFoundException e) {\n    for (int i=0; i < valueCount; i++) {\n      if (ins[i] != null) {\n        Util.closeQuietly(ins[i]);\n      }\n else {\n        break;\n      }\n    }\n    return null;\n  }\n  redundantOpCount++;\n  journalWriter.append(READ + ' ' + key+ '\\n');\n  if (journalRebuildRequired()) {\n    executorService.submit(cleanupCallable);\n  }\n  return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 454,
        "startColumnNumber" : 2,
        "endLineNumber" : 454,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new Snapshot(key,entry.sequenceNumber,files,ins,entry.lengths);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File[]"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 433,
    "startColumnNumber" : 4,
    "endLineNumber" : 433,
    "endColumnNumber" : 9
  }, {
    "charLength" : 5,
    "startLineNumber" : 454,
    "startColumnNumber" : 49,
    "endLineNumber" : 454,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}