{
  "id" : 505,
  "expression" : "keys.size()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/rx/RedissonMapRxTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keys.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 449,
      "startColumnNumber" : 31,
      "endLineNumber" : 449,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 449,
        "startColumnNumber" : 8,
        "endLineNumber" : 449,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.assertEquals(0,keys.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 449,
        "startColumnNumber" : 8,
        "endLineNumber" : 449,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(0,keys.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 434,
        "startColumnNumber" : 34,
        "endLineNumber" : 450,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RMapRx<Integer,Integer> map=redisson.getMap(\"simple\");\n  sync(map.put(1,0));\n  sync(map.put(3,5));\n  sync(map.put(4,6));\n  sync(map.put(7,8));\n  List<Integer> keys=new ArrayList<Integer>(Arrays.asList(1,3,4,7));\n  for (Iterator<Integer> iterator=toIterator(map.keyIterator()); iterator.hasNext(); ) {\n    Integer value=iterator.next();\n    if (!keys.remove(value)) {\n      Assert.fail();\n    }\n  }\n  Assert.assertEquals(0,keys.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 591,
        "startLineNumber" : 433,
        "startColumnNumber" : 4,
        "endLineNumber" : 450,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testKeyIterator(){\n  RMapRx<Integer,Integer> map=redisson.getMap(\"simple\");\n  sync(map.put(1,0));\n  sync(map.put(3,5));\n  sync(map.put(4,6));\n  sync(map.put(7,8));\n  List<Integer> keys=new ArrayList<Integer>(Arrays.asList(1,3,4,7));\n  for (Iterator<Integer> iterator=toIterator(map.keyIterator()); iterator.hasNext(); ) {\n    Integer value=iterator.next();\n    if (!keys.remove(value)) {\n      Assert.fail();\n    }\n  }\n  Assert.assertEquals(0,keys.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 449,
        "startColumnNumber" : 8,
        "endLineNumber" : 449,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(0,keys.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 449,
    "startColumnNumber" : 31,
    "endLineNumber" : 449,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}