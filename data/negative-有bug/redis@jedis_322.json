{
  "id" : 322,
  "expression" : "n",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/main/java/redis/clients/util/Sharded.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 55,
      "endLineNumber" : 56,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 56,
        "startColumnNumber" : 55,
        "endLineNumber" : 56,
        "endColumnNumber" : 86
      },
      "nodeContext" : "n < 160 * shardInfo.getWeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 56,
        "startColumnNumber" : 39,
        "endLineNumber" : 58,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (shardInfo.getName() == null) for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n else for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i != shards.size(); ++i) {\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 51,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void initialize(List<S> shards){\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 56,
        "startColumnNumber" : 55,
        "endLineNumber" : 56,
        "endColumnNumber" : 86
      },
      "nodeContext" : "n < 160 * shardInfo.getWeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 59,
      "endLineNumber" : 57,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 57,
        "startColumnNumber" : 33,
        "endLineNumber" : 57,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"SHARD-\" + i + \"-NODE-\"+ n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 74
      },
      "nodeContext" : "nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 56,
        "startColumnNumber" : 93,
        "endLineNumber" : 58,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 56,
        "startColumnNumber" : 39,
        "endLineNumber" : 58,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (shardInfo.getName() == null) for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n else for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i != shards.size(); ++i) {\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 51,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void initialize(List<S> shards){\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 74
      },
      "nodeContext" : "nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 59,
      "startColumnNumber" : 27,
      "endLineNumber" : 59,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 59,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 58
      },
      "nodeContext" : "n < 160 * shardInfo.getWeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (shardInfo.getName() == null) for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n else for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i != shards.size(); ++i) {\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 51,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void initialize(List<S> shards){\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 59,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 58
      },
      "nodeContext" : "n < 160 * shardInfo.getWeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 85,
      "endLineNumber" : 60,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 86
      },
      "nodeContext" : "shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 60,
        "startColumnNumber" : 18,
        "endLineNumber" : 60,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 99
      },
      "nodeContext" : "nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 59,
        "startColumnNumber" : 65,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (shardInfo.getName() == null) for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n}\n else for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n  nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i != shards.size(); ++i) {\n  final S shardInfo=shards.get(i);\n  if (shardInfo.getName() == null)   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n  }\n else   for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n    nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n  }\n  resources.put(shardInfo,shardInfo.createResource());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 51,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void initialize(List<S> shards){\n  nodes=new TreeMap<Long,S>();\n  for (int i=0; i != shards.size(); ++i) {\n    final S shardInfo=shards.get(i);\n    if (shardInfo.getName() == null)     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(\"SHARD-\" + i + \"-NODE-\"+ n),shardInfo);\n    }\n else     for (int n=0; n < 160 * shardInfo.getWeight(); n++) {\n      nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n    }\n    resources.put(shardInfo,shardInfo.createResource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "nodes.put(this.algo.hash(shardInfo.getName() + \"*\" + shardInfo.getWeight()+ n),shardInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 55,
    "endLineNumber" : 56,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 59,
    "endLineNumber" : 57,
    "endColumnNumber" : 60
  }, {
    "charLength" : 1,
    "startLineNumber" : 59,
    "startColumnNumber" : 27,
    "endLineNumber" : 59,
    "endColumnNumber" : 28
  }, {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 85,
    "endLineNumber" : 60,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}