{
  "id" : 76,
  "expression" : "Collections",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/bootstrap-core/src/main/java/com/navercorp/pinpoint/bootstrap/config/ExcludeMethodFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 19,
      "startColumnNumber" : 34,
      "endLineNumber" : 19,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 19,
        "startColumnNumber" : 34,
        "endLineNumber" : 19,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Collections.emptySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 56
      },
      "nodeContext" : "this.excludeMethods=Collections.emptySet()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.excludeMethods=Collections.emptySet();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 18,
        "startColumnNumber" : 44,
        "endLineNumber" : 21,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.excludeMethods=Collections.emptySet();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isEmpty(separator)) {\n  this.excludeMethods=Collections.emptySet();\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 17,
        "startColumnNumber" : 71,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(separator)) {\n    this.excludeMethods=Collections.emptySet();\n    return;\n  }\n  final List<String> splitList=StringUtils.splitAndTrim(excludeFormat,separator);\n  this.excludeMethods=new HashSet<String>();\n  for (  String method : splitList) {\n    this.excludeMethods.add(method.toUpperCase());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ExcludeMethodFilter(String excludeFormat,String separator){\n  if (StringUtils.isEmpty(separator)) {\n    this.excludeMethods=Collections.emptySet();\n    return;\n  }\n  final List<String> splitList=StringUtils.splitAndTrim(excludeFormat,separator);\n  this.excludeMethods=new HashSet<String>();\n  for (  String method : splitList) {\n    this.excludeMethods.add(method.toUpperCase());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.excludeMethods=Collections.emptySet();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 19,
    "startColumnNumber" : 34,
    "endLineNumber" : 19,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}