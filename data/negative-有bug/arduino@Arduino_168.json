{
  "id" : 168,
  "expression" : "-1",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/TextUtilities.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 33,
      "startColumnNumber" : 31,
      "endLineNumber" : 33,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 33,
        "startColumnNumber" : 24,
        "endLineNumber" : 33,
        "endColumnNumber" : 34
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 32,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 34
      },
      "nodeContext" : "if (doc.getLength() == 0) return -1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3885,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4411,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Returns the offset of the bracket matching the one at the specified offset of the document, or -1 if the bracket is unmatched (or if the character is not a bracket).\n * @param doc The document\n * @param offset The offset\n * @exception BadLocationException If an out-of-bounds accesswas attempted on the document text\n */\npublic static int findMatchingBracket(Document doc,int offset) throws BadLocationException {\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 33,
        "startColumnNumber" : 24,
        "endLineNumber" : 33,
        "endColumnNumber" : 34
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 46,
      "startColumnNumber" : 32,
      "endLineNumber" : 46,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 46,
        "startColumnNumber" : 25,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 47,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (c) {\ncase '(':  cprime=')';\ndirection=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 72,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3885,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4411,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Returns the offset of the bracket matching the one at the specified offset of the document, or -1 if the bracket is unmatched (or if the character is not a bracket).\n * @param doc The document\n * @param offset The offset\n * @exception BadLocationException If an out-of-bounds accesswas attempted on the document text\n */\npublic static int findMatchingBracket(Document doc,int offset) throws BadLocationException {\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 46,
        "startColumnNumber" : 25,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 124,
      "startColumnNumber" : 23,
      "endLineNumber" : 124,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 26
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3885,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4411,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Returns the offset of the bracket matching the one at the specified offset of the document, or -1 if the bracket is unmatched (or if the character is not a bracket).\n * @param doc The document\n * @param offset The offset\n * @exception BadLocationException If an out-of-bounds accesswas attempted on the document text\n */\npublic static int findMatchingBracket(Document doc,int offset) throws BadLocationException {\n  if (doc.getLength() == 0)   return -1;\n  char c=doc.getText(offset,1).charAt(0);\n  char cprime;\n  boolean direction;\nswitch (c) {\ncase '(':    cprime=')';\n  direction=false;\nbreak;\ncase ')':cprime='(';\ndirection=true;\nbreak;\ncase '[':cprime=']';\ndirection=false;\nbreak;\ncase ']':cprime='[';\ndirection=true;\nbreak;\ncase '{':cprime='}';\ndirection=false;\nbreak;\ncase '}':cprime='{';\ndirection=true;\nbreak;\ndefault:return -1;\n}\nint count;\nif (direction) {\ncount=1;\nString text=doc.getText(0,offset);\nfor (int i=offset - 1; i >= 0; i--) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i;\n}\n}\n}\n else {\ncount=1;\noffset++;\nint len=doc.getLength() - offset;\nString text=doc.getText(offset,len);\nfor (int i=0; i < len; i++) {\nchar x=text.charAt(i);\nif (x == c) count++;\n else if (x == cprime) {\nif (--count == 0) return i + offset;\n}\n}\n}\nreturn -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 26
      },
      "nodeContext" : "return -1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 3,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 33,
    "startColumnNumber" : 31,
    "endLineNumber" : 33,
    "endColumnNumber" : 33
  }, {
    "charLength" : 2,
    "startLineNumber" : 46,
    "startColumnNumber" : 32,
    "endLineNumber" : 46,
    "endColumnNumber" : 34
  }, {
    "charLength" : 2,
    "startLineNumber" : 124,
    "startColumnNumber" : 23,
    "endLineNumber" : 124,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}