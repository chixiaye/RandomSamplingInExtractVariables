{
  "id" : 359,
  "expression" : "\"1 rue du General Leclerc\"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/integration-tests/main/src/main/java/io/quarkus/it/jpa/JPATestReflectionEndpoint.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"1 rue du General Leclerc\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 91,
      "startColumnNumber" : 36,
      "endLineNumber" : 91,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 63
      },
      "nodeContext" : "setter.invoke(instance,\"1 rue du General Leclerc\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 64
      },
      "nodeContext" : "setter.invoke(instance,\"1 rue du General Leclerc\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String className=getTrickedClassName(Address.class.getName());\n  Class<?> custClass=Class.forName(className);\n  Object instance=custClass.getDeclaredConstructor().newInstance();\n  Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n  Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n  setter.invoke(instance,\"1 rue du General Leclerc\");\n  if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n    resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String className=getTrickedClassName(Address.class.getName());\n  Class<?> custClass=Class.forName(className);\n  Object instance=custClass.getDeclaredConstructor().newInstance();\n  Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n  Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n  setter.invoke(instance,\"1 rue du General Leclerc\");\n  if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n    resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n  }\n}\n catch (Exception e) {\n  reportException(e,resp);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 83,
        "startColumnNumber" : 119,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String className=getTrickedClassName(Address.class.getName());\n    Class<?> custClass=Class.forName(className);\n    Object instance=custClass.getDeclaredConstructor().newInstance();\n    Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n    Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n    setter.invoke(instance,\"1 rue du General Leclerc\");\n    if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n      resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n    }\n  }\n catch (  Exception e) {\n    reportException(e,resp);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void makeSureNonAnnotatedEmbeddableAreAccessibleViaReflection(HttpServletResponse resp) throws IOException {\n  try {\n    String className=getTrickedClassName(Address.class.getName());\n    Class<?> custClass=Class.forName(className);\n    Object instance=custClass.getDeclaredConstructor().newInstance();\n    Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n    Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n    setter.invoke(instance,\"1 rue du General Leclerc\");\n    if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n      resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n    }\n  }\n catch (  Exception e) {\n    reportException(e,resp);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 64
      },
      "nodeContext" : "setter.invoke(instance,\"1 rue du General Leclerc\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"1 rue du General Leclerc\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 92,
      "startColumnNumber" : 17,
      "endLineNumber" : 92,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 92,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "\"1 rue du General Leclerc\".equals(getter.invoke(instance))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "!\"1 rue du General Leclerc\".equals(getter.invoke(instance))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n  resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String className=getTrickedClassName(Address.class.getName());\n  Class<?> custClass=Class.forName(className);\n  Object instance=custClass.getDeclaredConstructor().newInstance();\n  Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n  Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n  setter.invoke(instance,\"1 rue du General Leclerc\");\n  if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n    resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String className=getTrickedClassName(Address.class.getName());\n  Class<?> custClass=Class.forName(className);\n  Object instance=custClass.getDeclaredConstructor().newInstance();\n  Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n  Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n  setter.invoke(instance,\"1 rue du General Leclerc\");\n  if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n    resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n  }\n}\n catch (Exception e) {\n  reportException(e,resp);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 83,
        "startColumnNumber" : 119,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String className=getTrickedClassName(Address.class.getName());\n    Class<?> custClass=Class.forName(className);\n    Object instance=custClass.getDeclaredConstructor().newInstance();\n    Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n    Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n    setter.invoke(instance,\"1 rue du General Leclerc\");\n    if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n      resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n    }\n  }\n catch (  Exception e) {\n    reportException(e,resp);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void makeSureNonAnnotatedEmbeddableAreAccessibleViaReflection(HttpServletResponse resp) throws IOException {\n  try {\n    String className=getTrickedClassName(Address.class.getName());\n    Class<?> custClass=Class.forName(className);\n    Object instance=custClass.getDeclaredConstructor().newInstance();\n    Method setter=custClass.getDeclaredMethod(\"setStreet1\",String.class);\n    Method getter=custClass.getDeclaredMethod(\"getStreet1\");\n    setter.invoke(instance,\"1 rue du General Leclerc\");\n    if (!\"1 rue du General Leclerc\".equals(getter.invoke(instance))) {\n      resp.getWriter().write(\"Non @Embeddable embeddable getter / setter should be reachable and usable\");\n    }\n  }\n catch (  Exception e) {\n    reportException(e,resp);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 75
      },
      "nodeContext" : "!\"1 rue du General Leclerc\".equals(getter.invoke(instance))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 91,
    "startColumnNumber" : 36,
    "endLineNumber" : 91,
    "endColumnNumber" : 62
  }, {
    "charLength" : 26,
    "startLineNumber" : 92,
    "startColumnNumber" : 17,
    "endLineNumber" : 92,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}