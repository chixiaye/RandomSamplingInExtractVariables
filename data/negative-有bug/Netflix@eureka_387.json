{
  "id" : 387,
  "expression" : "connection",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/main/java/com/netflix/eureka2/client/channel/SnapshotInterestChannelImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 36,
      "startColumnNumber" : 31,
      "endLineNumber" : 36,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 38,
        "endColumnNumber" : 82
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 39,
        "endColumnNumber" : 51
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 40,
        "endColumnNumber" : 66
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 42,
        "endColumnNumber" : 64
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1210,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 54,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1571,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 60,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 106,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 132,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n).doOnTerminate(new Action0(){\n  @Override public void call(){\n    connection.shutdown();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 149,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2295,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n).doOnTerminate(new Action0(){\n  @Override public void call(){\n    connection.shutdown();\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 150,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 35,
        "startColumnNumber" : 93,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n    @Override public void call(    Object message){\n      connection.acknowledge().doOnError(new Action1<Throwable>(){\n        @Override public void call(        Throwable e){\n          logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n        }\n      }\n).subscribe();\n    }\n  }\n).map(new Func1<Object,InstanceInfo>(){\n    @Override public InstanceInfo call(    Object message){\n      return ((AddInstance)message).getInstanceInfo();\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable error){\n      logger.error(\"Snapshot subscription error\",error);\n    }\n  }\n).doOnTerminate(new Action0(){\n    @Override public void call(){\n      connection.shutdown();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2446,
        "startLineNumber" : 34,
        "startColumnNumber" : 20,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public Observable<InstanceInfo> call(final MessageConnection connection){\n  return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n    @Override public void call(    Object message){\n      connection.acknowledge().doOnError(new Action1<Throwable>(){\n        @Override public void call(        Throwable e){\n          logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n        }\n      }\n).subscribe();\n    }\n  }\n).map(new Func1<Object,InstanceInfo>(){\n    @Override public InstanceInfo call(    Object message){\n      return ((AddInstance)message).getInstanceInfo();\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable error){\n      logger.error(\"Snapshot subscription error\",error);\n    }\n  }\n).doOnTerminate(new Action0(){\n    @Override public void call(){\n      connection.shutdown();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 38,
        "endColumnNumber" : 82
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.transport.MessageConnection"
  }, {
    "nodeContext" : "connection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 40,
      "startColumnNumber" : 44,
      "endLineNumber" : 40,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 44,
        "endLineNumber" : 40,
        "endColumnNumber" : 65
      },
      "nodeContext" : "connection.incoming()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 40,
        "endColumnNumber" : 66
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 42,
        "endColumnNumber" : 64
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1210,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 54,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1571,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 60,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 106,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 132,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n).doOnTerminate(new Action0(){\n  @Override public void call(){\n    connection.shutdown();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 149,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2295,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n  @Override public void call(  Object message){\n    connection.acknowledge().doOnError(new Action1<Throwable>(){\n      @Override public void call(      Throwable e){\n        logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n      }\n    }\n).subscribe();\n  }\n}\n).map(new Func1<Object,InstanceInfo>(){\n  @Override public InstanceInfo call(  Object message){\n    return ((AddInstance)message).getInstanceInfo();\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable error){\n    logger.error(\"Snapshot subscription error\",error);\n  }\n}\n).doOnTerminate(new Action0(){\n  @Override public void call(){\n    connection.shutdown();\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 150,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 35,
        "startColumnNumber" : 93,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n    @Override public void call(    Object message){\n      connection.acknowledge().doOnError(new Action1<Throwable>(){\n        @Override public void call(        Throwable e){\n          logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n        }\n      }\n).subscribe();\n    }\n  }\n).map(new Func1<Object,InstanceInfo>(){\n    @Override public InstanceInfo call(    Object message){\n      return ((AddInstance)message).getInstanceInfo();\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable error){\n      logger.error(\"Snapshot subscription error\",error);\n    }\n  }\n).doOnTerminate(new Action0(){\n    @Override public void call(){\n      connection.shutdown();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2446,
        "startLineNumber" : 34,
        "startColumnNumber" : 20,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public Observable<InstanceInfo> call(final MessageConnection connection){\n  return connection.submitWithAck(new SnapshotRegistration(interest)).cast(Object.class).concatWith(connection.incoming()).takeWhile(END_OF_STREAM_FILTER).filter(INVALID_MESSAGE_FILTER).doOnNext(new Action1<Object>(){\n    @Override public void call(    Object message){\n      connection.acknowledge().doOnError(new Action1<Throwable>(){\n        @Override public void call(        Throwable e){\n          logger.error(\"Failed to send an acknowledgment to snapshot change notification message\",e);\n        }\n      }\n).subscribe();\n    }\n  }\n).map(new Func1<Object,InstanceInfo>(){\n    @Override public InstanceInfo call(    Object message){\n      return ((AddInstance)message).getInstanceInfo();\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable error){\n      logger.error(\"Snapshot subscription error\",error);\n    }\n  }\n).doOnTerminate(new Action0(){\n    @Override public void call(){\n      connection.shutdown();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 44,
        "endLineNumber" : 40,
        "endColumnNumber" : 65
      },
      "nodeContext" : "connection.incoming()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.transport.MessageConnection"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 36,
    "startColumnNumber" : 31,
    "endLineNumber" : 36,
    "endColumnNumber" : 41
  }, {
    "charLength" : 10,
    "startLineNumber" : 40,
    "startColumnNumber" : 44,
    "endLineNumber" : 40,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}