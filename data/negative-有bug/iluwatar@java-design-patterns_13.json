{
  "id" : 13,
  "expression" : "expectedLog2",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/subclass-sandbox/src/test/java/com/iluwatar/subclasssandbox/SkyLaunchTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedLog2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 84,
      "startColumnNumber" : 30,
      "endLineNumber" : 84,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.assertEquals(log2,expectedLog2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(log2,expectedLog2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 70,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.clearLog();\n  var skyLaunch=new SkyLaunch();\n  skyLaunch.activate();\n  var logs=log.getLog().split(\"\\n\");\n  final var expectedSize=3;\n  final var log1=getLogContent(logs[0]);\n  final var expectedLog1=\"Move to ( 0.0, 0.0, 20.0 )\";\n  final var log2=getLogContent(logs[1]);\n  final var expectedLog2=\"Play SKYLAUNCH_SOUND with volumn 1\";\n  final var log3=getLogContent(logs[2]);\n  final var expectedLog3=\"Spawn 100 particle with type SKYLAUNCH_PARTICLE\";\n  Assert.assertEquals(logs.length,expectedSize);\n  Assert.assertEquals(log1,expectedLog1);\n  Assert.assertEquals(log2,expectedLog2);\n  Assert.assertEquals(log3,expectedLog3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testActivate(){\n  log.clearLog();\n  var skyLaunch=new SkyLaunch();\n  skyLaunch.activate();\n  var logs=log.getLog().split(\"\\n\");\n  final var expectedSize=3;\n  final var log1=getLogContent(logs[0]);\n  final var expectedLog1=\"Move to ( 0.0, 0.0, 20.0 )\";\n  final var log2=getLogContent(logs[1]);\n  final var expectedLog2=\"Play SKYLAUNCH_SOUND with volumn 1\";\n  final var log3=getLogContent(logs[2]);\n  final var expectedLog3=\"Spawn 100 particle with type SKYLAUNCH_PARTICLE\";\n  Assert.assertEquals(logs.length,expectedSize);\n  Assert.assertEquals(log1,expectedLog1);\n  Assert.assertEquals(log2,expectedLog2);\n  Assert.assertEquals(log3,expectedLog3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.assertEquals(log2,expectedLog2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 84,
    "startColumnNumber" : 30,
    "endLineNumber" : 84,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}