{
  "id" : 374,
  "expression" : "new LongAndBlockPositionStateSerializer(firstType,secondType)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/aggregation/minmaxby/TwoNullableValueStateMapping.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LongAndBlockPositionStateSerializer(firstType,secondType)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 86,
      "startColumnNumber" : 19,
      "endLineNumber" : 86,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new LongAndBlockPositionStateSerializer(firstType,secondType);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 85,
        "startColumnNumber" : 41,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new LongAndBlockPositionStateSerializer(firstType,secondType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (firstJavaType == long.class) {\n  return new LongAndBlockPositionStateSerializer(firstType,secondType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> firstJavaType=firstType.getJavaType();\n  Class<?> secondJavaType=secondType.getJavaType();\n  if (secondJavaType != Block.class && secondJavaType != Slice.class) {\n    throw new IllegalArgumentException(format(\"Unsupported state type combination: (%s, %s)\",firstJavaType.getName(),secondJavaType.getName()));\n  }\n  if (firstJavaType == boolean.class) {\n    return new BooleanAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == long.class) {\n    return new LongAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == double.class) {\n    return new DoubleAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == Slice.class) {\n    return new SliceAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == Block.class) {\n    return new BlockAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  throw new IllegalArgumentException(format(\"Unsupported state type combination: (%s, %s)\",firstJavaType.getName(),secondJavaType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1314,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static AccumulatorStateSerializer<?> getStateSerializer(Type firstType,Type secondType){\n  Class<?> firstJavaType=firstType.getJavaType();\n  Class<?> secondJavaType=secondType.getJavaType();\n  if (secondJavaType != Block.class && secondJavaType != Slice.class) {\n    throw new IllegalArgumentException(format(\"Unsupported state type combination: (%s, %s)\",firstJavaType.getName(),secondJavaType.getName()));\n  }\n  if (firstJavaType == boolean.class) {\n    return new BooleanAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == long.class) {\n    return new LongAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == double.class) {\n    return new DoubleAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == Slice.class) {\n    return new SliceAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  if (firstJavaType == Block.class) {\n    return new BlockAndBlockPositionStateSerializer(firstType,secondType);\n  }\n  throw new IllegalArgumentException(format(\"Unsupported state type combination: (%s, %s)\",firstJavaType.getName(),secondJavaType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new LongAndBlockPositionStateSerializer(firstType,secondType);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.facebook.presto.operator.aggregation.minmaxby.LongAndBlockPositionStateSerializer"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 86,
    "startColumnNumber" : 19,
    "endLineNumber" : 86,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}