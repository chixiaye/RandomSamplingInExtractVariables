{
  "id" : 376,
  "expression" : "notifications.get(0).getNotificationId()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/integration/NotificationControllerV2IntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "notifications.get(0).getNotificationId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 73,
      "startColumnNumber" : 23,
      "endLineNumber" : 73,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertNotEquals(0,notifications.get(0).getNotificationId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertNotEquals(0,notifications.get(0).getNotificationId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 56,
        "startColumnNumber" : 74,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AtomicBoolean stop=new AtomicBoolean();\n  periodicSendMessage(executorService,assembleKey(someAppId,someCluster,defaultNamespace),stop);\n  ResponseEntity<List<ApolloConfigNotification>> result=restTemplate.exchange(\"{baseurl}/notifications/v2?appId={appId}&cluster={clusterName}&notifications={notifications}\",HttpMethod.GET,null,typeReference,getHostUrl(),someAppId,someCluster,transformApolloConfigNotificationsToString(defaultNamespace,-1));\n  stop.set(true);\n  List<ApolloConfigNotification> notifications=result.getBody();\n  assertEquals(HttpStatus.OK,result.getStatusCode());\n  assertEquals(1,notifications.size());\n  assertEquals(defaultNamespace,notifications.get(0).getNamespaceName());\n  assertNotEquals(0,notifications.get(0).getNotificationId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(timeout=5000L) @Sql(scripts=\"/integration-test/cleanup.sql\",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testPollNotificationWithDefaultNamespace() throws Exception {\n  AtomicBoolean stop=new AtomicBoolean();\n  periodicSendMessage(executorService,assembleKey(someAppId,someCluster,defaultNamespace),stop);\n  ResponseEntity<List<ApolloConfigNotification>> result=restTemplate.exchange(\"{baseurl}/notifications/v2?appId={appId}&cluster={clusterName}&notifications={notifications}\",HttpMethod.GET,null,typeReference,getHostUrl(),someAppId,someCluster,transformApolloConfigNotificationsToString(defaultNamespace,-1));\n  stop.set(true);\n  List<ApolloConfigNotification> notifications=result.getBody();\n  assertEquals(HttpStatus.OK,result.getStatusCode());\n  assertEquals(1,notifications.size());\n  assertEquals(defaultNamespace,notifications.get(0).getNamespaceName());\n  assertNotEquals(0,notifications.get(0).getNotificationId());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertNotEquals(0,notifications.get(0).getNotificationId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 73,
    "startColumnNumber" : 23,
    "endLineNumber" : 73,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}