{
  "id" : 369,
  "expression" : "(ChannelFutureListener)channelFuture -> {\n  if (!future.isSuccess()) {\n    ctx.fireExceptionCaught(future.cause());\n  }\n else {\n    ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n  }\n}\n",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/netty/server/WebSocketUpgradeHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ChannelFutureListener)channelFuture -> {\n  if (!future.isSuccess()) {\n    ctx.fireExceptionCaught(future.cause());\n  }\n else {\n    ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n  }\n}\n",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 230,
      "startLineNumber" : 128,
      "startColumnNumber" : 25,
      "endLineNumber" : 134,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 33,
    "astHeight" : 10,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 128,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 8
      },
      "nodeContext" : "future.addListener((ChannelFutureListener)channelFuture -> {\n  if (!future.isSuccess()) {\n    ctx.fireExceptionCaught(future.cause());\n  }\n else {\n    ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 128,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "future.addListener((ChannelFutureListener)channelFuture -> {\n  if (!future.isSuccess()) {\n    ctx.fireExceptionCaught(future.cause());\n  }\n else {\n    ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 37,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 126,
        "startColumnNumber" : 11,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ChannelFuture future=handshaker.handshake(ctx.channel(),req);\n  future.addListener((ChannelFutureListener)channelFuture -> {\n    if (!future.isSuccess()) {\n      ctx.fireExceptionCaught(future.cause());\n    }\n else {\n      ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (handshaker == null) {\n  WebSocketServerHandshakerFactory.sendUnsupportedVersionResponse(ctx.channel());\n}\n else {\n  ChannelFuture future=handshaker.handshake(ctx.channel(),req);\n  future.addListener((ChannelFutureListener)channelFuture -> {\n    if (!future.isSuccess()) {\n      ctx.fireExceptionCaught(future.cause());\n    }\n else {\n      ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 88,
        "startColumnNumber" : 77,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!req.decoderResult().isSuccess()) {\n    sendHttpResponse(ctx,req,new DefaultFullHttpResponse(HTTP_1_1,BAD_REQUEST,ctx.alloc().buffer(0)));\n    return;\n  }\n  if (!GET.equals(req.method())) {\n    ctx.fireChannelRead(req);\n    return;\n  }\n  if (!(req.headers().contains(\"Connection\",\"upgrade\",true) && req.headers().contains(\"Sec-WebSocket-Version\"))) {\n    ctx.fireChannelRead(req);\n    return;\n  }\n  Optional<Consumer<Message>> maybeHandler=factory.apply(req.uri(),msg -> {\n    ctx.channel().writeAndFlush(Require.nonNull(\"Message to send\",msg));\n  }\n);\n  if (!maybeHandler.isPresent()) {\n    sendHttpResponse(ctx,req,new DefaultFullHttpResponse(HTTP_1_1,BAD_REQUEST,ctx.alloc().buffer(0)));\n    return;\n  }\n  WebSocketServerHandshakerFactory wsFactory=new WebSocketServerHandshakerFactory(getWebSocketLocation(req),null,false,Integer.MAX_VALUE);\n  handshaker=wsFactory.newHandshaker(req);\n  if (handshaker == null) {\n    WebSocketServerHandshakerFactory.sendUnsupportedVersionResponse(ctx.channel());\n  }\n else {\n    ChannelFuture future=handshaker.handshake(ctx.channel(),req);\n    future.addListener((ChannelFutureListener)channelFuture -> {\n      if (!future.isSuccess()) {\n        ctx.fireExceptionCaught(future.cause());\n      }\n else {\n        ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1768,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void handleHttpRequest(ChannelHandlerContext ctx,HttpRequest req){\n  if (!req.decoderResult().isSuccess()) {\n    sendHttpResponse(ctx,req,new DefaultFullHttpResponse(HTTP_1_1,BAD_REQUEST,ctx.alloc().buffer(0)));\n    return;\n  }\n  if (!GET.equals(req.method())) {\n    ctx.fireChannelRead(req);\n    return;\n  }\n  if (!(req.headers().contains(\"Connection\",\"upgrade\",true) && req.headers().contains(\"Sec-WebSocket-Version\"))) {\n    ctx.fireChannelRead(req);\n    return;\n  }\n  Optional<Consumer<Message>> maybeHandler=factory.apply(req.uri(),msg -> {\n    ctx.channel().writeAndFlush(Require.nonNull(\"Message to send\",msg));\n  }\n);\n  if (!maybeHandler.isPresent()) {\n    sendHttpResponse(ctx,req,new DefaultFullHttpResponse(HTTP_1_1,BAD_REQUEST,ctx.alloc().buffer(0)));\n    return;\n  }\n  WebSocketServerHandshakerFactory wsFactory=new WebSocketServerHandshakerFactory(getWebSocketLocation(req),null,false,Integer.MAX_VALUE);\n  handshaker=wsFactory.newHandshaker(req);\n  if (handshaker == null) {\n    WebSocketServerHandshakerFactory.sendUnsupportedVersionResponse(ctx.channel());\n  }\n else {\n    ChannelFuture future=handshaker.handshake(ctx.channel(),req);\n    future.addListener((ChannelFutureListener)channelFuture -> {\n      if (!future.isSuccess()) {\n        ctx.fireExceptionCaught(future.cause());\n      }\n else {\n        ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 128,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "future.addListener((ChannelFutureListener)channelFuture -> {\n  if (!future.isSuccess()) {\n    ctx.fireExceptionCaught(future.cause());\n  }\n else {\n    ctx.channel().attr(key).setIfAbsent(maybeHandler.get());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 37,
      "astHeight" : 12
    },
    "tokenLength" : 16,
    "type" : "org.openqa.selenium.netty.server.ChannelFutureListener"
  } ],
  "positionList" : [ {
    "charLength" : 230,
    "startLineNumber" : 128,
    "startColumnNumber" : 25,
    "endLineNumber" : 134,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ ]
}