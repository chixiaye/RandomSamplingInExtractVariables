{
  "id" : 48,
  "expression" : "HorizontalTextInVerticalContextSpan.class",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/ui/src/test/java/com/google/android/exoplayer2/ui/SubtitleViewUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HorizontalTextInVerticalContextSpan.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 77,
      "startColumnNumber" : 48,
      "endLineNumber" : 77,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 90
      },
      "nodeContext" : "originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 93
      },
      "nodeContext" : "originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 77,
        "endColumnNumber" : 93
      },
      "nodeContext" : "expectedHorizontalTextInVerticalContextSpan=originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 94
      },
      "nodeContext" : "HorizontalTextInVerticalContextSpan expectedHorizontalTextInVerticalContextSpan=originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2454,
        "startLineNumber" : 45,
        "startColumnNumber" : 45,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Cue.Builder cueBuilder=CUE.buildUpon();\n  SubtitleViewUtils.removeAllEmbeddedStyling(cueBuilder);\n  Cue strippedCue=cueBuilder.build();\n  Spanned originalText=(Spanned)CUE.text;\n  Spanned strippedText=(Spanned)strippedCue.text;\n  assertThat(strippedCue.textAlignment).isEqualTo(CUE.textAlignment);\n  assertThat(strippedCue.multiRowAlignment).isEqualTo(CUE.multiRowAlignment);\n  assertThat(strippedCue.line).isEqualTo(CUE.line);\n  assertThat(strippedCue.lineType).isEqualTo(CUE.lineType);\n  assertThat(strippedCue.position).isEqualTo(CUE.position);\n  assertThat(strippedCue.positionAnchor).isEqualTo(CUE.positionAnchor);\n  assertThat(strippedCue.textSize).isEqualTo(Cue.DIMEN_UNSET);\n  assertThat(strippedCue.textSizeType).isEqualTo(Cue.TYPE_UNSET);\n  assertThat(strippedCue.size).isEqualTo(CUE.size);\n  assertThat(strippedCue.verticalType).isEqualTo(CUE.verticalType);\n  assertThat(strippedCue.shearDegrees).isEqualTo(CUE.shearDegrees);\n  TextEmphasisSpan expectedTextEmphasisSpan=originalText.getSpans(0,originalText.length(),TextEmphasisSpan.class)[0];\n  assertThat(strippedText).hasTextEmphasisSpanBetween(originalText.getSpanStart(expectedTextEmphasisSpan),originalText.getSpanEnd(expectedTextEmphasisSpan));\n  RubySpan expectedRubySpan=originalText.getSpans(0,originalText.length(),RubySpan.class)[0];\n  assertThat(strippedText).hasRubySpanBetween(originalText.getSpanStart(expectedRubySpan),originalText.getSpanEnd(expectedRubySpan));\n  HorizontalTextInVerticalContextSpan expectedHorizontalTextInVerticalContextSpan=originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)[0];\n  assertThat(strippedText).hasHorizontalTextInVerticalContextSpanBetween(originalText.getSpanStart(expectedHorizontalTextInVerticalContextSpan),originalText.getSpanEnd(expectedHorizontalTextInVerticalContextSpan));\n  assertThat(strippedCue.windowColorSet).isFalse();\n  assertThat(strippedText).hasNoUnderlineSpanBetween(0,strippedText.length());\n  assertThat(strippedText).hasNoRelativeSizeSpanBetween(0,strippedText.length());\n  assertThat(strippedText).hasNoAbsoluteSizeSpanBetween(0,strippedText.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2505,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRemoveAllEmbeddedStyling(){\n  Cue.Builder cueBuilder=CUE.buildUpon();\n  SubtitleViewUtils.removeAllEmbeddedStyling(cueBuilder);\n  Cue strippedCue=cueBuilder.build();\n  Spanned originalText=(Spanned)CUE.text;\n  Spanned strippedText=(Spanned)strippedCue.text;\n  assertThat(strippedCue.textAlignment).isEqualTo(CUE.textAlignment);\n  assertThat(strippedCue.multiRowAlignment).isEqualTo(CUE.multiRowAlignment);\n  assertThat(strippedCue.line).isEqualTo(CUE.line);\n  assertThat(strippedCue.lineType).isEqualTo(CUE.lineType);\n  assertThat(strippedCue.position).isEqualTo(CUE.position);\n  assertThat(strippedCue.positionAnchor).isEqualTo(CUE.positionAnchor);\n  assertThat(strippedCue.textSize).isEqualTo(Cue.DIMEN_UNSET);\n  assertThat(strippedCue.textSizeType).isEqualTo(Cue.TYPE_UNSET);\n  assertThat(strippedCue.size).isEqualTo(CUE.size);\n  assertThat(strippedCue.verticalType).isEqualTo(CUE.verticalType);\n  assertThat(strippedCue.shearDegrees).isEqualTo(CUE.shearDegrees);\n  TextEmphasisSpan expectedTextEmphasisSpan=originalText.getSpans(0,originalText.length(),TextEmphasisSpan.class)[0];\n  assertThat(strippedText).hasTextEmphasisSpanBetween(originalText.getSpanStart(expectedTextEmphasisSpan),originalText.getSpanEnd(expectedTextEmphasisSpan));\n  RubySpan expectedRubySpan=originalText.getSpans(0,originalText.length(),RubySpan.class)[0];\n  assertThat(strippedText).hasRubySpanBetween(originalText.getSpanStart(expectedRubySpan),originalText.getSpanEnd(expectedRubySpan));\n  HorizontalTextInVerticalContextSpan expectedHorizontalTextInVerticalContextSpan=originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)[0];\n  assertThat(strippedText).hasHorizontalTextInVerticalContextSpanBetween(originalText.getSpanStart(expectedHorizontalTextInVerticalContextSpan),originalText.getSpanEnd(expectedHorizontalTextInVerticalContextSpan));\n  assertThat(strippedCue.windowColorSet).isFalse();\n  assertThat(strippedText).hasNoUnderlineSpanBetween(0,strippedText.length());\n  assertThat(strippedText).hasNoRelativeSizeSpanBetween(0,strippedText.length());\n  assertThat(strippedText).hasNoAbsoluteSizeSpanBetween(0,strippedText.length());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 90
      },
      "nodeContext" : "originalText.getSpans(0,originalText.length(),HorizontalTextInVerticalContextSpan.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.google.android.exoplayer2.text.span.HorizontalTextInVerticalContextSpan>"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 77,
    "startColumnNumber" : 48,
    "endLineNumber" : 77,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}